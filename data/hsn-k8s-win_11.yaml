- en: Deploying a Hybrid Azure Kubernetes Service Engine Cluster
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署混合Azure Kubernetes服务引擎集群
- en: 'The previous chapter gave an overview of how to create a hybrid Windows/Linux
    Kubernetes cluster in an on-premises environment. This approach can also be used
    for Deployments in Infrastructure-as-a-Service cloud environments, but if you
    are working with Azure, you have an easier solution: **Azure Kubernetes Service**
    (**AKS**) **Engine** ([https://github.com/Azure/aks-engine](https://github.com/Azure/aks-engine)).
    This project aims to provide an Azure-native way of deploying self-managed Kubernetes
    clusters using **Azure Resource Manager** (**ARM**) templates, which can leverage
    all Azure cloud integrations for Kubernetes, for example LoadBalancer services.
    What''s more, with AKS Engine, you have support for the Deployment of a Kubernetes
    cluster with Windows nodes, requiring minimal configuration and node preparation
    compared to on-premises environments. In other words, you will be able to provision
    a production-grade, highly available hybrid cluster in a matter of minutes.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 上一章概述了如何在本地环境中创建混合Windows/Linux Kubernetes集群的方法。这种方法也可以用于基础设施即服务云环境中的部署，但如果您使用Azure，您有一个更简单的解决方案：**Azure
    Kubernetes服务**（**AKS**）**引擎** ([https://github.com/Azure/aks-engine](https://github.com/Azure/aks-engine))。该项目旨在提供一种使用**Azure资源管理器**（**ARM**）模板部署自管理Kubernetes集群的Azure本地方式，可以利用Kubernetes的所有Azure云集成，例如负载均衡器服务。此外，使用AKS
    Engine，您可以支持使用Windows节点部署Kubernetes集群，与本地环境相比，需要的配置和节点准备较少。换句话说，您将能够在几分钟内部署一个生产级的高可用混合集群。
- en: 'It is important to briefly summarize how AKS Engine relates to other concepts,
    such as AKS, acs-engine, and the Azure Stack:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: AKS Engine与其他概念（如AKS、acs-engine和Azure Stack）的关系进行简要总结非常重要：
- en: AKS Engine and AKS are not the same Azure offering. AKS is an Azure service
    that offers you the ability to create a fully managed Kubernetes cluster – we
    gave an overview of AKS and demonstrated how to deploy a hybrid Windows/Linux
    cluster using AKS in [Chapter 4](118e3c89-786e-4718-ba67-6c38928e2a42.xhtml),
    *Kubernetes Concepts and Windows Support*. AKS Engine is internally used by AKS
    but you cannot manage AKS using AK
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS Engine和AKS不是相同的Azure产品。AKS是一个Azure服务，可以让您创建一个完全托管的Kubernetes集群-我们在[第4章](118e3c89-786e-4718-ba67-6c38928e2a42.xhtml)中概述了AKS并演示了如何使用AKS部署混合Windows/Linux集群，但AKS
    Engine是AKS内部使用的，但您不能使用AKS来管理AKS
- en: acs-engine is a predecessor of AKS Engine, so you may find a lot of documentation
    mentioning acs-engine instead of AKS Engine. AKS Engine is a backward-compatible
    continuation of acs-engine.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: acs-engine是AKS Engine的前身，因此您可能会发现很多文档提到acs-engine而不是AKS Engine。AKS Engine是acs-engine的向后兼容的延续。
- en: Technically, you can also use AKS Engine for on-premises environments if you
    use the Azure Stack. You can read more here: [https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-overview](https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-overview).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从技术上讲，如果您使用Azure Stack，也可以在本地环境中使用AKS Engine。您可以在这里阅读更多信息：[https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-overview](https://docs.microsoft.com/en-us/azure-stack/user/azure-stack-kubernetes-aks-engine-overview)。
- en: 'In this chapter, we will focus on AKS Engine and deploying a hybrid Windows/Linux
    cluster in the Azure cloud. We will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点关注AKS Engine并在Azure云中部署混合Windows/Linux集群。我们将涵盖以下主题：
- en: Installing AKS Engine
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装AKS Engine
- en: Creating an Azure resource group and a service principal
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Azure资源组和服务主体
- en: Using the API model and generating an Azure resource manager template
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用API模型和生成Azure资源管理器模板
- en: Deploying a cluster
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署集群
- en: Deploying and inspecting your first application
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署和检查您的第一个应用程序
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您将需要以下内容：
- en: Windows 10 Pro, Enterprise, or Education (version 1903 or later, 64-bit) installed
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已安装Windows 10 Pro、企业版或教育版（1903版本或更高版本，64位）
- en: An Azure account
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Azure账户
- en: The Chocolatey package manager for Windows installed ([https://chocolatey.org/](https://chocolatey.org/))
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已安装Windows的Chocolatey软件包管理器（[https://chocolatey.org/](https://chocolatey.org/)）
- en: Optionally, Visual Studio Code installed if you would like to visualize the
    ARM template produced by AKS Engine
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选地，如果您想要可视化AKS Engine生成的ARM模板，可以安装Visual Studio Code
- en: Using the Chocolatey package manager is not mandatory but it makes the installation
    process and application version management much easier. The installation process
    is documented here: [https://chocolatey.org/install](https://chocolatey.org/install).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Chocolatey软件包管理器并非强制，但它可以使安装过程和应用程序版本管理更加简单。安装过程在此处有文档：[https://chocolatey.org/install](https://chocolatey.org/install)。
- en: To follow along, you will need your own Azure account in order to create Azure
    resources for Kubernetes clusters. If you haven't already created an account in
    the previous chapters, you can read more about how to obtain a limited free account
    for personal use here: [https://azure.microsoft.com/en-us/free/](https://azure.microsoft.com/en-us/free/).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟着做，您需要自己的Azure账户以创建Kubernetes集群的Azure资源。如果您之前还没有创建过账户，您可以在此处了解如何获取个人使用的有限免费账户：[https://azure.microsoft.com/en-us/free/](https://azure.microsoft.com/en-us/free/)。
- en: You can download the latest code samples for this chapter from the official
    GitHub repository: [https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08](https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从官方GitHub存储库下载本章的最新代码示例：[https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08](https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08)。
- en: Installing AKS Engine
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装AKS Engine
- en: 'AKS Engine itself is a command-line tool that can generate an Azure Resource
    Manager (ARM) template based on a supplied configuration file. To use AKS Engine,
    you need the following which have installation processes described in previous
    chapters:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: AKS Engine本身是一个命令行工具，可以根据提供的配置文件生成基于Azure资源管理器（ARM）模板。要使用AKS Engine，您需要以下内容，其安装过程在前几章中有描述：
- en: '**The Azure CLI and** **Azure Cloud Shell**: Instructions are available in [Chapter
    2](43d5e48b-311c-462c-a68e-6a0b5c4224e8.xhtml), *Managing State in Containers*,
    in the *Using remote/cloud storage for container storage* storage.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure CLI和Azure Cloud Shell：** 指南可在[第2章](43d5e48b-311c-462c-a68e-6a0b5c4224e8.xhtml)中找到，*管理容器中的状态*，在*使用远程/云存储进行容器存储*部分。'
- en: '**kubectl**: Instructions are available in [Chapter 6](791e78c0-f625-4232-9907-36e25ec2767d.xhtml), *Interacting
    with Kubernetes Clusters*, in the *Installing Kubernetes command-line tooling* section.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**kubectl：** 指南可在[第6章](791e78c0-f625-4232-9907-36e25ec2767d.xhtml)中找到，*与Kubernetes集群交互*，在*安装Kubernetes命令行工具*部分。'
- en: '**SSH client for Windows:** Instructions are available in [Chapter 7](165c2fcc-4ce8-4dbc-a19c-c7fd427b3379.xhtml), *Deploying
    a Hybrid On-Premises Kubernetes Cluster*, in the *Creating a Kubernetes master
    node using kubeadm* section.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows下的SSH客户端：** 指南可在[第7章](165c2fcc-4ce8-4dbc-a19c-c7fd427b3379.xhtml)中找到，*部署混合本地Kubernetes集群*，在*使用kubeadm创建Kubernetes主节点*部分。'
- en: 'With all the tools installed on your machine, you can proceed to installing
    AKS Engine itself. The recommended installation approach on Windows is using Chocolatey.
    Alternatively, you can download AKS Engine binaries ([https://github.com/Azure/aks-engine/releases/latest](https://github.com/Azure/aks-engine/releases/latest)),
    extract them, and add them to your `$env:PATH` environment variable. To install
    AKS Engine using Chocolatey, proceed with the following steps:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的计算机上安装了所有工具后，您可以继续安装AKS Engine本身。在Windows上推荐的安装方法是使用Chocolatey。或者，您可以下载AKS
    Engine二进制文件（[https://github.com/Azure/aks-engine/releases/latest](https://github.com/Azure/aks-engine/releases/latest)），解压它们，并将它们添加到您的`$env:PATH`环境变量中。要使用Chocolatey安装AKS
    Engine，请按照以下步骤进行：
- en: Open a PowerShell window as an administrator.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以管理员身份打开PowerShell窗口。
- en: 'To install the `aks-engine` package, execute the following command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装`aks-engine`软件包，请执行以下命令：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you want to install a specific version of AKS Engine, for example `0.42.0`,
    use the following command:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想安装特定版本的AKS Engine，例如`0.42.0`，请使用以下命令：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Verify that your installation was successful:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证您的安装是否成功：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, you are ready to continue to the next step – configuring prerequisites
    for your Kubernetes cluster. Let's begin by gathering initial cluster information
    and creating an Azure resource group.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好继续下一步-配置Kubernetes集群的先决条件。让我们开始收集初始集群信息并创建Azure资源组。
- en: Creating an Azure resource group and a service principal
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Azure资源组和服务主体
- en: 'Before we deploy a Kubernetes cluster using AKS Engine, we need to perform
    the following initial steps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用AKS Engine部署Kubernetes集群之前，我们需要执行以下初始步骤：
- en: You need to ensure that you have appropriate permissions within the Azure subscription
    to create and assign Azure Active Directory service principals. If you created
    an Azure account just for the walk through, you will have the permissions by default.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要确保在Azure订阅中具有适当的权限来创建和分配Azure活动目录服务主体。如果您只是为了进行演示而创建了Azure帐户，则默认情况下将具有权限。
- en: 'Determine `SubscriptionId` of the Azure subscription that you are going to
    use for deploying the cluster. You can do that by opening a PowerShell window
    and executing the following commands:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定要用于部署集群的Azure订阅的`SubscriptionId`。您可以通过打开PowerShell窗口并执行以下命令来执行此操作：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We will use `cc9a8166-829e-401e-a004-76d1e3733b8e` as the `SubscriptionId` in
    the next paragraphs.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的段落中，我们将使用`cc9a8166-829e-401e-a004-76d1e3733b8e`作为`SubscriptionId`。
- en: Determine a globally unique `dnsPrefix` that you would like to use for the hostnames
    within your cluster. Alternatively, you can rely on an auto generated prefix by
    AKS Engine. We will use `handson-aks-engine-win` as the prefix in the next paragraphs.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定一个全局唯一的`dnsPrefix`，您想要用于集群内主机名的。或者，您可以依赖于AKS Engine自动生成的前缀。在接下来的段落中，我们将使用`handson-aks-engine-win`作为前缀。
- en: Choose which Azure location you would like to use for deploying the cluster.
    We will use `westeurope` in the examples that follow.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要用于部署集群的Azure位置。在接下来的示例中，我们将使用`westeurope`。
- en: Choose a name for your new Azure resource group for your cluster. We will use `aks-engine-windows-resource-group`
    in the next paragraphs.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的集群选择一个新的Azure资源组的名称。在接下来的段落中，我们将使用`aks-engine-windows-resource-group`。
- en: Choose a username and password for the Windows nodes. We will use `azureuser`
    and `S3cur3P@ssw0rd` for this purpose – remember to use your own secure password!
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Windows节点选择用户名和密码。为此，我们将使用`azureuser`和`S3cur3P@ssw0rd`-请记住使用您自己的安全密码！
- en: Generate an SSH key pair that you can use for connecting to Linux nodes. If
    you choose to have an OpenSSH server on Windows nodes, you can later use the same
    key pair for accessing the Windows nodes.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个SSH密钥对，您可以用它来连接到Linux节点。如果您选择在Windows节点上安装OpenSSH服务器，您以后可以使用相同的密钥对来访问Windows节点。
- en: 'The steps described in the next paragraphs for prerequisite creation and AKS
    Engine Deployment are captured in the PowerShell script available here: [https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/blob/master/Chapter08/01_aks-engine/01_CreateAKSEngineClusterWithWindowsNodes.ps1](https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/blob/master/Chapter08/01_aks-engine/01_CreateAKSEngineClusterWithWindowsNodes.ps1).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 下一段描述的先决条件创建和AKS Engine部署步骤已在此处提供的PowerShell脚本中捕获：[https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/blob/master/Chapter08/01_aks-engine/01_CreateAKSEngineClusterWithWindowsNodes.ps1](https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/blob/master/Chapter08/01_aks-engine/01_CreateAKSEngineClusterWithWindowsNodes.ps1)。
- en: 'Now, please follow the steps for creating an Azure resource group and an Azure
    Active Directory service principal:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，请按照以下步骤创建Azure资源组和Azure活动目录服务主体：
- en: 'Open a PowerShell window and log in using the Azure CLI:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开PowerShell窗口并使用Azure CLI登录：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create an Azure resource group for your cluster using the following command:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令为您的集群创建Azure资源组：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create an Azure Active Directory service principal for your cluster. Use an
    appropriate `Subscription ID` and `Resource Group` name:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的集群创建Azure活动目录服务主体。使用适当的`Subscription ID`和`Resource Group`名称：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Please note that if scope is limited to a given resource group, you will not
    be able to use the Container Monitoring add-on. We'll cover the configuration
    of the AAD service principal for this purpose in the next sections.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果范围仅限于特定的资源组，则将无法使用容器监视附加组件。我们将在接下来的章节中介绍为此目的配置AAD服务主体。
- en: 'Examine the output of the previous command and take note of `appId` and `password`.
    You cannot retrieve the password later:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查上一个命令的输出，并注意`appId`和`password`。您无法以后检索密码：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The last step is generating an SSH key pair for accessing Linux nodes in the
    cluster:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是为访问集群中的Linux节点生成SSH密钥对：
- en: Open a PowerShell window.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开PowerShell窗口。
- en: 'If you have followed the previous chapters, you may already have an SSH key
    pair generated that you can reuse and skip the next step. To check whether you
    have an existing SSH key pair, use the following command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您已经按照前面的章节操作，可能已经生成了一个SSH密钥对，您可以重复使用并跳过下一步。要检查是否有现有的SSH密钥对，请使用以下命令：
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you need to generate a key pair, execute the following command (using defaults
    is advised):'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您需要生成密钥对，请执行以下命令（建议使用默认值）：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, you have all the information that is required for AKS Engine Deployment.
    All we need to do is to prepare the AKS Engine apimodel and generate an ARM template
    for our cluster.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您拥有AKS Engine部署所需的所有信息。我们需要做的就是准备AKS Engine apimodel并为我们的集群生成ARM模板。
- en: Using apimodel and generating an Azure resource manager template
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用apimodel并生成Azure资源管理器模板
- en: 'At its core, AKS Engine uses an **apimodel** (or a cluster definition) JSON
    file in order to generate Azure resource manager templates that can be used for
    deploying a Kubernetes cluster directly to Azure. The documentation and schema
    for apimodel can be found here: [https://github.com/Azure/aks-engine/blob/master/docs/topics/clusterdefinitions.md](https://github.com/Azure/aks-engine/blob/master/docs/topics/clusterdefinitions.md).
    AKS Engine comes with out-of-the-box support for Windows nodes in cluster definitions.
    You can find examples in the official AKS Engine GitHub repository: [https://github.com/Azure/aks-engine/tree/master/examples/windows](https://github.com/Azure/aks-engine/tree/master/examples/windows).'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在其核心，AKS Engine使用一个**apimodel**（或集群定义）JSON文件来生成可以用于直接部署Kubernetes集群到Azure的Azure资源管理器模板。apimodel的文档和模式可以在这里找到：[https://github.com/Azure/aks-engine/blob/master/docs/topics/clusterdefinitions.md](https://github.com/Azure/aks-engine/blob/master/docs/topics/clusterdefinitions.md)。AKS
    Engine在集群定义中提供了对Windows节点的开箱即用支持。您可以在官方AKS Engine GitHub存储库中找到示例：[https://github.com/Azure/aks-engine/tree/master/examples/windows](https://github.com/Azure/aks-engine/tree/master/examples/windows)。
- en: 'Let''s now create a custom apimodel based on the minimal Windows cluster example
    definition ([https://github.com/Azure/aks-engine/blob/master/examples/windows/kubernetes.json](https://github.com/Azure/aks-engine/blob/master/examples/windows/kubernetes.json)).
    We will also include two Linux nodes in order to run a hybrid Windows/Linux configuration
    (one Linux master, two Windows nodes, and two Linux nodes). Follow these steps:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们根据最小的Windows集群示例定义（[https://github.com/Azure/aks-engine/blob/master/examples/windows/kubernetes.json](https://github.com/Azure/aks-engine/blob/master/examples/windows/kubernetes.json)）创建一个自定义的apimodel。我们还将包括两个Linux节点，以便运行混合的Windows/Linux配置（一个Linux主节点，两个Windows节点和两个Linux节点）。按照以下步骤进行：
- en: Download the following file and save it as `kubernetes-windows.json`: [https://raw.githubusercontent.com/Azure/aks-engine/master/examples/windows/kubernetes.json](https://raw.githubusercontent.com/Azure/aks-engine/master/examples/windows/kubernetes.json).
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载以下文件，并将其保存为`kubernetes-windows.json`：[https://raw.githubusercontent.com/Azure/aks-engine/master/examples/windows/kubernetes.json](https://raw.githubusercontent.com/Azure/aks-engine/master/examples/windows/kubernetes.json)。
- en: Change `properties.orchestratorProfile.orchestratorRelease` to the desired Kubernetes
    release, for example, `1.16`.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`properties.orchestratorProfile.orchestratorRelease`更改为所需的Kubernetes版本，例如`1.16`。
- en: Modify `properties.masterProfile.dnsPrefix` to the selected DNS prefix. In examples,
    we use `handson-aks-engine-win`, but you need to choose your unique prefix.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`properties.masterProfile.dnsPrefix`修改为所选的DNS前缀。在示例中，我们使用`handson-aks-engine-win`，但您需要选择您自己的唯一前缀。
- en: 'Add a Linux nodes pool by adding the following JSON object to `properties.agentPoolProfiles`:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将以下JSON对象添加到`properties.agentPoolProfiles`中，添加一个Linux节点池：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Modify `properties.windowsProfile.adminUsername` and `properties.windowsProfile.adminPassword` to
    your selected username and password for Windows nodes.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`properties.windowsProfile.adminUsername`和`properties.windowsProfile.adminPassword`修改为Windows节点的所选用户名和密码。
- en: Copy the contents of `~\.ssh\id_rsa.pub` to `properties.linuxProfile.ssh.publicKeys.keyData`.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`~\.ssh\id_rsa.pub`的内容复制到`properties.linuxProfile.ssh.publicKeys.keyData`。
- en: Use the service principal `appId` in `properties.servicePrincipalProfile.clientId`
    and `password` in `properties.servicePrincipalProfile.secret`.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`properties.servicePrincipalProfile.clientId`中使用服务主体`appId`，在`properties.servicePrincipalProfile.secret`中使用`password`。
- en: 'An example customized file has the following contents:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个示例的自定义文件具有以下内容：
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The apimodel is ready to be used by AKS Engine. Generate the ARM template using
    the following command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: apimodel已准备好供AKS Engine使用。使用以下命令生成ARM模板：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This will generate the ARM template (with parameters), the full apimodel, and
    kubeconfigs (for each possible Azure location) in the `_output\<dnsPrefix>` directory.
    You can inspect these files in order to understand how the cluster is designed
    – optionally, if you have Visual Studio Code installed, you can use the following
    excellent extension for visualizing ARM templates – [https://marketplace.visualstudio.com/items?itemName=bencoleman.armview](https://marketplace.visualstudio.com/items?itemName=bencoleman.armview):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在`_output\<dnsPrefix>`目录中生成ARM模板（带参数）、完整的apimodel和kubeconfigs（对于每个可能的Azure位置）。您可以检查这些文件以了解集群的设计方式
    - 可选地，如果您安装了Visual Studio Code，可以使用以下优秀的扩展来可视化ARM模板 - [https://marketplace.visualstudio.com/items?itemName=bencoleman.armview](https://marketplace.visualstudio.com/items?itemName=bencoleman.armview)：
- en: In VS Code, after you have installed the extension, open the `_output\<dnsPrefix>\azuredeploy.json` ARM
    template file.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在VS Code中，安装了扩展程序后，打开`_output\<dnsPrefix>\azuredeploy.json` ARM模板文件。
- en: 'Use the following icon to visualize the ARM template:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下图标可视化ARM模板：
- en: '![](assets/0c7a2ed2-e1da-4a5f-8c71-39fcd491d5a0.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/0c7a2ed2-e1da-4a5f-8c71-39fcd491d5a0.png)
- en: 'Load the ARM template parameters `_output\<dnsPrefix>\azuredeploy.parameters.json`
    using the following icon:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下图标加载ARM模板参数`_output\<dnsPrefix>\azuredeploy.parameters.json`：
- en: '![](assets/2a732b78-e8bc-4bb7-a93d-5fb04f0aceae.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/2a732b78-e8bc-4bb7-a93d-5fb04f0aceae.png)
- en: 'You can now inspect the ARM template in a convenient way:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以方便地检查ARM模板：
- en: '![](assets/e1cf1e78-dea2-465b-b44d-e4273c0fa74b.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/e1cf1e78-dea2-465b-b44d-e4273c0fa74b.png)
- en: At this point, we are ready to proceed with deploying the cluster using the
    Azure CLI!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们准备使用Azure CLI部署集群！
- en: Deploying the cluster
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署集群
- en: 'In order to deploy the Kubernetes cluster from the Azure resource manager template,
    we will use the `az group deployment create` command. This Azure CLI command requires
    passing the ARM template (`_output\<dnsPrefix>\azuredeploy.json`) and the ARM
    parameters file (`_output\<dnsPrefix>\azuredeploy.parameters.json`). To deploy
    the cluster, perform the following steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从Azure资源管理器模板部署Kubernetes集群，我们将使用`az group deployment create`命令。这个Azure CLI命令需要传递ARM模板（`_output\<dnsPrefix>\azuredeploy.json`）和ARM参数文件（`_output\<dnsPrefix>\azuredeploy.parameters.json`）。要部署集群，请执行以下步骤：
- en: 'Execute the command:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行命令：
- en: '[PRE13]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If you run into any problems, you can check the ARM Deployment failure details
    in the Azure portal by navigating to your resource group and clicking the Deployment:
    Failed link in the upper-right corner. For any `InternalServerErrors`, you may
    just try choosing another Azure location, such as `westus`.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到任何问题，您可以通过转到资源组并单击右上角的“部署：失败”链接，在Azure门户中检查ARM部署失败的详细信息。对于任何`InternalServerErrors`，您可以尝试选择另一个Azure位置，例如`westus`。
- en: 'After a few minutes, when the Deployment is finished, the list of created resources
    and output variables will be returned in JSON format:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署完成后，将以JSON格式返回创建的资源列表和输出变量：
- en: '[PRE14]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Extract the `masterFQDN` property. This is your Kubernetes master DNS name.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提取`masterFQDN`属性。这是您的Kubernetes主DNS名称。
- en: Alternatively, you can take the approach of using the `aks-engine deploy` command,
    which combines customizing cluster definition and generating and deploying an
    ARM template into one command. Note that in order to use container monitoring
    features you must use the `aks-engine deploy` command at this point.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以采用使用`aks-engine deploy`命令的方法，该命令结合了自定义集群定义和生成并部署ARM模板为一条命令。请注意，为了使用容器监视功能，您现在必须使用`aks-engine
    deploy`命令。
- en: 'Now, we need to connect to our new cluster. AKS Engine, along with the ARM
    template, generates a set of `kubeconfigs` for all possible Azure locations in
    the form of `.\_output\<dnsPrefix>\kubeconfig\kubeconfig.<azureLocation>.json`.
    In our case, we used the location `westeurope`, so the kubeconfig is `.\_output\<dnsPrefix>\kubeconfig\kubeconfig.westeurope.json`.
    To use this kubeconfig for your kubectl, you can use one of the config management
    techniques provided in [Chapter 6](791e78c0-f625-4232-9907-36e25ec2767d.xhtml), *Interacting
    with Kubernetes Clusters*. For example, to merge this file with your existing,
    default kubeconfig, perform the following steps:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要连接到我们的新集群。 AKS Engine与ARM模板一起生成了一组`kubeconfigs`，用于所有可能的Azure位置，格式为`.\_output\<dnsPrefix>\kubeconfig\kubeconfig.<azureLocation>.json`。在我们的情况下，我们使用了位置`westeurope`，因此kubeconfig是`.\_output\<dnsPrefix>\kubeconfig\kubeconfig.westeurope.json`。要将此kubeconfig用于您的kubectl，您可以使用[第6章](791e78c0-f625-4232-9907-36e25ec2767d.xhtml)中提供的配置管理技术之一，*与Kubernetes集群交互*。例如，要将此文件与您现有的默认kubeconfig合并，请执行以下步骤：
- en: Inspect the contents of `.\_output\<dnsPrefix>\kubeconfig\kubeconfig.westeurope.json`
    in order to know the cluster name and context name. Both should be the same as
    your `<dnsPrefix>`.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`.\_output\<dnsPrefix>\kubeconfig\kubeconfig.westeurope.json`的内容，以了解集群名称和上下文名称。两者应与您的`<dnsPrefix>`相同。
- en: 'Perform a test merge of the file with the default kubeconfig. Use the following
    command:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行文件与默认kubeconfig的测试合并。使用以下命令：
- en: '[PRE15]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Carefully inspect the output in order to determine whether the merged config
    contains all the clusters and contexts you expect.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仔细检查输出，以确定合并的配置是否包含您期望的所有集群和上下文。
- en: 'Save the merged file as the default config and switch to using the new `<dnsPrefix>`
    context:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将合并后的文件保存为默认配置，并切换到使用新的`<dnsPrefix>`上下文：
- en: '[PRE16]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Test the connection to your new cluster:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试与您的新集群的连接：
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Please note that clusters deployed by AKS Engine are billed depending on the
    resources that have been used in the ARM templates. You should use the Azure pricing
    calculator in order to determine the predicted cost. If you do not need the cluster
    anymore, it is advised to delete it to avoid any unwanted costs. To delete the
    AKS Engine cluster, use the following command: `az group delete --name aks-engine-windows-resource-group --yes --no-wait`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由AKS Engine部署的集群根据在ARM模板中使用的资源计费。您应该使用Azure定价计算器来确定预计成本。如果您不再需要该集群，建议删除以避免任何不必要的费用。要删除AKS
    Engine集群，请使用以下命令：`az group delete --name aks-engine-windows-resource-group --yes
    --no-wait`。
- en: Congratulations! You have deployed a fully functional, hybrid Windows/Linux
    cluster on Azure using AKS Engine! Let's take a look at how to deploy a simple
    application to the cluster and how to interact with the cluster.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已经使用AKS Engine在Azure上部署了一个功能齐全的混合Windows/Linux集群！让我们看看如何将一个简单的应用程序部署到集群，并与集群进行交互。
- en: Deploying and inspecting your first application
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署和检查您的第一个应用程序
- en: In this section, we will perform a similar exercise as in the previous chapter
    – we are going to deploy a sample ASP.NET Core 3.0 application (using a Deployment
    Object) to our AKS Engine cluster and demonstrate basic kubectl operations. Many
    aspects of working with an AKS Engine cluster remain the same as in the case of
    on-premises clusters – the biggest difference is that you can easily utilize Azure
    features and integrations. To demonstrate this, we will expose the application
    using a service of type LoadBalancer instead of NodePort. Thanks to the Kubernetes
    cloud provider for Azure, the LoadBalancer service will be natively integrated
    with an Azure Load Balancer instance.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将执行与上一章类似的练习 - 我们将部署一个示例的ASP.NET Core 3.0应用程序（使用部署对象）到我们的AKS Engine集群，并演示基本的kubectl操作。与在本地集群的工作许多方面保持一致
    - 最大的区别是您可以轻松地利用Azure的功能和集成。为了演示这一点，我们将使用LoadBalancer类型的服务来暴露应用程序，而不是NodePort。由于Kubernetes云提供程序为Azure，LoadBalancer服务将与Azure负载均衡器实例进行本地集成。
- en: Basic operations
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本操作
- en: 'To deploy the sample application, follow these steps:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要部署示例应用程序，请按照以下步骤进行：
- en: 'Create a `windows-example.yaml` manifest file that contains a Deployment and
    Service definition. You can download it from the GitHub repository ([https://raw.githubusercontent.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/master/Chapter08/03_windows-example/windows-example.yaml](https://raw.githubusercontent.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/master/Chapter08/03_windows-example/windows-example.yaml))
    or directly apply it to the cluster:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`windows-example.yaml`清单文件，其中包含一个部署和服务定义。您可以从GitHub存储库（[https://raw.githubusercontent.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/master/Chapter08/03_windows-example/windows-example.yaml](https://raw.githubusercontent.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/master/Chapter08/03_windows-example/windows-example.yaml)）下载它，或者直接将其应用到集群中：
- en: '[PRE18]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'There are three important points in this manifest file, which have been marked
    in bold:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个清单文件中有三个重要的点，已经用粗体标记出来：
- en: '**Scheduling for Windows nodes** requires using `nodeSelector` with the `"beta.kubernetes.io/os":
    windows` value. Similarly, if you need to schedule the Pods for Linux nodes, you
    should use the `"beta.kubernetes.io/os": linux` node selector in hybrid clusters.
    This remains exactly the same as for on-premises clusters.'
  id: totrans-115
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为Windows节点调度**需要使用`nodeSelector`，其值为`"beta.kubernetes.io/os": windows`。同样，如果您需要为Linux节点调度Pods，您应该在混合集群中使用`"beta.kubernetes.io/os":
    linux`节点选择器。这与本地集群完全相同。'
- en: The Pod definition consists of one container based on the `mcr.microsoft.com/dotnet/core/samples:aspnetapp-nanoserver-1809` image.
    It is important to ensure **compatibility** between the container's host operating
    system version and the container's base image version – this requirement is the
    same as in an on-premises cluster. You can control what Windows Server version
    you have in your AKS Engine cluster using the custom `windowsSku` property in `properties.windowsProfile`
    in the AKS Engine apimodel JSON file. You can read more in the official documentation: [https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md#choosing-the-windows-server-version](https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md#choosing-the-windows-server-version).
    For an existing cluster, you can check the Windows Server version of nodes using
    the `kubectl get nodes -o wide` command.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pod定义包括一个基于`mcr.microsoft.com/dotnet/core/samples:aspnetapp-nanoserver-1809`镜像的容器。确保容器的主机操作系统版本与容器的基本镜像版本**兼容**非常重要-这个要求与本地集群中的要求相同。您可以使用AKS
    Engine apimodel JSON文件中的`properties.windowsProfile`中的自定义`windowsSku`属性来控制AKS Engine集群中的Windows
    Server版本。您可以在官方文档中阅读更多内容：[https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md#choosing-the-windows-server-version](https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md#choosing-the-windows-server-version)。对于现有集群，您可以使用`kubectl
    get nodes -o wide`命令检查节点的Windows Server版本。
- en: The Service spec has the type set to `LoadBalancer`. This will result in the
    creation of an externally accessible Azure Load Balancer for the Service. You
    can read more about this type of Service in [Chapter 5](da2ee6af-a754-4fc8-ae62-86d8e68f0bd0.xhtml), *Kubernetes
    Networking*.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务规范的类型设置为`LoadBalancer`。这将导致为服务创建一个外部可访问的Azure负载均衡器。您可以在[第5章](da2ee6af-a754-4fc8-ae62-86d8e68f0bd0.xhtml)中了解更多关于这种类型服务的信息，*Kubernetes
    Networking*。
- en: 'Open a PowerShell window and apply the manifest file using `kubectl`. If you
    haven''t merged your `kubeconfigs`, remember to set the proper `$env:KUBECONFIG`
    variable first and switch to an appropriate kubectl context:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开PowerShell窗口并使用`kubectl`应用清单文件。如果您还没有合并您的`kubeconfigs`，请记得首先设置正确的`$env:KUBECONFIG`变量，并切换到适当的kubectl上下文：
- en: '[PRE19]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Wait for the Pods to start – the initial image pull may take a few minutes.
    You can observe the status of the Pods with the following command:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待Pod启动-初始镜像拉取可能需要几分钟。您可以使用以下命令观察Pod的状态：
- en: '[PRE20]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Wait for external IP creation of the Service. You can observe the status of
    the Service using the following command:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待服务的外部IP创建。您可以使用以下命令观察服务的状态：
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Open your internet browser and navigate to the Azure Load Balancer address
    – in the case of this example, it is `http://52.136.234.203/`. You should see
    the sample application web page, which confirms that the deployment was successful:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的互联网浏览器并导航到Azure负载均衡器地址-在这个例子中，它是`http://52.136.234.203/`。您应该看到示例应用程序的网页，这证实了部署成功：
- en: '![](assets/aa17aac0-0438-40da-9dc4-a7e93889c539.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/aa17aac0-0438-40da-9dc4-a7e93889c539.png)'
- en: 'Performing common operations, such as accessing Pod container logs or executing
    ad hoc processes inside of a Pod container is exactly the same as for on-premises
    clusters – we will briefly revise how to do that:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 执行常见操作，如访问Pod容器日志或在Pod容器内执行临时进程，与本地集群完全相同-我们将简要回顾如何做到这一点：
- en: 'In order to access logs for one of the Pods (`windows-example-66cdf8c4bf-f5bd8`)
    created as part of the Deployment, use the following `kubectl logs` command:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了访问作为部署的一部分创建的一个Pod（`windows-example-66cdf8c4bf-f5bd8`）的日志，使用以下`kubectl logs`命令：
- en: '[PRE22]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To **exec** into the same Pod container, for example, start an interactive
    `cmd` shell and run the `kubectl exec` command:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要**exec**到相同的Pod容器中，例如，启动一个交互式`cmd` shell并运行`kubectl exec`命令：
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You can now freely access and modify the container, which is useful in debugging
    and testing scenarios. For example, you can get the contents of the `appsettings.json`
    file:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以自由访问和修改容器，这在调试和测试场景中非常有用。例如，您可以获取`appsettings.json`文件的内容：
- en: '[PRE24]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Next, let's see how to connect to the actual virtual machines that are used
    in the AKS Engine cluster.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何连接到在AKS Engine集群中使用的实际虚拟机。
- en: Connecting to virtual machines
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到虚拟机
- en: 'In order to connect to a Linux master virtual machine, you can use SSH and
    directly connect to it as it is exposed to the public network:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到Linux主虚拟机，您可以使用SSH并直接连接到它，因为它暴露在公共网络中：
- en: 'In a PowerShell window, execute the following command (your public SSH key
    will be used for authentication):'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PowerShell窗口中，执行以下命令（您的公共SSH密钥将用于身份验证）：
- en: '[PRE25]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now you can perform any maintenance or debugging operations, for example, accessing
    kubelet service logs:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以执行任何维护或调试操作，例如访问kubelet服务日志：
- en: '[PRE26]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'For Windows nodes (or other Linux nodes), the procedure is a bit more complicated
    as the VMs are in a private IP range. This means you need to use SSH local port
    forwarding via the Linux master node in order to connect using a remote desktop
    connection or SSH:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows节点（或其他Linux节点），该过程会更加复杂，因为VM位于私有IP范围内。这意味着您需要通过Linux主节点使用SSH本地端口转发来连接远程桌面连接或SSH：
- en: 'First, query for the private IP address of the Windows node that you would
    like to connect to. You can see all the names of the nodes using the following
    command:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，查询要连接的Windows节点的私有IP地址。您可以使用以下命令查看所有节点的名称：
- en: '[PRE27]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Use the name to get the private IP address of the node, for example, `7001k8s000`:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用名称获取节点的私有IP地址，例如`7001k8s000`：
- en: '[PRE28]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Use one of the private IPs in order to create an SSH tunnel from your local
    `5500` port via the master node to the `3389` port (RDP) on the Windows node:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用其中一个私有IP来创建一个SSH隧道，从您的本地`5500`端口通过主节点到`3389`端口（RDP）连接到Windows节点：
- en: '[PRE29]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'In a different PowerShell window, start an RDP session via the tunnel:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另一个PowerShell窗口中，通过隧道启动一个RDP会话：
- en: '[PRE30]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Provide your Windows node credentials (as in apimodel) and connect:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供您的Windows节点凭据（如在apimodel中）并连接：
- en: '![](assets/31e251f6-97de-4d3e-a536-bc1ca8bd94bd.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/31e251f6-97de-4d3e-a536-bc1ca8bd94bd.png)'
- en: 'Alternatively, you can also use SSH from the master node:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，您也可以从主节点使用SSH：
- en: '[PRE31]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Now, let's take a look at how to enable Azure Log Analytics and Azure Monitor
    for containers.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何为容器启用Azure Log Analytics和Azure Monitor。
- en: Enabling Azure Log Analytics and Azure Monitor for containers
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用Azure Log Analytics和Azure Monitor for containers
- en: AKS Engine comes with integration for Azure Log Analytics and Azure Monitor
    for containers, which is provided by **Operations Management Suite** (**OMS**)
    agents running on cluster nodes. When deploying your Kubernetes cluster, you can
    specify an additional `container-monitoring` add-on in the Kubernetes cluster
    definition – please note that, currently, you have to enable container monitoring
    when creating a new cluster; you cannot modify an existing cluster definition.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: AKS Engine集成了Azure Log Analytics和Azure Monitor for containers，这是由运行在集群节点上的**运营管理套件**（**OMS**）代理提供的。在部署Kubernetes集群时，您可以在Kubernetes集群定义中指定一个额外的`container-monitoring`附加组件
    - 请注意，目前，您必须在创建新集群时启用容器监控；您不能修改现有的集群定义。
- en: 'Additionally, this feature comes out of the box only if you use the `aks-engine
    deploy` command. If you would like to use this feature, perform the following
    steps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，此功能仅在使用`aks-engine deploy`命令时才能使用。如果您想使用此功能，请执行以下步骤：
- en: If you have an existing cluster in `aks-engine-windows-resource-group`, delete
    it first.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在`aks-engine-windows-resource-group`中有现有的集群，请先删除它。
- en: 'Modify your cluster definition (apimodel) so that the `properties.orchestratorProfile.kubernetesConfig` property
    has the following contents. Alternatively, you can use [https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08/05_windows-apimodel-container-monitoring/kubernetes-windows.json](https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08/05_windows-apimodel-container-monitoring/kubernetes-windows.json)
    as the base:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改您的集群定义（apimodel），使`properties.orchestratorProfile.kubernetesConfig`属性具有以下内容。或者，您可以使用[https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08/05_windows-apimodel-container-monitoring/kubernetes-windows.json](https://github.com/PacktPublishing/Hands-On-Kubernetes-on-Windows/tree/master/Chapter08/05_windows-apimodel-container-monitoring/kubernetes-windows.json)作为基础：
- en: '[PRE32]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Ensure that your service principal (in this example `appId: 7614823f-aca5-4a31-b2a5-56f30fa8bd8e`)
    additionally has the `Log Analytics Contributor` role for your Azure subscription:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '确保您的服务主体（在本例中为`appId: 7614823f-aca5-4a31-b2a5-56f30fa8bd8e`）还具有Azure订阅的`Log
    Analytics Contributor`角色：'
- en: '[PRE33]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Execute AKS Engine Deployment, using the service principal `appId` as `--client-id`
    and the `password` as `--client-secret`:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行AKS Engine部署，使用服务主体`appId`作为`--client-id`，`password`作为`--client-secret`：
- en: '[PRE34]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: After a few minutes, your cluster will be ready and you can merge your default
    kubeconfig with the AKS Engine kubeconfig.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几分钟后，您的集群将准备就绪，您可以将默认kubeconfig与AKS Engine kubeconfig合并。
- en: 'This `container-monitoring` add-on will make two things possible:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`container-monitoring`附加组件将使两件事情成为可能：
- en: Using Azure Log Analytics to query Kubernetes and your application logs using
    the Kusto query language ([https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/get-started-portal](https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/get-started-portal))
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Azure Log Analytics来使用Kusto查询语言查询Kubernetes和您的应用程序日志（[https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/get-started-portal](https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/get-started-portal)）
- en: Using the Azure Monitor service to monitor containers running in your cluster
    ([https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview))
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Azure Monitor服务来监视在您的集群中运行的容器（[https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview)）
- en: Note that until the [https://github.com/Azure/aks-engine/issues/2066](https://github.com/Azure/aks-engine/issues/2066) issue
    in AKS Engine is resolved, Kubernetes 1.16 will not integrate with the Log Analytics
    and Monitor services properly. You can try deploying your cluster again with a
    different Kubernetes version in apimodel.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在AKS Engine中的[https://github.com/Azure/aks-engine/issues/2066](https://github.com/Azure/aks-engine/issues/2066)问题得到解决之前，Kubernetes
    1.16将无法正确集成Log Analytics和Monitor服务。您可以尝试使用不同的Kubernetes版本在apimodel中重新部署您的集群。
- en: 'These services provide the basic building blocks for monitoring, alerting,
    and debugging for your containerized applications running on Kubernetes – you
    can leverage the multiple Azure portal UI features to make analysis and management
    easier, for example:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这些服务为在Kubernetes上运行的容器化应用程序提供了监视、警报和调试的基本构建模块-您可以利用多个Azure门户UI功能来使分析和管理更加容易，例如：
- en: 'Use the following URL to access Azure Monitor for containers: [https://aka.ms/azmon-containers](https://aka.ms/azmon-containers).
    Azure Monitor deserves a separate, dedicated book to cover all its features –
    as a quick example, you can explore the default dashboards that are provided for
    monitoring your Kubernetes cluster:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下URL访问Azure Monitor for containers：[https://aka.ms/azmon-containers](https://aka.ms/azmon-containers)。Azure
    Monitor值得拥有一本单独的书籍来覆盖其所有功能-例如，您可以探索为监视您的Kubernetes集群提供的默认仪表板：
- en: '![](assets/9790777b-a47b-4e13-ac18-58f306bba459.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9790777b-a47b-4e13-ac18-58f306bba459.png)'
- en: 'Use the following URL to access Azure Log Analytics: [https://portal.azure.com/#blade/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/logs](https://portal.azure.com/#blade/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/logs).
    Expand the ContainerInsights database and select, for example, the KubeEvents table.
    You can now execute a simple Kusto query to check what data is in the table:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下URL访问Azure日志分析：[https://portal.azure.com/#blade/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/logs](https://portal.azure.com/#blade/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/logs)。展开ContainerInsights数据库，并选择，例如，KubeEvents表。您现在可以执行一个简单的Kusto查询来检查表中的数据：
- en: '[PRE35]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了前面命令的输出：
- en: '![](assets/dc0209e5-b5a3-40ea-acdc-3a7884553108.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dc0209e5-b5a3-40ea-acdc-3a7884553108.png)'
- en: You can learn more about the Log Analytics tables available for container monitoring
    in the official documentation: [https://docs.microsoft.com/en-us/azure/azure-monitor/insights/containers#monitor-containers](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/containers#monitor-containers).
    For the Kusto query language documentation, please refer to [https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/query-language](https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/query-language).
    Setting up proper monitoring and log analytics solutions is **crucial** for running
    distributed applications. If you are not using Azure for your clusters, you can
    consider different solutions, such as Prometheus and Elasticsearch, that provide
    similar functionalities.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方文档中了解有关容器监视的Log Analytics表的更多信息：[https://docs.microsoft.com/en-us/azure/azure-monitor/insights/containers#monitor-containers](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/containers#monitor-containers)。有关Kusto查询语言的文档，请参阅[https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/query-language](https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/query-language)。建立适当的监视和日志分析解决方案对于运行分布式应用程序至关重要。如果您没有在Azure上使用集群，您可以考虑不同的解决方案，例如Prometheus和Elasticsearch，它们提供类似的功能。
- en: Summary
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned how to deploy a hybrid Windows/Linux Kubernetes
    cluster running on Azure using AKS Engine. Currently, this approach is the most
    suitable solution for running self-managed, production-grade clusters with Windows
    nodes. The Deployment procedure is simple – first, install all prerequisites and
    AKS Engine on your local machine, then create a dedicated Azure resource group
    and Azure Active Directory service principal. After that, you need to define an
    apimodel (cluster definition) JSON file for AKS Engine to generate an Azure resource
    manager template and use the template to deploy the cluster. Additionally, you
    have learned how to deploy a sample Windows container application and how to perform
    basic operations using kubectl. On top of that, we have shown how to connect to
    the virtual machines in the cluster for debugging and monitoring purposes and
    how to enable Azure Monitor and Azure Log Analytics for your cluster.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经学会了如何使用AKS Engine在Azure上部署运行的混合Windows/Linux Kubernetes集群。目前，这种方法是运行具有Windows节点的自管理生产级集群的最合适解决方案。部署过程很简单-首先，在本地机器上安装所有先决条件和AKS
    Engine，然后创建一个专用的Azure资源组和Azure活动目录服务主体。之后，您需要为AKS Engine定义一个apimodel（集群定义）JSON文件，以生成Azure资源管理器模板，并使用该模板部署集群。此外，您已经学会了如何部署一个示例Windows容器应用程序，以及如何使用kubectl执行基本操作。除此之外，我们还展示了如何连接到集群中的虚拟机进行调试和监视，并如何为您的集群启用Azure
    Monitor和Azure日志分析。
- en: The next chapter will focus further on deploying applications to a Kubernetes
    cluster and how to perform "day-2" operations in your cluster.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将进一步关注将应用程序部署到Kubernetes集群以及如何在集群中执行“第二天”的操作。
- en: Questions
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the difference between AKS and AKS Engine?
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AKS和AKS Engine之间有什么区别？
- en: What is the basic principle of how AKS Engine works?
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AKS Engine的基本工作原理是什么？
- en: Can you manage AKS clusters using AKS Engine and vice versa?
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您能使用AKS Engine管理AKS集群，反之亦然吗？
- en: What are the prerequisites for using AKS Engine?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用AKS Engine的先决条件是什么？
- en: What is apimodel in AKS Engine?
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AKS Engine中的apimodel是什么？
- en: How do you connect to the Kubernetes Linux master?
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何连接到Kubernetes Linux主节点？
- en: How do you connect to a Kubernetes Windows node?
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何连接到Kubernetes Windows节点？
- en: You can find the answers to these questions in *Assessments* of this book.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在本书的*评估*中找到这些问题的答案。
- en: Further reading
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Currently, most of the resources regarding the Deployment of hybrid Windows/Linux
    clusters using **AKS Engine** are available online. Please check the official
    documentation on GitHub for more details:'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目前，关于使用AKS Engine部署混合Windows/Linux集群的大多数资源都可以在网上找到。请查看GitHub上的官方文档以获取更多详细信息：
- en: '[https://github.com/Azure/aks-engine/blob/master/docs/topics/windows.md](https://github.com/Azure/aks-engine/blob/master/docs/topics/windows.md)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/Azure/aks-engine/blob/master/docs/topics/windows.md](https://github.com/Azure/aks-engine/blob/master/docs/topics/windows.md)'
- en: '[https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md](https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md](https://github.com/Azure/aks-engine/blob/master/docs/topics/windows-and-kubernetes.md)'
- en: 'In general, many of the topics concerning **AKS **(the managed Kubernetes Azure
    offering, **not** AKS Engine itself) are useful, as they touch on how to integrate
    Kubernetes with the Azure ecosystem. You can find more about AKS itself in the
    following Packt book:'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，许多关于AKS（托管的Kubernetes Azure提供的内容，而不是AKS Engine本身）的主题都很有用，因为它们涉及如何将Kubernetes与Azure生态系统集成。您可以在以下Packt书籍中找到有关AKS本身的更多信息：
- en: '*DevOps with Kubernetes – Second Edition* ([https://www.packtpub.com/virtualization-and-cloud/devops-kubernetes-second-edition](https://www.packtpub.com/virtualization-and-cloud/devops-kubernetes-second-edition))'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Kubernetes进行DevOps-第二版* ([https://www.packtpub.com/virtualization-and-cloud/devops-kubernetes-second-edition](https://www.packtpub.com/virtualization-and-cloud/devops-kubernetes-second-edition))'
- en: 'If you need help with troubleshooting and common problems, you can use the
    following guides:'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您需要帮助解决问题和常见问题，可以使用以下指南：
- en: '[https://github.com/Azure/aks-engine/blob/master/docs/howto/troubleshooting.md](https://github.com/Azure/aks-engine/blob/master/docs/howto/troubleshooting.md)'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/Azure/aks-engine/blob/master/docs/howto/troubleshooting.md](https://github.com/Azure/aks-engine/blob/master/docs/howto/troubleshooting.md)'
- en: '[https://docs.microsoft.com/en-us/virtualization/windowscontainers/kubernetes/common-problems](https://docs.microsoft.com/en-us/virtualization/windowscontainers/kubernetes/common-problems)'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/virtualization/windowscontainers/kubernetes/common-problems](https://docs.microsoft.com/en-us/virtualization/windowscontainers/kubernetes/common-problems)'
- en: '[https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#troubleshooting](https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#troubleshooting)'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#troubleshooting](https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#troubleshooting)'
- en: '[https://techcommunity.microsoft.com/t5/Networking-Blog/Troubleshooting-Kubernetes-Networking-on-Windows-Part-1/ba-p/508648](https://techcommunity.microsoft.com/t5/Networking-Blog/Troubleshooting-Kubernetes-Networking-on-Windows-Part-1/ba-p/508648) –
    a troubleshooting guide specifically for Windows container networking problems'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://techcommunity.microsoft.com/t5/Networking-Blog/Troubleshooting-Kubernetes-Networking-on-Windows-Part-1/ba-p/508648](https://techcommunity.microsoft.com/t5/Networking-Blog/Troubleshooting-Kubernetes-Networking-on-Windows-Part-1/ba-p/508648)
    - 专门针对Windows容器网络问题的故障排除指南'
