- en: Running Serverless Workloads
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行无服务器工作负载
- en: In this, our final chapter, we are going to talk about a few of the different
    scenarios where you would want to host your own serverless workloads, and what
    to consider when choosing a tool. We are going to start by discussing the advantages
    and disadvantages of working with a technology that is still in its infancy and
    is still going through quite a lot of active development.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的最后一章中，我们将讨论一些不同的情景，您会希望在其中托管自己的无服务器工作负载，并在选择工具时要考虑什么。我们将从讨论使用一种仍处于萌芽阶段并且仍在积极开发中的技术的优缺点开始。
- en: Evolving software and platforms
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件和平台的发展
- en: Pretty much all of the technology we have looked at in this book is currently
    in development. Some of the projects, as we already discussed, are in the very
    early stages of development, while others are more mature. Let's start by discussing
    Kubernetes itself.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中看到的几乎所有技术目前都在开发中。正如我们已经讨论过的，一些项目正处于开发的早期阶段，而另一些则更加成熟。让我们先讨论Kubernetes本身。
- en: Kubernetes
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes
- en: Kubernetes is very much in active development, though it is quite far into its
    development cycle. I started writing this book at the beginning of September 2017
    and now, as I write the final chapter, it is the end of December 2017.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes目前正在积极开发，尽管它已经相当成熟。我在2017年9月初开始写这本书，现在，当我写下最后一章时，已经是2017年12月底了。
- en: 'During this period there have been a total of 48 releases, as you can see from
    the following screenshot:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段时间内，一共发布了48个版本，如下截图所示：
- en: '![](assets/1404c003-3e78-40f6-a1ad-f83f18256b56.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1404c003-3e78-40f6-a1ad-f83f18256b56.png)'
- en: These updates cover everything from the maintenance releases v1.5, v1.6, and
    v1.7; the actual releases of v.1.8 and v1.9; and the subsequent maintenance releases
    all the way to the first alpha versions of v1.10\. With such an active release
    cycle, how easy is it to keep on top of the releases?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更新涵盖了从维护版本v1.5、v1.6和v1.7到实际版本v.1.8和v1.9，以及随后的维护版本，一直到v1.10的第一个alpha版本。在如此活跃的发布周期中，保持对发布的掌握有多容易呢？
- en: 'Well, given the frequency of releases, not as bad as you may think, though
    it can get complicated. As you can see from the table, each Kubernetes release
    has a major version, a minor version, and a patch version. For example, the current
    releases at the time of writing are:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，考虑到发布的频率，情况并不像你想象的那么糟糕，尽管可能会变得复杂。正如您从表中看到的，每个Kubernetes发布都有一个主要版本、一个次要版本和一个补丁版本。例如，我写作时的当前版本是：
- en: v1.6.13 (older release)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: v1.6.13（较旧版本）
- en: v1.7.11 (older release)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: v1.7.11（较旧版本）
- en: v1.8.6 (current release)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: v1.8.6（当前版本）
- en: v1.9.0 (development release)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: v1.9.0（开发版本）
- en: 'So, as of *December 12, 2017*, there are four minor versions of the same major
    release being actively worked on and patched. Kubernetes itself supports three
    minor versions at a time; namely the current release (v1.8) and two older releases
    (v1.6 and v1.7). What this means is:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2017年12月12日，同一主要版本有四个次要版本正在积极开发和修补。Kubernetes本身支持同时三个次要版本；即当前版本（v1.8）和两个较旧的版本（v1.6和v1.7）。这意味着：
- en: A master node running the current release is expected to work with nodes that
    are running the two previous versions. That is, you can have a v1.8 master and
    a mixture of v1.7 and v1.6 nodes within your cluster.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预计运行当前版本的主节点将与运行两个先前版本的节点一起工作。也就是说，您可以在集群中拥有一个v1.8主节点和混合的v1.7和v1.6节点。
- en: A master node running the current release is expected to work with a client,
    like kubectl, that is one version behind and one version ahead of the current
    release; this means that we can interact our v1.8 master with the v1.9 and v1.10
    client.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行当前版本的主节点预计可以与一个版本落后和一个版本领先于当前版本的客户端（如kubectl）一起工作；这意味着我们可以将我们的v1.8主节点与v1.9和v1.10客户端进行交互。
- en: It is recommended that whichever version you are running, you always run the
    latest patch version, as the patches often contain critical bug and security fixes.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议无论您运行哪个版本，都始终运行最新的补丁版本，因为补丁通常包含关键的错误和安全修复程序。
- en: What this support model means is that features that may be present in version
    v1.6.13 could potentially be unavailable in version v1.9.0\. With a new minor
    release roughly every two months, you have around four months to plan your updates,
    and then two months to action them—this may mean reviewing and possibly updating
    existing applications that are deployed in your cluster to make sure that they
    are not using any functionality that is being phased out of recent releases.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这种支持模型意味着在v1.6.13版本中可能存在的功能在v1.9.0版本中可能不可用。每两个月左右发布一个新的次要版本，您有大约四个月的时间来计划更新，然后两个月的时间来执行它们——这可能意味着审查并可能更新已部署在您的集群中的现有应用程序，以确保它们没有使用最近版本中正在逐步淘汰的任何功能。
- en: This is where reading the release notes becomes invaluable, as new minor versions
    always have a *Before Upgrading* section that confirms exactly what potential
    cluster-breaking changes there have been since the previous release. For example,
    the current development version is v1.9.0\. I know that it will become the current
    release in about two months, so to prepare for that I need to work my cluster
    and make sure that I take into account all of the changes detailed at [https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md#before-upgrading](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md#before-upgrading).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读发布说明变得非常宝贵，因为新的次要版本总是有一个*升级前*部分，确认自上一个版本发布以来可能存在的潜在破坏集群的变化。例如，当前的开发版本是v1.9.0。我知道它将在大约两个月内成为当前版本，所以为了做好准备，我需要处理我的集群，并确保考虑到[https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md#before-upgrading](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md#before-upgrading)中详细列出的所有变化。
- en: Features are only added, deprecated, and removed in minor versions. Patch releases
    are just that, patches to existing functionality. I also recommend reading through
    *Kubernetes Depreciation Policy*, which explains the rules for removing/disabling
    functionality. The policy can be found at [https://kubernetes.io/docs/reference/deprecation-policy/](https://kubernetes.io/docs/reference/deprecation-policy/).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 功能只会在次要版本中添加、弃用和移除。补丁版本只是对现有功能的修补。我还建议阅读*Kubernetes Depreciation Policy*，其中解释了删除/禁用功能的规则。该政策可以在[https://kubernetes.io/docs/reference/deprecation-policy/](https://kubernetes.io/docs/reference/deprecation-policy/)找到。
- en: 'You can list the versions of Kubernetes that can be deployed using Minikube
    by running the following command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行以下命令列出可以使用Minikube部署的Kubernetes版本：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The supported versions of Kubernetes releases for Google Cloud can be found
    at [https://cloud.google.com/kubernetes-engine/supported-versions](https://cloud.google.com/kubernetes-engine/supported-versions).
    Microsoft Azure supports all of the current releases; an example of this support
    can be found at the AKS introductory blog post at [https://azure.microsoft.com/en-us/blog/introducing-azure-container-service-aks-managed-kubernetes-and-azure-container-registry-geo-replication/](https://azure.microsoft.com/en-us/blog/introducing-azure-container-service-aks-managed-kubernetes-and-azure-container-registry-geo-replication/),
    where the example shows a live upgrade of v1.7.7 to v1.8.1.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud支持的Kubernetes版本发布可以在[https://cloud.google.com/kubernetes-engine/supported-versions](https://cloud.google.com/kubernetes-engine/supported-versions)找到。Microsoft
    Azure支持所有当前版本；可以在AKS介绍博客文章中找到此支持的示例，网址为[https://azure.microsoft.com/en-us/blog/introducing-azure-container-service-aks-managed-kubernetes-and-azure-container-registry-geo-replication/](https://azure.microsoft.com/en-us/blog/introducing-azure-container-service-aks-managed-kubernetes-and-azure-container-registry-geo-replication/)，示例显示了从v1.7.7实时升级到v1.8.1。
- en: Serverless tools
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无服务器工具
- en: So how does the on-going development cycle of Kubernetes affect the development
    of the serverless tools we have been looking at, and how does that affect their
    own development cycles?
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，Kubernetes的持续发展周期如何影响我们一直在关注的无服务器工具的开发，以及这如何影响它们自己的开发周期？
- en: To start, let's look at the type of tool. In the last chapter, when looking
    at security, we found out that there are basically two types of tool. The first
    adds and extends functionality within Kubernetes, such as Kubeless and Funktion.
    The second type of tool consumes Kubernetes services by basically sitting on top
    of Kubernetes and making API calls, such as Apache OpenWhisk, Fission, and OpenFaaS.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看工具的类型。在上一章中，当我们研究安全性时，我们发现基本上有两种类型的工具。第一种是在Kubernetes内添加和扩展功能的工具，例如Kubeless和Funktion。第二种类型的工具通过基本上位于Kubernetes之上并进行API调用来消耗Kubernetes服务，例如Apache
    OpenWhisk，Fission和OpenFaaS。
- en: The tools that are closely coupled with Kubernetes will always have to not only
    plan their releases in line with Kubernetes, but also have to keep a very close
    eye on the path that Kubernetes is taking, as decisions made by the Kubernetes
    special interest groups will directly affect their own roadmaps.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 与Kubernetes密切耦合的工具将不仅需要根据Kubernetes规划其发布，还需要密切关注Kubernetes的发展路径，因为Kubernetes特别兴趣小组的决定将直接影响它们自己的路线图。
- en: For example, in September 2017, Kubeless released an update to change from using
    **ThirdPartyResources** (**TPR**) to **CustomResourceDefinitions** (**CRD**),
    as TPR was deprecated as of Kubernetes v.1.7 and removed in v1.8.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，2017年9月，Kubeless发布了一个更新，从使用**ThirdPartyResources**（**TPR**）更改为**CustomResourceDefinitions**（**CRD**），因为TPR在Kubernetes
    v.1.7中已被弃用，并在v1.8中删除。
- en: 'This does mean that your choice of tool will require a little research. The
    questions you should be asking yourself are:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着您选择的工具将需要一些研究。您应该问自己的问题是：
- en: Does the tool I am evaluating work with the version of Kubernetes I will be
    deploying in my cluster? If in doubt, you can check by doing a few test installations
    with Minikube.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我正在评估的工具是否与我将在集群中部署的Kubernetes版本兼容？如果有疑问，您可以通过在Minikube上进行一些测试安装来进行检查。
- en: Are there any open issues that could affect my deployment? Before you commit
    to the tool, I recommend looking at any open issues on the tools GitHub project
    page; do any of the problems sound familiar, and could they be applicable to your
    installation?
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有任何可能影响我的部署的未解决问题？在承诺使用该工具之前，我建议查看工具GitHub项目页面上的任何未解决问题；其中有没有问题听起来很熟悉，并且可能适用于您的安装？
- en: Is the tool I am looking at deploying in active development, and how frequent
    are new releases? Does there appear to be a community supporting the tool? Review
    the releases page on GitHub; how frequent are releases, and does there appear
    to be any service-breaking releases?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我正在考虑部署的工具是否在积极开发中，新版本发布频率如何？是否有社区支持该工具？查看GitHub上的发布页面；发布频率如何，是否有任何破坏性的发布？
- en: How secure is the tool? Based on the previous chapter, how secure is the default
    configuration, and how will making it secure affect how you use the tool?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该工具有多安全？根据前一章，默认配置有多安全，使其安全会如何影响您使用该工具？
- en: A collection of useful links that should help you answer the previous questions
    can be found as follows.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有用的链接，应该可以帮助您回答之前的问题。
- en: Kubeless
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubeless
- en: 'The useful links for Kubeless are as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Kubeless的有用链接如下：
- en: '**Project homepage**: [http://kubeless.io/](http://kubeless.io/)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目主页**：[http://kubeless.io/](http://kubeless.io/)'
- en: '**Project License**: [https://github.com/kubeless/kubeless/blob/master/LICENSE](https://github.com/kubeless/kubeless/blob/master/LICENSE)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目许可证**：[https://github.com/kubeless/kubeless/blob/master/LICENSE](https://github.com/kubeless/kubeless/blob/master/LICENSE)'
- en: '**Issues**: [https://github.com/kubeless/kubeless/issues](https://github.com/kubeless/kubeless/issues)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题**：[https://github.com/kubeless/kubeless/issues](https://github.com/kubeless/kubeless/issues)'
- en: '**Releases**: [https://github.com/kubeless/kubeless/releases](https://github.com/kubeless/kubeless/releases)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布版**：[https://github.com/kubeless/kubeless/releases](https://github.com/kubeless/kubeless/releases)'
- en: '**Contributing guidelines**: [https://github.com/kubeless/kubeless/blob/master/CONTRIBUTING.md](https://github.com/kubeless/kubeless/blob/master/CONTRIBUTING.md)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**贡献指南**：[https://github.com/kubeless/kubeless/blob/master/CONTRIBUTING.md](https://github.com/kubeless/kubeless/blob/master/CONTRIBUTING.md)'
- en: '**Docs**: [https://github.com/kubeless/kubeless/tree/master/docs](https://github.com/kubeless/kubeless/tree/master/docs)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：[https://github.com/kubeless/kubeless/tree/master/docs](https://github.com/kubeless/kubeless/tree/master/docs)'
- en: Apache OpenWhisk
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache OpenWhisk
- en: 'The useful links for  OpenWhisk  are as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: OpenWhisk的有用链接如下：
- en: '**Project homepage**: [https://openwhisk.apache.org](https://openwhisk.apache.org)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目主页**：[https://openwhisk.apache.org](https://openwhisk.apache.org)'
- en: '**Project License**: [https://github.com/apache/incubator-openwhisk/blob/master/LICENSE.txt](https://github.com/apache/incubator-openwhisk/blob/master/LICENSE.txt)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目许可证**：[https://github.com/apache/incubator-openwhisk/blob/master/LICENSE.txt](https://github.com/apache/incubator-openwhisk/blob/master/LICENSE.txt)'
- en: '**Issues**: [https://github.com/apache/incubator-openwhisk/issues](https://github.com/apache/incubator-openwhisk/issues)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题**：[https://github.com/apache/incubator-openwhisk/issues](https://github.com/apache/incubator-openwhisk/issues)'
- en: '**Contributing guidelines**: [https://github.com/apache/incubator-openwhisk/blob/master/CONTRIBUTING.md](https://github.com/apache/incubator-openwhisk/blob/master/CONTRIBUTING.md)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**贡献指南**：[https://github.com/apache/incubator-openwhisk/blob/master/CONTRIBUTING.md](https://github.com/apache/incubator-openwhisk/blob/master/CONTRIBUTING.md)'
- en: '**Docs**: [https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki](https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：[https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki](https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki)'
- en: Fission
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Fission
- en: 'The useful links for Fission are as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Fission的有用链接如下：
- en: '**Project homepage**: [http://fission.io/](http://fission.io/)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目主页**：[http://fission.io/](http://fission.io/)'
- en: '**Project License**: [https://github.com/fission/fission/blob/master/LICENSE](https://github.com/fission/fission/blob/master/LICENSE)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目许可证**：[https://github.com/fission/fission/blob/master/LICENSE](https://github.com/fission/fission/blob/master/LICENSE)'
- en: '**Issues**: [https://github.com/fission/fission/issues](https://github.com/fission/fission/issues)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题**：[https://github.com/fission/fission/issues](https://github.com/fission/fission/issues)'
- en: '**Releases**: [https://github.com/fission/fission/releases](https://github.com/fission/fission/releases)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布：[https://github.com/fission/fission/releases](https://github.com/fission/fission/releases)
- en: '**Contributing guidelines**: [https://github.com/fission/fission/blob/master/CONTRIBUTING.md](https://github.com/fission/fission/blob/master/CONTRIBUTING.md)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 贡献指南：[https://github.com/fission/fission/blob/master/CONTRIBUTING.md](https://github.com/fission/fission/blob/master/CONTRIBUTING.md)
- en: '**Docs**: [https://github.com/fission/fission/tree/master/Documentation](https://github.com/fission/fission/tree/master/Documentation)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档：[https://github.com/fission/fission/tree/master/Documentation](https://github.com/fission/fission/tree/master/Documentation)
- en: OpenFaaS
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenFaaS
- en: 'The useful links for  OpenFaaS  are as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: OpenFaaS 的有用链接如下：
- en: '**Project homepage**: [https://www.openfaas.com](https://www.openfaas.com)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目主页：[https://www.openfaas.com](https://www.openfaas.com)
- en: '**Project License**: [https://github.com/openfaas/faas/blob/master/LICENSE](https://github.com/openfaas/faas/blob/master/LICENSE)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目许可证：[https://github.com/openfaas/faas/blob/master/LICENSE](https://github.com/openfaas/faas/blob/master/LICENSE)
- en: '**Issues**: [https://github.com/openfaas/faas/issues](https://github.com/openfaas/faas/issues)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：[https://github.com/openfaas/faas/issues](https://github.com/openfaas/faas/issues)
- en: '**Releases**: [https://github.com/openfaas/faas/releases](https://github.com/openfaas/faas/releases)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布：[https://github.com/openfaas/faas/releases](https://github.com/openfaas/faas/releases)
- en: '**Contributing guidelines**: [https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 贡献指南：[https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md)
- en: '**Docs**: [https://github.com/openfaas/faas/tree/master/docs](https://github.com/openfaas/faas/tree/master/docs)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档：[https://github.com/openfaas/faas/tree/master/docs](https://github.com/openfaas/faas/tree/master/docs)
- en: Funktion
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Funktion
- en: 'The useful links for Funktion  are as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Funktion 的有用链接如下：
- en: 'Since this book was first started, Funktion has been sandboxed. The source
    code remains available for anyone to use, or fork their own version to continue
    development. The authors recommend two alternatives: either Kubeless or Apache
    OpenWhisk.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 自从这本书开始编写以来，Funktion 已经被沙箱化。源代码仍然可供任何人使用，或者分叉他们自己的版本以继续开发。作者建议两种替代方案：Kubeless
    或 Apache OpenWhisk。
- en: '**Project homepage**: [https://funktion.fabric8.io](https://funktion.fabric8.io)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目主页：[https://funktion.fabric8.io](https://funktion.fabric8.io)
- en: '**Project License**: [https://github.com/funktionio/funktion/blob/master/LICENSE.md](https://github.com/funktionio/funktion/blob/master/LICENSE.md)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目许可证：[https://github.com/funktionio/funktion/blob/master/LICENSE.md](https://github.com/funktionio/funktion/blob/master/LICENSE.md)
- en: '**Issues**: [https://github.com/funktionio/funktion/issues](https://github.com/funktionio/funktion/issues)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：[https://github.com/funktionio/funktion/issues](https://github.com/funktionio/funktion/issues)
- en: '**Releases**: [https://github.com/funktionio/funktion/releases](https://github.com/funktionio/funktion/releases)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布：[https://github.com/funktionio/funktion/releases](https://github.com/funktionio/funktion/releases)
- en: '**Contributing guidelines**: [https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki](https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 贡献指南：[https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki](https://cwiki.apache.org/confluence/display/OPENWHISK/OpenWhisk+Project+Wiki)
- en: '**Docs**: [https://funktion.fabric8.io/docs/](https://funktion.fabric8.io/docs/)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档：[https://funktion.fabric8.io/docs/](https://funktion.fabric8.io/docs/)
- en: Future developments
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未来发展
- en: Three months is a long time in technology. There have been a few changes to
    the Kubernetes ecosystem since I first started writing this book; the most notable
    two are currently in private beta and are expected to open up for public use in
    early 2018.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术领域，三个月是很长的时间。自我开始写这本书以来，Kubernetes 生态系统发生了一些变化；最显著的两个目前处于私人测试阶段，预计将在2018年初向公众开放使用。
- en: 'The first is an alternative to running Kubernetes locally using Minikube, which
    came from an unexpected source: Docker. During DockerCon Europe 2017, it was announced
    that Docker will be supporting Kubernetes alongside Docker swarm in both the Community
    and Enterprise Editions of Docker for macOS and Docker for Windows.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是使用Minikube在本地运行Kubernetes的替代方案，这源自一个意想不到的来源：Docker。在2017年的DockerCon Europe上宣布，Docker将在Docker
    for macOS和Docker for Windows的社区版和企业版中支持Kubernetes和Docker swarm。
- en: You can find out more information on this upcoming release at [https://www.docker.com/kubernetes](https://www.docker.com/kubernetes),
    or watch Elton Stoneman's introduction video for the service at [https://www.youtube.com/watch?v=jWupQjdjLN0](https://www.youtube.com/watch?v=jWupQjdjLN0).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://www.docker.com/kubernetes](https://www.docker.com/kubernetes)找到有关即将发布的更多信息，或观看Elton
    Stoneman为该服务的介绍视频[https://www.youtube.com/watch?v=jWupQjdjLN0](https://www.youtube.com/watch?v=jWupQjdjLN0)。
- en: The second service, which came as no surprise, is the introduction of the **Amazon
    Elastic Container Service for Kubernetes** service, or **Amazon EKS** for short.
    Amazon announced this at their yearly re:Invent conference, and as you would expect,
    it has deep levels of integration with other AWS services such as Amazon VPC,
    IAM, Elastic Load Balancing, and AWS CloudTrail, to name a few—you can find out
    more about the service, which is currently in private beta, at [https://aws.amazon.com/eks/](https://aws.amazon.com/eks/),
    as well as watching the announcement at [https://www.youtube.com/watch?v=gUFtUU7qvSQ](https://www.youtube.com/watch?v=gUFtUU7qvSQ).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 第二项服务毫不意外地是引入了**Amazon弹性容器服务 for Kubernetes**服务，简称**Amazon EKS**。亚马逊在他们每年的re:Invent大会上宣布了这一点，正如您所期望的那样，它与其他AWS服务（如Amazon
    VPC、IAM、弹性负载均衡和AWS CloudTrail等）有深度集成。您可以在[https://aws.amazon.com/eks/](https://aws.amazon.com/eks/)找到有关该服务的更多信息，目前该服务处于私有测试阶段，也可以观看宣布视频[https://www.youtube.com/watch?v=gUFtUU7qvSQ](https://www.youtube.com/watch?v=gUFtUU7qvSQ)。
- en: Why Functions as a Service on Kubernetes
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么在Kubernetes上使用函数作为服务
- en: 'In the first few chapters, we spoke about serverless functions and Kubernetes
    and the advantages of using them:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们谈到了无服务器函数和Kubernetes以及使用它们的优势：
- en: '**Kubernetes**: the biggest use case for using Kubernetes to deploy your application
    is that it allows you to develop once and then deploy in a consistent way across
    multiple platforms, be it self-hosted bare-metal servers, or private clouds running
    virtual machines on VMWare, OpenStack, KVM, Hyper-V, and more. The same goes for
    public cloud providers such as Google Cloud, Microsoft Azure, and now AWS, who
    all offer their own native-managed Kubernetes services all the way through to
    your local machine running Minikube or the soon-to-be-released versions of Docker
    for macOS or Docker for Windows.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubernetes**：使用Kubernetes部署应用程序的最大用例是，它允许您开发一次，然后以一致的方式在多个平台上部署，无论是自托管的裸机服务器，还是在VMWare、OpenStack、KVM、Hyper-V等上运行虚拟机的私有云。对于谷歌云、微软Azure和现在的AWS等公共云提供商也是一样，它们都提供自己的本地托管Kubernetes服务，包括Minikube或即将发布的Docker
    for macOS或Docker for Windows版本。'
- en: '**Serverless**: Deploying all or parts of your application as serverless functions
    can help it scale with ease. All of a sudden, you do not need to worry about whether
    your virtual machine or container has enough resources to be able to handle a
    flood of incoming connections, or how those connections are routed to your application.
    Each request will be sent to an individual or cluster of containers managed where
    your request will be processed—once complete, that container will either be terminated
    or recycled for the next request.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无服务器**: 将应用程序的全部或部分部署为无服务器函数可以帮助它轻松扩展。突然间，你不需要担心你的虚拟机或容器是否有足够的资源来处理大量的传入连接，或者这些连接如何路由到你的应用程序。每个请求将被发送到一个个体或一组容器中，在那里你的请求将被处理——一旦完成，该容器将被终止或回收用于下一个请求。'
- en: '**Kubernetes plus serverless**: As already mentioned, the serverless portions
    of your application can easily scale—this can combine with Kubernetes, where additional
    nodes can quickly be spun up and added to your cluster both manually and via scripts.
    Once the additional resource is part of the cluster, your serverless functions
    will automatically be scheduled on the new resource, with the need for you make
    any further changes either to your application routing or code.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubernetes加无服务器**: 正如前面提到的，应用程序的无服务器部分可以轻松扩展——这可以与Kubernetes结合，其中可以快速地手动或通过脚本添加额外的节点到你的集群中。一旦额外的资源成为集群的一部分，你的无服务器函数将自动安排在新资源上，而无需对应用程序路由或代码进行进一步的更改。'
- en: Now, couple this with the knowledge that you can pretty much deploy your application
    in any of the major public cloud providers, and you will get a consistent experience,
    rather than having to adapt your code to have to work with the provider's own
    Functions as a Service offerings, such as the ones we discussed in [Chapter 1](37d92482-56fd-4329-8b81-01acc97e9c0c.xhtml),
    *The Serverless Landscape*.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 再加上你几乎可以在所有主要的公共云提供商中部署你的应用程序的知识，你将获得一致的体验，而不必调整你的代码以适应提供商自己的函数即服务提供，比如我们在[第1章](37d92482-56fd-4329-8b81-01acc97e9c0c.xhtml)中讨论的那些。*无服务器景观*。
- en: Your choice of serverless tool will more than likely come down to two factors,
    the first being what language your application is written in—for example, is your
    application written in Python, Node.js, PHP, Java, .NET, or Go?
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你选择无服务器工具很可能取决于两个因素，第一个是你的应用程序是用什么语言编写的，例如，你的应用程序是用Python、Node.js、PHP、Java、.NET还是Go编写的？
- en: The second factor will be personal preference. You have probably already formed
    an opinion, while working through the chapters of this book, about which of the
    tools is best for you, and which will fit in with both your development workflows
    and your own way of working. Issues such as security will always be a contributing
    factor, but as discussed in the previous chapter, there are ways of overcoming
    these.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个因素将是个人偏好。在阅读本书的章节时，你可能已经对哪种工具最适合你以及哪种工具适合你的开发工作流程和自己的工作方式形成了看法。安全等问题总是一个影响因素，但正如在上一章中讨论的那样，有办法克服这些问题。
- en: Fixed points
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 固定点
- en: So far we have been discussing lots of potentially small moving parts. What
    about big fixed points such as databases and file storage? How do they fit in
    with FaaS services on Kubernetes?
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在讨论许多可能是小的移动部分。那么大的固定点，比如数据库和文件存储，该如何与Kubernetes上的FaaS服务结合呢？
- en: Databases
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库
- en: There is still debate going on as to whether you should be running your database
    services in containers—this has pretty much been around since Docker first started
    to get traction, and unfortunately, there is no simple yes or no answer.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 关于是否应该在容器中运行数据库服务仍在进行讨论——这基本上自从Docker开始获得关注以来就一直存在，不幸的是，没有一个简单的是或不是的答案。
- en: Whenever I approach a project, I tend to look at the usage and what impact the
    database has on the overall performance of the application itself, and then work
    back from there.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我开始一个项目，我倾向于查看数据库的使用情况以及对应用程序整体性能的影响，然后从那里开始工作。
- en: Kubernetes allows you to run a PetSet; think back to the pet versus cattle analogy
    from the start of the book. In Kubernetes v1.5, as the feature left alpha, it
    became known as a StatefulSet. The feature came out of beta in Kubernetes v1.9.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes允许您运行PetSet；回想一下本书开头的宠物与牛的比喻。在Kubernetes v1.5中，随着该功能退出alpha版，它被称为StatefulSet。该功能在Kubernetes
    v1.9中退出beta版。
- en: See the following GitHub issue for a discussion about the change of name from
    PetSet to StatefulSet [https://github.com/kubernetes/kubernetes/issues/27430](https://github.com/kubernetes/kubernetes/issues/27430).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见以下GitHub问题，讨论从PetSet更名为StatefulSet的更改[https://github.com/kubernetes/kubernetes/issues/27430](https://github.com/kubernetes/kubernetes/issues/27430)。
- en: 'A StatefulSet allows you to run what would traditionally be quite difficult
    to run in a clustered service such as Kubernetes. Using a combination of pods
    and persistent storage, it basically creates a fixed point within your Kubernetes
    cluster which:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: StatefulSet允许您运行传统上在Kubernetes等集群服务中运行起来相当困难的东西。通过使用pod和持久存储的组合，它基本上在Kubernetes集群中创建了一个固定点，其中：
- en: Has a stable unique network identifier that will persist should the StatefulSet
    need to move between hosts or the pod need restarting because of error
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有稳定的唯一网络标识符，如果StatefulSet需要在主机之间移动或者由于错误需要重新启动pod，它将持续存在
- en: Has stable persistent storage that is dedicated to the StatefulSet, useful for
    storing databases, configuration, and more
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有稳定的专用于StatefulSet的持久存储，用于存储数据库、配置等
- en: Has ordered and graceful deployment and scaling, deletion and termination, and
    automated rolling updates, all of which means you have control over the software
    that needs to be controlled when it is started, moved, or shut down
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有有序和优雅的部署和扩展、删除和终止，以及自动滚动更新，所有这些意味着您可以控制需要在启动、移动或关闭时进行控制的软件。
- en: All of these mean that it is more than possible to host your databases within
    your Kubernetes cluster. Doing so means that you will be able to connect to your
    database within the same namespaces, but this solution may not be suitable for
    all scenarios.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些意味着在Kubernetes集群中托管数据库是完全可能的。这样做意味着您将能够在相同的命名空间内连接到您的数据库，但这种解决方案可能并非适用于所有情况。
- en: 'For example, if you have a large dataset, or your database needs to be accessible
    outside of your Kubernetes cluster by other applications, then you may be better
    off using the native database services offered by your public cloud provider.
    These services include:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您有一个大型数据集，或者您的数据库需要被Kubernetes集群外的其他应用程序访问，那么您最好使用公共云提供商提供的本地数据库服务。这些服务包括：
- en: '**Amazon Relational Database Service** (**Amazon RDS**): This service supports
    MySQL, PostgreSQL, MariaDB, Oracle, and Microsoft SQL. For more details, see [https://aws.amazon.com/rds/](https://aws.amazon.com/rds/).'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon关系型数据库服务**（**Amazon RDS**）：该服务支持MySQL、PostgreSQL、MariaDB、Oracle和Microsoft
    SQL。更多详情请参见[https://aws.amazon.com/rds/](https://aws.amazon.com/rds/)。'
- en: '**Microsoft Azure Database**: There are Microsoft SQL, MySQL, and PostgreSQL
    options; see [https://azure.microsoft.com/en-gb/services/sql-database/](https://azure.microsoft.com/en-gb/services/sql-database/),
    [https://azure.microsoft.com/en-gb/services/mysql/](https://azure.microsoft.com/en-gb/services/mysql/),
    and [https://azure.microsoft.com/en-gb/services/postgresql/](https://azure.microsoft.com/en-gb/services/postgresql/)
    for further details.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软Azure数据库：有Microsoft SQL、MySQL和PostgreSQL选项；请参阅[https://azure.microsoft.com/en-gb/services/sql-database/](https://azure.microsoft.com/en-gb/services/sql-database/)、[https://azure.microsoft.com/en-gb/services/mysql/](https://azure.microsoft.com/en-gb/services/mysql/)和[https://azure.microsoft.com/en-gb/services/postgresql/](https://azure.microsoft.com/en-gb/services/postgresql/)获取更多详细信息。
- en: '**Google Cloud SQL**: This supports MySQL and PostgreSQL. See the following
    link for more information: [https://cloud.google.com/sql/](https://cloud.google.com/sql/).'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌云SQL：支持MySQL和PostgreSQL。有关更多信息，请参阅以下链接：[https://cloud.google.com/sql/](https://cloud.google.com/sql/)。
- en: While using these services exposes you to a little vendor lock-in as you will
    have large parts of your data outside of your Kubernetes cluster, all three offer
    open source database engines, which from an application point of view means they
    are still consuming the same database service, be it hosted within your cluster
    or as one of your public cloud providers services.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管使用这些服务会使您暴露于一定程度的供应商锁定，因为您的大部分数据将位于Kubernetes集群之外，但这三个服务都提供开源数据库引擎，从应用程序的角度来看，这意味着它们仍然在使用相同的数据库服务，无论是在您的集群内托管还是作为您的公共云提供商服务之一。
- en: 'For more information about StatefulSets, I would recommend reading through
    the following two examples on the Kubernetes website:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 有关StatefulSets的更多信息，我建议阅读Kubernetes网站上的以下两个示例：
- en: '[https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/](https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/](https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/)'
- en: '[https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/](https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/](https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/)'
- en: Please remember that up until Kubernetes v1.9 this feature was in beta, so you
    may have to check the documentation if your cluster is running an older version.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，直到Kubernetes v1.9版本之前，此功能都处于测试阶段，因此如果您的集群运行的是旧版本，可能需要查看文档。
- en: Storage
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储
- en: Most modern applications should already not be storing files that are being
    generated on local drives—instead, they should be using an object store. Typically,
    an object offers an API that allows the application to both write files to the
    service, and also query the service to find out metadata for the files, including
    retrieving a URL where the file can be accessed over HTTP.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代应用程序应该不再存储在本地驱动器上生成的文件，而是应该使用对象存储。通常，对象提供了一个API，允许应用程序将文件写入服务，并查询服务以查找文件的元数据，包括检索文件可以通过HTTP访问的URL。
- en: 'The big three public cloud providers all offer object storage:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 三大公共云提供商都提供对象存储：
- en: '**Amazon S3**: [https://aws.amazon.com/s3/](https://aws.amazon.com/s3/)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊S3：[https://aws.amazon.com/s3/](https://aws.amazon.com/s3/)
- en: '**Microsoft Azure Blob storage**: [https://azure.microsoft.com/en-gb/services/storage/blobs/](https://azure.microsoft.com/en-gb/services/storage/blobs/)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软Azure Blob存储：[https://azure.microsoft.com/en-gb/services/storage/blobs/](https://azure.microsoft.com/en-gb/services/storage/blobs/)
- en: '**Google Cloud Storage**: [https://cloud.google.com/storage/](https://cloud.google.com/storage/)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌云存储：[https://cloud.google.com/storage/](https://cloud.google.com/storage/)
- en: Amazon S3 is the granddaddy of them all; it is more than likely that at some
    point in the last 48 hours you have accessed a file which has been served either
    directly from Amazon S3, or indirectly, using a content delivery network where
    Amazon S3 is the origin for the file.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon S3是它们中的鼻祖；很可能在过去48小时内，您已经访问过直接从Amazon S3提供的文件，或者间接地使用内容传送网络，其中Amazon
    S3是文件的来源。
- en: What if you wish to keep your application within Kubernetes, including the object
    store? Don't worry, it is possible to run your own object store; in fact, you
    can run one that has a highlevel of compatibility with Amazon S3, meaning that
    your application should continue to work with little to no modification.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望将应用程序保留在Kubernetes中，包括对象存储，不用担心，可以运行自己的对象存储；事实上，您可以运行一个与Amazon S3具有高度兼容性的对象存储，这意味着您的应用程序应该可以继续工作，几乎不需要修改。
- en: Minio is a multi-cloud object store that you can deploy to Kubernetes as well
    as other cloud and service providers; it is even possible to run it locally using
    Minikube.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Minio是一个多云对象存储，可以部署到Kubernetes以及其他云和服务提供商；甚至可以使用Minikube在本地运行它。
- en: 'For more information on Minio on Kubernetes, see the following link: [https://www.minio.io/kubernetes.html](https://www.minio.io/kubernetes.html).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Kubernetes上的Minio的更多信息，请参阅以下链接：[https://www.minio.io/kubernetes.html](https://www.minio.io/kubernetes.html)。
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: So, here we are at the end of the book. We have worked through what we mean
    by serverless, and addressed the confusion about running serverless functions
    on servers.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们到了书的结尾。我们已经解释了什么是无服务器，并解决了在服务器上运行无服务器函数的混乱。
- en: We have learned about how Kubernetes started and some of its core concepts,
    as well as about deploying clusters locally and in public clouds using both tools
    provided by Kubernetes themselves, and also the cloud provider's native solutions.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了Kubernetes是如何起步以及一些核心概念，以及如何使用Kubernetes提供的工具在本地和公共云中部署集群，还有云服务提供商的原生解决方案。
- en: Using these clusters, we worked through several tools that all provide Functions
    as a Service functionality, either by extending Kubernetes with new functionality,
    or by taking advantages of the Platform as a Service functionality of Kubernetes
    and installing themselves on top of Kubernetes.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些集群，我们通过了几个工具，它们都提供了函数即服务功能，要么通过扩展Kubernetes的新功能，要么通过利用Kubernetes的平台即服务功能并在其上安装自己。
- en: We then discussed potential security issues with these deployments and how to
    monitor them, before then talking about how we try and keep ahead of an ever-evolving
    technology, and what you will need to consider when starting out on your own deploying
    serverless functions on Kubernetes.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们讨论了这些部署可能存在的安全问题以及如何监视它们，然后讨论了我们如何努力保持领先的不断发展的技术，并且在开始在Kubernetes上部署无服务器函数时需要考虑的事项。
