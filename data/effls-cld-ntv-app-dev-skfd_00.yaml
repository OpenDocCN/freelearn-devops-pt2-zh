- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'Tooling around Kubernetes has changed drastically over the years, given the
    hype around it. More and more developers are looking for tools that can help them
    get started quickly with Kubernetes. It also causes some confusion among developers:
    which tool they should use in order to spend less time configuring their local
    setup, or writing scripts to automate their inner dev loop workflow? Moreover,
    developers require better tools while working with Kubernetes because the focus
    should be on the task at hand, that is, coding, rather than agonizing about how
    and where they will deploy an application. Ideally, you would prefer a tool that
    provides extensibility to support various use cases.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，围绕Kubernetes的工具已经发生了巨大变化，鉴于其所带来的热潮。越来越多的开发者正在寻找可以帮助他们快速开始使用Kubernetes的工具。这也给开发者带来了一些困惑：他们应该使用哪种工具来减少配置本地设置的时间，或者编写脚本来自动化他们的内部开发循环工作流程？此外，开发者在使用Kubernetes时需要更好的工具，因为焦点应该放在手头的任务上，即编码，而不是苦恼于如何以及在哪里部署应用程序。理想情况下，您会希望有一个提供可扩展性以支持各种用例的工具。
- en: This book will show you how to solve inner development loop intricacies in cloud-native
    applications by automating build, push, and deploy boilerplate using Skaffold.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将向您展示如何通过使用Skaffold自动化构建、推送和部署样板来解决云原生应用中的内部开发循环复杂性。
- en: Who this book is for
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书的受众
- en: This book is for cloud-native application developers, software engineers working
    with Kubernetes, and DevOps professionals looking for a solution to simplify their
    inner development loop and improve their CI/CD pipeline for cloud-native applications.
    Beginner-level knowledge of Java, Docker, Kubernetes, and the containers ecosystem
    is required before taking on this book.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于云原生应用开发人员、与Kubernetes合作的软件工程师以及寻找简化其内部开发循环并改进云原生应用的CI/CD流程的DevOps专业人员。在阅读本书之前，需要具备初级水平的Java、Docker、Kubernetes和容器生态系统知识。
- en: What this book covers
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[*Chapter 1*](B17385_01_Final_PD_ePub.xhtml#_idTextAnchor015), *Code, Build,
    Test, and Repeat - The Application Development Inner Loop*, defines the inner
    loop of application development and its importance. It also compares the inner
    with the outer development loop, and covers the typical development workflows
    for a traditional monolith application and a container-native microservices application.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章《编码、构建、测试和重复——应用开发的内部循环》定义了应用开发的内部循环及其重要性。它还将内部循环与外部开发循环进行了比较，并涵盖了传统单体应用程序和容器原生微服务应用程序的典型开发工作流程。
- en: '[*Chapter 2*](B17385_02_Final_PD_ePub.xhtml#_idTextAnchor026), *Developing
    Cloud-Native Applications with Kubernetes – A Developer''s Nightmare*, explains
    the problems that developers face while developing cloud-native applications with
    Kubernetes.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章《使用Kubernetes开发云原生应用——开发者的噩梦》解释了开发者在使用Kubernetes开发云原生应用时所面临的问题。
- en: '[*Chapter 3*](B17385_03_Final_PD_ePub.xhtml#_idTextAnchor034), *Skaffold –
    Easy-Peasy Cloud-Native Kubernetes Application Development*, provides a high-level
    overview of Skaffold. We will also demonstrate Skaffold''s basic features by building
    and deploying a Spring Boot application.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章《Skaffold——简单易用的云原生Kubernetes应用开发》提供了Skaffold的高级概述。我们还将通过构建和部署一个Spring Boot应用程序来演示Skaffold的基本特性。
- en: '[*Chapter 4*](B17385_04_Final_PD_ePub.xhtml#_idTextAnchor044), *Understanding
    Skaffold''s Features and Architecture*, explores Skaffold''s features and internals
    by looking at its architecture, workflow, and configuration file, `skaffold.yaml`.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章《了解Skaffold的特性和架构》通过查看其架构、工作流程和配置文件`skaffold.yaml`来探讨Skaffold的特性和内部结构。
- en: '[*Chapter 5*](B17385_05_Final_PD_ePub.xhtml#_idTextAnchor052), *Installing
    Skaffold and Demystifying Its Pipeline Stages*, explains Skaffold installation
    and common CLI commands used in its different pipeline stages.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*]，*安装Skaffold并揭秘其流水线阶段*，解释了Skaffold的安装以及在不同流水线阶段中使用的常见CLI命令。'
- en: '[*Chapter 6*](B17385_06_PreFinal_PD_ePub.xhtml#_idTextAnchor074), *Working
    with Skaffold Container Image Builders and Deployers*, explains various tools
    used for building (Docker, Jib, kaniko, Buildpacks) and deploying (Helm, kubectl,
    kustomize) container images to Kubernetes with Skaffold.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*]，*使用Skaffold容器镜像构建器和部署器*，介绍了用于使用Skaffold将容器镜像（Docker、Jib、kaniko、Buildpacks）构建和部署（Helm、kubectl、kustomize）到Kubernetes的各种工具。'
- en: '[*Chapter 7*](B17385_07_Final_PD_ePub.xhtml#_idTextAnchor092), *Building and
    Deploying a Spring Boot Application with the Cloud Code Plugin*, introduces you
    to the Cloud Code plugin developed by Google. It explains how to build and deploy
    a Spring Boot application to a Kubernetes cluster using the Cloud Code plugin
    with an IDE such as IntelliJ.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*]，*使用Cloud Code插件构建和部署Spring Boot应用*，向您介绍了由Google开发的Cloud Code插件。它解释了如何使用Cloud
    Code插件和诸如IntelliJ之类的IDE将Spring Boot应用构建和部署到Kubernetes集群。'
- en: '[*Chapter 8*](B17385_08_Final_PD_ePub.xhtml#_idTextAnchor099), *Deploying a
    Spring Boot Application to Google Kubernetes Engine Using Skaffold*, explains
    how you can deploy a Spring Boot application to Google Kubernetes Engine, a managed
    Kubernetes service provided by Google Cloud Platform with Skaffold.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*]，*使用Skaffold将Spring Boot应用部署到Google Kubernetes Engine*，解释了如何使用Skaffold将Spring
    Boot应用部署到Google Kubernetes Engine，这是Google Cloud Platform提供的托管Kubernetes服务。'
- en: '[*Chapter 9*](B17385_09_Final_PD_ePub.xhtml#_idTextAnchor116), *Creating a
    Production-Ready CI/CD Pipeline with Skaffold*, explains how you can create a
    production-ready continuous integration and deployment pipeline of a Spring Boot
    application using Skaffold and GitHub actions.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*]，*使用Skaffold创建一个生产就绪的CI/CD流水线*，解释了如何使用Skaffold和GitHub操作创建一个Spring Boot应用的生产就绪的持续集成和部署流水线。'
- en: '[*Chapter 10*](B17385_10_Final_PD_ePub.xhtml#_idTextAnchor129), *Exploring
    Skaffold Alternatives, Best Practices, and Pitfalls*, looks at Skaffold alternative
    tools such as Telepresence, and also covers Skaffold best practices and traps.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*]，*探索Skaffold替代方案、最佳实践和陷阱*，介绍了Skaffold替代工具，如Telepresence，并介绍了Skaffold的最佳实践和陷阱。'
- en: To get the most out of this book
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: '![](image/B17385_Preface_table1.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](image/B17385_Preface_table1.jpg)'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself** **or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用本书的数字版本，我们建议您自己输入代码或通过GitHub存储库（链接在下一节中提供）访问代码。这样做将有助于您避免与复制和粘贴代码相关的任何潜在错误。
- en: Download the example code files
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Effortless-Cloud-Native-App-Development-Using-Skaffold](https://github.com/PacktPublishing/Effortless-Cloud-Native-App-Development-Using-Skaffold).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub上下载本书的示例代码文件[https://github.com/PacktPublishing/Effortless-Cloud-Native-App-Development-Using-Skaffold](https://github.com/PacktPublishing/Effortless-Cloud-Native-App-Development-Using-Skaffold)。如果代码有更新，将在现有的GitHub存储库中进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自我们丰富的图书和视频目录的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上找到。快去看看吧！
- en: Download the color images
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图像。您可以在这里下载：
- en: '[https://static.packt-cdn.com/downloads/9781801077118_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781801077118_ColorImages.pdf)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://static.packt-cdn.com/downloads/9781801077118_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781801077118_ColorImages.pdf)'
- en: Conventions used
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "Internally, Skaffold creates a `tar` file with changed
    files that match the sync rules we define in the `skaffold.yaml` file."'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。这是一个例子：“在内部，Skaffold创建一个`tar`文件，其中包含与我们在`skaffold.yaml`文件中定义的同步规则匹配的更改文件。”'
- en: 'A block of code is set as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Now that we have a working project, click the **Run/Debug Configurations**
    dropdown and select **Edit Configurations**."'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会在文本中以这种方式出现。这是一个例子：“现在我们有一个可用的项目，点击**Run/Debug
    Configurations**下拉菜单，然后选择**Edit Configurations**。”'
- en: Tips or important notes
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 提示或重要说明
- en: Appear like this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 会以这种方式出现。
