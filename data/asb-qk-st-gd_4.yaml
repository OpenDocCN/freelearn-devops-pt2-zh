- en: Ansible Modules
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible模块
- en: 'In order to master Ansible playbooks, we need to learn about modules and how
    useful they can be. Ansible modules are essential components that define the actions
    performed by every playbook. Each module is set up to enable a task to be performed. They
    are designed to function smoothly with no overheads because all their dependencies
    and requirements are covered. Ansible modules enable the user to manage several
    operating systems, services, applications, databases, packages managers, virtualized
    infrastructure datastores, and cloud environments. In this chapter, we will cover
    the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了掌握Ansible playbook，我们需要了解模块以及它们的用途。Ansible模块是定义每个playbook执行的操作的基本组件。每个模块都被设置为执行一个任务。它们被设计为能够平稳运行，因为它们的所有依赖和要求都被覆盖了。Ansible模块使用户能够管理多个操作系统、服务、应用程序、数据库、软件包管理器、虚拟化基础设施数据存储和云环境。在本章中，我们将涵盖以下内容：
- en: Overview of the use of Ansible modules
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible模块的使用概述
- en: Ansible Linux modules and their varieties
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Linux模块及其变种
- en: Implementing Ansible Windows modules
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施Ansible Windows模块
- en: 'A common constructor: Ansible network modules'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个常见的构造器：Ansible网络模块
- en: The Ansible cloud modules of the big three cloud providers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三大云服务提供商的Ansible云模块
- en: Ansible modules overview
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible模块概述
- en: When installing Ansible, the user will also receive a very handy set of modules.
    This set is called a module library. It is a list of predefined functions and
    actions to be called when using Ansible, either via ad hoc commands or by running
    playbooks. An Ansible user is not limited to the predefined Ansible modules; they
    can easily write their own using Python and JSON scripting. The modules that come
    with the installation of Ansible might be referred to as task plugins or library
    plugins, but do not mistake these for the actual Ansible plugins, which are the
    scripts that allow Ansible to interact with other systems, a subject for another
    chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Ansible时，用户还将收到一组非常方便的模块。这个集合被称为模块库。这是一个预定义的函数和操作列表，当使用Ansible时可以调用，无论是通过临时命令还是运行playbook。Ansible用户不仅限于预定义的Ansible模块；他们可以很容易地使用Python和JSON脚本编写自己的模块。与Ansible安装一起提供的模块可能被称为任务插件或库插件，但不要将它们误认为实际的Ansible插件，这些是允许Ansible与其他系统交互的脚本，这是另一章的主题。
- en: 'The Ansible module library comes with its own machine library. Use the `ansible-doc` command
    followed by the name of the module to find out more about how it is used and what
    its output variables are:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible模块库附带了自己的机器库。使用`ansible-doc`命令，后跟模块的名称，以了解有关其如何使用以及其输出变量的更多信息：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To list all the available modules, use the `-l` option:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有可用的模块，请使用`-l`选项：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using modules is very simple. You need to identify the name of the module, then input
    its arguments if required. Not all modules require argument input (the ping module,
    for example, doesn't require this) but most do. For other modules, inputting arguments
    is optional and might allow you to personalize the action, such as in the case
    of the Windows reboot module. As an example, let's look at executing modules in
    both ad hoc and playbook mode.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用模块非常简单。您需要识别模块的名称，然后根据需要输入其参数。并非所有模块都需要参数输入（例如，ping模块不需要），但大多数模块都需要。对于其他模块，输入参数是可选的，可能允许您个性化操作，比如Windows重启模块的情况。例如，让我们看看如何在临时命令和playbook模式下执行模块。
- en: 'Ad hoc versus playbook: the ping module'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 临时命令与playbook：ping模块
- en: 'As discussed previously, Ansible ad hoc can be used for a quick check, such
    as running a `ping` command to check if the hosts are up and running. The command
    should look as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Ansible临时命令可用于快速检查，例如运行`ping`命令以检查主机是否正常运行。命令应如下所示：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output of the command will look similar to the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 命令的输出将类似于以下内容：
- en: '![](assets/11804c49-8b16-4132-bec9-e4a2660d4cbe.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/11804c49-8b16-4132-bec9-e4a2660d4cbe.png)'
- en: 'The `ping` module can also be used in the playbook as part of the bigger script,
    where the result of the `ping` can be piped to be the condition for another action.
    The playbook code is as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`模块也可以作为更大脚本的一部分在playbook中使用，其中`ping`的结果可以被传递为另一个动作的条件。playbook代码如下：'
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output of this code will look as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的输出将如下所示：
- en: '![](assets/c2791629-6003-4de6-a25d-0447e964012a.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c2791629-6003-4de6-a25d-0447e964012a.png)'
- en: 'Ad hoc versus playbook: the win_reboot module'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 临时命令与playbook：win_reboot模块
- en: 'The ad hoc command can be simply executed as shown in the following two examples:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 临时命令可以简单地执行，如下面的两个例子所示：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The resulting output of either command will look as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 任一命令的结果输出如下：
- en: '![](assets/cf8a919f-c1b1-4375-b052-9363b380e35c.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cf8a919f-c1b1-4375-b052-9363b380e35c.png)'
- en: 'This playbook file contains two ways of restarting hosts using the same module:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个playbook文件包含了使用相同模块重新启动主机的两种方式：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The resulting playbook output will look as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的playbook输出如下：
- en: '![](assets/d4910b37-1e9f-48df-a472-074a56dc2680.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d4910b37-1e9f-48df-a472-074a56dc2680.png)'
- en: 'ad-hoc versus playbook: the copy module'
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 临时命令与playbook：copy模块
- en: 'The Ansible `copy` module can be used in ad hoc mode to quickly run a copy
    job:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible `copy`模块可以在临时模式下用于快速运行复制作业：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output of this command should look as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令的输出应该如下所示：
- en: '![](assets/5656b15f-31ec-45c1-b6a2-300fea96440d.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5656b15f-31ec-45c1-b6a2-300fea96440d.png)'
- en: 'Alternatively, this can be used in a playbook with various options for a personalized
    result:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，这可以在包含各种选项以获得个性化结果的playbook中使用：
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Ansible module return values
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible模块返回值
- en: Return values are the key feature for monitoring and managing task execution.
    An administrator can determine the status of each action and run other tasks accordingly,
    either to fix, improve, or follow up on the bigger job. Ansible modules are fitted
    with a variety of return values. Each module will have the common values and some
    extra specific ones for the role performed by the module. These extra return values
    can be used for numerous functionalities. In Ansible, most return values are used
    as input for playbook conditions and loops. This scripting allows the pipelining
    of actions and tasks to achieve an automated configuration management. Ansible
    basically collects all the useful output data about the action performed by the
    module and arranges it into variables presented as return values.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值是监视和管理任务执行的关键特性。管理员可以确定每个操作的状态，并相应地运行其他任务，无论是修复、改进还是跟进更大的工作。Ansible模块配备了各种返回值。每个模块都会有通用值和一些额外的特定于模块执行的特定值。这些额外的返回值可以用于许多功能。在Ansible中，大多数返回值用作playbook条件和循环的输入。这种脚本允许对操作和任务进行流水线处理，以实现自动化配置管理。Ansible基本上收集了模块执行的有关操作的所有有用输出数据，并将其整理成作为返回值呈现的变量。
- en: There is no need to learn all the return values of these modules; you can easily
    get very good documentation about each module using the `ansible-doc` command.
    Alternatively, consult the official Ansible documentation using `module index`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要学习这些模块的所有返回值；您可以使用`ansible-doc`命令轻松获取有关每个模块的非常好的文档。或者，使用`module index`查阅官方Ansible文档。
- en: 'As for the most common return values, we can identify the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 至于最常见的返回值，我们可以确定以下内容：
- en: '`stdout or stdout_lines`: This is the variable that contains the standard output
    of commands executed using an execution module such as `raw`, `command`, `shell`,
    or `win_shell`. The `stdout_lines` have the same value and string as `stdout`
    but they have a more organized output—a human-readable text divided into lines.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stdout或stdout_lines`：这是一个变量，包含使用执行模块（如`raw`、`command`、`shell`或`win_shell`）执行的命令的标准输出。`stdout_lines`具有与`stdout`相同的值和字符串，但它们具有更有组织的输出——一个人类可读的文本分成行。'
- en: '`stderr` or `stderr_lines`: This has the same output source as `stdout`, but
    this is the error message output. If the command executed returns an error message,
    it will be stored in this variable. The `stderr_lines` also have the same output
    string as `stderr` but are more organized into lines.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stderr`或`stderr_lines`：这与`stdout`具有相同的输出源，但这是错误消息输出。如果执行的命令返回错误消息，它将存储在这个变量中。`stderr_lines`也具有与`stderr`相同的输出字符串，但更有组织成行。'
- en: '`changed`: This is the return value that indicates the status of the task or
    action if the task has made a change to the target host. It will contain a Boolean
    value of `True` or `False`.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`changed`：这是返回值，指示任务或操作的状态是否对目标主机进行了更改。它将包含一个`True`或`False`的布尔值。'
- en: '`failed`: This is another status update return value that indicates whether
    the task or action has failed or not. It is also a Boolean value that can be either
    `True` or `False`.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`failed`：这是另一个状态更新返回值，指示任务或操作是否失败。它也是一个布尔值，可以是`True`或`False`。'
- en: '`skipped`: This is another status return value that indicates whether the task
    has been skipped. This occurs when a task has been triggered by a playbook condition
    and the condition was not met. Like the other status return values, it is a Boolean
    variable.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skipped`：这是另一个状态返回值，指示任务是否已被跳过。当任务由playbook条件触发并且条件未满足时会发生这种情况。与其他状态返回值一样，它是一个布尔变量。'
- en: '`rc`: This stands for **return code.** It contains the return code generated
    by the command that is executed by the command execution modules.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rc`：这代表**返回码**。它包含由命令执行模块执行的命令生成的返回码。'
- en: '`results`: This a value that does not exist in a task unless it has a loop
    in it. It should contain the list of the normal module `result` per item used
    to loop on.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`results`：这是一个值，在没有循环的任务中不存在。它应该包含用于循环的每个项目的正常模块`result`列表。'
- en: '`invocation`: This is a value that contains the method detailing how the module
    was invoked.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`invocation`：这是一个包含详细说明模块如何被调用的值。'
- en: '`backup_file`: This is a value that gets filled when a module has the specific
    `backup=no|yes` option. It states the location where the backup file has been
    created.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`backup_file`：这是一个值，当模块具有特定的`backup=no|yes`选项时会填充。它指出备份文件创建的位置。'
- en: '`msg`: This is a value containing the message that gets generated by the module
    to the Ansible user.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msg`：这是一个包含模块生成的消息的值，发送给Ansible用户。'
- en: 'The common values get collected during the execution of the task using a register,
    and then are either called for by the playbook condition functions or just printed
    using a debugger:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行任务时，通用值使用寄存器进行收集，然后通过playbook条件函数调用或使用调试器打印：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This playbook will have the following output:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个playbook将有以下输出：
- en: '![](assets/e34e1ccb-dc74-4672-a8b0-e1e4407b9f99.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e34e1ccb-dc74-4672-a8b0-e1e4407b9f99.png)'
- en: 'Using the debugger, we can easily specify that we want one or all of the return
    values to be printed. The playbook task should look as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用调试器，我们可以轻松地指定我们希望打印一个或所有返回值。Playbook任务应该如下所示：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Ansible also collects some extra values to be used for internal Ansible functionalities.
    These values are `ansible_facts`, `exception`, `warning`, and `deprecations`.
    They can be added by some modules to be later removed from the register variables
    and collected by Ansible.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible还收集一些额外的值，用于内部Ansible功能。这些值是`ansible_facts`、`exception`、`warning`和`deprecations`。它们可以由一些模块添加，以后从寄存器变量中删除并由Ansible收集。
- en: Ansible Linux modules
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Linux模块
- en: We will start by exploring the Linux modules. These are a selection of the most
    commonly used modules to manage the operating systems, packages, applications,
    and services running on the Linux environment. We will be covering the two big
    Linux families, Debian and Red Hat. In this section, we will give a brief overview
    of the module and its useful functionalities and features. We will also look at
    a sample of a playbook of one of the interesting uses of this module.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从探索Linux模块开始。这些是用于管理运行在Linux环境上的操作系统、软件包、应用程序和服务的最常用模块的选择。我们将涵盖两个大的Linux家族，Debian和Red
    Hat。在本节中，我们将简要概述模块及其有用的功能和特性。我们还将查看此模块的一个有趣用途的playbook示例。
- en: We will not be covering all of the available modules that are supported in the
    Ansible releases. You can find full documentation for these either by running
    the ansible-doc command or on the official Ansible documentation in the modules
    index section. In this book, we will try to cover some of the community and galaxy
    modules that are needed to perform some tasks.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会涵盖Ansible版本中支持的所有可用模块。您可以通过运行ansible-doc命令或在模块索引部分的官方Ansible文档中找到这些模块的完整文档。在本书中，我们将尝试涵盖一些执行某些任务所需的社区和galaxy模块。
- en: Some modules require some specific technologies to be installed on the remote
    hosts. Most of those requirements are usually preinstalled as basic system utilities,
    while you can work around others by using another tool that can do a similar job.
    For example, when you are using the `apt` module, the hosts are required to have
    `aptitude` installed on the remote Debian. Ansible will use `apt-get` to execute
    the job with a warning message to the user stating the unavailability of aptitude.
    In case the requirements are not met, Ansible will be sure to inform the user.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一些模块需要在远程主机上安装一些特定的技术。这些要求中的大多数通常作为基本系统实用程序预安装，而您可以通过使用另一个可以执行类似工作的工具来解决其他问题。例如，当您使用`apt`模块时，要求主机上安装了`aptitude`。Ansible将使用`apt-get`来执行作业，并向用户发出警告消息，指出aptitude不可用。如果未满足要求，Ansible将确保通知用户。
- en: Before using a new module, be sure to read its documentation carefully and check
    if all its requirements have been met, to be on the safe side.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用新模块之前，请务必仔细阅读其文档，并检查是否满足了所有的要求，以确保安全。
- en: Linux system modules
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux系统模块
- en: The following is a list of the most useful Ansible modules for managing a Linux
    system.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是管理Linux系统最有用的Ansible模块列表。
- en: The user management module
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户管理模块
- en: 'As suggested by its name, this module is for user management on a Linux system.
    As an example, we will make a playbook that creates a system user named `install`
    to be used later to manage the remote machine. The playbook script is as follows
    :'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名称所示，此模块用于Linux系统上的用户管理。例如，我们将创建一个名为`install`的系统用户的playbook，以便稍后用于管理远程机器。playbook脚本如下：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can always add `-v` or `-vvv` if you want extra output when running a playbook.
    The following screenshot shows the output of a normal run and one with the `-v`
    option:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行playbook时，如果需要额外的输出，可以始终添加`-v`或`-vvv`。以下截图显示了正常运行和使用`-v`选项的输出：
- en: '![](assets/a9b5b82c-7bc8-4d3b-8021-f67c12025d69.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a9b5b82c-7bc8-4d3b-8021-f67c12025d69.png)'
- en: The same module can also be used to remove the user, either by changing their
    state to absent or disabling them by changing their shell to `/bin/nologin`. For
    some clustered environments, some users shared by the systems must have the same
    UID to be able to run tasks via the jobs handlers. The `uid` option can allow
    a particular user to have a selection of specific UIDs when creating hosts, although
    this is not recommended.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的模块也可以用来删除用户，可以通过将他们的状态更改为absent或者通过将他们的shell更改为`/bin/nologin`来禁用他们。对于一些集群环境，系统共享的一些用户必须具有相同的UID才能通过作业处理程序运行任务。`uid`选项可以允许特定用户在创建主机时具有一组特定的UID，尽管这并不推荐。
- en: 'The modules have many special return values, which can be collected for pipelining
    with other modules. The most useful modules are the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 模块有许多特殊的返回值，可以与其他模块进行流水线处理。最有用的模块如下：
- en: '`home`: Shows the home directory for the user'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`home`：显示用户的主目录'
- en: '`ssh_public_key`: Allows the key print to be put into a file for multiple purposes'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ssh_public_key`：允许将密钥打印到文件中以供多种用途使用'
- en: '`uid`: Shows the UID of the newly created user'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`uid`：显示新创建用户的UID'
- en: The group management module
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组管理模块
- en: 'The group module has the same input types as the user module, but it affects
    the host groups. It is a basic module used to create, modify, and delete groups.
    It requires three basic commands for group management to be available: `groupdadd`,
    `groupdell`, and `groupmod`.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 组模块具有与用户模块相同的输入类型，但影响主机组。这是一个基本模块，用于创建、修改和删除组。它需要三个基本命令来管理组：`groupdadd`、`groupdell`和`groupmod`。
- en: 'It is very straightforward to use. A playbook script should look as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用非常简单。playbook脚本应该如下所示：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The hostname module
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主机名模块
- en: This is another simple module that does the simple job of changing a hostname.
    To make this module more exciting, we will use some of the playbook features with
    it. This module takes one input, the new hostname, and changes the hostname of
    the remote host. We can use the playbook predefined variable, `{{ inventory_hostname
    }}`. This variable calls the hostname for the Ansible inventory and uses it with
    the playbook.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个简单的模块，它的工作是更改主机名。为了使这个模块更加有趣，我们将使用一些playbook功能。此模块需要一个输入，即新的主机名，并更改远程主机的主机名。我们可以使用playbook预定义变量`{{
    inventory_hostname }}`。此变量调用Ansible清单的主机名，并将其与playbook一起使用。
- en: 'First, we need to change the inventory file to look as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要更改清单文件如下所示：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, we use the following playbook:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用以下的playbook：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After executing the playbook, you can simply test it out using an ad hoc Ansible
    command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 执行playbook后，您可以使用adhoc Ansible命令进行简单测试：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The result should look as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应该如下所示：
- en: '![](assets/bd46debc-d9c1-446f-9208-63c539a7d49e.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/bd46debc-d9c1-446f-9208-63c539a7d49e.png)'
- en: The sysctl control module
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: sysctl控制模块
- en: This is a module to manage the `sysctl` attributes. As this module can change
    some of the kernel behaviours, let's make sure we keep it safe. We are going to
    do a configuration to make the Linux server act as a gateway. We will not be covering
    "IPtables" rules in depth in this section. We are going to use a generic sample
    configuration and try to apply it via the `sysctl` module.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个管理`sysctl`属性的模块。由于这个模块可以改变一些内核行为，让我们确保它安全。我们将进行一个配置，使Linux服务器充当网关。在本节中，我们不会深入讨论“IPtables”规则。我们将使用一个通用的示例配置，并尝试通过`sysctl`模块应用它。
- en: 'The playbook to run the module should contain the following:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 运行该模块的playbook应包含以下内容：
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: A reload option is needed when the task is required to run `sysctl -p` after
    the change has been made. This task, with the right firewall rules set, will enable
    this host to route a packet from one network interface to the other.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要在更改后运行`sysctl -p`时，需要一个重新加载选项。通过设置正确的防火墙规则，这个任务将使主机能够从一个网络接口路由数据包到另一个网络接口。
- en: The service management module
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务管理模块
- en: 'This enables Linux system service management: starting, stopping, reloading,
    restarting, and enabling its system boot start. As an example, we will make sure
    that all hosts have `ntp` (that is, **network time service**) running and enabled:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得Linux系统服务管理：启动、停止、重新加载、重新启动，并启用其系统引导启动。例如，我们将确保所有主机都运行并启用`ntp`（即**网络时间服务**）：
- en: '[PRE16]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The systemd module
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemd模块
- en: 'For more advanced service management, we can use `systemd` as an alternative
    to service. The `systemd` module should be able to manage services on all Linux
    operating systems because it has the advantage of having a status special return
    value containing a lot of useful service data. An example playbook of how to use
    it is shown here:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更高级的服务管理，我们可以使用`systemd`作为服务的替代方案。`systemd`模块应该能够在所有Linux操作系统上管理服务，因为它具有包含许多有用服务数据的状态特殊返回值的优势。这里展示了一个使用它的示例playbook：
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The playbook output should look as follows:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: playbook输出应如下所示：
- en: '![](assets/0d96f8ad-ebf0-4a6b-91fb-0f21b9af94c5.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0d96f8ad-ebf0-4a6b-91fb-0f21b9af94c5.png)'
- en: The kernel blacklist management module
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内核黑名单管理模块
- en: 'This module allows you to manage the kernel blacklist of modules and drivers,
    which are the drivers and libraries to be excluded from the kernel devices driver
    initialization on the system startup. For our sample playbook, we will perform
    one of the most common blacklisting actions when using Nvidia GPUs—blacklisting
    the `nouveau` driver:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块允许您管理内核模块和驱动程序的黑名单，这些驱动程序和库将在系统启动时从内核设备驱动程序初始化中排除。对于我们的示例playbook，当使用Nvidia
    GPU时，我们将执行最常见的黑名单操作之一——黑名单`nouveau`驱动程序：
- en: '[PRE18]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The cron job editing module
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: cron job编辑模块
- en: 'The `cron` module is a similar tool to the `at` command, but it provides you
    with more timing options for the execution of the task as the `cron` module allows
    you to manage both `cron.d` and `crontab`. This module allows the creation and
    deletion of crontab entries and the creation of environmental variables. As for
    the playbook example, we will create `cron job` that makes sure that the shared
    folder contents have the correct permissions:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`cron`模块类似于`at`命令，但它为任务的执行提供了更多的时间选项，因为`cron`模块允许您管理`cron.d`和`crontab`。该模块允许创建和删除crontab条目以及创建环境变量。至于playbook示例，我们将创建一个`cron
    job`，确保共享文件夹内容具有正确的权限：'
- en: '[PRE19]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This module can also be handy when working with an environmental variable,
    such as `PATH` or `HOME`, for a crontab entry:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 当处理环境变量（如`PATH`或`HOME`）时，这个模块也很方便，用于crontab条目：
- en: '[PRE20]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The SSH authorized keys management module
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSH授权密钥管理模块
- en: 'This module manages an SSH authorized key of a specific user account in a Linux
    host. Using a playbook, we will set up a new authorized key:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块管理Linux主机中特定用户帐户的SSH授权密钥。使用playbook，我们将设置一个新的授权密钥：
- en: '[PRE21]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This module does support many special return values. They can be used like the
    others to collect key data about the hosts.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块支持许多特殊的返回值。它们可以像其他返回值一样用于收集有关主机的关键数据。
- en: The Git usage module
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Git使用模块
- en: 'This module helps to deploy a tool or configuration files from a Git repository.
    This module requires the `git` tool to be installed on the remote host to work
    properly. As a playbook, we will clone the latest version of Ansible that is available
    on GitHub:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块帮助从Git存储库部署工具或配置文件。该模块要求远程主机上安装了`git`工具才能正常工作。作为playbook，我们将克隆GitHub上可用的最新版本的Ansible：
- en: '[PRE22]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The execution of this playbook should look as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 执行该playbook应如下所示：
- en: '![](assets/131e42ad-6ef4-42ba-9852-9ab73b796ee7.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/131e42ad-6ef4-42ba-9852-9ab73b796ee7.png)'
- en: The `git` module does support some special return values that help you to monitor
    the status of the project.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`git`模块支持一些特殊的返回值，帮助您监视项目的状态。'
- en: The SELinux control module
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SELinux控制模块
- en: On the Red Hat environment, SELinux can be a pain to manage on one machine,
    let alone on a series of hosts. This Ansible module helps its user with the configuration
    of the SELinux mode and policy.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在Red Hat环境中，管理SELinux甚至在一台机器上都可能是一件麻烦事，更不用说在一系列主机上了。这个Ansible模块帮助用户配置SELinux模式和策略。
- en: This module, along with some others, may require a reboot after performing the
    task. Ansible will always let the user know if this is the case. Some advanced
    modules may have an integrated option that initiates a reboot automatically if
    the host needs it.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块以及其他一些模块在执行任务后可能需要重新启动。Ansible将始终让用户知道是否需要重新启动。一些高级模块可能具有集成选项，如果主机需要重新启动，它将自动启动重新启动。
- en: 'As a quick playbook sample, we will ask Ansible to make SELinux permissive:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个快速的playbook示例，我们将要求Ansible使SELinux处于宽松模式：
- en: '[PRE23]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This module requires the `libselinux-python` library to be installed on the
    remote hosts to work properly. This module also has its own special return values
    that can be used as input for handlers or other related modules.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块需要在远程主机上安装`libselinux-python`库才能正常工作。该模块还具有自己的特殊返回值，可用作处理程序或其他相关模块的输入。
- en: Linux commands modules
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux命令模块
- en: In this section, we are going to address the tasks that have particularly complicated
    Linux commands, or where we don't want to search for a module, or where you want
    to use your own technique. Ansible offers a list of command execution modules
    to help you send a command to the remote hosts. The way you want to manage your
    environment is up to you; Ansible is just a tool to make your work more efficient.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将解决特别复杂的Linux命令或者不想搜索模块的任务，或者想使用自己的技术的情况。Ansible提供了一系列命令执行模块，帮助您向远程主机发送命令。您想要管理环境的方式取决于您；Ansible只是一个工具，可以使您的工作更加高效。
- en: Running the raw command module
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行原始命令模块
- en: Compared to the other command modules, this module is the simplest in command
    line delivery. It basically sends the command as it is via SSH on remote hosts
    with no headers or options. It does not support pipelining or handlers, but it
    works when sending PowerShell commands to a Windows host that is configured to
    be managed by Ansible.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他命令模块相比，这个模块在命令行交付方面是最简单的。它基本上通过SSH将命令原样发送到远程主机，没有标题或选项。它不支持管道或处理程序，但在将PowerShell命令发送到配置为由Ansible管理的Windows主机时可以使用。
- en: Fact gathering should be disabled when using the `raw` module to bootstrap Python
    onto the machine. In playbook syntax, the `become` option, to chose which user
    is going to run the task, does not work with the `raw` module, so we may need
    to add `sudo` in front of our commands when they require root permission.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`raw`模块引导Python到机器上时，应禁用事实收集。在playbook语法中，`become`选项，选择哪个用户将运行任务，与`raw`模块不兼容，因此当命令需要root权限时，我们可能需要在命令前添加`sudo`。
- en: 'A simple playbook to use this module might be as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此模块的简单playbook可能如下所示：
- en: '[PRE24]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The command execution module
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命令执行模块
- en: 'This module has the same function as the raw command module, but it is more
    optimized. It allows for multiple options and it has the capacity to use its return
    values for other tasks. As an example of a playbook, we will run a command and
    then collect its output for later use:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块具有与原始命令模块相同的功能，但更为优化。它允许多个选项，并且可以使用其返回值进行其他任务。作为playbook的示例，我们将运行一个命令，然后收集其输出以供以后使用：
- en: '[PRE25]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The output of the playbook will look as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: playbook的输出如下：
- en: '![](assets/0061df25-2ae2-40b5-bb4a-c8524e955fb2.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0061df25-2ae2-40b5-bb4a-c8524e955fb2.png)'
- en: This module lacks the capacity to understand special environment variables,
    such as `$PATH`, Linux pipelining, and the redirection special characters. If
    this is necessary for your particular use case, use the next module on the list,
    `shell`.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块缺乏理解特殊环境变量（如`$PATH`）、Linux管道和重定向特殊字符的能力。如果这对于您的特定用例是必要的，请使用列表中的下一个模块`shell`。
- en: The shell command module
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: shell命令模块
- en: 'This module is one of the handiest command modules. It not only allows you
    to run a command, it also runs shell scripts and allows you to specify the location
    for the working directory and the bash with which you want to execute the command
    line. By default, this module runs all its remote commands on the `/bin/sh` shell.
    The following playbook provides a good example:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块是最方便的命令模块之一。它不仅允许您运行命令，还可以运行shell脚本，并允许您指定工作目录和要执行命令行的bash的位置。默认情况下，该模块在`/bin/sh`
    shell上运行所有远程命令。以下playbook提供了一个很好的例子：
- en: '[PRE26]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Shell also has several return values that are very useful.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Shell还有一些非常有用的返回值。
- en: The script execution module
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 脚本执行模块
- en: This is another module to run a shell script on remote nodes. At first, however,
    it transfers the script that is located on the Ansible master to the remote hosts
    before executing them. The module runs the script on the shell environment of
    the remote host, just as if it were run by a local user on the host.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个在远程节点上运行shell脚本的模块。然而，它首先将位于Ansible主机上的脚本传输到远程主机，然后再执行它们。该模块在远程主机的shell环境中运行脚本，就好像是由主机上的本地用户运行的一样。
- en: 'This module provides support for running other types of script, such as Python,
    Perl, or Ruby. Take a look at the following example playbook, which shows how
    to use it:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块支持运行其他类型的脚本，例如Python、Perl或Ruby。看一下以下示例playbook，展示如何使用它：
- en: '[PRE27]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This module acts like the raw command module. It is also supported on Windows
    remote hosts as it is.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块的功能类似于原始命令模块。它也支持Windows远程主机。
- en: The expect script module
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: expect脚本模块
- en: 'If you are familiar with expect scripting, this is a module that is similar,
    but even simpler and on an even bigger scale. It is a way of dealing with interactive
    commands, such as password changing and SSH questions. An example of a playbook
    for changing a user password is as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您熟悉expect脚本编写，这是一个类似的模块，但更简单，规模更大。这是一种处理交互式命令的方式，例如更改密码和SSH问题。更改用户密码的playbook示例如下：
- en: '[PRE28]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This module requires `pexpect` and `python` to be installed on the remote host.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块需要在远程主机上安装`pexpect`和`python`。
- en: Linux package modules
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux软件包模块
- en: 'In this section, we will show two types of package managers: for operating
    systems and for programming languages.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将展示两种类型的软件包管理器：用于操作系统和编程语言。
- en: Apt package manager module
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apt软件包管理器模块
- en: 'This module manages packages for the Debian family, including Debian, Ubuntu,
    LinuxMint, KaliLinux, and so on. It requires you to have `aptitude`, `python-apt`,
    and `python3-apt` installed on the remote host to work. It has multiple options
    and functionalities to personalize package installation, removal, upgrade, and
    index update. The following playbook only shows some of its features:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块管理Debian家族的软件包，包括Debian、Ubuntu、LinuxMint、KaliLinux等。它要求您在远程主机上安装`aptitude`、`python-apt`和`python3-apt`才能正常工作。它具有多个选项和功能，可个性化软件包的安装、删除、升级和索引更新。以下playbook仅显示了其中一些功能：
- en: '[PRE29]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This module has some extra complementary modules to help with extra repositories
    and the keys used for trusted certificates. It also has some special return values.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块有一些额外的辅助模块，用于帮助额外的存储库和用于受信任证书的密钥。它还具有一些特殊的返回值。
- en: DNF package manager module
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DNF软件包管理器模块
- en: 'This module controls the new package manager for the Red Hat family, including
    Red Hat, Fedora, CentOS, and Scientific Linux. It helps to install, upgrade, remove,
    and search for packages in the local index. The following playbook shows how it
    can be used:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块控制Red Hat家族的新软件包管理器，包括Red Hat、Fedora、CentOS和Scientific Linux。它帮助在本地索引中安装、升级、删除和搜索软件包。以下playbook显示了如何使用它：
- en: '[PRE30]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This module requires you to have `python`, `python-dnf`, and `dnf` itself installed
    on the machine to work properly.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块要求您在机器上安装`python`、`python-dnf`和`dnf`本身才能正常工作。
- en: Yum package manager module
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Yum软件包管理器模块
- en: 'Yum is the original Red Hat package manager that is still in use today. It
    also has its own module that manages it. Just like `dnf`, it helps with managing
    packages and group packages. The following playbook shows how to enable a repository
    and then install a tool from it, using this module:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Yum是原始的Red Hat软件包管理器，今天仍在使用。它还有自己的模块来管理它。与`dnf`一样，它有助于管理软件包和软件包组。以下playbook显示了如何启用存储库，然后使用此模块从中安装工具：
- en: '[PRE31]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Homebrew package manager
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Homebrew软件包管理器
- en: 'Homebrew is the most famous open source package manager for macOS X. This module
    is made to help manage Homebrew packages remotely. A simple playbook can be used
    to remove a package on macOS X:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Homebrew是macOS X最著名的开源软件包管理器。该模块是为了帮助远程管理Homebrew软件包而制作的。可以使用一个简单的playbook在macOS
    X上删除软件包：
- en: '[PRE32]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: PyPI Python package manager module
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyPI Python软件包管理器模块
- en: 'This is our first language package manager and probably the most famous. It
    manages Python packages and libraries. It has a variety of options that accommodate
    various different requirements that are related to Python libraries. To run this
    module we need to make sure that PyPI is installed on the remote hosts. The following
    example playbook will show some of them:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的第一个语言软件包管理器，可能是最著名的。它管理Python软件包和库。它具有各种选项，以满足与Python库相关的各种不同要求。要运行此模块，我们需要确保PyPI已安装在远程主机上。以下示例playbook将显示其中一些：
- en: '[PRE33]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Cpanm Perl package manager module
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cpanm Perl软件包管理器模块
- en: 'Just like the `pip` module, this module manages the Perl package manager, **Comprehensive
    Perl Archive Network** (**CPAN**). It is used in the same way; you can either
    install a library or  package from the default repository or from an archive file
    located on the web or locally. To run this module, we need to make sure that `cpanminus` is
    installed on the remote hosts. This is shown in the example playbook, as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 与`pip`模块一样，此模块管理Perl软件包管理器**Comprehensive Perl Archive Network**（**CPAN**）。它的使用方式相同；您可以从默认存储库或Web或本地存档文件安装库或软件包。要运行此模块，我们需要确保远程主机上安装了`cpanminus`。如下示例playbook中所示：
- en: '[PRE34]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Linux file modules
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux文件模块
- en: Linux file management modules have some shared features that can be found in
    more than one module. You can use one module to perform a task that is composed
    of three different actions. In this section, we will be only talking about the
    major modules with a brief look at those that can perform similar functions as
    well.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Linux文件管理模块具有一些共享特性，可以在多个模块中找到。您可以使用一个模块执行由三个不同操作组成的任务。在本节中，我们将只讨论主要模块，并简要介绍可以执行类似功能的模块。
- en: File and folder management modules
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件和文件夹管理模块
- en: The file module is basically the tool to manage everything to do with files
    and folder organization in terms of creation, removal, symlinks creation, permissions,
    and ownership.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 文件模块基本上是管理一切与文件和文件夹组织有关的工具，包括创建、删除、符号链接创建、权限和所有权。
- en: 'We have linked the file module to the **access control list** (**ACL**) module,
    which is a module that only works on permission and ownership of files and folders
    on the Linux environment, to show that some tasks can be combined. This is shown
    in the following playbook:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已将文件模块链接到**访问控制列表**（**ACL**）模块，这是一个仅在Linux环境中的文件和文件夹的权限和所有权上工作的模块，以显示一些任务可以合并。这在以下playbook中显示：
- en: '[PRE35]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Data distribution modules (copy, unarchive, and get_url)
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据分发模块（copy、unarchive和get_url）
- en: 'The `copy` module is used to transfer files from the Ansible master to the
    remote hosts or locally from within the remote host. This is followed by `unarchive`,
    which is an archive extractor that then transfers the files to the selected hosts.
    The `get_url` module basically downloads a file from a web location as an HTTP,
    HTTPS, or FTP file. The following playbook shows how each module can be used to
    achieve a goal:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`copy`模块用于将文件从Ansible主机传输到远程主机或在远程主机内部进行本地传输。然后是`unarchive`，这是一个存档提取器，然后将文件传输到选定的主机。`get_url`模块基本上是从Web位置下载文件作为HTTP、HTTPS或FTP文件。以下playbook显示了如何使用每个模块来实现目标：'
- en: '[PRE36]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The `copy` module supports having a backup option, which is very useful when
    copying configuration files; if there is an error, a user can always revert to
    the original. However, unarchive requires `gtar` and `unzip` to be installed on
    the master machine. All of these modules have special return values that show
    information about the status of the tasks.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`copy`模块支持备份选项，这在复制配置文件时非常有用；如果出现错误，用户可以随时恢复到原始状态。但是，unarchive需要在主机上安装`gtar`和`unzip`。所有这些模块都具有特殊的返回值，显示有关任务状态的信息。'
- en: Data collection module (fetch)
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据收集模块（fetch）
- en: 'This is the module that reverses the previous module function. This module
    helps gather files from the remote hosts and stores them in the Ansible master
    machine. It can be handy when collecting apps and service logs, user configurations,
    or system related files. As an example, we will try to collect some files from
    each host and organize them in the master Ansible host:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个颠倒了之前模块功能的模块。此模块有助于从远程主机收集文件并将它们存储在Ansible主机中。在收集应用程序和服务日志、用户配置或系统相关文件时非常方便。例如，我们将尝试从每个主机收集一些文件，并将它们组织在主Ansible主机中：
- en: '[PRE37]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: This module is also supported when managing remote Windows hosts. It has a checksum
    validation process that can be deactivated for faster transfer at your own risk.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在管理远程Windows主机时，此模块也受支持。它具有可以在您自己的风险下停用以加快传输速度的校验和验证过程。
- en: File editing modules (lineinfile, replace, and blockinfile)
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件编辑模块（lineinfile、replace和blockinfile）
- en: 'These are the only three modules that you need to perform the great configuration
    file management skills that are had by tools, such as `awk` or `sed`. The `lineinfile` module
    looks for a specific line in a file and replaces it with a predefined regular
    expression. The `replace` module replaces all instances of a specific pattern
    within a file, and `blockinfile` inserts, modifies, or deletes one or several
    lines of text located between two marker lines in a file. We have merged these
    three modules together because they have similar basic functionalities, but each
    one is specialized with regard to how it does things. The following playbook example
    will show each of these modules used to deliver a specific task:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是您需要执行由工具（如`awk`或`sed`）具有的出色配置文件管理技能的唯一三个模块。`lineinfile`模块查找文件中的特定行并用预定义的正则表达式替换它。`replace`模块替换文件中特定模式的所有实例，`blockinfile`在文件中两个标记行之间插入、修改或删除一个或多个文本行。我们将这三个模块合并在一起，因为它们具有类似的基本功能，但每个模块在执行任务时都有专门的功能。以下playbook示例将展示如何使用每个模块来执行特定任务：
- en: '[PRE38]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Linux networking modules
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux网络模块
- en: In this section, we are going to discover some of the Linux system network management
    modules.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将发现一些Linux系统网络管理模块。
- en: Network interfaces management module
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络接口管理模块
- en: 'This module is a way to manage the `/etc/network/interfaces` file in Linux
    hosts. Basically, it allows you to create, modify, and remove a network interface
    configuration. This configuration is specific to each identified network interface;
    it does not change non-specified ones. The following playbook shows you how to
    perform a change for a specific interface:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块是管理Linux主机中的`/etc/network/interfaces`文件的一种方式。基本上，它允许您创建、修改和删除网络接口配置。此配置特定于每个标识的网络接口；它不会更改未指定的接口。以下playbook向您展示如何对特定接口进行更改：
- en: '[PRE39]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: If this task gets its return values registered, the user can easily identify
    all the information about the after-change configuration of the interface.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此任务返回其返回值，用户可以轻松地识别有关接口更改配置的所有信息。
- en: 'For more advanced network management, check out the `nmcli` module. It can
    manage various connection and device types: Ethernet, teams, bonds, and VLANs.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更高级的网络管理，请查看`nmcli`模块。它可以管理各种连接和设备类型：以太网、团队、债券和VLAN。
- en: Firewall UFW management module
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防火墙UFW管理模块
- en: 'This is an Ansible management module for the Linux firewall UFW. It basically
    manages ports, protocols, and IPS firewall permissions. An example playbook to
    enable a port on a specific protocol can be written as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用于Linux防火墙UFW的Ansible管理模块。它基本上管理端口、协议和IPS防火墙权限。一个启用特定协议端口的示例playbook可以编写如下：
- en: '[PRE40]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This module requires `ufw` , as the command-line tool, to be installed on the
    remote hosts.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块需要在远程主机上安装`ufw`命令行工具。
- en: HAProxy control module
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HAProxy控制模块
- en: 'This is a module that manages HAProxy servers, commanding them to enable, disable,
    drain, and set weights for backend servers using socket commands. An example of
    a command to disable some HAProxy servers is as follows:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个管理HAProxy服务器的模块，通过套接字命令命令它们启用、禁用、排空和设置后端服务器的权重。禁用一些HAProxy服务器的命令示例如下：
- en: '[PRE41]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Wake-on-LAN trigger module
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 唤醒LAN触发模块
- en: 'This is a module that turns on hosts that are currently turned off. This feature
    requires Ansible to have already collected facts about the hosts and to be storing
    information about their MAC addresses. The following is a playbook code to show
    how this module can be used:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个打开当前关闭的主机的模块。此功能要求Ansible已经收集了有关主机的事实并存储了它们的MAC地址信息。以下是一个展示如何使用此模块的playbook代码：
- en: '[PRE42]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Linux storage modules
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux存储模块
- en: Ansible does offer some Linux-specific storage devices and volume management.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible确实提供了一些特定于Linux的存储设备和卷管理。
- en: File system management module
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统管理模块
- en: 'This module is most handy when dealing with a virtualized infrastructure, but
    it can also be used with a bare metal setup. A disk must already exist in a remote
    host before that host can manage it. In a virtual environment, Ansible or other
    management tools allow you to automatically add disks to the host and then manage
    them using this module. The following is an example of a  playbook for formatting
    a disk using this module:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块在处理虚拟化基础设施时非常方便，但也可以用于裸金属设置。在远程主机上必须已经存在一个磁盘，然后才能使用此模块进行管理。在虚拟环境中，Ansible或其他管理工具允许您自动将磁盘添加到主机，然后使用此模块进行管理。以下是使用此模块格式化磁盘的playbook示例：
- en: '[PRE43]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Check out the `lvg` and `lvol` modules for LVM volume and group management.
    LVM can simplify disk management when using a virtualized environment, especially
    when dealing with systems that require the shrinking and expansion of disk space.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`lvg`和`lvol`模块，用于LVM卷和组管理。在使用虚拟化环境时，LVM可以简化磁盘管理，特别是处理需要收缩和扩展磁盘空间的系统。
- en: Device mounting module
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设备挂载模块
- en: 'This can be a complimentary module to the file system. It is also very useful
    for managing volume mounting on a specific host system. This module manages `/etc/fstab`:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以作为文件系统的补充模块。它对于管理特定主机系统上的卷挂载也非常有用。这个模块管理`/etc/fstab`：
- en: '[PRE44]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: This module can also handle mounting network drives. This may require you to
    install extra tools such as NFS and SMB client.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块还可以处理挂载网络驱动器。这可能需要您安装额外的工具，如NFS和SMB客户端。
- en: Disk partitioning module
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 磁盘分区模块
- en: 'This a module that controls the parted tools that help with device partitioning,
    collect their information, or save them as return values. The following example
    playbook shows how to remove a partition:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个控制分区工具的模块，用于帮助设备分区、收集它们的信息或将它们保存为返回值。以下示例playbook显示了如何删除一个分区：
- en: '[PRE45]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: GlusterFS control module
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GlusterFS控制模块
- en: 'This is an Ansible module used to manage GlusterFS volumes across a cluster
    of hosts. It enables the user to add, delete, start, stop, and tune volumes on
    demand. The following example playbook shows how to create a new volume:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个Ansible模块，用于管理跨主机集群的GlusterFS卷。它使用户能够根据需要添加、删除、启动、停止和调整卷。以下示例playbook显示了如何创建一个新卷：
- en: '[PRE46]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Ansible Windows modules
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Windows模块
- en: Moving on from the Linux modules, let's now explore the modules that are used
    by Ansible to administrate Windows desktops and servers. Make sure to have already
    followed the preparation steps to ensure that the Windows hosts are ready to be
    controlled by Ansible.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 从Linux模块转移到现在探索的模块，这些模块是Ansible用来管理Windows桌面和服务器的。确保已经按照准备步骤确保Windows主机已准备好被Ansible控制。
- en: Windows System Modules
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows系统模块
- en: Let's start by introducing the modules that control the Windows system and allow
    their users to manage its different aspects.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从控制Windows系统并允许用户管理其不同方面的模块开始。
- en: Windows user and group management module
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows用户和组管理模块
- en: 'These two modules are used to manage the users and groups of Windows hosts''
    local machines. The following playbook example shows how to add each mode to Windows
    hosts:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个模块用于管理Windows主机本地机器的用户和组。以下playbook示例显示了如何将每个模式添加到Windows主机：
- en: '[PRE47]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Windows register editing module
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows注册表编辑模块
- en: 'Ansible offers remote management to the Windows hosts registry using the `win_regedit`
    module. This allows you to create, edit, and remove registry keys and their values.
    The following playbook shows how to disable Windows auto-update via the registry:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible通过`win_regedit`模块提供对Windows主机注册表的远程管理。这允许您创建、编辑和删除注册表键及其值。以下playbook显示了如何通过注册表禁用Windows自动更新：
- en: '[PRE48]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Windows service management module
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows服务管理模块
- en: 'This module allows Ansible users to manage and query Windows hosts services.
    The following Ansible playbook shows how we can disable Windows update services
    (not recommended, but handy to know):'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块允许Ansible用户管理和查询Windows主机服务。以下是一个Ansible playbook，展示了如何禁用Windows更新服务（不建议，但很方便知道）：
- en: '[PRE49]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: This module has return values that give information about the service status.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块有返回值，提供有关服务状态的信息。
- en: Windows updates and feature management modules (win_updates, win_hotfix, and
    win_feature)
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows更新和功能管理模块（win_updates、win_hotfix和win_feature）
- en: 'Ansible manages Windows updates, hotfixes, and features using three complementary
    modules: `win_updates`, `win_hotfix` and `win_feature`. These modules use system
    default services and tools by commanding them to apply a set of tasks configured
    on a playbook. The following example playbook has three examples on how to use
    each of the modules to install or enable Microsoft tools, fixes, or features:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible使用三个互补模块`win_updates`、`win_hotfix`和`win_feature`来管理Windows更新、热修复和功能。这些模块使用系统默认服务和工具，通过命令它们在playbook上应用一组任务。以下示例playbook有三个示例，演示了如何使用每个模块来安装或启用Microsoft工具、修复或功能：
- en: '[PRE50]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Special return values get generated by the execution of these modules. These
    are key features to automate the maintenance of Windows hosts.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模块的执行会生成特殊的返回值。这些是自动化维护Windows主机的关键特性。
- en: These three modules need to be run with the credentials of a user who is part
    of a domain or local administrator group.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个模块需要以域或本地管理员组的用户凭据运行。
- en: Windows Wake-on-LAN trigger module
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows Wake-on-LAN触发模块
- en: 'Just like the Linux host''s Wake-on-LAN module, this module will start to shut
    down Windows hosts using their MAC addresses. An example Playbook is as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Linux主机的Wake-on-LAN模块一样，这个模块将使用它们的MAC地址来关闭Windows主机。一个示例Playbook如下：
- en: '[PRE51]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: This module will send a Wake-on-LAN magic packet to the specific MAC addressed.
    Only the hosts who are configured to accept the packet will respond. A BIOS or
    OS configuration to enable Wake-on-LAN is required.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块将向特定MAC地址发送Wake-on-LAN魔术数据包。只有配置为接受数据包的主机才会响应。需要BIOS或操作系统配置来启用Wake-on-LAN。
- en: Windows firewall management module
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows防火墙管理模块
- en: 'This module interacts with the Windows hosts'' local firewall to configure
    its rules. This is shown by the following playbook, which enables the VNC protocol:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块与Windows主机的本地防火墙交互，以配置其规则。以下playbook显示了如何启用VNC协议：
- en: '[PRE52]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: This module also needs to be executed by a local or domain administrator.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块也需要由本地或域管理员执行。
- en: Windows package modules
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows软件包模块
- en: Windows hosts application management can get complicated, compared to Linux
    and all the package managers that unify application installation in a few simple
    commands. Ansible uses its modules to bypass those challenges.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 与Linux和统一应用程序安装的所有软件包管理器相比，Windows主机应用程序管理可能会变得复杂。Ansible使用其模块来规避这些挑战。
- en: Chocolatey control module
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chocolatey控制模块
- en: 'Chocolatey is a third-party package manager for Windows systems. It allows
    its users to install, remove, and update a huge number of Windows applications
    using standard commands. Ansible provides a module that makes sure that Chocolatey
    is installed on the system, then starts using it to install the selected tools
    from its packages gallery ([https://chocolatey.org/packages](https://chocolatey.org/packages)).
    The following is a sample playbook that shows a few multiple usages of the `win_chocolatey`
    module:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: Chocolatey是Windows系统的第三方软件包管理器。它允许用户使用标准命令安装、删除和更新大量的Windows应用程序。Ansible提供了一个模块，确保Chocolatey已安装在系统上，然后开始使用它从其软件包库（[https://chocolatey.org/packages](https://chocolatey.org/packages)）安装所选工具。以下是一个展示`win_chocolatey`模块多种用法的示例playbook：
- en: '[PRE53]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Windows package manager
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows软件包管理器
- en: 'This is an Ansible module that is used to install and remove packages that
    are MSI or EXE files. It allows you to use a different source for the package,
    either on the local machine, on a network shared drive, or on the web. The following
    example playbook shows you how to install Atom:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用于安装和删除MSI或EXE文件的软件包的Ansible模块。它允许您使用不同的来源安装软件包，可以是本地计算机、网络共享驱动器或网络。以下示例playbook显示了如何安装Atom：
- en: '[PRE54]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: This module replaces old, unstable modules such as `win_msi`.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块替换了旧的、不稳定的模块，如`win_msi`。
- en: Windows command modules
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows命令模块
- en: Just like Linux, when there is a need to type your own command and there is
    no module that can simplify the task, a command module can make it easier. Ansible
    offers the following modules that allow you to send specific commands to remote
    Windows hosts.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Linux一样，当需要输入自己的命令并且没有模块可以简化任务时，命令模块可以使任务更加简单。Ansible提供了以下模块，允许您向远程Windows主机发送特定命令。
- en: Windows command modules (win_shell and win_command)
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows命令模块（win_shell和win_command）
- en: 'These two Ansible modules are the best way to send any PowerShell or bash commands
    to a Windows hosts. The `win_shell` module is more used for running scripts and
    long or multiline commands, while the command is more for running regular commands
    that may require extra parameters. The following playbook shows an example code:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个Ansible模块是向Windows主机发送任何PowerShell或bash命令的最佳方式。`win_shell`模块更适用于运行脚本和长或多行命令，而`command`更适用于运行可能需要额外参数的常规命令。以下playbook显示了一个示例代码：
- en: '[PRE55]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Windows task scheduling module
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows任务调度模块
- en: 'Windows hosts can be time-managed by scheduling future tasks using this module.
    It is a way to create, edit, and delete Windows-scheduled tasks. The following
    is an example of task scheduling on a playbook:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: Windows主机可以通过调度未来任务来进行时间管理。这是一种创建、编辑和删除Windows计划任务的方法。以下是playbook上的任务调度示例：
- en: '[PRE56]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Windows file modules
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows文件模块
- en: Managing Windows hosts' files and folders is as simple as on a Linux system
    when using Ansible. It offers a set of modules that take care of all management
    needs.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ansible管理Windows主机的文件和文件夹与在Linux系统上一样简单。它提供了一组模块，满足所有管理需求。
- en: Windows file and folder management module
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows文件和文件夹管理模块
- en: 'This is a module to create, update, and remove files and folders on remote
    Windows hosts. This sample playbook shows how to manage a file and folder on a
    Windows system:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个在远程Windows主机上创建、更新和删除文件和文件夹的模块。这个示例playbook展示了如何管理Windows系统上的文件和文件夹：
- en: '[PRE57]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: This module does not change file permissions. To do this, you need to use the
    `win_share` module.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块不会更改文件权限。要做到这一点，您需要使用`win_share`模块。
- en: Windows data sharing module
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows数据共享模块
- en: 'This is a complementary module to `win_file`. This module sets modifies and
    removes shared permissions on Windows files and folders. This is a playbook showing
    a sample configuration for a specific folder on remote Windows hosts:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`win_file`的补充模块。该模块设置、修改和删除Windows文件和文件夹的共享权限。这是一个展示远程Windows主机上特定文件夹的示例配置的playbook：
- en: '[PRE58]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: This module is only supported on Windows 8 and Windows 2012 onward.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块仅支持Windows 8和Windows 2012及更高版本。
- en: Windows file editing module
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows文件编辑模块
- en: 'This is the Windows version of the Ansible module, `lineinfile`. It basically
    does the same job of changing a specific line if a file is based on a regular
    expression, but it is specifically for Windows hosts. The following is an example
    playbook:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Ansible模块`lineinfile`的Windows版本。它基本上执行相同的任务，根据正则表达式更改文件的特定行，但它专门用于Windows主机。以下是一个示例playbook：
- en: '[PRE59]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Windows data sending modules (win_copy, win_robocopy, and win_get_url)
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows数据发送模块（win_copy、win_robocopy和win_get_url）
- en: These are the modules that are responsible for transferring files to Windows
    remote hosts. Each has its own way to get the files to their destination. The `win_copy` module
    will copy the file either from the local machine or the remote host to a specific
    location in the remote hosts. The `win_robocopy` module works like `rsync` to
    synchronize the contents of two folders within the remote host. It can be very
    handy as a backup solution. The `win_get_url` module gets a URL as input to download
    the files into the specified location.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模块负责将文件传输到Windows远程主机。每个模块都有自己的方法将文件传输到目的地。`win_copy`模块将文件从本地计算机或远程主机复制到远程主机的特定位置。`win_robocopy`模块类似于`rsync`，用于同步远程主机内两个文件夹的内容。它可以作为备份解决方案非常方便。`win_get_url`模块将URL作为输入，将文件下载到指定位置。
- en: 'The following playbook shows some example cases:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 以下playbook显示了一些示例案例：
- en: '[PRE60]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Ansible network modules
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible网络模块
- en: Network device management has never been easier than with Ansible. Having a
    playbook, a unified language for all modules makes the management of proprietary
    network devices very simple and does not require you to learn vendor-specific
    tools and coding languages. Network administration is now part of the automated
    configuration management strategy.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ansible管理网络设备从未如此简单。拥有一个playbook，所有模块的统一语言使得专有网络设备的管理非常简单，不需要您学习特定供应商的工具和编程语言。网络管理现在是自动化配置管理策略的一部分。
- en: 'This is a list of network proprietary devices currently supported by Ansible:
    Arista, Avi Networks, Cisco, Citrix NetScaler, Cumulus, Dell EMC, F5, Huawei,
    Infoblox, Juniper, Nokia, Mellanox, Lenovo, Palo Alto Networks, and Pluribus.
    We will not be able to cover all the modules that control these—this would probably
    require a book of its own!'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 这是目前由Ansible支持的网络专有设备列表：Arista、Avi Networks、Cisco、Citrix NetScaler、Cumulus、Dell
    EMC、F5、华为、Infoblox、Juniper、Nokia、Mellanox、Lenovo、Palo Alto Networks和Pluribus。我们将无法涵盖所有控制这些设备的模块，这可能需要一本专门的书！
- en: Being agentless, Ansible uses SSH and HTTPS to communicate with devices.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 作为无代理，Ansible使用SSH和HTTPS与设备通信。
- en: 'For this section, we will only cover the Cisco standard devices. We need to
    create a special inventory for them:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一部分，我们只涵盖了Cisco标准设备。我们需要为它们创建一个特殊的清单：
- en: '[PRE61]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: There are other ways to hide clear text passwords from YAML files; we will take
    a look at them, in the coming chapters on Ansible Vault.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他方法可以隐藏YAML文件中的明文密码；我们将在接下来的章节中看看它们，关于Ansible Vault。
- en: Network data transfer modules (net_get and network_put)
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络数据传输模块（net_get和network_put）
- en: 'These two modules allow for an easier transfer of configuration files between
    the control host and multiple network devices. They can be handy for backup or
    centralized configuration. These modules rely on the functionality of the `scp`
    command to carry out the transfer. An example is shown in the following playbook:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个模块允许在控制主机和多个网络设备之间更轻松地传输配置文件。它们可以用于备份或集中配置。这些模块依赖于`scp`命令的功能来进行传输。以下playbook中有一个示例：
- en: '[PRE62]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Cisco IOS command module
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cisco IOS命令模块
- en: 'This module helps its users to send commands to a Cisco device running IOS,
    either a router, a switch, an access-point, or firewall. This module also has
    the option of making the task wait for a condition before returning with a timeout.
    The following is an example of a playbook showing command execution on a Cisco
    device:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块帮助用户向运行IOS的Cisco设备发送命令，可以是路由器、交换机、接入点或防火墙。这个模块还有一个选项，可以在返回超时之前等待条件。以下是一个在Cisco设备上执行命令的playbook示例：
- en: '[PRE63]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Cisco ISO system configuration module
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cisco ISO系统配置模块
- en: 'This module allows its user to modify the IOS running configuration of a Cisco
    device. The following example playbook will show how we can alter some configurations
    of the Cisco switch:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块允许用户修改Cisco设备的IOS运行配置。以下示例playbook将展示我们如何修改Cisco交换机的一些配置：
- en: '[PRE64]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Cisco IOS interface management module
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cisco IOS接口管理模块
- en: 'This module manages the interface configuration of the Cisco network switches.
    In the following simple playbook, we will configure an interface and enable it:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块管理Cisco网络交换机的接口配置。在以下简单的playbook中，我们将配置一个接口并启用它：
- en: '[PRE65]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Cisco IOS static route control module
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cisco IOS静态路由控制模块
- en: 'As its name states, this module manages static route configuration on a Cisco
    network device. We will set a static route switch in the following example playbook:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名称所示，这个模块管理Cisco网络设备上的静态路由配置。我们将在以下示例playbook中设置一个静态路由开关：
- en: '[PRE66]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Cisco IOS VLAN management module
  id: totrans-309
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cisco IOS VLAN管理模块
- en: 'This module allows the configuration of VLANs on a Cisco switch. This sample
    playbook shows how to add some network interfaces to a VLAN:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块允许在Cisco交换机上配置VLAN。这个示例playbook展示了如何将一些网络接口添加到一个VLAN中：
- en: '[PRE67]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Ansible cloud modules
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible云模块
- en: Ansible has made managing virtualized and on cloud infrastructures very easy.
    It has over 300 modules that run several APIs designed to cover a variety of cloud
    providers, such as Amazon Web Services, Google Cloud Platform, OpenStack, Microsoft
    Azure, Digital Ocean, and Linode. These modules manage multiple aspects of the
    environment, including the hosts' operating systems, network connectivity, compute
    resources, and hosts provisioning.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible已经使得管理虚拟化和云基础设施变得非常容易。它有超过300个模块，运行多个API，旨在涵盖各种云提供商，如亚马逊网络服务、谷歌云平台、OpenStack、微软Azure、Digital
    Ocean和Linode。这些模块管理环境的多个方面，包括主机的操作系统、网络连接、计算资源和主机配置。
- en: When using Ansible modules with a cloud or virtual environment, it is recommended
    that you use a dynamic inventory for better management.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Ansible模块与云或虚拟环境时，建议使用动态清单进行更好的管理。
- en: VMware modules
  id: totrans-315
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VMware模块
- en: Ansible offers a list of modules to enable VMware infrastructure automated management.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible提供了一系列模块来实现VMware基础设施的自动化管理。
- en: 'We need to have the `pyVmomi` Python SDK installed:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要安装`pyVmomi` Python SDK：
- en: '[PRE68]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: These modules are built to manage the VMware ESX, ESXi, and vCenter server.
    In this section, we will describe some of the most useful modules that are involved
    in managing the VMware infrastructure.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模块用于管理VMware ESX、ESXi和vCenter服务器。在本节中，我们将描述一些参与管理VMware基础设施的最有用的模块。
- en: 'An inventory file is required to host some of the data centre information:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一个清单文件来托管一些数据中心信息：
- en: '[PRE69]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: VMware guest management modules (vmware_guest and vsphere_guest)
  id: totrans-322
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VMware虚拟机管理模块（vmware_guest和vsphere_guest）
- en: 'This module allows the creation, modification, and removal of virtual machines.
    They also allow status and resource control of the specified virtual machines,
    including power status modification and they complement customization. The following
    playbook example shows how to create a virtual machine based on a template:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块允许创建、修改和删除虚拟机。它们还允许对指定的虚拟机进行状态和资源控制，包括电源状态修改和自定义。以下playbook示例展示了如何基于模板创建虚拟机：
- en: '[PRE70]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: The `vsphere_guest` module does the same job as `vmware_guest`, but it is a
    legacy module that is less stable and does not support as many features as `vmare_guest`.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`vsphere_guest`模块与`vmware_guest`执行相同的任务，但它是一个不太稳定的传统模块，不支持`vmare_guest`那么多的功能。'
- en: VMware guest snapshot management module
  id: totrans-326
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VMware虚拟机快照管理模块
- en: 'This Ansible module enables automatic snapshot management of virtual machines.
    The following playbook example shows how to take a snapshot on virtual machines:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Ansible模块实现了虚拟机的自动快照管理。以下playbook示例展示了如何在虚拟机上拍摄快照：
- en: '[PRE71]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Case sensitivity is very important when dealing with VMware modules, especially
    when dealing with virtual machine snapshots. When calling the snapshot later,
    ensure that its name is exactly the same.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理VMware模块时，大小写敏感度非常重要，特别是在处理虚拟机快照时。在稍后调用快照时，请确保其名称完全相同。
- en: VMware virtual machine shell execution module
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VMware虚拟机shell执行模块
- en: 'The following module allows its user to run commands on the virtual machine''s
    operating system via the use of the VMware tools:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 以下模块允许用户通过使用VMware工具在虚拟机操作系统上运行命令：
- en: '[PRE72]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: VMware host power state control module
  id: totrans-333
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VMware主机电源状态控制模块
- en: 'This module manages the physical equipment of the VMware infrastructure. The
    ESX/ESXi hosts are where the computer resources are stored. This module manages
    the power status of the hosts. It can very handy when scheduling a reboot after
    maintenance, an update, or a fix. The following example playbook shows how this
    module can be used:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块管理VMware基础设备。ESX/ESXi主机是计算资源存储的地方。该模块管理主机的电源状态。在维护、更新或修复后安排重启时，这可能非常方便。以下示例playbook显示了如何使用该模块：
- en: '[PRE73]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Docker modules
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker模块
- en: 'The recent versions of Ansible have introduced several modules dedicated to
    Docker container management. To be able to use the Docker''s Ansible modules,
    the management hosts should have the following Python packages installed:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 最近的Ansible版本引入了几个专门用于Docker容器管理的模块。要使用Docker的Ansible模块，管理主机应安装以下Python软件包：
- en: '[PRE74]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: It is best to use a dynamic inventory when working with Docker containers.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理Docker容器时，最好使用动态清单。
- en: Ansible has recently introduced a new feature to enable building containers
    without the use of Dockerfiles. The `ansible-container` module builds containers
    and orchestrates the deployment via playbooks.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible最近引入了一个新功能，可以在不使用Dockerfile的情况下构建容器。`ansible-container`模块构建容器并通过playbook进行部署。
- en: Docker container management module
  id: totrans-341
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker容器管理模块
- en: 'This module manages the life cycle of a Docker container running on either
    on a local machine or other hosts. The following playbook shows how this module
    works:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块管理在本地计算机或其他主机上运行的Docker容器的生命周期。以下playbook显示了该模块的工作原理：
- en: '[PRE75]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Docker image management module
  id: totrans-344
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker镜像管理模块
- en: 'This module is useful for container developers. It helps with building, loading,
    pulling, and pushing container images to a repository or archiving a container
    into a tar file. The following playbook example shows some possible tasks that
    can be carried out with this module:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块对容器开发者非常有用。它有助于构建、加载、拉取和推送容器镜像到仓库或将容器存档为tar文件。以下playbook示例显示了可以使用该模块执行的一些可能任务：
- en: '[PRE76]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Docker login module
  id: totrans-347
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker登录模块
- en: 'This module allows the user to log in to DockerHub or a private repository.
    The following playbook shows how this can be done:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块允许用户登录到DockerHub或私有仓库。以下playbook显示了如何实现这一点：
- en: '[PRE77]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Amazon AWS modules
  id: totrans-350
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon AWS模块
- en: Ansible allows automation of your AWS cloud environment, enabling dynamic provisioning
    of instances and smart scalability via the huge number of modules dedicated to
    AWS services. In this section, we will only focus on Amazon AWS EC2\. There is
    a large library of modules to manage other AWS services and services for other
    cloud providers that can be found on the Ansible module index.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible允许自动化您的AWS云环境，通过大量专门用于AWS服务的模块实现实例的动态配置和智能扩展。在本节中，我们将只关注Amazon AWS EC2。有大量的模块库来管理其他AWS服务和其他云提供商的服务，可以在Ansible模块索引中找到。
- en: 'As a prerequisite, it is highly recommended that you have a dynamic inventory.
    It is also recommended that you store the access and secret keys in `vars_file`
    and possibly protect them using Ansible Vault:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 作为先决条件，强烈建议您拥有动态清单。还建议您将访问和秘密密钥存储在`vars_file`中，并可能使用Ansible Vault进行保护：
- en: '[PRE78]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'You are also required to install the `boto` Python library on the controlling
    machine to interact with AWS Services:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要在控制机上安装`boto` Python库，以与AWS服务进行交互：
- en: '[PRE79]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: AWS EC2 instance management module
  id: totrans-356
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS EC2实例管理模块
- en: 'This module allows the creation and termination of AWS EC2 instances. The following
    playbook shows how to create a new AWS EC2 instance:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块允许创建和终止AWS EC2实例。以下playbook显示了如何创建新的AWS EC2实例：
- en: '[PRE80]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: AWS WC2 AMI management module
  id: totrans-359
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS WC2 AMI管理模块
- en: 'This module helps register new EC2 AMI images to be used for instance creation later.
    It also allows you to deregister old images when they are no longer needed. The
    following example playbook shows how to register an EC2 AMI image:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块有助于注册新的EC2 AMI镜像，以便稍后用于实例创建。它还允许在不再需要时注销旧镜像。以下示例playbook显示了如何注册EC2 AMI镜像：
- en: '[PRE81]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: AWS EC2 key management module
  id: totrans-362
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS EC2密钥管理模块
- en: 'This module helps with the management of an EC2 key pair. It helps to create
    and remove keys. The following example playbook shows you how to create a key:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块有助于管理EC2密钥对。它有助于创建和删除密钥。以下示例playbook向您展示了如何创建密钥：
- en: '[PRE82]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Summary
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have tried to show you as many useful modules as possible,
    with examples of daily activities that can be carried out and personal comments
    based on our experience of using them. Further modules and more advanced features
    can be found in the official Ansible documentation. Here, we have only discussed
    modules that are officially supported and maintained; it would be impossible to
    cover all of the modules that are available in the community, on the Ansible Galaxy
    platform, or in the entire range of GitHub projects. If you can think of a task
    that I have not discussed in this chapter, rest assured that somebody out there
    will have a bug or a fix to make it happen. Ansible has one of the biggest communities
    in the open source world; feel free to use it.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们尽量展示了尽可能多的有用模块，并提供了日常活动的示例，以及基于我们的经验的个人评论。更多模块和更高级的功能可以在官方Ansible文档中找到。在这里，我们只讨论了官方支持和维护的模块；不可能涵盖社区中所有可用的模块，Ansible
    Galaxy平台上的模块，或者GitHub项目的全部范围。如果你能想到本章未讨论的任务，可以放心，肯定会有人在其他地方有解决方法。Ansible拥有开源世界中最大的社区之一；请随意使用。
- en: In the next chapter, we are going to use some of these tools to carry out some
    real automation. We will be mixing and matching various modules in playbooks to
    perform a complex playbook for the usual daily tasks.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用一些工具来进行一些真正的自动化。我们将混合和匹配各种模块在playbooks中执行一个复杂的playbook来执行通常的日常任务。
- en: References
  id: totrans-368
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'Ansible official documentation website: [https://docs.ansible.com/](https://docs.ansible.com/)'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible官方文档网站：[https://docs.ansible.com/](https://docs.ansible.com/)
- en: 'Ansible Module Index: [https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html](https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html)'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible模块索引：[https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html](https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html)
- en: 'Chocolatey Packages Gallery: [https://chocolatey.org/packages](https://chocolatey.org/packages)'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chocolatey软件包库：[https://chocolatey.org/packages](https://chocolatey.org/packages)
