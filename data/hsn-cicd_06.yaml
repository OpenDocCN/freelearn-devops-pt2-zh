- en: Writing Freestyle Scripts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写自由样式脚本
- en: This chapter will go into detail about adding a new build item, configuring
    a build job, adding environment variables globally, and project-level environment
    variables. You will also learn about debugging issues with a freestyle job.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将详细介绍如何添加新的构建项目、配置构建作业、全局添加环境变量和项目级环境变量。您还将学习如何调试自由样式作业的问题。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Creating a simple freestyle script
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个简单的自由样式脚本
- en: Configuring a freestyle job
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置自由样式作业
- en: Adding environment variables
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加环境变量
- en: Debugging issues with a freestyle job
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试自由样式作业的问题
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter is about using Jenkins to create simple freestyle scripts. You
    should have a basic understanding of Unix, Bash, and what is meant by an environment
    variable.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何使用Jenkins创建简单的自由样式脚本。您应该对Unix、Bash有基本的了解，以及环境变量的含义。
- en: Creating a simple freestyle script
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个简单的自由样式脚本
- en: We created a simple freestyle script in Jenkins in the chapter, but we will
    quickly review what you need to do to set up a freestyle script project.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中在Jenkins中创建了一个简单的自由样式脚本，但我们将快速回顾一下设置自由样式脚本项目所需做的事情。
- en: Jenkins dashboard navigation
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins仪表板导航
- en: If you followed along with the instructions in [Chapter 5](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml),
    *Installation and Basics of Jenkins*, then you should have the Jenkins service
    installed and/or running on your local computer. If Jenkins is not running locally,
    then please revisit [Chapter 5](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml), *Installation
    and Basics of Jenkins*, and read the section corresponding to your operating system.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您按照[第5章](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml)中的说明进行操作，*Jenkins的安装和基础知识*，那么您应该已经在本地计算机上安装和/或运行了Jenkins服务。如果Jenkins没有在本地运行，请重新查看[第5章](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml)，*Jenkins的安装和基础知识*，并阅读与您的操作系统相对应的部分。
- en: Jenkins login screen
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins登录屏幕
- en: If Jenkins is running locally, you should see a login screen.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Jenkins正在本地运行，您应该会看到一个登录屏幕。
- en: Enter your user and password information and then click the log in button.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 输入您的用户名和密码信息，然后点击登录按钮。
- en: Jenkins dashboard
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins仪表板
- en: 'Once you are logged in, you should be routed to the Jenkins dashboard, which
    looks like this:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您登录，您应该会被路由到Jenkins仪表板，它看起来像这样：
- en: '![](assets/d01789b2-b91e-4fa1-8f53-7f07e1123e87.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d01789b2-b91e-4fa1-8f53-7f07e1123e87.png)'
- en: Adding a new build job item
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加新的构建作业项目
- en: 'In the Jenkins dashboard, there is a link called New Item; make sure to click
    it to add a new item:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jenkins仪表板中，有一个名为“新项目”的链接；确保单击它以添加新项目：
- en: '![](assets/2e066cf9-446e-4b20-a03a-a298669e3410.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2e066cf9-446e-4b20-a03a-a298669e3410.png)'
- en: 'Once you click New Item, you will be taken to the following screen:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 单击新项目后，您将被带到以下屏幕：
- en: '![](assets/b4a50795-605c-4cae-b758-02734bc68596.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b4a50795-605c-4cae-b758-02734bc68596.png)'
- en: Now, depending on the number of Jenkins plugins that you have installed, you
    will see more or less on this screen in terms of build items. We will enter a
    name of `Freestyle Scripting` for the purposes of this chapter, but you can choose
    any name you like for the build job. Once you enter a name, make sure to click
    the Freestyle Project button and then click the OK button.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，根据您安装的Jenkins插件数量，您将在构建项目方面在屏幕上看到更多或更少的内容。我们将在本章中为目的输入一个名为“Freestyle Scripting”的名称，但您可以为构建作业选择任何名称。输入名称后，请确保点击Freestyle
    Project按钮，然后点击OK按钮。
- en: Build configuration options
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建配置选项
- en: 'Whenever you create a new item under Jenkins, you will see the following screen:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 每当在Jenkins下创建新项目时，您将看到以下屏幕：
- en: '![](assets/a2f4534d-7207-4e24-a114-eff8174c3927.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a2f4534d-7207-4e24-a114-eff8174c3927.png)'
- en: Depending on what Jenkins plugins you have already installed, you may see more
    tabs or items in the build configuration.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您已安装的Jenkins插件，您可能会看到更多选项卡或构建配置中的项目。
- en: Configuring a freestyle job
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置自由样式作业
- en: Notice that the build job configuration has multiple tabs. You can either scroll
    to each section in the tab or you can click the tabs themselves. Each tab has
    different functionality that you can configure in your Jenkins build job.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，构建作业配置有多个选项卡。您可以滚动到选项卡中的每个部分，也可以单击选项卡本身。每个选项卡都有不同的功能，您可以在Jenkins构建作业中配置它们。
- en: General
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一般
- en: 'The General tab has basic information about the Jenkins build you are creating,
    such as a description and other general build information. Look at the General
    tab information:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一般选项卡包含有关您正在创建的Jenkins构建的基本信息，例如描述和其他一般构建信息。查看一般选项卡信息：
- en: '![](assets/e2de752a-f193-40ff-981d-e4758a2e8bbd.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e2de752a-f193-40ff-981d-e4758a2e8bbd.png)'
- en: 'It is generally up to you which options you want to toggle on; you can click
    on the question mark symbol to get information. Let''s look at what is meant by
    the Quiet period option:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通常由您决定要切换哪些选项；您可以单击问号符号获取信息。让我们看看“安静期”选项的含义：
- en: '![](assets/0764dd7c-e55f-466d-b082-648cafa25b5c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0764dd7c-e55f-466d-b082-648cafa25b5c.png)'
- en: To remove the detailed information, just click the question mark symbol again.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除详细信息，只需再次单击问号符号。
- en: Source Code Management
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 源代码管理
- en: 'The Source Code Management tab is where you specify the type of version control
    management system you are using, such as Git, SVN, and Mercurial. For the purposes
    of a build job, we will click on the Git radio button and specify a GitHub repository
    URL:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码管理选项卡是您指定正在使用的版本控制管理系统类型的地方，例如Git、SVN和Mercurial。为了构建作业的目的，我们将点击Git单选按钮并指定GitHub存储库URL：
- en: '![](assets/2e14bc81-ca53-4f55-91b7-ddfa9714f223.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2e14bc81-ca53-4f55-91b7-ddfa9714f223.png)'
- en: 'Notice that the Branch Specifier defaults to the */master branch, but you can
    specify any number of branches that you want by just clicking the Add Branch button.
    We will not add credentials as we are working locally here, but if you click the
    Add button that has a key, you will see the following overlay screen:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，分支指定器默认为*/master分支，但您可以通过点击“添加分支”按钮指定任意数量的分支。我们不会添加凭据，因为我们在本地工作，但如果您点击带有钥匙的“添加”按钮，您将看到以下叠加屏幕：
- en: '![](assets/5e208eb8-c45a-4304-ba57-837b1af50556.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5e208eb8-c45a-4304-ba57-837b1af50556.png)'
- en: 'You can choose different types of credentials by clicking the Kind input box:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过点击“种类”输入框选择不同类型的凭据：
- en: '![](assets/aea28c7f-039e-4379-b6b1-f8d4482230a9.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/aea28c7f-039e-4379-b6b1-f8d4482230a9.png)'
- en: 'You can also click the Add button in the bottom section of the Source Code
    Management tab and you will see the additional behaviors you can add:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以点击源代码管理选项卡底部的“添加”按钮，您将看到可以添加的其他行为：
- en: '![](assets/142e613e-7046-4c68-b8b3-2a80121a63f5.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/142e613e-7046-4c68-b8b3-2a80121a63f5.png)'
- en: There are a number of advanced configuration options, such as sub-modules, that
    you can configure.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多高级配置选项，比如子模块，您可以进行配置。
- en: Build Triggers
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建触发器
- en: 'The Build Triggers tab configuration section deals with configuring when your
    build job triggers. This could include configuring a GitHub hook trigger that
    fires whenever you push a commit to the master branch in GitHub, triggering a
    build whenever another project is built, when you build periodically, or when
    you poll your version control system for changes:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 构建触发器选项卡配置部分涉及配置构建作业触发的时间。这可能包括配置GitHub挂钩触发器，每当您将提交推送到GitHub的主分支时触发，触发另一个项目构建时触发，定期构建时触发，或者轮询您的版本控制系统以获取更改时触发：
- en: '![](assets/0c619cab-fd36-4c48-bc67-57eefd0c7e31.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0c619cab-fd36-4c48-bc67-57eefd0c7e31.png)'
- en: We checked the Poll SCM option, which is GitHub in our case, and utilizes a
    cron syntax that runs the Jenkins job at a particular time and date. In our case,
    we will trigger the polling job to run every 15 minutes. You can read more about
    the syntax by clicking the question mark symbol.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们勾选了“轮询SCM”选项，这在我们的情况下是GitHub，并且使用了一个在特定时间和日期运行Jenkins作业的cron语法。在我们的情况下，我们将触发轮询作业每15分钟运行一次。您可以点击问号符号了解更多语法信息。
- en: Later on, we will discuss how to use GitHub and Bitbucket to trigger jobs in
    Jenkins whenever you push code up to your remote repository, which is better than
    polling for changes.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，我们将讨论如何使用GitHub和Bitbucket在您将代码推送到远程存储库时触发Jenkins作业，这比轮询更好。
- en: Build environment
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建环境
- en: 'This section will have more or less environment options to use depending on
    the Jenkins plugins that you have installed. In my case, I have Golang and Node.js
    plugins installed, but you could have any number of environments, such as Clojure
    and Ruby:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分将根据您安装的Jenkins插件的多少而有更多或更少的环境选项可供使用。在我的情况下，我安装了Golang和Node.js插件，但您可以安装任意数量的环境，比如Clojure和Ruby：
- en: '![](assets/e49c1291-3206-4ba7-bde1-dff1ae1d286e.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e49c1291-3206-4ba7-bde1-dff1ae1d286e.png)'
- en: Since we are building a Golang microlibrary, we checked the Set up Go programming
    language tools checkbox in this configuration section.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在构建一个Golang微库，我们在此配置部分中勾选了“设置Go编程语言工具”复选框。
- en: Build
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建
- en: 'The Build section is where you specify how you want to build your project:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 构建部分是您指定如何构建项目的地方：
- en: '![](assets/de610c38-51d3-4f1b-8e34-33961364e541.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/de610c38-51d3-4f1b-8e34-33961364e541.png)'
- en: 'If you click the Add build step button, you will see the following options:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击“添加构建步骤”按钮，您将看到以下选项：
- en: '![](assets/31cb6e4e-8da6-49a4-93a9-fc53b21e797c.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/31cb6e4e-8da6-49a4-93a9-fc53b21e797c.png)'
- en: We will click on the Execute shell option, which will give us a Unix shell scripting
    environment to utilize.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将点击“执行shell”选项，这将为我们提供一个Unix shell脚本环境来使用。
- en: 'Notice that we now have a text area available, where we can add Unix script
    commands:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，现在我们有一个文本区域可用，我们可以在其中添加Unix脚本命令：
- en: '![](assets/b2773726-4cad-42da-bc1e-6287db3b7e7e.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b2773726-4cad-42da-bc1e-6287db3b7e7e.png)'
- en: We will add the following commands to this shell script: `go test`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在此shell脚本中添加以下命令：`go test`。
- en: Post-build actions
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后置构建操作
- en: 'In this build section, you can specify any actions to run after a successful
    build, such as, running code coverage and generating a JUnit report:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在此构建部分，您可以指定成功构建后要运行的任何操作，比如运行代码覆盖和生成JUnit报告：
- en: '![](assets/66399cd2-7b56-4092-a980-1fb091eaebfa.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/66399cd2-7b56-4092-a980-1fb091eaebfa.png)'
- en: 'If you click the Add post-build action button, you will the following options:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击“添加后置构建操作”按钮，您将看到以下选项：
- en: '![](assets/abfa6954-e414-432a-abae-77fd93997723.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/abfa6954-e414-432a-abae-77fd93997723.png)'
- en: You will see more or fewer options depending on the specific Jenkins plugins
    that you have installed.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您安装的具体Jenkins插件，您将看到更多或更少的选项。
- en: 'Once you are satisfied with the build configuration, click either the Apply
    button, which will save your current configuration options, or click the Save
    button, which will both save your options and then navigate you to a newly configured
    build item:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您对构建配置满意，点击“应用”按钮，这将保存您当前的配置选项，或者点击“保存”按钮，这将保存您的选项并将您导航到一个新配置的构建项目：
- en: '![](assets/68ded46d-8be6-42d5-a3c7-e2f968f53676.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/68ded46d-8be6-42d5-a3c7-e2f968f53676.png)'
- en: The Post-build Actions section is valuable because you can call other services,
    such as reporting and gathering metrics on a successful build.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 后置构建操作部分非常有价值，因为您可以在成功构建时调用其他服务，比如报告和收集指标。
- en: Adding environment variables
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加环境变量
- en: You can add environment variables in Jenkins in a number of different ways.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以以多种不同的方式在Jenkins中添加环境变量。
- en: Global environment variable configuration
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局环境变量配置
- en: 'From the Jenkins dashboard, click the Manage Jenkins button:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 从Jenkins仪表板，点击“管理Jenkins”按钮：
- en: '![](assets/e4e21b4e-4018-4fb7-afa1-afba7cc8e569.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e4e21b4e-4018-4fb7-afa1-afba7cc8e569.png)'
- en: 'Once you click the Manage Jenkins button, you will need to click the Configure
    System button:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您点击“管理Jenkins”按钮，您将需要点击“配置系统”按钮：
- en: '![](assets/214d50f1-305f-4d3b-a843-e9ac04d1f612.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/214d50f1-305f-4d3b-a843-e9ac04d1f612.png)'
- en: 'You will then be navigated to the Configure System section and will then be
    able to add environment variables using the Global properties section:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您将被导航到“配置系统”部分，然后可以使用全局属性部分添加环境变量：
- en: '![](assets/a257dde3-28d5-4d86-95ea-6d3de0674bb4.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a257dde3-28d5-4d86-95ea-6d3de0674bb4.png)'
- en: Notice here that I added a Name, `SAMPLE_VALUE`, with the Value as `Hello Book
    Readers`. Now, this global property is available as an environment variable in
    the shell environment variable. You can add as many environment variables as you
    need in this section. Note that this global property will be available for every
    single job now.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我在这里添加了一个名称为`SAMPLE_VALUE`的值为`Hello Book Readers`的内容。现在，这个全局属性在shell环境变量中作为一个环境变量可用。您可以在这个部分添加尽可能多的环境变量。请注意，这个全局属性现在将对每个作业都可用。
- en: EnvInject Plugin
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EnvInject插件
- en: You can also choose a more granular level of setting environment variables for
    each particular build item.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以为每个特定的构建项选择更细粒度的环境变量设置。
- en: 'Install the EnvInject Plugin ([https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin](https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin))
    by performing the following steps. Click the Jenkins main dashboard link:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行以下步骤安装EnvInject插件（[https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin](https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin)）。点击Jenkins主仪表板链接：
- en: '![](assets/d06bac89-b4ca-4906-a939-c3556eabaf30.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d06bac89-b4ca-4906-a939-c3556eabaf30.png)'
- en: Make sure to click the Jenkins link, and you will be routed to the Jenkins dashboard.
    Then click the Manage Jenkins button, like you did to add the Global properties.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保点击Jenkins链接，您将被路由到Jenkins仪表板。然后点击“管理Jenkins”按钮，就像您添加全局属性时所做的那样。
- en: 'Next click the Manage Plugins button, which looks like this:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来点击“管理插件”按钮，它看起来像这样：
- en: '![](assets/5b56397e-b75c-4401-9011-02a3efe5ddb6.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5b56397e-b75c-4401-9011-02a3efe5ddb6.png)'
- en: 'You will now be taken to the following screen:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在将被带到以下屏幕：
- en: '![](assets/34d1b2e0-053b-4e90-80ec-7e438db5be54.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/34d1b2e0-053b-4e90-80ec-7e438db5be54.png)'
- en: Notice that we clicked the Available tab and then put `EnvInject` into the Filter
    box. Make sure to click the Jenkins plugin that you want and then click the Install
    without restart or Download now and install after restart button.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们点击了“可用”选项卡，然后将`EnvInject`放入筛选框中。确保点击您想要的Jenkins插件，然后点击“无需重启安装”或“立即下载并在重启后安装”按钮。
- en: 'Notice that we now have a couple of new build options in the Build Environment
    section in the build configuration area:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们现在在构建配置区的“构建环境”部分有了一些新的构建选项：
- en: '![](assets/ab994d5e-fed3-4d2e-b08f-afa9d9deecef.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ab994d5e-fed3-4d2e-b08f-afa9d9deecef.png)'
- en: 'If you click Inject environment variables to the build process, you can then
    add your new environment variable, like this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击“将环境变量注入到构建过程中”，您可以添加您的新环境变量，就像这样：
- en: '![](assets/9e83cc0f-cbef-451c-a180-ad4b6b0a68a1.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9e83cc0f-cbef-451c-a180-ad4b6b0a68a1.png)'
- en: Make sure to save your changes. One thing to note is that this environment variable
    is only for this particular build item; it is not a global property like we set
    before.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 确保保存您的更改。需要注意的一点是，这个环境变量只适用于这个特定的构建项；它不像我们之前设置的全局属性那样是一个全局属性。
- en: Debugging issues with a freestyle job
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试自由样式作业的问题
- en: Whenever you run a build in Jenkins for a build item, you can see all the details
    of the build by clicking on the specific build job that you want to see.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 每当您在Jenkins中为一个构建项运行构建时，您可以通过点击您想要查看的特定构建作业来查看构建的所有细节。
- en: Build Project View
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建项目视图
- en: 'Here is the Build History that you need to focus on:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您需要关注的构建历史：
- en: '![](assets/08850557-fb04-4693-b460-0dcb51c3921a.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/08850557-fb04-4693-b460-0dcb51c3921a.png)'
- en: 'Now if you click on an actual build, you will go to the following screen:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您点击一个实际的构建，您将进入以下屏幕：
- en: '![](assets/4a5bcbae-a636-4457-bb0a-158eee749e92.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4a5bcbae-a636-4457-bb0a-158eee749e92.png)'
- en: 'If you click the Console Output link, then you will see a detailed CI Build
    log that shows all the steps the CI server did. Remember that we wrote a freestyle
    shell script. I''m adding the contents of the shell script for you to see:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击“控制台输出”链接，您将看到一个详细的CI构建日志，显示CI服务器执行的所有步骤。请记住，我们编写了一个自由样式的shell脚本。我将添加shell脚本的内容供您查看：
- en: '[PRE0]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Notice here that I added the two different environment variables that we defined
    earlier and I'm simply sending them to the standard output.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我在这里添加了我们之前定义的两个不同的环境变量，并且我只是将它们发送到标准输出。
- en: 'Now if you look at the output of the build job, you will see the following
    output:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您查看构建作业的输出，您将看到以下输出：
- en: '![](assets/2ebc50fe-0e54-47d2-b269-96f6b42f3665.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2ebc50fe-0e54-47d2-b269-96f6b42f3665.png)'
- en: Notice here that Jenkins starts the job by running as the currently logged in
    user. Next, the EnvInject Plugin runs and injects any environment variables that
    we specified in our project. Then Jenkins fetches the latest changes from the
    GitHub repository. Then the EnvInject Plugin runs again and injects any necessary
    environment variables.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Jenkins通过当前登录的用户来启动作业。接下来，EnvInject插件运行并注入我们在项目中指定的任何环境变量。然后Jenkins从GitHub仓库获取最新的更改。然后EnvInject插件再次运行并注入任何必要的环境变量。
- en: The last operation is the actual execution of the shell script. One thing to
    notice in the preceding screenshot is that each command in the shell script is
    printed to standard output because execution tracing is enabled in Jenkins. Remember
    that execution tracing simply means that each command that you run in a shell
    script will be shown as well as the output of the command itself. For example,
    the ``echo "$ANOTHER_SAMPLE_NAME"`` command, which has the value ``echo "Hello
    Book Readers"``, is printed to standard output and then the message `Hello Book
    Readers` is printed. The last thing to note is the build that has the text **PASS** and
    the text finished with **SUCCESS**.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个操作是实际执行shell脚本。在前面的屏幕截图中要注意的一件事是，因为在Jenkins中启用了执行跟踪，所以shell脚本中的每个命令都会被打印到标准输出。请记住，执行跟踪只是意味着在shell脚本中运行的每个命令以及命令本身的输出都将显示出来。例如，``echo
    "$ANOTHER_SAMPLE_NAME"``命令的值为``echo "Hello Book Readers"``，将被打印到标准输出，然后打印出消息`Hello
    Book Readers`。最后要注意的是，构建显示了文本**PASS**，并以**SUCCESS**完成。
- en: Debugging issues with freestyle script
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试自由风格脚本的问题
- en: 'Notice how we logged out environment variables that had simple information.
    There will be times where values are not being set in a CI environment, as you
    would expect, and this is where logging values out to standard output can be very
    helpful. One good aspect of using the EnvInject Plugin is that it will mask passwords
    that you inject to a build job so that you don''t accidentally log secrets or
    confidential information:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意我们如何记录具有简单信息的环境变量。有时候值在CI环境中没有被设置，这是您所期望的，这就是将值记录到标准输出中非常有帮助的地方。使用EnvInject插件的一个好处是，它将掩盖您注入到构建作业中的密码，以便您不会意外记录机密或保密信息：
- en: '![](assets/b2b61403-1380-4b03-8be4-29db855864b8.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b2b61403-1380-4b03-8be4-29db855864b8.png)'
- en: Notice that in the preceding screenshot we have checked the inject passwords
    to the build as environment variables and given a name and password to the environment
    variable. If you accidentally do `echo $SecretName` in the build job, it will
    mask the value of  `$SecretName` so that you don't leak confidential information
    in the build.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在前面的屏幕截图中，我们已经检查了将密码注入到构建作业中作为环境变量，并为环境变量指定了名称和密码。如果您在构建作业中意外执行`echo $SecretName`，它将掩盖`$SecretName`的值，以便您不会在构建中泄露机密信息。
- en: Summary
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned more about the Jenkins dashboard. You learned about
    adding build job items and all the parts of configuring a freestyle build job,
    how to add environment variables into a Jenkins job, and how to debug issues in
    a freestyle job.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了更多关于Jenkins仪表板的知识。您学习了如何添加构建作业项以及配置自由风格构建作业的所有部分，如何将环境变量添加到Jenkins作业中，以及如何调试自由风格作业中的问题。
- en: The next chapter will cover how to build a Jenkins plugin and will specifically
    go over the build process, which involves writing Java code and using the Maven
    Build tool.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍如何构建Jenkins插件，并具体介绍构建过程，包括编写Java代码和使用Maven构建工具。
- en: Questions
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Why is clicking the question mark symbol in the build configuration useful?
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么在构建配置中点击问号符号很有用？
- en: What type of syntax do you write if you want to poll your version control system
    in the Build Trigger section?
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想在构建触发器部分轮询您的版本控制系统，您应该写什么类型的语法？
- en: Can you use more than one programming language in the build environment?
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构建环境中可以使用多种编程语言吗？
- en: What type of environment does the freestyle script operate in—is it a Unix environment?
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自由风格脚本操作在什么类型的环境中——是Unix环境吗？
- en: What is the difference between a global property and a project-level environment
    variable?
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 全局属性和项目级环境变量之间有什么区别？
- en: Why do you think Jenkins uses execution tracing for the console output?
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您认为Jenkins为什么在控制台输出中使用执行跟踪？
- en: What is the value of the post-build action section in the build configuration?
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构建配置的后构建操作部分的价值是什么？
- en: Further reading
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Please check out *Learning Continuous Integration with Jenkins - Second Edition* ([https://www.amazon.com/dp/1788479351](https://www.amazon.com/dp/1788479351)), from
    Packt Publishing.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看*使用Jenkins进行持续集成学习-第二版*（[https://www.amazon.com/dp/1788479351](https://www.amazon.com/dp/1788479351)），来自Packt
    Publishing。
