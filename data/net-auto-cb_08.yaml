- en: Deploying and Operating Azure Networking Resources with Ansible
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ansible部署和操作Azure网络资源
- en: In the previous chapter, we explored how to provision network resources on the
    AWS cloud and how to use Ansible as the orchestration engine to deploy those resources
    on AWS. In this chapter, we will look at another major cloud provider, Microsoft,
    and its Azure cloud offering.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们探讨了如何在AWS云上提供网络资源以及如何使用Ansible作为编排引擎在AWS上部署这些资源。在本章中，我们将看看另一个主要的云提供商，微软及其Azure云服务。
- en: 'Azure provides multiple networking services to facilitate the deployment of
    highly scalable cloud solutions on the Azure cloud. Ansible provides multiple
    modules to interact with multiple services within the Azure cloud and is an excellent
    tool to automate cloud deployments on the Azure cloud. We will explore the basic
    networking constructs available in Azure and outline how to use several modules
    in Ansible to build and validate the following basic network setup in the Azure
    cloud:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Azure在Azure云上提供多个网络服务，以便在Azure云上部署高度可扩展的云解决方案。Ansible提供多个模块，用于与Azure云中的多个服务进行交互，并且是在Azure云上自动化部署的优秀工具。我们将探讨Azure中可用的基本网络构造，并概述如何使用Ansible中的多个模块来构建和验证Azure云中以下基本网络设置：
- en: '![](assets/e85778f2-7cfa-405d-8b7d-caf44f81a271.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e85778f2-7cfa-405d-8b7d-caf44f81a271.png)'
- en: 'The main recipes covered in this chapter are as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主要配方如下：
- en: Installing the Azure SDK
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Azure SDK
- en: Building an Ansible inventory
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建Ansible清单
- en: Authenticating to your Azure account
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证您的Azure帐户
- en: Creating a resource group
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建资源组
- en: Creating virtual networks
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建虚拟网络
- en: Creating subnets
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建子网
- en: Building user-defined routes
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建用户定义的路由
- en: Deploying network security groups
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署网络安全组
- en: Deployment validation using Ansible
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ansible进行部署验证
- en: Decommissioning Azure resources using Ansible
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ansible停用Azure资源
- en: Technical requirements
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To be able to start working with Azure, you need to create an account. You can
    set up a free account at [https://Azure.microsoft.com/en-au/free/.](https://azure.microsoft.com/en-au/free/)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Azure，您需要创建一个帐户。您可以在[https://Azure.microsoft.com/en-au/free/.](https://azure.microsoft.com/en-au/free/)上设置一个免费帐户。
- en: 'The following link is to the GitHub code used in this chapter:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接是本章中使用的GitHub代码：
- en: '[https://github.com/PacktPublishing/Network-Automation-Cookbook/tree/master/ch8_azure](https://github.com/PacktPublishing/Network-Automation-Cookbook/tree/master/ch8_azure)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Network-Automation-Cookbook/tree/master/ch8_azure](https://github.com/PacktPublishing/Network-Automation-Cookbook/tree/master/ch8_azure)'
- en: 'The software releases that this chapter is based on are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本章基于的软件版本如下：
- en: An Ansible machine running CentOS 7
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行CentOS 7的Ansible机器
- en: Ansible 2.9
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible 2.9
- en: Python 3.6.8
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.6.8
- en: 'Check out the following video to see the Code in Action:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，了解代码的实际操作：
- en: '[https://bit.ly/3esy3fS](https://bit.ly/3esy3fS)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://bit.ly/3esy3fS](https://bit.ly/3esy3fS)'
- en: Installing the Azure SDK
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Azure SDK
- en: In this recipe, we will outline how to install the Python libraries required
    to start interacting with the Azure orchestration system using Ansible. This step
    is mandatory as these Python libraries must be installed on the Ansible control
    machine in order for all of the Ansible Azure modules to work.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将概述如何安装所需的Python库，以开始使用Ansible与Azure编排系统进行交互。这一步是强制性的，因为这些Python库必须安装在Ansible控制机器上，以便所有Ansible
    Azure模块正常工作。
- en: Getting ready
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have sudo access on the machine in order to install the Azure
    Python library. You also need to have Python installed with a Python PIP package,
    which we will use to install the Azure package.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在机器上拥有sudo访问权限，以安装Azure Python库。您还需要安装Python，并使用Python PIP软件包来安装Azure软件包。
- en: How to do it…
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤…
- en: 'Install the `boto3` package, as follows:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`boto3`软件包，如下所示：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a new folder, entitled `ch8_Azure`, to host all of the code for this
    chapter:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`ch8_Azure`的新文件夹，以托管本章的所有代码：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How it works…
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'The default installation of Ansible doesn''t include all of the Python modules
    needed to run the Ansible Azure modules. That is why our first step is to install
    the required Python libraries. We install all of these packages using the Python
    pip program. We can verify that all of the Azure modules were installed with the
    following code:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible的默认安装不包括运行Ansible Azure模块所需的所有Python模块。这就是为什么我们的第一步是安装所需的Python库。我们使用Python
    pip程序安装所有这些软件包。我们可以使用以下代码验证所有Azure模块是否已安装：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As previously outlined, multiple Python packages need to be installed to be
    able to begin interacting with the Azure API from Ansible. With this step complete,
    we are now ready to build our playbooks and infrastructure in Azure.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，需要安装多个Python软件包才能开始使用Ansible与Azure API进行交互。完成这一步后，我们现在已经准备好在Azure中构建我们的playbooks和基础设施了。
- en: See also…
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅…
- en: 'For more information about how to start interacting with the Azure cloud using
    Ansible, refer to the following link:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何开始使用Ansible与Azure云进行交互的更多信息，请参阅以下链接：
- en: '[https://docs.Ansible.com/Ansible/latest/scenario_guides/guide_Azure.html](https://docs.ansible.com/ansible/latest/scenario_guides/guide_azure.html)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.Ansible.com/Ansible/latest/scenario_guides/guide_Azure.html](https://docs.ansible.com/ansible/latest/scenario_guides/guide_azure.html)'
- en: Building an Ansible inventory
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建Ansible清单
- en: In this recipe, we will outline how to build an Ansible inventory to describe
    the network infrastructure setup that we will build across the Azure public cloud.
    This is a necessary step as we will define all of our virtual networks across
    all of the regions in which we will deploy our infrastructure.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将概述如何构建一个Ansible清单，以描述我们将在Azure公共云中构建的网络基础设施设置。这是一个必要的步骤，因为我们将定义我们将在其中部署基础设施的所有地区的所有虚拟网络。
- en: How to do it…
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤…
- en: 'Create the `hosts` file inside the `ch8_Azure` directory with the following
    data:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ch8_Azure`目录中创建`hosts`文件，并填入以下数据：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create the `Ansible.cfg` file with the following content:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建包含以下内容的`Ansible.cfg`文件：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create the `group_var` folder and the `eu.yml` and `us.yml` files with the
    following code:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`group_var`文件夹和`eu.yml`和`us.yml`文件，其中包含以下代码：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works…
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理…
- en: We created the host's Ansible inventory file and declared the different virtual
    networks that we will provide in the Azure cloud. We also created two groups that
    describe the location of each virtual network.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了主机的Ansible清单文件，并声明了我们将在Azure云中提供的不同虚拟网络。我们还创建了两个描述每个虚拟网络位置的组。
- en: 'In short, we created the following groups to define and group our virtual networks:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们创建了以下组来定义和分组我们的虚拟网络：
- en: '`az_net`: This groups all of our virtual networks across the Azure cloud.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`az_net`：这将对我们在Azure云中的所有虚拟网络进行分组。'
- en: '`eu`: This lists all of the virtual networks in the EU region (and will map
    to a specific region in the Azure cloud, as we will outline later).'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eu`：列出欧盟地区的所有虚拟网络（将映射到Azure云中的特定区域，我们稍后将概述）。'
- en: '`us`: This lists all of the virtual networks in the US region (and will map
    to a specific region in the Azure cloud, as we will outline later).'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`us`：列出美国地区的所有虚拟网络（将映射到Azure云中的特定区域，我们稍后将概述）。'
- en: We can use this regional grouping to specify the exact region where this virtual
    network will be used across the Azure cloud. We can declare the exact region in
    a variable called `region`, which can be defined in both the `eu.yml` and `us.yml`
    files under the `group_vars` directory.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用此区域分组来指定在Azure云中使用此虚拟网络的确切区域。我们可以在`eu.yml`和`us.yml`文件的`group_vars`目录下定义名为`region`的变量来声明确切的区域。
- en: We are going to use this variable in the subsequent recipes to deploy our resources
    in the respective Azure regions.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在随后的教程中使用此变量，以在相应的Azure区域部署我们的资源。
- en: Authenticating to your Azure account
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 身份验证到您的Azure帐户
- en: In this recipe, we will outline how to create the credentials required to programmatically
    authenticate to our Azure account from Ansible. We will also learn how to secure
    those credentials using Ansible Vault. This step is required in order to be able
    to run any Ansible modules in the following recipes.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将概述如何创建所需的凭据，以便从Ansible对我们的Azure帐户进行编程身份验证。我们还将学习如何使用Ansible Vault来保护这些凭据。为了能够在以下教程中运行任何Ansible模块，这一步是必需的。
- en: Getting ready
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible controller must have internet access and the Ansible inventory must
    be set up as outlined in the previous recipe. The user performing these steps
    must have administrative access to the Azure portal to be able to create the required
    resources that will enable programmatic interaction with the Azure APIs.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制器必须具有互联网访问权限，并且必须按照上一个教程中的说明设置Ansible清单。执行这些步骤的用户必须具有Azure门户的管理访问权限，以便能够创建所需的资源，从而实现与Azure
    API的程序交互。
- en: How to do it…
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Log in to the Azure portal with an account that has administrative rights:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有管理权限的帐户登录Azure门户：
- en: '[https://portal.Azure.com/](https://portal.azure.com/)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://portal.Azure.com/](https://portal.azure.com/)'
- en: 'On the home page, select Azure Active Directory:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主页上，选择Azure活动目录：
- en: '![](assets/c1badbd7-1ce5-467a-bd1b-6c4f7642adb8.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/c1badbd7-1ce5-467a-bd1b-6c4f7642adb8.png)
- en: 'From the left panel, select App registrations:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧面板中选择应用程序注册：
- en: '![](assets/c170b963-f66c-489a-8e60-00f2f6b24b8f.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/c170b963-f66c-489a-8e60-00f2f6b24b8f.png)
- en: 'Click the New Registration option and supply the following information to create
    a new application. The option highlighted in blue is the active option here:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“新注册”选项，并提供以下信息以创建新应用程序。蓝色突出显示的选项是此处的活动选项：
- en: '![](assets/ad335022-b818-4a36-9c61-d844339e2b85.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/ad335022-b818-4a36-9c61-d844339e2b85.png)
- en: 'Once you click on the register button, the new application will be created
    and its information displayed, as in the following screenshot (we need the client_id
    and tenant_id data):'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击注册按钮后，将创建新应用程序并显示其信息，如下截图所示（我们需要client_id和tenant_id数据）：
- en: '![](assets/41b1408c-e543-46ba-b97c-cf0698aa2ec9.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/41b1408c-e543-46ba-b97c-cf0698aa2ec9.png)
- en: 'Select Certificates & secrets in the left panel:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板中选择证书和密码：
- en: '![](assets/0691a69e-4921-4440-bd37-376fcdfb8454.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/0691a69e-4921-4440-bd37-376fcdfb8454.png)
- en: 'Click on New client secret:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“新客户端密码”：
- en: '![](assets/ee85938d-158c-4415-951b-32679a0f8a66.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/ee85938d-158c-4415-951b-32679a0f8a66.png)
- en: 'Specify a name for the password for this app and select its expiry date:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此应用程序指定密码名称，并选择其到期日期：
- en: '![](assets/92169a62-0318-447f-9714-2f9c332ba69d.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/92169a62-0318-447f-9714-2f9c332ba69d.png)
- en: 'Once created, keep a record of the secret string that is displayed (this is
    the only time that we will be able to see this password in plain text):'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建后，记下显示的秘密字符串（这是我们能够以纯文本形式看到此密码的唯一时间）：
- en: '![](assets/e2bc9436-b6fd-45b2-82b6-7faed34ee304.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/e2bc9436-b6fd-45b2-82b6-7faed34ee304.png)
- en: 'Go to All Services and select Subscriptions:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到所有服务并选择订阅：
- en: '![](assets/9ce45c61-e9c8-4e5f-ae29-d1883ee7c876.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/9ce45c61-e9c8-4e5f-ae29-d1883ee7c876.png)
- en: 'Click on Subscription name (Free Trial, in my case):'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击订阅名称（在我这里是免费试用）：
- en: '![](assets/01a9ccb9-59c6-49b9-805d-59d1e41f1cc2.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/01a9ccb9-59c6-49b9-805d-59d1e41f1cc2.png)
- en: 'Record the Subscription ID string (as we need it for authentication), and then
    click on the Access control (IAM) tab on the left:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记录订阅ID字符串（因为我们需要它进行身份验证），然后在左侧单击访问控制（IAM）选项卡：
- en: '![](assets/36ec156d-31dd-413f-a403-08eb06435b04.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/36ec156d-31dd-413f-a403-08eb06435b04.png)
- en: 'Click on Add role assignment and assign the Contributor role to the Ansible
    app that we created:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“添加角色分配”，并将“参与者”角色分配给我们创建的Ansible应用程序：
- en: '![](assets/06ef5c6a-577d-42b5-b699-fe9efbc65ea4.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: ！[](assets/06ef5c6a-577d-42b5-b699-fe9efbc65ea4.png)
- en: 'On the Ansible control node, create a new file that will hold our Ansible Vault
    password:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Ansible控制节点上，创建一个新文件，用于保存我们的Ansible Vault密码：
- en: '[PRE6]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create a new file called `Azure_secret.yml` using Ansible Vault, as in the
    following code:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Ansible Vault创建一个名为`Azure_secret.yml`的新文件，如下所示：
- en: '[PRE7]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Populate the `Azure_secret.yml` file with the data that we got from the Azure
    portal for `client_id`, `tenant_id`, and `subscription_id`, and the secret we
    created for our app:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填充`Azure_secret.yml`文件，使用我们从Azure门户获取的`client_id`、`tenant_id`和`subscription_id`的数据，以及我们为应用程序创建的密钥：
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How it works…
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'To be able to have programmatic access to the Azure API (this is how Ansible
    communicates with the Azure cloud to provision resources), we need to create a
    construct known as a *service principal* in our Azure account. This service principal
    is similar to a user but only has API access to the Azure account. We can create
    this service principal and call it Ansible. We can then assign the contributor
    role to it in access management in order to be able to create resources in our
    account. To authenticate to the Azure API using this service principal, we need
    to supply the following four components:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够以编程方式访问Azure API（这是Ansible与Azure云通信以提供资源的方式），我们需要在Azure帐户中创建一个称为*服务主体*的构造。这个服务主体类似于用户，但只能访问Azure帐户的API。我们可以创建这个服务主体并将其称为Ansible。然后我们可以在访问管理中为其分配贡献者角色，以便能够在我们的帐户中创建资源。为了使用这个服务主体对Azure
    API进行身份验证，我们需要提供以下四个组件：
- en: '`Client_id`'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Client_id`'
- en: '`Tenant_id`'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Tenant_id`'
- en: '`Subscription_id`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Subscription_id`'
- en: '`Service principal password`'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务主体密码
- en: We can locate all of this information in the Azure portal using the steps outlined
    in this recipe. We can create a new file, called `Azure_secrets.yml`, which we
    will encrypt using Ansible Vault, and place all of the preceding variables in
    this file.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用本步骤中概述的步骤在Azure门户中找到所有这些信息。我们可以创建一个名为`Azure_secrets.yml`的新文件，使用Ansible
    Vault进行加密，并将所有前述变量放入该文件中。
- en: We will use these parameters in all the subsequent recipes to authenticate to
    our Azure account and create the required infrastructure.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在所有后续步骤中使用这些参数来对我们的Azure帐户进行身份验证并创建所需的基础设施。
- en: See also…
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅…
- en: 'For more information about how to create a new service principal, use the following
    URL:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何创建新服务主体的更多信息，请使用以下URL：
- en: '[https://docs.microsoft.com/en-au/Azure/active-directory/develop/howto-create-service-principal-portal](https://docs.microsoft.com/en-au/azure/active-directory/develop/howto-create-service-principal-portal)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-au/Azure/active-directory/develop/howto-create-service-principal-portal](https://docs.microsoft.com/en-au/azure/active-directory/develop/howto-create-service-principal-portal)'
- en: 'For more information about the Azure built-in roles that can be assigned to
    users/apps, use the following URL:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可以分配给用户/应用程序的Azure内置角色的更多信息，请使用以下URL：
- en: '[https://docs.microsoft.com/en-au/Azure/role-based-access-control/built-in-roles](https://docs.microsoft.com/en-au/azure/role-based-access-control/built-in-roles)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-au/Azure/role-based-access-control/built-in-roles](https://docs.microsoft.com/en-au/azure/role-based-access-control/built-in-roles)'
- en: Creating a resource group
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建资源组
- en: In this recipe, we will outline how to deploy resource groups in Azure. Resource
    groups are a part of the Azure Resource Manager deployment model, which is the
    preferred method for deploying resources in the Azure cloud. This is because it
    allows us to group similar resources (such as the VM, the VM NIC, and the VM IP
    address) that share the same life cycle in a single container, which is the resource
    group. We are going to deploy all of the related resources that we will provision
    using resource groups.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个步骤中，我们将概述如何在Azure中部署资源组。资源组是Azure资源管理器部署模型的一部分，这是在Azure云中部署资源的首选方法。这是因为它允许我们将相似的资源（如VM、VM
    NIC和VM IP地址）在一个单一容器中进行分组，这个容器就是资源组。我们将使用资源组来部署所有相关资源。
- en: Getting ready
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible control machine must be connected to the internet with reachability
    to the Azure public API endpoints. The Azure account should be configured as outlined
    in the previous recipes.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制机必须连接到互联网，并能够访问Azure公共API端点。Azure帐户应按照前面的步骤进行配置。
- en: How to do it…
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤…
- en: 'Update the `eu.yml` and `us.yml` files under `group_vars` with the following
    data to define the resource group''s name:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`group_vars`下的`eu.yml`和`us.yml`文件，使用以下数据定义资源组的名称：
- en: '[PRE9]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create a new `pb_build_Azure_net.yml` playbook with the following content:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`pb_build_Azure_net.yml`的新playbook，内容如下：
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works...
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'We declare the name of the resource group that we will deploy in each region
    in the YAML file that describes each region. We use the `rg_name` parameter to
    hold the name of the resource group. We use the `Azure_rm_resourcegroup` Ansible
    module to create the resource group on Azure. It takes the following parameters
    to authenticate to the Azure API and deploy the resource group:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在描述每个区域的YAML文件中声明我们将在每个区域部署的资源组的名称。我们使用`rg_name`参数来保存资源组的名称。我们使用`Azure_rm_resourcegroup`
    Ansible模块来在Azure上创建资源组。它需要以下参数来对Azure API进行身份验证并部署资源组：
- en: The `location` parameter, which describes the region into which we will deploy
    this resource group
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`location`参数，描述我们将部署此资源组的区域'
- en: The `tenant`, `secret`, `client_id`, and `subscription_id` parameters to authenticate
    to our Azure account
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tenant`、`secret`、`client_id`和`subscription_id`参数，用于对我们的Azure帐户进行身份验证'
- en: The `name` parameter, which is the name of our resource group
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`参数，即我们的资源组的名称'
- en: In our playbook, we read the `Azure_secrets.yml` file, using the `vars_files`
    parameter, in order to capture all the parameters stored in this file. We set
    the connection to `local` to instruct Ansible to run the playbook locally on the
    Ansible control machine and to not attempt to SSH to the hosts defined in our
    inventory. This is mandatory as all Azure modules need to run from the Ansible
    control machine to invoke the REST API calls to the Azure orchestration system.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的playbook中，我们使用`vars_files`参数读取`Azure_secrets.yml`文件，以捕获该文件中存储的所有参数。我们将连接设置为`local`，以指示Ansible在Ansible控制机上本地运行playbook，并且不尝试SSH到清单中定义的主机。这是强制性的，因为所有Azure模块都需要从Ansible控制机运行，以调用Azure编排系统的REST
    API调用。
- en: 'Once we run our playbook, we can see that the resource groups are provisioned
    on the Azure portal, as in the following screenshot:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 运行playbook后，我们可以在Azure门户上看到资源组已经配置好，如下截图所示：
- en: '![](assets/dc345da7-732b-4906-994e-50d2fc839cd4.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dc345da7-732b-4906-994e-50d2fc839cd4.png)'
- en: See also...
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅...
- en: 'For more information about the Azure resource module in Ansible, and all the
    other parameters supported by this module, use the following URL:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Ansible中Azure资源模块的更多信息，以及此模块支持的所有其他参数，请使用以下URL：
- en: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_resourcegroup_module.html](https://docs.ansible.com/ansible/latest/modules/azure_rm_resourcegroup_module.html)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_resourcegroup_module.html](https://docs.ansible.com/ansible/latest/modules/azure_rm_resourcegroup_module.html)'
- en: Creating virtual networks
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建虚拟网络
- en: Virtual networks in the Azure cloud are our virtual data center, which groups
    all of our infrastructure in a similar manner to a physical data center. We can
    have multiple virtual networks in the same and across different regions, and we
    can deploy our infrastructure inside these virtual networks. In this recipe, we
    will outline how to define and provision a virtual network in Azure.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Azure云中的虚拟网络是我们的虚拟数据中心，类似于物理数据中心，它将我们的所有基础设施分组在一起。我们可以在相同区域和不同区域中拥有多个虚拟网络，并且我们可以在这些虚拟网络中部署我们的基础设施。在这个配方中，我们将概述如何在Azure中定义和配置虚拟网络。
- en: Getting ready
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible control machine must be connected to the internet with reachability
    to the Azure public API endpoints and the Azure account should be configured as
    outlined in the previous recipes. The resource group should also be provisioned
    as in the previous recipe.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制机必须连接到互联网，能够访问Azure公共API端点，并且Azure账户应该按照前面的配方进行配置。资源组也应该按照前面的配方进行配置。
- en: How to do it...
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Update the `eu.yml` and `us.yml` files under `group_vars` with the virtual
    network''s name and **CIDR** address:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`group_vars`下的`eu.yml`和`us.yml`文件更新虚拟网络的名称和CIDR地址：
- en: '[PRE11]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Update the `pb_build_Azure_net.yml` playbook with the task to create the virtual
    networks:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用任务更新`pb_build_Azure_net.yml` playbook来创建虚拟网络：
- en: '[PRE12]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works...
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'In order to create the virtual network, we need to supply its name, along with
    the CIDR IP range that this virtual network will take. We define these two parameters
    in the region YAML files as `vnet_name` and `vnet_cidr`. We use the `Azure_rm_virtualnetwork` Ansible
    module to create all of the required virtual networks and we supply the following
    parameters:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建虚拟网络，我们需要提供其名称，以及此虚拟网络将占用的CIDR IP范围。我们在区域的YAML文件中定义这两个参数为“vnet_name”和“vnet_cidr”。我们使用`Azure_rm_virtualnetwork`
    Ansible模块来创建所有必需的虚拟网络，并提供以下参数：
- en: The resource group name in `resource_group`.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resource_group`中的资源组名称。'
- en: The `location` parameter, which describes the region into which we will deploy
    this resource group.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`location`参数描述了我们将部署此资源组的区域。'
- en: The name of each subnet in the `name` parameter, along with the CIDR IP range
    in the `address_prefixes_cidr` parameter.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`参数中的每个子网的名称，以及`address_prefixes_cidr`参数中的CIDR IP范围。'
- en: The `tenant`, `secret`, `client_id`, and `subscription_id` parameters are all
    used to authenticate to our Azure account.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “租户”、“密钥”、“客户端ID”和“订阅ID”参数都用于对我们的Azure账户进行身份验证。
- en: 'Once we run the playbook, we can see that the virtual networks are created,
    as in the following screenshot:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 运行playbook后，我们可以看到虚拟网络已经创建，如下截图所示：
- en: '![](assets/291c9eed-115a-420a-b745-4c447bd68ed7.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/291c9eed-115a-420a-b745-4c447bd68ed7.png)'
- en: See also...
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅...
- en: 'For more information regarding the Azure virtual network module in Ansible,
    and all the other parameters supported by this module, use the following URL:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Ansible中Azure虚拟网络模块的更多信息，以及此模块支持的所有其他参数，请使用以下URL：
- en: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_virtualnetwork_module.html](https://docs.ansible.com/ansible/latest/modules/azure_rm_virtualnetwork_module.html)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_virtualnetwork_module.html](https://docs.ansible.com/ansible/latest/modules/azure_rm_virtualnetwork_module.html)'
- en: Creating subnets
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建子网
- en: A subnet is the networking construct within the Azure cloud that is used to
    segment the virtual network. It is used to provide us with the tools to segregate
    our virtual network into distinct routing and security domains that we can control
    in order to provide different routing and security behaviors within each subnet.
    In this recipe, we will outline how to define and provision subnets within the
    Azure cloud.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 子网是Azure云中用于对虚拟网络进行分段的网络构造。它用于为我们提供工具，将我们的虚拟网络分隔成不同的路由和安全域，以便我们可以控制每个子网内的不同路由和安全行为。在这个配方中，我们将概述如何在Azure云中定义和配置子网。
- en: Getting ready
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible control machine must be connected to the internet, with reachability
    to the Azure public API endpoints. The Azure account should be configured as outlined
    in the previous recipes. The resource group and virtual networks should also be
    provisioned as outlined in the previous recipe.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制机必须连接到互联网，能够访问Azure公共API端点。Azure账户应该按照前面的配方进行配置。资源组和虚拟网络也应该按照前面的配方进行配置。
- en: How to do it...
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Update the `eu.yml` and `us.yml` files under `group_vars` with the subnet information:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用子网信息更新`group_vars`下的`eu.yml`和`us.yml`文件：
- en: '[PRE13]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Update the `pb_build_Azure_net.yml` playbook with the task to create the subnets:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用任务更新`pb_build_Azure_net.yml` playbook来创建子网：
- en: '[PRE14]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works...
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In order to create the subnets within the virtual network, we need to supply
    the virtual network and the CIDR prefix for the subnet, which must be within the
    CIDR of the virtual network. We define these in the subnet's data structure, which
    includes the name and CIDR for each subnet we want to provision. We can use the `Azure_rm_subnet` Ansible
    module to create all of the required subnets and we can loop over the subnet's
    data structure to supply the required parameters.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在虚拟网络中创建子网，我们需要提供虚拟网络和子网的CIDR前缀，该前缀必须在虚拟网络的CIDR内。我们在子网的数据结构中定义这些内容，其中包括我们想要配置的每个子网的名称和CIDR。我们可以使用`Azure_rm_subnet`
    Ansible模块来创建所有必需的子网，并且可以循环遍历子网的数据结构以提供必需的参数。
- en: 'Once we run the playbook, we can see the subnets created within each virtual
    network, as in the following screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 运行playbook后，我们可以看到在每个虚拟网络中创建的子网，如下截图所示：
- en: '![](assets/628b6dcc-093f-4d86-8983-30bfcbbc2711.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/628b6dcc-093f-4d86-8983-30bfcbbc2711.png)'
- en: See also...
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅...
- en: 'For more information regarding the Azure subnets module in Ansible, and all
    the other parameters supported by this module, use the following URL:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Ansible中Azure子网模块的更多信息，以及此模块支持的所有其他参数，请使用以下URL：
- en: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_subnet_module.html](https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_subnet_module.html)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_subnet_module.html](https://docs.ansible.com/ansible/latest/modules/azure_rm_subnet_module.html)'
- en: Building user-defined routes
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建用户定义的路由
- en: In this recipe, we will outline how to control routing within a subnet using
    user-defined routers. This user-defined routes object can be associated with a
    specific subnet. We can define custom routes to adjust the forwarding behavior
    within a subnet in the Azure cloud.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将概述如何使用用户定义的路由器控制子网内的路由。这个用户定义的路由对象可以与特定的子网关联。我们可以定义自定义路由来调整Azure云中子网内的转发行为。
- en: Getting ready
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible control machine must be connected to the internet, with reachability
    to the Azure public API endpoints. The Azure account should be configured as outlined
    in the previous recipes. The resource group, virtual networks, and subnets should
    also be provisioned as outlined in the previous recipes.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制机必须连接到互联网，并能够访问Azure公共API端点。Azure帐户应按照前面的配方进行配置。资源组、虚拟网络和子网也应按照前面的配方进行配置。
- en: How to do it...
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Update the `eu.yml` and `us.yml` files under `group_vars` with the `route_tables`
    data, as shown here:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`group_vars`下的`eu.yml`和`us.yml`文件中更新`route_tables`数据，如下所示：
- en: '[PRE15]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Update the `pb_build_Azure_net.yml` playbook with the following task to create
    the custom route table:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下任务更新`pb_build_Azure_net.yml` playbook以创建自定义路由表：
- en: '[PRE16]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Update the playbook with the following task to provision the routes within
    the custom route table:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下任务更新playbook以在自定义路由表中配置路由：
- en: '[PRE17]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Update the playbook with the following task to associate the custom route with
    the subnet:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下任务更新playbook以将自定义路由与子网关联：
- en: '[PRE18]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: How it works...
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In our setup, we have two subnets (`web` and `DB`) and we need to provide a
    different routing treatment for the `DB` subnet so that it does not have public
    internet access. We can do this by creating a new custom route table and installing
    a default route with `next-hop` set to `none` in order to drop all the traffic
    destined for the internet.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的设置中，我们有两个子网（`web`和`DB`），我们需要为`DB`子网提供不同的路由处理，以便它不具有公共互联网访问权限。我们可以通过创建新的自定义路由表并安装`next-hop`设置为`none`的默认路由来实现这一点，以丢弃所有面向互联网的流量。
- en: We need to define our custom route table that we will deploy in the `route_tables`
    variable and include it in each region definition. We can then use the `Azure_rm_routetable`
    Ansible module to create the route table in the specific resource group and use
    the `Azure_rm_route` module to create the required routes within each route table.
    Finally, we can attach the route table to the specific subnet using the `Azure_rm_subnet`
    module in order to modify the default routing behavior for this subnet.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在`route_tables`变量中定义我们的自定义路由表，并将其包含在每个区域定义中。然后，我们可以使用`Azure_rm_routetable`
    Ansible模块在特定资源组中创建路由表，并使用`Azure_rm_route`模块在每个路由表中创建所需的路由。最后，我们可以使用`Azure_rm_subnet`模块将路由表附加到特定子网，以修改此子网的默认路由行为。
- en: 'The following screenshot outlines the new route table that was created:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图概述了创建的新路由表：
- en: '![](assets/13d57b60-7f68-4d42-8403-f2daf584e5d7.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/13d57b60-7f68-4d42-8403-f2daf584e5d7.png)'
- en: 'The following screenshot outlines the exact details for one of the route tables,
    the custom routes, and the subnet this custom route is attached to:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图概述了一个路由表的确切细节，自定义路由以及此自定义路由所附加的子网：
- en: '![](assets/b1cda5aa-5419-488a-b641-d100d3081d3e.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b1cda5aa-5419-488a-b641-d100d3081d3e.png)'
- en: See also...
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅...
- en: 'For more information regarding the Azure route table modules in Ansible, and
    all the other parameters supported by this module, use the following URLs:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Ansible中Azure路由表模块的更多信息，以及此模块支持的所有其他参数，请使用以下URL：
- en: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_routetable_module.html#Azure-rm-routetable-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_routetable_module.html#azure-rm-routetable-module)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_routetable_module.html#Azure-rm-routetable-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_routetable_module.html#azure-rm-routetable-module)'
- en: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_route_module.html#Azure-rm-route-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_route_module.html#azure-rm-route-module)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_route_module.html#Azure-rm-route-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_route_module.html#azure-rm-route-module)'
- en: Deploying network security groups
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署网络安全组
- en: 'Security in cloud environments is critical, and the Azure cloud provides different
    tools and services to help build a secure cloud environment for the application.
    In this recipe, we will look at one of these services: **network security groups**
    (**NSGs**). An NSG is a stateful firewall that can be attached to a virtual machine
    or subnet in order to restrict the traffic flowing through the virtual machine
    or subnet. In this recipe, we will outline how to define and provision an NSG
    on the Azure cloud.'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 云环境中的安全性至关重要，Azure云提供了不同的工具和服务来帮助构建应用程序的安全云环境。在这个示例中，我们将看一下其中一个服务：**网络安全组**（**NSG**）。NSG是一个有状态的防火墙，可以附加到虚拟机或子网，以限制通过虚拟机或子网流动的流量。在这个示例中，我们将概述如何在Azure云上定义和配置NSG。
- en: Getting ready
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible control machine must be connected to the internet, with reachability
    to the Azure public API endpoints. The Azure account should be configured as outlined
    in the previous recipes. The resource group, virtual networks, and subnets should
    also be provisioned as outlined in the previous recipes.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制机必须连接到互联网，并能够到达Azure公共API端点。Azure帐户应按照前面的示例进行配置。资源组、虚拟网络和子网也应按照前面的示例进行配置。
- en: How to do it...
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Update the `eu.yml` and `us.yml` files under `group_vars` with the ACL data,
    as shown here:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ACL数据更新`group_vars`下的`eu.yml`和`us.yml`文件，如下所示：
- en: '[PRE19]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Update the `pb_build_Azure_net.yml` playbook with the following task to create
    the security group and populate all of its rules:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下任务更新`pb_build_Azure_net.yml` playbook，创建安全组并填充其所有规则：
- en: '[PRE20]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Update the playbook with the following task to attach the security group with
    the corresponding subnet:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下任务更新playbook，将安全组与相应的子网关联起来：
- en: '[PRE21]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works...
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Azure provides default NSGs that are attached to subnets. These provide basic
    security controls to the computer resources deployed in these subnets. The default
    policy includes these default rules for inbound traffic:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: Azure提供了附加到子网的默认NSG。这些为部署在这些子网中的计算资源提供基本安全控制。入站流量的默认策略包括以下默认规则：
- en: Allow inbound traffic between virtual network CIDR ranges (inter-subnet communication).
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许虚拟网络CIDR范围之间的入站流量（子网间通信）。
- en: Allow inbound traffic from Azure load balancers.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许来自Azure负载均衡器的入站流量。
- en: Deny any other traffic.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝其他任何流量。
- en: 'In the outbound direction, the default rules are as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在出站方向，默认规则如下：
- en: Allow outbound traffic between the virtual network CIDR (inter-subnet communication).
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许虚拟网络CIDR之间的出站流量（子网间通信）。
- en: Allow outbound traffic to the internet.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许出站流量到互联网。
- en: Deny any other traffic.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝其他任何流量。
- en: Azure NSGs provide a mechanism to augment the default NSG applied by Azure by
    defining a custom NSG that is appended to the default one. The resultant NSG is
    evaluated based on the priority value for each rule (a rule with a lower value
    is evaluated first) and once a rule is matched, the rule is applied to the traffic
    traversing the subnet.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Azure NSG提供了一种机制，通过定义一个自定义NSG来增强Azure应用的默认NSG，该自定义NSG附加到默认NSG上。结果NSG根据每个规则的优先级值进行评估（具有较低值的规则首先进行评估），一旦匹配规则，规则就适用于通过子网传输的流量。
- en: As we are deploying a web application in the `Web_tier` subnet, we need to allow
    inbound HTTP and HTTPs traffic to this subnet. So, we can create an ACL definition
    to create a custom NSG and define the required parameters in order to allow this
    traffic in the inbound direction.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在`Web_tier`子网中部署了一个Web应用程序，我们需要允许入站HTTP和HTTPs流量到该子网。因此，我们可以创建一个ACL定义来创建一个自定义NSG，并在入站方向上定义所需的参数，以允许这些流量。
- en: We can use the `Azure_rm_securitygroup` Ansible module to loop over all of our
    custom ACLs and create the NSG and respective rules. We can use `Azure_rm_subnet`
    to attach the security group to the subnet.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`Azure_rm_securitygroup` Ansible模块循环遍历所有自定义ACL，并创建NSG和相应的规则。我们可以使用`Azure_rm_subnet`将安全组附加到子网。
- en: 'The following screenshot shows the new NSG that is defined:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了定义的新NSG：
- en: '![](assets/180fc909-2925-4d6b-9418-117f66b562e2.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/180fc909-2925-4d6b-9418-117f66b562e2.png)'
- en: 'The following screenshot shows the resultant NSG rules that are defined (both
    custom and default) for the inbound and outbound directions:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了定义的结果NSG规则（包括自定义和默认）的入站和出站方向：
- en: '![](assets/c2dc486f-610b-4478-9b49-eb036c844ce7.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c2dc486f-610b-4478-9b49-eb036c844ce7.png)'
- en: See also...
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅...
- en: 'For more information regarding the Azure NSG module in Ansible, and all the
    other parameters supported by this module, use the following URL:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Ansible中Azure NSG模块的更多信息，以及此模块支持的所有其他参数，请使用以下URL：
- en: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_securitygroup_module.html](https://docs.ansible.com/ansible/latest/modules/azure_rm_securitygroup_module.html#azure-rm-securitygroup-module)'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_securitygroup_module.html](https://docs.ansible.com/ansible/latest/modules/azure_rm_securitygroup_module.html#azure-rm-securitygroup-module)'
- en: Deployment validation using Ansible
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ansible进行部署验证
- en: Ansible provides multiple modules to collect the operational state of the different
    resources deployed in Azure. We can use these modules to validate the current
    state of our network in the Azure cloud. This provides a programmatic approach
    to validating a deployment, without the need to log in via a GUI to the portal
    to check the status of the different components within the infrastructure of Azure.
    In this recipe, we will outline how to use multiple modules to validate the resource
    groups and virtual networks that we have deployed.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible提供了多个模块来收集在Azure中部署的不同资源的操作状态。我们可以使用这些模块来验证Azure云中我们网络的当前状态。这提供了一种编程方法来验证部署，而无需通过GUI登录到门户网站来检查基础设施中不同组件的状态。在这个示例中，我们将概述如何使用多个模块来验证我们已部署的资源组和虚拟网络。
- en: Getting ready
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible control machine must be connected to the internet, with reachability
    to the Azure public API endpoints. The Azure account should also be configured
    as outlined in the previous recipes.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制机必须连接到互联网，并能够访问Azure公共API端点。Azure帐户还应按照前面的示例进行配置。
- en: How to do it...
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create a new file, `~/.Azure/credentials`, to host all of the credentials to
    authenticate to Azure, as in the following code:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件`~/.Azure/credentials`，用于存储所有连接到Azure的凭据，如下所示：
- en: '[PRE22]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create a new playbook, `pb_validate_Azure_net.yml`, to validate our deployment
    and include the following tasks to collect resource group facts and validate it:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的playbook`pb_validate_Azure_net.yml`，以验证我们的部署，并包括以下任务来收集资源组事实并验证它：
- en: '[PRE23]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Update the `pb_validate_Azure_net.yml` playbook to include the tasks that will
    collect the virtual network''s facts and validate its state:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`pb_validate_Azure_net.yml` playbook，包括收集虚拟网络事实并验证其状态的任务：
- en: '[PRE24]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How it works...
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this recipe, we outline an alternative method to authenticate to the Azure
    cloud. We create the `~/.Azure/credentials` file and we put the same information
    into it that is needed to authenticate to the Azure API (`tenant_id`, `client_id`,
    and so on). As we have this information in the file, we don't need to include
    these parameters in our Ansible modules.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们概述了一种连接到Azure云的替代方法。我们创建了`~/.Azure/credentials`文件，并将需要连接到Azure API（`tenant_id`，`client_id`等）的相同信息放入其中。由于我们在文件中有这些信息，我们不需要在我们的Ansible模块中包含这些参数。
- en: In order to validate our deployment, Ansible provides multiple fact modules
    to collect the operational state of multiple objects in the Azure cloud. In this
    example, we are outlining two of these modules to collect the facts for resource
    groups and virtual networks. We can use the `Azure_rm_resourcegroup_facts` module
    to collect resource group facts and `Azure_rm_virtualnetwork_facts` to collect
    virtual network facts. All the Azure fact modules register the data retrieved
    by these modules as Ansible facts— that is why we don't need to register the data
    returned by the module in a custom-defined variable.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证我们的部署，Ansible提供了多个事实模块，用于收集Azure云中多个对象的操作状态。在这个示例中，我们概述了两个用于收集资源组和虚拟网络事实的模块。我们可以使用`Azure_rm_resourcegroup_facts`模块收集资源组事实，使用`Azure_rm_virtualnetwork_facts`收集虚拟网络事实。所有Azure事实模块都将这些模块检索的数据注册为Ansible事实，这就是为什么我们不需要在自定义定义的变量中注册模块返回的数据。
- en: The `Azure_rm_resourcegroup_facts` module saves the output in the `Azure_resourcegroups`
    Ansible fact and we use the `assert` module to loop over all the resource groups
    within this variable. We can then confirm that it is created with the correct
    parameters.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`Azure_rm_resourcegroup_facts`模块将输出保存在`Azure_resourcegroups` Ansible事实中，我们使用`assert`模块循环遍历此变量中的所有资源组。然后，我们可以确认它是否使用正确的参数创建。'
- en: 'The following is a snippet from `Azure_resourcegroups`:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是来自`Azure_resourcegroups`的片段：
- en: '[PRE25]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: We can use the exact same technique to collect the facts for virtual networks
    deployed using `Azure_rm_virtualnetwork_facts` and use the `assert` module to
    validate its state.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用完全相同的技术来收集使用`Azure_rm_virtualnetwork_facts`部署的虚拟网络的事实，并使用`assert`模块验证其状态。
- en: See also...
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅...
- en: 'For more information about the multiple modules for fact collection for different
    network resources in Azure, use the following links:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Azure中不同网络资源的多个模块的事实收集的更多信息，请使用以下链接：
- en: '**Resource group** facts:[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_resourcegroup_info_module.html#Azure-rm-resourcegroup-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_resourcegroup_info_module.html#azure-rm-resourcegroup-info-module)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源组事实：[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_resourcegroup_info_module.html#Azure-rm-resourcegroup-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_resourcegroup_info_module.html#azure-rm-resourcegroup-info-module)
- en: '**Virtual network** facts:[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_virtualnetwork_info_module.html#Azure-rm-virtualnetwork-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_virtualnetwork_info_module.html#azure-rm-virtualnetwork-info-module)'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟网络事实：[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_virtualnetwork_info_module.html#Azure-rm-virtualnetwork-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_virtualnetwork_info_module.html#azure-rm-virtualnetwork-info-module)
- en: '**Subnet** facts:[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_subnet_info_module.html#Azure-rm-subnet-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_subnet_info_module.html#azure-rm-subnet-info-module)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子网事实：[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_subnet_info_module.html#Azure-rm-subnet-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_subnet_info_module.html#azure-rm-subnet-info-module)
- en: '**Route table** facts:[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_routetable_info_module.html#Azure-rm-routetable-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_routetable_info_module.html#azure-rm-routetable-info-module)'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由表事实：[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_routetable_info_module.html#Azure-rm-routetable-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_routetable_info_module.html#azure-rm-routetable-info-module)
- en: '**Security group** facts: [https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_securitygroup_info_module.html#Azure-rm-securitygroup-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_securitygroup_info_module.html#azure-rm-securitygroup-info-module)'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全组事实：[https://docs.Ansible.com/Ansible/latest/modules/Azure_rm_securitygroup_info_module.html#Azure-rm-securitygroup-info-module](https://docs.ansible.com/ansible/latest/modules/azure_rm_securitygroup_info_module.html#azure-rm-securitygroup-info-module)
- en: Decommissioning Azure resources using Ansible
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ansible取消Azure资源
- en: Similar to how we can create resources at scale using automation, we can also
    destroy those resources once we decide we don't need them. This is simplified
    with Ansible and the resource groups implemented by Azure – with a single API
    call with the correct parameters, we can decommission all the resources within
    a resource group that we have defined. In this recipe, we will outline how to
    perform this action to destroy all the resources we have provisioned so far.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们可以使用自动化大规模创建资源类似，一旦我们决定不再需要这些资源，我们也可以销毁这些资源。使用Ansible和Azure实施的资源组，这变得更加简化-通过一次正确参数的单个API调用，我们可以废弃我们定义的资源组中的所有资源。在本配方中，我们将概述如何执行此操作，以销毁到目前为止我们已经提供的所有资源。
- en: Getting ready
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The Ansible control machine must be connected to the internet, with reachability
    to the Azure Public API endpoints. The Azure account should also be configured
    as outlined in the previous recipes.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible控制机必须连接到互联网，并能够访问Azure公共API端点。Azure帐户还应按照前面的配方进行配置。
- en: How to do it...
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create a new `pb_destroy_Azure_net.yml` playbook and add the following task
    to delete all the resource groups:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的`pb_destroy_Azure_net.yml` playbook，并添加以下任务以删除所有资源组：
- en: '[PRE26]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: How it works...
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'We can use the `Azure_rm_resourcegroup` Ansible module to destroy all the resources
    within the resource group as well as to delete the resource group itself. We can
    supply two important parameters to the module in order to perform the `delete`
    function:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`Azure_rm_resourcegroup` Ansible模块来销毁资源组中的所有资源，以及删除资源组本身。我们可以向模块提供两个重要的参数，以执行`delete`功能：
- en: Set `state` to `absent`.
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`state`设置为`absent`。
- en: Include the `force_delete_nonempty` parameter and set it to `yes`.
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括`force_delete_nonempty`参数，并将其设置为`yes`。
- en: With these parameters set, all the resources within the resource group (the
    virtual networks, subnets, and so on) will be deleted, along with the resource
    group itself.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 设置了这些参数后，资源组中的所有资源（虚拟网络、子网等）将被删除，资源组本身也将被删除。
- en: 'The following output shows that our two resource groups are no longer present:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出显示我们的两个资源组不再存在：
- en: '![](assets/a0b7c68d-2098-4107-8b7b-fff1858922b5.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a0b7c68d-2098-4107-8b7b-fff1858922b5.png)'
- en: 'The following output also confirms that all of the virtual networks were deleted
    after running the playbook:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出还确认了运行playbook后所有虚拟网络都已被删除：
- en: '![](assets/061e372c-f4a8-4f0b-a108-4efeecece7b9.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/061e372c-f4a8-4f0b-a108-4efeecece7b9.png)'
- en: The preceding screenshot shows that all the virtual networks have been deleted.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 上述截图显示所有虚拟网络已被删除。
