- en: Developing Plugins
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发插件
- en: This chapter will go into detail about plugins in Jenkins, and we will first
    look at how to get Maven set up in Windows, Linux, and macOS. We will then look
    at plugin development by creating a `Hello World` plugin for Jenkins, and then
    we will briefly look at the Jenkins plugin site and how to navigate and use it
    to find a wide array of plugins.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将详细介绍Jenkins中的插件，我们将首先看如何在Windows、Linux和macOS中设置Maven。然后我们将通过为Jenkins创建一个`Hello
    World`插件来了解插件开发，然后我们将简要介绍Jenkins插件站点以及如何浏览和使用它来找到各种插件。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Jenkins plugins explained
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenkins插件解释
- en: Building a simple Jenkins plugin
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个简单的Jenkins插件
- en: Jenkins plugin development
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenkins插件开发
- en: Jenkins plugin ecosystem
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenkins插件生态系统
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter is about building plugins in Jenkins and you will need to have
    a basic understanding of the Java programming language and understand what a build
    tool such as Maven is intended for.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是关于在Jenkins中构建插件的，您需要对Java编程语言有基本的了解，并了解Maven等构建工具的用途。
- en: Jenkins plugins explained
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins插件解释
- en: Jenkins CI already provides certain functionality, including building, deploying,
    and automating software projects. Any additional behavior that you want out of
    Jenkins is generally provided by the large plugin ecosystem in Jenkins.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins CI已经提供了某些功能，包括构建、部署和自动化软件项目。您通常可以通过Jenkins中大量的插件生态系统获得您想要的任何额外行为。
- en: Why are plugins useful?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插件有什么用？
- en: The purpose of plugins/extensions in software is to add specific functionality
    to a software component. Web browsers such as Chrome have extensions that extend
    the functionality of the browser and Firefox has add-ons that serve the same purpose
    as extensions in Chrome. There also exist plugins in other software systems, but
    we will specifically focus on plugins in Jenkins.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 软件中插件/扩展的目的是为软件组件添加特定功能。诸如Chrome的网络浏览器有扩展程序来扩展浏览器的功能，Firefox有附加组件来实现与Chrome中扩展程序相同的目的。其他软件系统中也存在插件，但我们将专门关注Jenkins中的插件。
- en: Jenkins plugin documentation
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins插件文档
- en: Go to the Plugin Index to find any plugins that you need, and we will look at
    this in a later section of this chapter. If you visit the plugin tutorial in the
    Jenkins wiki, you will get complete instructions on creating Jenkins plugins.
    There are also tutorials outside of the Jenkins wiki that you can use. You can
    go to Jenkins archetypes repo for the `Hello World` plugin example.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 转到插件索引以找到您需要的任何插件，我们将在本章的后面部分讨论这个问题。如果您访问Jenkins维基中的插件教程，您将获得创建Jenkins插件的完整说明。还有一些Jenkins维基之外的教程可以使用。您可以转到Jenkins原型库查看`Hello
    World`插件示例。
- en: Installing plugins in Jenkins
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Jenkins中安装插件
- en: 'You will need to navigate to the Manage Jenkins link in the Jenkins dashboard:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要转到Jenkins仪表板中的“管理Jenkins”链接：
- en: '![](assets/8d5edc4e-282a-4130-a934-5ccb2f40894b.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8d5edc4e-282a-4130-a934-5ccb2f40894b.png)'
- en: Once you click the Manage Jenkins link, you will be routed to a URL path that
    ends with `manage`, such as  `http://localhost:8080/manage`, or some other domain
    depending on whether you are running Jenkins locally or not. You will need to
    click the Manage Plugins link, and then make sure to click the Installed tab and/or
    filter for any plugins that you wish to install. We have already covered this
    before, but we will be installing our own Jenkins plugin by installing it just
    as any other Jenkins plugin.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“管理Jenkins”链接后，您将被重定向到以`manage`结尾的URL路径，例如`http://localhost:8080/manage`，或者根据您是否在本地运行Jenkins而有其他域。您需要点击“管理插件”链接，然后确保点击“已安装”选项卡和/或筛选您希望安装的任何插件。我们之前已经介绍过这个，但我们将通过安装我们自己的Jenkins插件来安装它，就像安装任何其他Jenkins插件一样。
- en: Building a simple Jenkins plugin
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个简单的Jenkins插件
- en: There are a couple of prerequisites to creating a Jenkins plugin. You will need
    to have Java installed, which should already be installed if you have been following
    along. You will also need to install the Maven software project management tool
    ([https://maven.apache.org/](https://maven.apache.org/)) as well.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '创建Jenkins插件有一些先决条件。您需要安装Java，如果您一直在跟进，那么应该已经安装了。您还需要安装Maven软件项目管理工具（[https://maven.apache.org/](https://maven.apache.org/)）。 '
- en: Java installation
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java安装
- en: 'You will need to make sure that you have Java 1.6 or higher installed, and
    I would recommend installing Java 1.9 if you can. To install Java, please go to
    the Java downloads page ([http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)):'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保已安装Java 1.6或更高版本，我建议您安装Java 1.9。要安装Java，请转到Java下载页面（[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)）：
- en: '![](assets/c1f224e1-39ec-4509-9c44-ec2a30df5a24.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c1f224e1-39ec-4509-9c44-ec2a30df5a24.png)'
- en: Make sure to click the Accept License Agreement radio button and then click
    Windows. Download and make sure to pick the right architecture; namely, a 32-bit
    or 64-bit operating system.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 确保点击“接受许可协议”单选按钮，然后点击Windows。下载并确保选择正确的架构，即32位或64位操作系统。
- en: 'Once Java is installed, just verify the installation with the following command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Java后，只需使用以下命令验证安装：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This should return the current version of Java that has been installed.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该返回已安装的Java的当前版本。
- en: Maven installation instructions
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Maven安装说明
- en: To install Maven, please go to the Maven install page ([https://maven.apache.org/install.html](https://maven.apache.org/install.html)) and
    make sure to follow the instructions for your given operating system.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Maven，请转到Maven安装页面（[https://maven.apache.org/install.html](https://maven.apache.org/install.html)）并确保按照给定操作系统的说明进行操作。
- en: Windows installation
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows安装
- en: You can install Maven in a couple of different ways on Windows, but make sure
    that you have at least the Windows 7 operating system and the Java **Software
    Development Kit** (**SDK**) 1.7 or higher installed. If you followed along in
    [Chapter 5](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml), *Installation and Basics
    of Jenkins*, then you should have Java already installed.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Windows上以几种不同的方式安装Maven，但请确保您至少安装了Windows 7操作系统和Java **软件开发工具包**（**SDK**）1.7或更高版本。如果您在[第5章](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml)中跟随了*Jenkins的安装和基础知识*，那么您应该已经安装了Java。
- en: Maven installation through the Chocolatey package manager
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Chocolatey软件包管理器安装Maven
- en: 'If you have the Chocolatey package manager already installed at Chocolatey
    installation ([https://chocolatey.org/install](https://chocolatey.org/install)), then
    you can simply run the following command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经安装了Chocolatey软件包管理器（[https://chocolatey.org/install](https://chocolatey.org/install)），那么您可以简单地运行以下命令：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can also download the Maven binary executable from the Maven install page
    ([https://maven.apache.org/install.html](https://maven.apache.org/install.html)) and
    you will need to additionally find the value of the Java environment variable.
    You can find this by running the following command in Command Prompt:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从Maven安装页面（[https://maven.apache.org/install.html](https://maven.apache.org/install.html)）下载Maven二进制可执行文件，并且您还需要额外找到Java环境变量的值。您可以通过在命令提示符中运行以下命令来找到：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then you will need to run add this Maven binary executable to the Windows path
    by doing the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您需要通过以下方式将此Maven二进制可执行文件添加到Windows路径中：
- en: Right-click on My Computer
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击我的电脑
- en: Click on Properties
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击属性
- en: Click on Advanced System Setting
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击高级系统设置
- en: Click on Environment Variable
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击环境变量
- en: Click on New user variable and add Maven_Home with value `C:\apache-maven-3.5.3`
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新用户变量，添加Maven_Home，值为`C:\apache-maven-3.5.3`
- en: Add it to the path variable with `%Maven_Home%\bin`
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其添加到路径变量中，使用`%Maven_Home%\bin`
- en: Open Command Prompt and ask for `mvn -version` on your desktop
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符中打开，并在桌面上询问`mvn -version`
- en: Maven installation through the Maven source code
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Maven源代码安装Maven
- en: 'First make sure that you have the Java SDK installed, which you can confirm
    in Command Prompt:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先确保您已安装Java SDK，您可以在命令提示符中确认：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This should print out the current version of Java that you have installed. Next,
    download the Maven source code from the Maven source repository ([https://gitbox.apache.org/repos/asf?p=maven-sources.git](https://gitbox.apache.org/repos/asf?p=maven-sources.git)) and
    then unpack the Maven source code in a suitable location in your Windows operating
    system.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该打印出您已安装的Java当前版本。接下来，从Maven源代码库（[https://gitbox.apache.org/repos/asf?p=maven-sources.git](https://gitbox.apache.org/repos/asf?p=maven-sources.git)）下载Maven源代码，然后在Windows操作系统中的合适位置解压Maven源代码。
- en: '`C:\Program Files\Apache\maven` is a possible location that you could use.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`C:\Program Files\Apache\maven`是一个可能的位置，你可以使用。'
- en: Environment variables setup for the Windows operating system
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Windows操作系统设置环境变量
- en: You will need to add both the `M2_HOME` and `MAVEN_HOME` variables to your Windows
    environment using system properties, and you will need to point the environment
    variables to your Maven folder.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要使用系统属性将`M2_HOME`和`MAVEN_HOME`变量都添加到Windows环境中，并且您需要将环境变量指向您的Maven文件夹。
- en: Update the PATH variable by appending the Maven `bin` folder, `%M2_HOME%\bin`,
    so that you can run the Maven executable anywhere in your system.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通过附加Maven `bin`文件夹`%M2_HOME%\bin`来更新PATH变量，这样您就可以在系统中的任何位置运行Maven可执行文件。
- en: 'To verify that Maven is running correctly, run the following command in Command
    Prompt:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证Maven是否正确运行，请在命令提示符中运行以下命令：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This command should display the current Maven version, Java version, and the
    operating system information.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令应显示当前的Maven版本、Java版本和操作系统信息。
- en: macOS installation
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: macOS安装
- en: You will need to make sure that the Java SDK is installed in the macOS operating
    system. If you followed along in [Chapter 5](65f27cc1-0630-4515-be75-5eedeb8004e5.xhtml),
    *Installation and Basics of Jenkins*, then you should have Java already installed.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保macOS操作系统中已安装Java SDK。如果您在[第5章](65f27cc1-0630-4515-be75-5eedeb8004e5.xhtml)中跟随了*Jenkins的安装和基础知识*，那么您应该已经安装了Java。
- en: Maven installation through the Homebrew package manager
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Homebrew软件包管理器安装Maven
- en: 'First make sure that Java is installed by running the following command in
    the Mac Terminal application:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 首先确保Java已安装，通过在Mac终端应用程序中运行以下命令：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You will need to have Java 1.7 or higher installed on your system.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在系统上安装Java 1.7或更高版本。
- en: 'Next, if you have the Homebrew package manager installed ([https://brew.sh/](https://brew.sh/)), then
    you can easily install Maven by issuing the following command in your Mac Terminal
    application:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，如果您已经安装了Homebrew软件包管理器（[https://brew.sh/](https://brew.sh/)），那么您可以通过在Mac终端应用程序中发出以下命令来轻松安装Maven：
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Make sure that you set the following environment variable in your `.bashrc`,
    or `.zshrc` file:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在您的`.bashrc`或`.zshrc`文件中设置以下环境变量：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Ensure that Maven has been properly installed by running the following command
    in your Mac Terminal:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Maven已经正确安装，通过在Mac终端中运行以下命令：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Notice here that the `mvn` binary executable printed out the installed Maven
    version, the Java version, and OS-specific information.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`mvn`二进制可执行文件打印出了已安装的Maven版本、Java版本和特定于操作系统的信息。
- en: Unix installation
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unix安装
- en: We will install Maven on a Ubuntu 16.04 Digital Ocean Droplet, but you should
    be able to run similar commands on other Linux distributions. Please follow the
    instructions to install Maven on your specific Linux distribution.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在Ubuntu 16.04 Digital Ocean Droplet上安装Maven，但您应该能够在其他Linux发行版上运行类似的命令。请按照说明在您特定的Linux发行版上安装Maven。
- en: Maven installation through the apt-get package manager
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过apt-get软件包管理器安装Maven
- en: 'Make sure that Java is installed in your Linux distribution, which you can
    check by running the following command in a Terminal shell:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Java已安装在您的Linux发行版中，您可以通过在终端shell中运行以下命令来检查：
- en: '[PRE9]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If Java has not been installed, then run the following command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尚未安装Java，则运行以下命令：
- en: '[PRE10]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, install Maven by running the following command in your Terminal application:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在终端应用程序中运行以下命令安装Maven：
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Next, you will need to make sure that your `JAVA_HOME` environment variable
    has been set. Since we installed Java 1.9 in a Ubuntu Linux operating system,
    we will run the following command:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要确保您的`JAVA_HOME`环境变量已设置。由于我们在Ubuntu Linux操作系统中安装了Java 1.9，我们将运行以下命令：
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The directory that you use could be different, but if you do not set this environment
    variable, then Maven will report this as a warning.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您使用的目录可能不同，但如果您未设置此环境变量，则Maven将报告此警告。
- en: 'Check that Maven has been installed correctly by running the following command
    in your Terminal application:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在终端应用程序中运行以下命令来检查Maven是否已正确安装：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Notice here that the Maven binary executable printed out the current Maven version
    installed, the current Java version installed, and OS-specific information, just
    like the Windows and Mac operating systems.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Maven二进制可执行文件打印出当前安装的Maven版本、当前安装的Java版本和特定于操作系统的信息，就像Windows和Mac操作系统一样。
- en: Jenkins plugin development
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins插件开发
- en: There are several steps necessary to get a Jenkins plugin set up, running, and
    installed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个步骤是必要的，以便设置、运行和安装Jenkins插件。
- en: Maven settings file
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Maven设置文件
- en: Depending on your current operating system, you will need to create/edit the
    `.m2/settings.xml` file.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您当前的操作系统，您需要创建/编辑`.m2/settings.xml`文件。
- en: 'Windows users will find the `settings.xml` file by issuing the following command
    in Command Prompt:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在命令提示符中发出以下命令，Windows用户将找到`settings.xml`文件：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Mac operating system users can edit/create the `settings.xml` file in `~/.m2/settings.xml`*.*
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Mac操作系统用户可以在`~/.m2/settings.xml`中编辑/创建`settings.xml`文件。
- en: The settings element in the `settings.xml` file contains elements used to define
    values that configure Maven execution in various ways, such as `pom.xml`, but
    should not be bundled to any specific project, or distributed to an audience.
    These include values such as the local repository location, alternate remote repository
    servers, and authentication information.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`settings.xml`文件中的`settings`元素包含用于以各种方式配置Maven执行的值的元素，例如`pom.xml`，但不应捆绑到任何特定项目或分发给受众。这些值包括本地存储库位置、替代远程存储库服务器和身份验证信息。'
- en: 'Place the following content into the `settings.xml` file:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下内容放入`settings.xml`文件中：
- en: '![](assets/f67a39b5-671b-442c-9157-1a328ac8b5fd.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f67a39b5-671b-442c-9157-1a328ac8b5fd.png)'
- en: Notice here that we entered specific information related to Jenkins plugins.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们输入了与Jenkins插件相关的特定信息。
- en: It is highly encouraged that you set your `settings.xml` file to get your Jenkins
    plugins working correctly!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议您将您的`settings.xml`文件设置为正确运行您的Jenkins插件！
- en: HelloWorld Jenkins plugin
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HelloWorld Jenkins插件
- en: In order to create a Jenkins plugin, you will need to use Maven archetypes,
    which you can read about here ([https://maven.apache.org/guides/introduction/introduction-to-archetypes.html](https://maven.apache.org/guides/introduction/introduction-to-archetypes.html)).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建Jenkins插件，您需要使用Maven原型，您可以在这里阅读有关它的信息（[https://maven.apache.org/guides/introduction/introduction-to-archetypes.html](https://maven.apache.org/guides/introduction/introduction-to-archetypes.html)）。
- en: 'We will issue the following command in order to generate a Jenkins `Hello World`
    plugin:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将发出以下命令以生成Jenkins的`Hello World`插件：
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here is a sample running session that I did to create the plugin:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我创建插件的示例运行会话：
- en: '![](assets/156ecbd6-a22c-4918-91d7-2d11e8054e0c.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/156ecbd6-a22c-4918-91d7-2d11e8054e0c.png)'
- en: 'Notice here that I entered `1` for the archetype, then I chose a plugin version
    of `4`, and defined a value of `jenkins-helloworld-example-plugin`, and then hit
    *Enter* for the default values:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我为原型输入了`1`，然后选择了插件版本`4`，并定义了`jenkins-helloworld-example-plugin`的值，然后按*Enter*获取默认值：
- en: '![](assets/7831b6b1-77c7-4368-a9a4-2c6a160f3b27.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7831b6b1-77c7-4368-a9a4-2c6a160f3b27.png)'
- en: If all goes successfully, you should get the output of `BUILD SUCCESS` in Command
    Prompt.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，您应该在命令提示符中获得`BUILD SUCCESS`的输出。
- en: 'You need to make sure that you can build your Jenkins plugin, so make sure
    to run the following command in Command Prompt:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保能够构建您的Jenkins插件，因此请确保在命令提示符中运行以下命令：
- en: '[PRE17]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The `mvn package` command will create a `target` directory and will run any
    tests that you have created in the directory:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`mvn package`命令将创建一个`target`目录，并运行您在该目录中创建的任何测试：'
- en: '![](assets/d3c7aa73-4239-44d8-973b-9eab44c1a8da.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d3c7aa73-4239-44d8-973b-9eab44c1a8da.png)'
- en: Notice here that the Jenkins archetype actually created some tests for our `Hello
    World` Jenkins plugin example.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Jenkins原型实际上为我们的`Hello World` Jenkins插件示例创建了一些测试。
- en: Folder layout explanation
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件夹布局说明
- en: 'The following is a screenshot of the newly created `jenkins-helloworld-example-plugin`
    directory:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新创建的`jenkins-helloworld-example-plugin`目录的屏幕截图：
- en: '![](assets/5c2a0f92-5b5a-4360-81e1-3dbf7827ae2b.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5c2a0f92-5b5a-4360-81e1-3dbf7827ae2b.png)'
- en: The `src` directory contains the source files for the Jenkins plugin as well
    as tests for the plugins.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`src`目录包含Jenkins插件的源文件以及插件的测试。'
- en: The target directory is generated with the `mvn` package. There is also a `pom.xml`
    file, which Maven created when we ran the archetype sub-command.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 目标目录是通过`mvn`包生成的。还有一个`pom.xml`文件，当我们运行原型子命令时Maven创建了它。
- en: A **Project Object Model** (**POM**) is the fundamental unit of work in Maven.
    It is an XML file that contains information about the project and configuration
    details used by Maven to build the project. It contains default values for most
    projects. Examples for this include the build directory, which is `target`, the
    source directory, which is `src/main/java`, and the test source directory, which
    is `src/test/java`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**项目对象模型**（**POM**）是Maven中的基本工作单元。它是一个包含有关项目和Maven用于构建项目的配置详细信息的XML文件。它包含大多数项目的默认值。其中包括构建目录，即`target`，源目录，即`src/main/java`，以及测试源目录，即`src/test/java`。'
- en: Jenkins plugin source code explanation
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins插件源代码解释
- en: As we mentioned earlier, the `src` directory contains the source files for the
    Jenkins plugin. In order to build plugins in Jenkins, you will need to write in
    the Java programming language. Teaching the Java programming language is out of
    the scope of this book but we will briefly discuss some of the files that Maven
    created for us.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，`src`目录包含了Jenkins插件的源文件。为了在Jenkins中构建插件，您需要使用Java编程语言进行编写。教授Java编程语言超出了本书的范围，但我们将简要讨论Maven为我们创建的一些文件。
- en: Notice that Maven created a rather long directory structure, which is common,
    and, as such, the directory structure for the `helloworld` plugin is `./src/main/java/io/jenkins/plugins/sample/HelloWorldBuilder.java`. The
    test file itself is in `./src/test/java/io/jenkins/plugins/sample/HelloWorldBuilderTest.java`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Maven创建了一个相当长的目录结构，这是常见的，因此`helloworld`插件的目录结构为`./src/main/java/io/jenkins/plugins/sample/HelloWorldBuilder.java`。测试文件本身位于`./src/test/java/io/jenkins/plugins/sample/HelloWorldBuilderTest.java`。
- en: 'I have included the source code for the `HelloWorldBuild.java` class here:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里包含了`HelloWorldBuild.java`类的源代码：
- en: '[PRE18]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Notice that the `HelloWorldBuilder` class extends the `Builder` class, which
    is a Jenkins core class; and also notice that we are using a class called `BuildStepDescriptor`,
    which is also a Jenkins class. The source code for this file can be seen in my
    GitHub repository called `jenkins-plugin-example` in the `HelloWorldBuilder.java`
    ([https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/main/java/io/jenkins/plugins/sample/HelloWorldBuilder.java](https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/main/java/io/jenkins/plugins/sample/HelloWorldBuilder.java))
    file.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`HelloWorldBuilder`类扩展了`Builder`类，这是Jenkins核心类；还请注意，我们正在使用一个名为`BuildStepDescriptor`的类，这也是一个Jenkins类。此文件的源代码可以在我的GitHub存储库中的`jenkins-plugin-example`中的`HelloWorldBuilder.java`（[https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/main/java/io/jenkins/plugins/sample/HelloWorldBuilder.java](https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/main/java/io/jenkins/plugins/sample/HelloWorldBuilder.java)）文件中看到。
- en: For the test cases in `HelloWorldBuilderTest.java`,we use JUnit, which is a
    popular unit testing library for the Java programming language.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`HelloWorldBuilderTest.java`中的测试用例，我们使用了Java编程语言的流行单元测试库JUnit。
- en: '[PRE19]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The preceding Java test file has annotations such as `@Rule`, `@Override`, `@Test`,
    and `@DataBoundSetter`, which are a form of metadata that provide data about a
    program that is not part of the program itself. Annotations have no direct effect
    on the operation of the code they annotate. The source code for this file can
    be seen in my GitHub repository called `jenkins-plugin-example` in the `HelloWorldBuilderTest.java`
    file ([https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/test/java/io/jenkins/plugins/sample/HelloWorldBuilderTest.java](https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/test/java/io/jenkins/plugins/sample/HelloWorldBuilderTest.java)
    ).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 上述的Java测试文件具有诸如`@Rule`，`@Override`，`@Test`和`@DataBoundSetter`等注解，这些注解是一种元数据，提供关于程序的数据，而不是程序本身的一部分。注解对其注释的代码的操作没有直接影响。此文件的源代码可以在我的GitHub存储库中的`jenkins-plugin-example`中的`HelloWorldBuilderTest.java`文件中看到（[https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/test/java/io/jenkins/plugins/sample/HelloWorldBuilderTest.java](https://github.com/jbelmont/jenkins-plugin-example/blob/master/src/test/java/io/jenkins/plugins/sample/HelloWorldBuilderTest.java)）。
- en: Building a Jenkins plugin
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建Jenkins插件
- en: In order to build a Jenkins plugin, you need to run the `mvn install` command
    in the plugin directory.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建Jenkins插件，您需要在插件目录中运行`mvn install`命令。
- en: The `mvn install`command will both build and test the Jenkins plugin and, more
    importantly, create a file called `pluginname.hpi`; or, in our case, it will create
    a file called `jenkins-helloworld-example-plugin.hpi` in the `target` directory
    that we can use to deploy to Jenkins.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`mvn install`命令将构建和测试Jenkins插件，并且更重要的是，创建一个名为`pluginname.hpi`的文件；或者在我们的情况下，它将在`target`目录中创建一个名为`jenkins-helloworld-example-plugin.hpi`的文件，我们可以用它来部署到Jenkins。'
- en: 'I have attached a sample install run in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经在以下屏幕截图中附上了一个示例安装运行：
- en: '![](assets/4a072204-e02c-4354-a3f9-bb7506882086.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4a072204-e02c-4354-a3f9-bb7506882086.png)'
- en: Notice that this run finished by installing our Jenkins plugin into several
    locations, which we will use to install our Jenkins plugin.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此运行通过将我们的Jenkins插件安装到多个位置来完成，我们将使用这些位置来安装我们的Jenkins插件。
- en: Installing a Jenkins plugin
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Jenkins插件
- en: Now, in order to install a newly built and installed `HelloWorld` example plugin,
    we will need to go to the Jenkins Dashboard | Manage Jenkins | Manage Plugins
    view and then click the Advanced tab. Please refer to [Chapter 6](77945112-d3fe-4859-b814-d00fd09aa225.xhtml), *Writing
    Freestyle Scripts*, in the *EnvInject Plugin* section, for more details if necessary.
    You can also directly go to the plugin section by going to `scheme://domain/pluginManager`; or,
    if you are running Jenkins locally, just go to `http://localhost:8080/pluginManager/`.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了安装新构建和安装的`HelloWorld`示例插件，我们需要转到Jenkins仪表板|管理Jenkins|管理插件视图，然后点击高级选项卡。如果需要更多细节，请参阅[第6章](77945112-d3fe-4859-b814-d00fd09aa225.xhtml)，*编写自由脚本*，*EnvInject插件*部分。您还可以直接转到插件部分，方法是转到`scheme://domain/pluginManager`；或者，如果您正在本地运行Jenkins，只需转到`http://localhost:8080/pluginManager/`。
- en: 'Then make sure to click the Advanced tab or go to `http://localhost:8080/pluginManager/advanced`:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 然后确保点击高级选项卡或转到`http://localhost:8080/pluginManager/advanced`：
- en: '![](assets/b7a8ae60-2363-4a3c-b19e-9385ca841d9b.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b7a8ae60-2363-4a3c-b19e-9385ca841d9b.png)'
- en: 'You will then need to go to the *Upload Plugin* section:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您需要转到*上传插件*部分：
- en: '![](assets/f331b2f7-d8c8-4ed1-aedc-4034dcf2c77a.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f331b2f7-d8c8-4ed1-aedc-4034dcf2c77a.png)'
- en: 'Click Choose File and then find our newly created `Helloworld` Jenkins plugin,
    which should be in the directory:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 点击选择文件，然后找到我们新创建的`Helloworld` Jenkins插件，它应该在目录中：
- en: '[PRE20]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Then make sure to click the Upload button.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 然后确保点击上传按钮。
- en: 'The following is a screenshot of the newly installed `Helloworld` example plugin:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新安装的`Helloworld`示例插件的屏幕截图：
- en: '![](assets/5e98d3de-40f3-4dcd-a4bb-2c77b7ae6432.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5e98d3de-40f3-4dcd-a4bb-2c77b7ae6432.png)'
- en: Jenkins plugin ecosystem
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins插件生态系统
- en: There is a wide array of plugins available for Jenkins, and you can find the
    full list at the Jenkins plugins site ([https://plugins.jenkins.io/](https://plugins.jenkins.io/)).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins有大量可用的插件，您可以在Jenkins插件网站（[https://plugins.jenkins.io/](https://plugins.jenkins.io/)）上找到完整的列表。
- en: List of available plugins
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可用插件列表
- en: 'The following screenshot shows a plugins search related to JSON in Jenkins:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了与Jenkins中JSON相关的插件搜索：
- en: '![](assets/fa5e2c7f-f823-4b27-b1bc-b970c8b122d4.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fa5e2c7f-f823-4b27-b1bc-b970c8b122d4.png)'
- en: 'Notice that the Jenkins plugin site has multiple views that you can utilize
    besides this default view:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Jenkins插件网站除了默认视图之外，还有多个视图可供您使用：
- en: '![](assets/816f5e50-aaf0-4297-bb4d-ad498b155d6b.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/816f5e50-aaf0-4297-bb4d-ad498b155d6b.png)'
- en: Notice that I clicked the middle icon, but you can also click the rightmost
    icon to get a small outline view. The search defaults to relevant search items,
    but you can choose different search criteria, such as Most Installed, Trending
    and Release Date.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我点击了中间的图标，但您也可以点击最右边的图标以获得一个小纲要视图。搜索默认为相关搜索项，但您可以选择不同的搜索条件，例如最常安装、趋势和发布日期。
- en: Summary
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the Maven build tool for Java and how to
    install it for Windows, Linux, and macOS. You also learned about how to create
    a Jenkins plugin by using the Maven build tool, and we briefly discussed some
    Java syntax and how to install a Jenkins plugin by using the Advanced Options
    in the manage plugins UI in the Jenkins dashboard. We also looked at the Jenkins
    plugin ecosystem.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您了解了Java的Maven构建工具以及如何在Windows、Linux和macOS上安装它。您还学习了如何使用Maven构建工具创建Jenkins插件，我们简要讨论了一些Java语法以及如何使用Jenkins仪表板中的管理插件UI中的高级选项来安装Jenkins插件。我们还研究了Jenkins插件生态系统。
- en: Questions
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the build tool that we used to create a Jenkins plugin?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用来创建Jenkins插件的构建工具是什么？
- en: Which package manager did we use to install Maven in the Windows operating system?
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在Windows操作系统中使用了哪个软件包管理器来安装Maven？
- en: Which package manager did we use to install Maven in the macOS operating system?
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在macOS操作系统中使用了哪个软件包管理器来安装Maven？
- en: What was the name of the configuration file that we briefly discussed in our
    `HelloWorld` plugin?
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在`HelloWorld`插件中简要讨论的配置文件的名称是什么？
- en: What is the URL we can directly navigate to in order to manage plugins in Jenkins?
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以直接导航到哪个URL来管理Jenkins中的插件？
- en: What was the command we used to build and install a Jenkins plugin in Maven?
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用来在Maven中构建和安装Jenkins插件的命令是什么？
- en: What type of file does Maven create for us so that we can install a Jenkins
    plugin?
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Maven为我们创建了哪种类型的文件，以便我们可以安装Jenkins插件？
- en: Further reading
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Please check out the book *Extending Jenkins* ([https://www.amazon.com/dp/B015CYBP2A/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1](https://www.amazon.com/dp/B015CYBP2A/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1)),
    by Packt Publishing, to learn more about Jenkins plugins.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看Packt Publishing出版的书籍*扩展Jenkins*（[https://www.amazon.com/dp/B015CYBP2A/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1](https://www.amazon.com/dp/B015CYBP2A/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1)）了解更多关于Jenkins插件的信息。
