- en: Test Planning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试规划
- en: Test planning is the most essential stage in the STLC. Planning gives test professionals
    the opportunity to build an understanding of the problem in terms of the complexity
    of requirements. This is achieved by analyzing the workflow based on the use cases,
    and then deriving the test cases from it. A requirements document is the test
    basis that specifies the functionality of the application. The test plan then
    specifies how those items will be covered in the test by using several artifacts,
    including the test assignment, approach, and test strategy. The test strategy
    is a particularly important artifact of the test process.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 测试规划是STLC中最重要的阶段。规划为测试专业人员提供了建立对问题的理解的机会，以了解需求的复杂性。这是通过分析基于用例的工作流程，然后从中推导测试用例来实现的。需求文档是指定应用功能的测试基础。然后，测试计划通过使用多种工件，包括测试分配、方法和测试策略，指定了如何在测试中覆盖这些项目。测试策略是测试过程中特别重要的工件。
- en: We will cover different aspects of test planning and test strategy while understanding
    the relationship between the requirements and test plan. We will also look at
    how Jira can help us in defining and comparing strategies for our testing needs
    using synapseRT, Zephyr, and the Jira Test Management tool.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在理解需求和测试计划之间的关系的同时，我们将涵盖测试规划和测试策略的不同方面。我们还将看看Jira如何帮助我们使用synapseRT、Zephyr和Jira测试管理工具来定义和比较我们的测试需求的策略。
- en: 'In this chapter, we will learn about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Creating and organizing a test plan using Jira plugins
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Jira插件创建和组织测试计划
- en: Defining and implementing the test strategy
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义和实施测试策略
- en: Establishing relations between requirements and the test plan
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立需求和测试计划之间的关系
- en: Creating and organizing a test plan using Jira plugins
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Jira插件创建和组织测试计划
- en: There are various workflows involved in the test planning phase. If one is utilizing
    the TMap approach, the test planning phase corresponds to the planning and control
    phase in the TMap life cycle. The planning phase consists of creating the test
    strategy using product risk analysis, estimation, and planning, while the control
    phase aims for continuous quality improvement by monitoring, reporting, and adjusting
    to reach the test goals. Let's delve into learning the activities in the test
    planning phase.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 测试规划阶段涉及各种工作流程。如果使用TMap方法，测试规划阶段对应于TMap生命周期中的规划和控制阶段。规划阶段包括使用产品风险分析、估算和规划创建测试策略，而控制阶段旨在通过监控、报告和调整实现持续的质量改进以达到测试目标。让我们深入了解测试规划阶段的活动。
- en: Once the test assignment has been confirmed, the team starts discussions about
    the stated specifications during the planning meeting, where the team tries to
    break down vague and complex ...
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦测试分配确认，团队开始讨论规划会议期间所述规格，团队试图解决模糊和复杂的问题...
- en: synapseRT
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: synapseRT
- en: 'A test plan in synapseRT is nothing but another issue type. Once we create
    a test plan ticket, it’s time to add details, such as priority, descriptions,
    and current status. After that, we can either create a new test case or add test
    suites with the desired test cases. Furthermore, we can also create test cycles
    to segregate these test cases and make them part of a selected cycle:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在synapseRT中，测试计划只是另一种问题类型。一旦我们创建了一个测试计划票，就该是添加优先级、描述和当前状态的时间了。之后，我们可以创建一个新的测试用例或者添加所需的测试用例的测试套件。此外，我们还可以创建测试周期来分隔这些测试用例，并使它们成为所选周期的一部分：
- en: '![](Images/9a2d1a42-41c1-4184-b35c-cffa8db9af80.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/9a2d1a42-41c1-4184-b35c-cffa8db9af80.png)'
- en: Creating a test plan using synapseRT
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用synapseRT创建测试计划
- en: Zephyr
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zephyr
- en: The test plan option is available with Zephyr Enterprise version only, where
    the user can create and manage test plans using test cycles.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 测试计划选项仅适用于Zephyr企业版，用户可以使用测试周期创建和管理测试计划。
- en: Please feel free to explore the Zephyr Enterprise version from this link: [https://zephyrdocs.atlassian.net/wiki/spaces/ZE6/pages/149455000/Test+Planning](https://zephyrdocs.atlassian.net/wiki/spaces/ZE6/pages/149455000/Test+Planning).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请随意从此链接探索Zephyr企业版：[https://zephyrdocs.atlassian.net/wiki/spaces/ZE6/pages/149455000/Test+Planning](https://zephyrdocs.atlassian.net/wiki/spaces/ZE6/pages/149455000/Test+Planning)。
- en: The Test Management tool
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试管理工具
- en: 'In order to create a test plan in the Test Management tool, we need to follow
    these steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在测试管理工具中创建测试计划，我们需要按照以下步骤进行：
- en: 'Navigate to the Tests | Plans section. Click on the +New button to create a
    new plan. There is an option on the left-hand side panel to create multiple folders
    and organize test plans under main or subfolders:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到Tests | Plans部分。单击+New按钮创建一个新计划。在左侧面板上有一个选项，可以创建多个文件夹，并将测试计划组织在主文件夹或子文件夹下：
- en: '![](Images/09ac4152-73bd-4264-8c4c-dce77891d922.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/09ac4152-73bd-4264-8c4c-dce77891d922.png)'
- en: 'Once we add the test plan with some basic details such as Name, Objective,
    Status, or Owner, then we can move onto the Traceability tab:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们添加了一些基本细节，比如名称、目标、状态或所有者，我们就可以转到Traceability选项卡：
- en: '![](Images/f0fbccbe-8df4-498b-82bc-c49268b804be.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f0fbccbe-8df4-498b-82bc-c49268b804be.png)'
- en: 'Under the Traceability option, we can search for the existing test cycles and
    select one or multiple test cycles to add them to a test plan. While searching
    for existing test cycles, it also shows the execution status of each test cycle
    with the owner’s details, date, and the defects identified:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Traceability选项下，我们可以搜索现有的测试周期，并选择一个或多个测试周期将其添加到测试计划中。在搜索现有的测试周期时，它还显示了每个测试周期的执行状态，包括所有者的详细信息、日期和已识别的缺陷：
- en: '![](Images/7febf2ab-1482-41bb-9cfe-fd979a2a3820.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/7febf2ab-1482-41bb-9cfe-fd979a2a3820.png)'
- en: Defining and implementing the test strategy
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义和实施测试策略
- en: Your test strategy completely depends on the testing needs of an application;
    primarily, the risk class of each requirement. For example, if the requirement
    is to verify whether an application can process requests from 1,000 users accessing
    the application concurrently, then we need to add performance testing to our testing
    strategy. We can perform stress testing by discovering the breakpoint above the
    permitted threshold as a part of our test strategy. We can also perform load testing
    by analyzing the performance of the application based on the permissible user
    limits hitting the application concurrently. We can also measure the response
    time of an application in order to render all the page components/objects ...
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您的测试策略完全取决于应用程序的测试需求；主要是每个需求的风险等级。例如，如果需求是验证应用程序是否能够处理同时访问应用程序的1,000个用户的请求，那么我们需要将性能测试添加到我们的测试策略中。作为测试策略的一部分，我们可以通过发现超过允许阈值的断点来执行压力测试。我们还可以通过分析基于允许用户限制同时访问应用程序的性能来执行负载测试。我们还可以测量应用程序的响应时间，以呈现所有页面组件/对象...
- en: Establishing relations between requirements and the test plan
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建立需求和测试计划之间的关系
- en: As we saw in [Chapter 3](e4241f7d-9db5-42d9-b626-d134c226d2ef.xhtml), *Understanding
    Components of Testing with Jira*,the traceability matrix is useful for obtaining
    a clear understanding of the project progress and identify requirements that demand
    more testing efforts or have more defects. The traceability matrix also indicates
    the test strategy, the type of test activity, and the tasks that have been defined
    and planned by test professionals to verify stated requirements. This gets created
    early in the phase so that it can be reviewed by project stakeholders, which affords
    sufficient time to monitor it, provide feedback, and adjust the test process as
    required by the team to achieve the test goal.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第3章](e4241f7d-9db5-42d9-b626-d134c226d2ef.xhtml)中所看到的，“在Jira中理解测试组件”，可追溯矩阵对于清晰了解项目进展并确定需要更多测试工作或存在更多缺陷的需求非常有用。可追溯矩阵还指示了测试策略、测试活动的类型以及测试专业人员定义和计划的任务，以验证所述需求。这在阶段初期创建，以便项目利益相关者审查，从而有足够的时间监控它，提供反馈，并根据团队的要求调整测试流程以实现测试目标。
- en: Establishing relations between the requirements and the test plan is the first
    part of creating the traceability matrix. Whenever a requirement ticket is created
    in Jira, test professionals can prepare a test plan ticket and link it to the
    requirement. One requirement may have a master test plan, and/or multiple sub-test
    plans, depending on testing requirements. This gives an opportunity to project
    managers to track the test planning details for the selected requirement. These
    requirements can vary from an Epic or Story with a targeted release deadline,
    to any bugs reported by customers that require huge amounts of testing.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 建立需求和测试计划之间的关系是创建可追溯矩阵的第一步。每当在Jira中创建需求票证时，测试专业人员可以准备一个测试计划票证并将其链接到需求。一个需求可能有一个主测试计划和/或多个子测试计划，具体取决于测试需求。这为项目经理提供了跟踪所选需求的测试计划细节的机会。这些需求可以是具有目标发布截止日期的史诗或故事，也可以是客户报告的需要大量测试的任何错误。
- en: Let’s understand how we can establish the relationship between the requirements
    and the test plan using Jira plugins.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解如何使用Jira插件建立需求和测试计划之间的关系。
- en: synapseRT
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: synapseRT
- en: 'It’s easy to establish a relationship between a requirement and test plan using
    the test cases. While creating a test plan in the preceding section, we saw how
    we can add test cases to our test plan. In the same way, you can add the same
    test cases to the requirement ticket as well. The following screenshot depicts
    a Story issue type, with the four test cases added to it under the Test Cases
    section:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用测试用例很容易建立需求和测试计划之间的关系。在前面的部分创建测试计划时，我们看到了如何将测试用例添加到测试计划中。同样，您也可以将相同的测试用例添加到需求票证中。下面的屏幕截图显示了一个故事问题类型，其中包含了四个测试用例：
- en: '![](Images/810fb94c-887c-4445-9dd8-99e1ebca26c9.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/810fb94c-887c-4445-9dd8-99e1ebca26c9.png)'
- en: Once we add the same test cases to the test plan, we can see requirement coverage
    under the Requirement section, as shown in the following screenshot. This indicates
    that, in order to verify the requirement, the tester has added four ...
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将相同的测试用例添加到测试计划中，我们可以在需求部分下看到需求覆盖率，如下面的屏幕截图所示。这表明，为了验证需求，测试人员已经添加了四个...
- en: Zephyr
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zephyr
- en: 'As the test plan feature is only available in Zephyr Enterprise, we can link
    the test cases to the requirements in order to establish a relationship between
    them. As shown in the following screenshot, open the existing test case and navigate
    to the More Actions | Link option. Then, search for the relevant requirement issue
    ticket and link it, shown as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 由于测试计划功能仅在Zephyr Enterprise中可用，我们可以将测试用例与需求关联起来，以建立它们之间的关系。如下面的屏幕截图所示，打开现有的测试用例，转到“更多操作”|链接选项。然后，搜索相关的需求问题票证并进行链接，如下所示：
- en: '![](Images/06aa1d2f-813a-4f96-af4a-45e5f724bf54.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/06aa1d2f-813a-4f96-af4a-45e5f724bf54.png)'
- en: The Test Management tool
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试管理工具
- en: 'In the case of the Test Management tool, go to Tests | Plan and select the
    test plan for which you want to add the requirement. Then, go to the Traceability
    section, where you can search for existing user stories or requirements and link
    them to the test plan as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试管理工具中，转到“测试”|计划，并选择要添加需求的测试计划。然后，转到可追溯性部分，在那里您可以搜索现有的用户故事或需求，并将它们链接到测试计划，如下所示：
- en: '![](Images/2df9bc11-b98f-4def-baa3-5b267276d9f8.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/2df9bc11-b98f-4def-baa3-5b267276d9f8.png)'
- en: 'As you can see in the following screenshot, the Issues section shows the relevant
    requirements for which this test plan has been created, along with the test cycles
    that need to be executed in order to complete the verification process:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如下面的屏幕截图所示，“问题”部分显示了为其创建了该测试计划的相关需求，以及需要执行的测试周期，以完成验证过程：
- en: '![](Images/315621f1-78f2-41b0-9531-8bd23f8ae0fe.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/315621f1-78f2-41b0-9531-8bd23f8ae0fe.png)'
- en: Summary
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered different aspects of test planning and test strategy,
    while learning about the relationship between the requirements and the test plan. We
    understood the components of a general test plan that can be used during the test
    planning process. We also learned how to write test plans using Jira plugins.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了测试规划和测试策略的不同方面，同时了解了需求和测试计划之间的关系。我们了解了通用测试计划的组成部分，可以在测试规划过程中使用。我们还学会了如何使用Jira插件编写测试计划。
- en: There are various ways to define a test strategy. We looked at an example of
    creating a test strategy for a banking application using the TMap approach. In
    order to create a traceability matrix, we need to establish a relationship between
    test cases and test plans, and the test requirements. In this chapter, we saw
    precisely how we can link test plans to their related requirements.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种各样的方法来定义测试策略。我们看了一个使用TMap方法为银行应用创建测试策略的例子。为了创建一个可追溯的矩阵，我们需要建立测试用例和测试计划以及测试需求之间的关系。在本章中，我们清楚地看到了如何将测试计划与其相关的需求联系起来。
- en: In the next chapter, we will learn about the process of test case design and
    creation. We will also learn about organizing test cases, and hone our skills
    in reusing test cases and test data.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习测试用例设计和创建的过程。我们还将学习如何组织测试用例，并磨练重复使用测试用例和测试数据的技能。
