- en: Observability and Monitoring on Kubernetes
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes上的可观测性和监控
- en: In this chapter, we will discuss the built-in Kubernetes tools and the popular
    third-party monitoring options for your containerized DevOps environment. You
    will learn how to monitor metrics for performance analysis, and also how to monitor
    and manage the real-time cost of Kubernetes resources.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论内置的Kubernetes工具和流行的第三方监控选项，适用于您的容器化DevOps环境。您将学习如何监视性能分析的指标，以及如何监视和管理Kubernetes资源的实时成本。
- en: 'By the end of this chapter, you should have knowledge of the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您应该掌握以下知识：
- en: Monitoring in Kubernetes
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Kubernetes中进行监控
- en: Inspecting containers
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查容器
- en: Monitoring using Amazon CloudWatch
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon CloudWatch进行监控
- en: Monitoring using Google Stackdriver
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Google Stackdriver进行监控
- en: Monitoring using Azure Monitor
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure Monitor进行监控
- en: Monitoring Kubernetes using Prometheus and Grafana
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Prometheus和Grafana监控Kubernetes
- en: Monitoring and performance analysis using Sysdig
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Sysdig进行监控和性能分析
- en: Managing the cost of resources using Kubecost
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Kubecost管理资源成本
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The recipes in this chapter assume that you have deployed a functional Kubernetes
    cluster following one of the recommended methods described in [Chapter 1](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml), *Building
    Production-Ready Kubernetes Clusters*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的配方假定您已经部署了一个功能齐全的Kubernetes集群，遵循[第1章](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)中描述的推荐方法之一，*构建生产就绪的Kubernetes集群*。
- en: Kubernetes' command-line tool, `kubectl`, will be used for the rest of the recipes
    in this chapter since it's the main command-line interface for running commands
    against Kubernetes clusters. We will also use Helm where Helm charts are available
    to deploy solutions.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes的命令行工具`kubectl`将用于本章中其余的配方，因为它是针对Kubernetes集群运行命令的主要命令行界面。我们还将使用Helm，在Helm图表可用的情况下部署解决方案。
- en: Monitoring in Kubernetes
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Kubernetes中进行监控
- en: In this section, we will configure our Kubernetes cluster to get core metrics,
    such as CPU and memory. You will learn how to monitor Kubernetes metrics using
    the built-in Kubernetes tools both in the CLI and on the UI.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将配置我们的Kubernetes集群以获取核心指标，如CPU和内存。您将学习如何使用内置的Kubernetes工具在CLI和UI中监视Kubernetes指标。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Make sure you have a Kubernetes cluster ready and `kubectl` configured to manage
    the cluster resources.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已准备好Kubernetes集群，并配置`kubectl`以管理集群资源。
- en: 'Clone the `k8sdevopscookbook/src` repository to your workstation to use the
    manifest files in the `chapter8` directory:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 将`k8sdevopscookbook/src`存储库克隆到您的工作站，以使用`chapter8`目录中的清单文件：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The *Monitoring metrics using Kubernetes Dashboard* recipe requires Kubernetes
    Dashboard v2.0.0 or later to function. If you want to add metric functionality
    to the dashboard, make sure that you have Kubernetes Dashboard installed by following
    the instructions in the *Deploying Kubernetes Dashboard* recipe in [Chapter 1](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml),* Building
    Production-Ready Kubernetes Clusters*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用Kubernetes仪表板监视指标*配方需要Kubernetes仪表板v2.0.0或更高版本才能正常运行。如果您想要向仪表板添加指标功能，请确保您已按照[第1章](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)中的*部署Kubernetes仪表板*配方中的说明安装了Kubernetes仪表板，*构建生产就绪的Kubernetes集群*。'
- en: How to do it…
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This section is further divided into the following subsections to make the
    process easier:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本节进一步分为以下子节，以使流程更加简单：
- en: Adding metrics using Kubernetes Metrics Server
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Kubernetes Metrics Server添加指标
- en: Monitoring metrics using the CLI
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CLI监控指标
- en: Monitoring metrics using Kubernetes Dashboard
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Kubernetes仪表板监视指标
- en: Monitoring Node Health
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控节点健康
- en: Adding metrics using Kubernetes Metrics Server
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Kubernetes Metrics Server添加指标
- en: 'Getting core system metrics such as CPU and memory not only provides useful
    information, but is also required by extended Kubernetes functionality such as
    Horizontal Pod Autoscaling, which we mentioned in [Chapter 7](7b696c2a-de7c-4adc-9ecc-f5bf65c288c5.xhtml),* Scaling
    and Upgrading Applications*:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 获取核心系统指标，如CPU和内存，不仅提供有用的信息，而且还是扩展Kubernetes功能所必需的，比如我们在[第7章](7b696c2a-de7c-4adc-9ecc-f5bf65c288c5.xhtml)中提到的*扩展和升级应用*中的水平Pod自动缩放：
- en: 'Clone the Metrics Server repository to your client by running the following
    command:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令将Metrics Server存储库克隆到您的客户端：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Deploy the Metrics Server by applying the manifest in the `metrics-server/deploy/1.8+`
    directory by running the following command:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令，在`metrics-server/deploy/1.8+`目录中应用清单来部署Metrics Server：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This command will create the resources required in the `kube-space` namespace.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将在`kube-space`命名空间中创建所需的资源。
- en: Monitoring metrics using the CLI
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用CLI监控指标
- en: 'As part of the Metrics Server, the Resource Metrics API provides access to
    CPU and memory resource metrics for pods and nodes. Let''s use the Resource Metrics
    API to access the metrics data from the CLI:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Metrics Server的一部分，资源指标API提供对Pod和节点的CPU和内存资源指标的访问。让我们使用资源指标API从CLI访问指标数据：
- en: 'First, let''s display node resource utilization:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们显示节点资源利用率：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The command will return utilized CPU and memory on all your Kubernetes nodes.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令将返回所有Kubernetes节点上已使用的CPU和内存。
- en: There are a couple of ways to use the metrics information. First of all, at
    any given time, usage of both CPU and memory should be below your desired threshold,
    otherwise new nodes need to be added to your cluster to handle services smoothly.
    Balanced utilization is also important, which means that if the percentage of
    memory usage is higher than the average percentage of CPU usage, you may need
    to consider changing your cloud instance type to use better-balanced VM instances.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种使用指标信息的方法。首先，在任何给定时间，CPU和内存的使用量都应低于您的期望阈值，否则需要向集群添加新节点以平稳处理服务。平衡利用也很重要，这意味着如果内存使用的百分比高于CPU使用的平均百分比，您可能需要考虑更改云实例类型以使用更平衡的VM实例。
- en: 'Display pod resource utilization in any namespace. In this example, we are
    listing the pods in the `openebs` namespace:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任何命名空间中显示Pod资源利用率。在此示例中，我们正在列出`openebs`命名空间中的Pod：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The command should return the utilized CPU and memory on all your pods. Kubernetes
    features such as Horizontal Pod Scaler can utilize this information to scale your
    pods.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令应返回所有Pod的已使用CPU和内存。Kubernetes功能，如水平Pod缩放器，可以利用此信息来调整您的Pod。
- en: Monitoring metrics using Kubernetes Dashboard
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Kubernetes仪表板监控指标
- en: By default, Kubernetes Dashboard doesn't display detailed metrics unless Kubernetes
    Metrics Server is installed and the `kubernetes-metrics-scraper` sidecar container
    is running.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，除非安装了Kubernetes Metrics Server并且`kubernetes-metrics-scraper`辅助容器正在运行，否则Kubernetes仪表板不会显示详细的指标。
- en: 'Let''s first verify that all the necessary components are running, and then
    we will see how to access the metrics data from Kubernetes Dashboard:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先验证所有必要的组件是否正在运行，然后我们将看到如何从Kubernetes仪表板访问指标数据：
- en: 'Verify that the `kubernetes-metrics-scraper` pod is running. If not, install
    Kubernetes Dashboard by following the instructions in the *Deploying the Kubernetes
    Dashboard* recipe in [Chapte](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)[r](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)
    [1](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)*, Building Production-Ready Kubernetes
    Clusters*:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证`kubernetes-metrics-scraper` Pod是否正在运行。如果没有，请按照[第1章](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)*，构建生产就绪的Kubernetes集群*中的*部署Kubernetes仪表板*配方中的说明安装Kubernetes仪表板：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'On Kubernetes Dashboard, select Namespaces and click on the Overview menu.
    This view shows pods in that namespace with their CPU and memory utilization:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kubernetes仪表板上，选择命名空间，然后单击“概述”菜单。此视图显示该命名空间中的Pod及其CPU和内存利用率：
- en: '![](assets/aa6b9895-ed40-4158-a8d2-1f1658e952a9.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/aa6b9895-ed40-4158-a8d2-1f1658e952a9.png)'
- en: 'On Kubernetes Dashboard, select a namespace and click on Pods in the Overview
    menu. This view shows the overall CPU and memory utilization of the workloads
    within the selected namespace:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kubernetes仪表板上，选择一个命名空间，然后在“概述”菜单中单击Pods。此视图显示所选命名空间中工作负载的整体CPU和内存利用率：
- en: '![](assets/7dd1d037-341d-490c-b402-32f4cd607cae.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7dd1d037-341d-490c-b402-32f4cd607cae.png)'
- en: 'Select Nodes under the Cluster menu. This view shows nodes in the cluster with
    CPU and memory utilization:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在集群菜单下选择节点。此视图显示集群中的节点以及CPU和内存的利用率：
- en: '![](assets/a7514a43-71a6-4a60-8b0e-ed2a8b3ba896.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a7514a43-71a6-4a60-8b0e-ed2a8b3ba896.png)'
- en: If the requests and limits are set very high, then they can take up more than
    their expected share of the cluster.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果请求和限制设置得非常高，那么它们可能会占用集群超出预期的份额。
- en: Monitoring node health
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 监控节点健康
- en: 'In this recipe, we will learn how to create a DaemonSet in the Kubernetes cluster
    to monitor node health. The node problem detector will collect node problems from
    daemons and will report them to the API server as NodeCondition and Event:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何在Kubernetes集群中创建一个DaemonSet来监视节点健康。节点问题检测器将从守护程序收集节点问题，并将其报告给API服务器作为NodeCondition和Event：
- en: 'From the `/src/chapter8` folder first, inspect the content of the `node-problem-detector.yaml` file
    and create the DaemonSet to run the node problem detector:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，从`/src/chapter8`文件夹中检查`node-problem-detector.yaml`文件的内容，并创建DaemonSet来运行节点问题检测器：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Get a list of the nodes in the cluster. This command will return both worker
    and master nodes:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取集群中节点的列表。此命令将返回工作节点和主节点：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Describe a node''s status by replacing the node name in the following command
    with one of your node names and running it. In the output, examine the `Conditions`
    section for error messages. Here''s an example of the output:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将以下命令中的节点名称替换为您的节点名称并运行它来描述节点的状态。在输出中，检查“Conditions”部分是否有错误消息。以下是输出的示例：
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Additionally, you can check for `KernelDeadlock`, `MemoryPressure`, and `DiskPressure`
    conditions by replacing the last part of the command with one of the conditions.
    Here is an example for `KernelDeadlock`:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，您可以通过将命令的最后一部分替换为其中一个条件来检查`KernelDeadlock`、`MemoryPressure`和`DiskPressure`条件。以下是`KernelDeadlock`的示例：
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The Node Problem Detector can detect unresponsive runtime daemons; hardware
    issues such as bad CPU, memory, or disk; kernel issues including kernel deadlock
    conditions; corrupted filesystems; unresponsive runtime daemons; and also infrastructure
    daemon issues such as NTP service outages.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 节点问题检测器可以检测无响应的运行时守护程序；硬件问题，如坏的CPU、内存或磁盘；内核问题，包括内核死锁条件；损坏的文件系统；无响应的运行时守护程序；以及基础设施守护程序问题，如NTP服务中断。
- en: See also
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Kubernetes Metrics Server Design Document: [https://github.com/kubernetes/community/blob/master/contributors/design-proposals/instrumentation/metrics-server.md](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/instrumentation/metrics-server.md)
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes Metrics Server设计文档：[https://github.com/kubernetes/community/blob/master/contributors/design-proposals/instrumentation/metrics-server.md](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/instrumentation/metrics-server.md)
- en: Configuring and using the monitoring stack in OpenShift Container Platform: [https://access.redhat.com/documentation/en-us/openshift_container_platform/4.2/html/monitoring/index](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.2/html/monitoring/index)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在OpenShift容器平台中配置和使用监控堆栈：[https://access.redhat.com/documentation/en-us/openshift_container_platform/4.2/html/monitoring/index](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.2/html/monitoring/index)
- en: Krex, a Kubernetes Resource Explorer: [https://github.com/kris-nova/krex](https://github.com/kris-nova/krex)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Krex，一个Kubernetes资源浏览器：[https://github.com/kris-nova/krex](https://github.com/kris-nova/krex)
- en: Inspecting containers
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查容器
- en: In this section, we will troubleshoot problems related to pods stuck in Pending,
    ImagePullBackOff, or CrashLoopBackOff states. You will learn how to inspect and
    debug pods that are having deployment problems in Kubernetes.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将解决与pod卡在Pending、ImagePullBackOff或CrashLoopBackOff状态相关的问题。您将学习如何检查和调试在Kubernetes中遇到部署问题的pod。
- en: Getting ready
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have a Kubernetes cluster ready and `kubectl` configured to manage
    the cluster resources.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已准备好一个Kubernetes集群，并配置了`kubectl`以管理集群资源。
- en: How to do it…
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'This section is further divided into the following subsections to make the
    process easier:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 该部分进一步分为以下子部分，以使过程更加简单：
- en: Inspecting pods in Pending status
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查处于Pending状态的pod
- en: Inspecting pods in ImagePullBackOff status
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查处于ImagePullBackOff状态的pod
- en: Inspecting pods in CrashLoopBackOff status
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查处于CrashLoopBackOff状态的pod
- en: Inspecting pods in Pending status
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查处于Pending状态的pod
- en: 'When you deploy applications on Kubernetes, it is inevitable that soon or later
    you will need to get more information on your application. In this recipe, we
    will learn to inspect common pods problem of pods stuck in Pending status:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在Kubernetes上部署应用程序时，不可避免地会需要获取有关应用程序的更多信息。在这个示例中，我们将学习检查常见的pod问题，即pod卡在Pending状态：
- en: 'In the `/src/chapter8` folder, inspect the content of the `mongo-sc.yaml` file
    and deploy it running the following command. The deployment manifest includes
    MongoDB Statefulset with three replicas, Service and will get stuck in Pending
    state due mistake with a parameter and we will inspect it to find the source:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/src/chapter8`文件夹中，检查`mongo-sc.yaml`文件的内容，并运行以下命令部署它。部署清单包括具有三个副本的MongoDB
    Statefulset，Service，并且由于参数错误而卡在Pending状态，我们将对其进行检查以找到问题的根源：
- en: '[PRE10]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'List the pods by running the following command. You will notice that the status
    is `Pending` for the `mongo-0` pod:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令列出pod。您会注意到`mongo-0` pod的状态是`Pending`：
- en: '[PRE11]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Get additional information on the pods using the `kubectl describe pod` command
    and look for the `Events` section. In this case, `Warning` is pointing to an unbound
    `PersistentVolumeClaim`:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe pod`命令获取有关pod的其他信息，并查找`Events`部分。在这种情况下，“Warning”指向未绑定的`PersistentVolumeClaim`：
- en: '[PRE12]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now that we know that we need to look at the PVC status, thanks to the results
    of the previous step, let''s get the list of PVCs in order to inspect the issue.
    You will see that PVCs are also stuck in the `Pending` state:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们知道需要查看PVC状态，这要归功于上一步的结果，让我们获取PVC列表以检查问题。您会看到PVC也处于“Pending”状态：
- en: '[PRE13]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Get additional information on the PVCs using the `kubectl describe pvc` command,
    and look where the events are described. In this case, `Warning` is pointing to
    a missing storage class named `storageclass`:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe pvc`命令获取有关PVC的其他信息，并查看事件的描述位置。在这种情况下，“Warning”指向一个名为`storageclass`的缺失存储类：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'List the storage classes. You will notice that you don''t have the storage
    class named `storageclass`:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出存储类。您会注意到没有名为`storageclass`的存储类：
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now we know that the manifest file we applied in *step 1* used a storage class
    that does not exist. In this case, you can either create the missing storage class
    or edit the manifest to include an existing storage class to fix the issue.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们知道我们在*步骤1*中应用的清单文件使用了一个不存在的存储类。在这种情况下，您可以创建缺失的存储类，或者编辑清单以包含现有的存储类来解决问题。
- en: 'Let''s create the missing storage class from an existing default storage class
    like shown in the example below `gp2`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个缺失的存储类，从现有的默认存储类中创建，就像下面的示例中所示`gp2`：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'List the pods by running the following command. You will notice that status
    is now `Running` for all pods that were previously `Pending` in *step 2*:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令列出pod。您会注意到在*步骤2*中先前处于`Pending`状态的所有pod现在的状态为`Running`：
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You have successfully learned how to inspect why a pod is pending and fix it.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功学会了如何检查为什么pod处于挂起状态并修复它。
- en: Inspecting pods in ImagePullBackOff status
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查处于ImagePullBackOff状态的pod
- en: 'Sometimes your manifest files may have a typo in the image name, or the image
    location may have changed. As a result, when you deploy the application, the container
    image will not be found and the deployment will get stuck. In this recipe, we
    will learn how to inspect the common problem of pods becoming stuck in `ImagePullBackOff`
    status:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您的清单文件可能会在图像名称中出现拼写错误，或者图像位置可能已更改。因此，当您部署应用程序时，容器图像将无法找到，并且部署将被卡住。在这个教程中，我们将学习如何检查处于“ImagePullBackOff”状态的pod的常见问题：
- en: 'In the `/src/chapter8` folder, inspect the contents of the `mongo-image.yaml` file
    and deploy it by running the following command. The deployment manifest includes
    MongoDB Statefulset with three replicas, Service and will get stuck in ImagePullBackOff state
    due to typo in the container image name and we will inspect it to find the source:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/src/chapter8`文件夹中，检查`mongo-image.yaml`文件的内容，并通过运行以下命令部署它。部署清单包括具有三个副本的MongoDB
    Statefulset，Service，并且由于容器图像名称中的拼写错误而被卡住在ImagePullBackOff状态，我们将对其进行检查以找到源：
- en: '[PRE18]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'List the pods by running the following command. You will notice that the status
    of the `mongo-0` pod is `ImagePullBackOff`:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令列出pod。您会注意到`mongo-0` pod的状态为`ImagePullBackOff`：
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Get additional information on the pods using the `kubectl describe pod` command
    and look for the `Events` section. In this case, `Warning` is pointing to a failure
    to pull the `mongi` image:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe pod`命令获取有关pod的其他信息，并查找`Events`部分。在这种情况下，“Warning”指向未能拉取`mongi`图像的失败：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now we know that we need to confirm the container image name. The correct name
    is supposed to be `mongo`. Let''s edit the manifest file, `mongo-image.yaml`,
    and change the image name to `mongo` as follows:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们知道需要确认容器图像名称。正确的名称应该是`mongo`。让我们编辑清单文件`mongo-image.yaml`，并将图像名称更改为`mongo`，如下所示：
- en: '[PRE21]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Delete and redeploy the resource by running the following commands:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令删除并重新部署资源：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'List the pods by running the following command. You will notice that the status
    is now `Running` for all pods that were previously in `ImagePullBackOff` status
    in *s**tep 2*:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令列出pod。您会注意到在*步骤2*中先前处于`ImagePullBackOff`状态的所有pod现在的状态为`Running`：
- en: '[PRE23]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: You have successfully learned to inspect a pod with a status of `ImagePullBackOff`
    and troubleshoot it.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功学会了检查状态为`ImagePullBackOff`的pod并进行故障排除。
- en: Inspecting pods in CrashLoopBackOff status
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查处于CrashLoopBackOff状态的pod
- en: Inspecting pods in `CrashLoopBackOff` status is fundamentally similar to inspecting
    Pending pods, but might also require a bit more knowledge of the container workload
    you are creating. `CrashLoopBackOff` occurs when the application inside the container
    keeps crashing, the parameters of the pod are configured incorrectly, a liveness
    probe failed, or an error occurred when deploying on Kubernetes.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 检查处于`CrashLoopBackOff`状态的Pod与检查处于挂起状态的Pod基本类似，但可能还需要更多关于您正在创建的容器工作负载的知识。当容器内的应用程序不断崩溃、Pod的参数配置不正确、存活探针失败或在Kubernetes上部署时发生错误时，就会发生`CrashLoopBackOff`。
- en: 'In this recipe, we will learn how to inspect the common problem of pods becoming
    stuck in `CrashLoopBackOff` status:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何检查Pod陷入`CrashLoopBackOff`状态的常见问题：
- en: 'In the `/src/chapter8` folder, inspect the contents of the `mongo-config.yaml` file
    and deploy it running the following command. The deployment manifest includes
    a MongoDB statefulset with three replicas, Service and will get stuck in CrashLoopBackOff state
    due mistake with a missing configuration file and we will inspect it to find the
    source:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/src/chapter8`文件夹中，检查`mongo-config.yaml`文件的内容，并运行以下命令部署它。部署清单包括一个具有三个副本的MongoDB有状态集，Service，并由于缺少配置文件而陷入`CrashLoopBackOff`状态，我们将对其进行检查以找到源：
- en: '[PRE24]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'List the pods by running the following command. You will notice that the status
    is `CrashLoopBackOff` or `Error` for the `mongo-0` pod:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令列出Pod。您会注意到`mongo-0` Pod的状态为`CrashLoopBackOff`或`Error`：
- en: '[PRE25]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Get additional information on the pods using the `kubectl describe pod` command
    and look for the `Events` section. In this case, the `Warning` shows that the
    container has restarted, but it is not pointing to any useful information:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe pod`命令获取有关Pod的附加信息，并查找`Events`部分。在这种情况下，`Warning`显示容器已重新启动，但没有指向任何有用的信息：
- en: '[PRE26]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'When Events from the pods are not useful, you can use the `kubectl logs` command
    to get additional information from the pod. Check the messages in the pod''s logs
    using the following command. The log message is pointing to a missing file; further
    inspection of the manifest is needed:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当来自Pod的事件不够用时，您可以使用`kubectl logs`命令从Pod获取附加信息。使用以下命令检查Pod日志中的消息。日志消息指向一个丢失的文件；需要进一步检查清单：
- en: '[PRE27]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Inspect and have a closer look at the application manifest file, `mongo-config.yaml`,
    and you will see that the environmental variable `MYFILE` is missing in this case:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查并仔细查看应用程序清单文件`mongo-config.yaml`，您会发现在这种情况下缺少环境变量`MYFILE`：
- en: '[PRE28]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To fix this issue, you can add a `ConfigMap` to your deployment. Edit the `mongo-config.yaml` file
    and add the missing file by adding the `MYFILE` parameter with a `ConfigMap` resource
    to the beginning of the file similar to following:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要解决此问题，您可以向部署中添加`ConfigMap`。编辑`mongo-config.yaml`文件，并通过在文件开头添加`MYFILE`参数与`ConfigMap`资源来添加缺失的文件，类似于以下内容：
- en: '[PRE29]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Delete and redeploy the resource by running the following commands:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令删除并重新部署资源：
- en: '[PRE30]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: List the pods by running the following command. You will notice that the status
    is now `Running` for all pods that were previously in CrashLoopBackOff status
    in step 2.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令列出Pod。您会注意到之前处于CrashLoopBackOff状态的所有Pod现在状态为`Running`。
- en: '[PRE31]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: You have successfully learned how to inspect a pod's CrashLoopBackOff issue
    and fix it.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功学会了如何检查Pod的CrashLoopBackOff问题并修复它。
- en: See also
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Debugging init containers: [https://kubernetes.io/docs/tasks/debug-application-cluster/debug-init-containers/](https://kubernetes.io/docs/tasks/debug-application-cluster/debug-init-containers/)
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试init容器：[https://kubernetes.io/docs/tasks/debug-application-cluster/debug-init-containers/](https://kubernetes.io/docs/tasks/debug-application-cluster/debug-init-containers/)
- en: Debugging pods and ReplicationControllers [https://kubernetes.io/docs/tasks/debug-application-cluster/debug-pod-replication-controller/](https://kubernetes.io/docs/tasks/debug-application-cluster/debug-pod-replication-controller/)
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试pods和ReplicationControllers [https://kubernetes.io/docs/tasks/debug-application-cluster/debug-pod-replication-controller/](https://kubernetes.io/docs/tasks/debug-application-cluster/debug-pod-replication-controller/)
- en: Debugging a statefulset: [https://kubernetes.io/docs/tasks/debug-application-cluster/debug-stateful-set/](https://kubernetes.io/docs/tasks/debug-application-cluster/debug-stateful-set/)
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试statefulset：[https://kubernetes.io/docs/tasks/debug-application-cluster/debug-stateful-set/](https://kubernetes.io/docs/tasks/debug-application-cluster/debug-stateful-set/)
- en: Determining the reason for pod failure: [https://kubernetes.io/docs/tasks/debug-application-cluster/determine-reason-pod-failure/](https://kubernetes.io/docs/tasks/debug-application-cluster/determine-reason-pod-failure/)
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定pod失败的原因：[https://kubernetes.io/docs/tasks/debug-application-cluster/determine-reason-pod-failure/](https://kubernetes.io/docs/tasks/debug-application-cluster/determine-reason-pod-failure/)
- en: Squash, a debugger for microservices: [https://github.com/solo-io/squash](https://github.com/solo-io/squash)
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Squash，用于微服务的调试器：[https://github.com/solo-io/squash](https://github.com/solo-io/squash)
- en: Monitoring using Amazon CloudWatch
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon CloudWatch进行监控
- en: In this section, we will use Amazon CloudWatch Container Insights to monitor,
    isolate, and diagnose your containerized applications and microservices environments.
    As a DevOps or Systems Engineer, you will learn how to use Amazon ECS CloudWatch
    metrics to monitor service health status and current alarms using automated dashboards
    that summarize the performance and health of your Amazon EKS clusters by pod,
    node, namespace, and services.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用Amazon CloudWatch Container Insights来监视、隔离和诊断您的容器化应用程序和微服务环境。作为一名DevOps或系统工程师，您将学习如何使用Amazon
    ECS CloudWatch指标来监视服务健康状态和当前警报，使用自动化仪表板总结您的Amazon EKS集群的性能和健康状态，包括pod、节点、命名空间和服务。
- en: Getting ready
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Clone the `k8sdevopscookbook/src` repository to your workstation to use manifest
    files in the `chapter8` directory:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 将`k8sdevopscookbook/src`存储库克隆到您的工作站，以使用`chapter8`目录中的清单文件：
- en: '[PRE32]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Make sure you have an Amazon EKS Kubernetes cluster ready and `kubectl` configured
    to manage the cluster resources. If you don't already have one you can follow
    the instructions in [Chapter 1](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml), *Building
    Production-Ready Kubernetes Clusters*, in the *Configuring a Kubernetes cluster
    on Amazon Web Services* section.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您有一个准备好的Amazon EKS Kubernetes集群，并且已配置`kubectl`来管理集群资源。如果您还没有，可以按照[第1章](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)中的说明*构建生产就绪的Kubernetes集群*在*在Amazon
    Web Services上配置Kubernetes集群*部分。
- en: How to do it…
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This section is further divided into the following subsections to make the
    process easier:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 本节进一步分为以下小节，以使流程更加简单：
- en: Enabling  Webhook authorization mode
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用Webhook授权模式
- en: Installing Container Insights Agents for Amazon EKS
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Amazon EKS安装Container Insights代理程序
- en: Viewing Container Insights metrics
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看Container Insights指标
- en: Enabling Webhook authorization mode
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用Webhook授权模式
- en: If you have a Kubernetes cluster deployed using the `kops` option running on
    AWS EC2 instances instead of using Amazon EKS, your kubelet needs to have Webhook
    authorization mode enabled.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用`kops`选项在AWS EC2实例上部署了Kubernetes集群，而不是使用Amazon EKS，则您的kubelet需要启用Webhook授权模式。
- en: 'Let''s follow these steps:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照以下步骤进行：
- en: 'Enable `webhook` authorization mode using the two following flags. The first
    flag allows a ServiceAccount token to be used to authenticate against the kubelet. The
    second flag that allows the kubelet to perform an RBAC request and decide if the
    requesting resource, Amazon CloudWatch in this case, is allowed to access a resource
    endpoint:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下两个标志启用`webhook`授权模式。第一个标志允许使用ServiceAccount令牌对kubelet进行身份验证。第二个标志允许kubelet执行RBAC请求并决定请求资源（在本例中为Amazon
    CloudWatch）是否被允许访问资源端点：
- en: '[PRE33]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: You also need to add the necessary policy to the IAM role for your Kubernetes
    worker nodes. Open the Amazon EC2 console at [https://console.aws.amazon.com/ec2/](https://console.aws.amazon.com/ec2/).
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还需要为Kubernetes工作节点的IAM角色添加必要的策略。在[https://console.aws.amazon.com/ec2/](https://console.aws.amazon.com/ec2/)上打开Amazon
    EC2控制台。
- en: 'Under Resources, click on Running Instances:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在资源下，点击“运行实例”：
- en: '![](assets/1cacb071-9928-4b6f-b6fc-952920da2a89.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1cacb071-9928-4b6f-b6fc-952920da2a89.png)'
- en: 'Select one of the worker node instances from the list of and choose the IAM
    role on the Description tab. In our example, eksctl-adorable-rainbow-157155665-NodeInstanceRole-MOT7WBCOOOHE
    is the IAM role:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中选择一个工作节点实例，并在“描述”选项卡上选择IAM角色。在我们的示例中，eksctl-adorable-rainbow-157155665-NodeInstanceRole-MOT7WBCOOOHE是IAM角色：
- en: '![](assets/74adf21c-9ea7-4bed-9207-f2f8506cfe99.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/74adf21c-9ea7-4bed-9207-f2f8506cfe99.png)'
- en: 'On the Permissions tab, click on the Attach policies button:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“权限”选项卡上，点击“附加策略”按钮：
- en: '![](assets/264d1165-f3c8-4354-a85a-f240d6d6da84.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/264d1165-f3c8-4354-a85a-f240d6d6da84.png)'
- en: 'Inside the search box, type `CloudWatchAgentServerPolicy` and select the policy:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中，键入`CloudWatchAgentServerPolicy`并选择该策略：
- en: '![](assets/34d276bc-65d1-4a11-9067-58a07d98e4e0.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/34d276bc-65d1-4a11-9067-58a07d98e4e0.png)'
- en: 'Click on the Attach Policy button to attach the policy to your IAM role:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“附加策略”按钮将策略附加到您的IAM角色：
- en: '![](assets/72c1f9fc-5738-488a-89b1-926b8ac65dd7.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/72c1f9fc-5738-488a-89b1-926b8ac65dd7.png)'
- en: Now you have successfully enabled Webhook authorization mode and added the required policies
    to the IAM role.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已成功启用了Webhook授权模式并向IAM角色添加了所需的策略。
- en: Installing Container Insights Agents for Amazon EKS
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为Amazon EKS安装容器洞察代理
- en: 'In this recipe, we will enable CloudWatch agents to collect cluster metrics
    from our EKS Kubernetes cluster:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将启用CloudWatch代理来收集我们的EKS Kubernetes集群的集群指标：
- en: 'Create a namespace called `amazon-cloudwatch` on your cluster using the following
    command:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在您的集群上创建名为`amazon-cloudwatch`的命名空间：
- en: '[PRE34]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Create a Service account for the CloudWatch agent in the namespace `amazon-cloudwatch`
    you have created in *step 1.* The following command will also create `cloudwatch-agent-role`
    ClusterRole and ClusterRoleBinding:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您在*步骤1*中创建的`amazon-cloudwatch`命名空间创建CloudWatch代理的服务帐户。以下命令还将创建`cloudwatch-agent-role`
    ClusterRole和ClusterRoleBinding：
- en: '[PRE35]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Get the name of your EKS cluster using the `eksctl` command or from the Amazon
    Container Services dashboard. Here, we will use `eksctl` to get the cluster name.
    In our example, the cluster name is `adorable-rainbow-1571556654`:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`eksctl`命令或从Amazon容器服务仪表板获取您的EKS集群名称。在这里，我们将使用`eksctl`获取集群名称。在我们的示例中，集群名称是`adorable-rainbow-1571556654`：
- en: '[PRE36]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create a ConfigMap for the CloudWatch agent. Before you run the following command,
    replace `"cluster_name": "adorable-rainbow-1571556654"` with the name of your
    cluster from *step 3*:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '为CloudWatch代理创建ConfigMap。在运行以下命令之前，请用您在*步骤3*中的集群名称替换`"cluster_name": "adorable-rainbow-1571556654"`：'
- en: '[PRE37]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Deploy the CloudWatch agent as a DaemonSet. The preceding command will use
    StatsD, a network daemon that listens for statistics, such as counters and timers,
    sent over UDP or TCP and sends aggregates to CloudWatch, and also pluggable backend
    services if they''re available:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署CloudWatch代理作为DaemonSet。上述命令将使用StatsD，这是一个监听通过UDP或TCP发送的统计信息（如计数器和计时器）的网络守护程序，并将聚合发送到CloudWatch，如果可用还会使用可插拔的后端服务：
- en: '[PRE38]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Verify that CloudWatch agent pods are created by running the following command.
    Since agents run as DaemonSets, you should be able to see one pod per worker node
    listed. In our example, we have two worker nodes and two agent pods running:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令来验证CloudWatch代理Pod是否已创建。由于代理作为DaemonSets运行，您应该能够看到每个工作节点列出的一个Pod。在我们的示例中，我们有两个工作节点和两个代理Pod正在运行：
- en: '[PRE39]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: When complete, the CloudWatch agent will start sending performance log events
    to the CloudWatch Container Insights service.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，CloudWatch代理将开始向CloudWatch容器洞察服务发送性能日志事件。
- en: Viewing Container Insights metrics
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看容器洞察指标
- en: 'In this recipe, we will learn how to use CloudWatch to monitor node and pod
    metrics in our Kubernetes cluster:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何使用CloudWatch来监视我们的Kubernetes集群中的节点和Pod指标：
- en: 'Open the CloudWatch console at [https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/):'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/)上打开CloudWatch控制台：
- en: '![](assets/8591ca4c-f964-4ece-8072-b6fc04769301.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8591ca4c-f964-4ece-8072-b6fc04769301.png)'
- en: 'Click on the down arrow button next to the Overview option and choose Container
    Insights from the list:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“概览”选项旁边的向下箭头按钮，然后从列表中选择“容器洞察”：
- en: '![](assets/6de4bede-d420-4133-b405-c8afe47b9d67.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6de4bede-d420-4133-b405-c8afe47b9d67.png)'
- en: 'To view the EKS node health and statistics, in the top-left corner, switch
    to EKS nodes. Graphs on the new view will show resource utilization, cluster failures,
    and the number of nodes in a historical view similar to the following screenshot:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看EKS节点的健康状况和统计信息，请在左上角切换到EKS节点。新视图上的图表将显示资源利用率、集群故障和节点数量，类似于以下截图的历史视图：
- en: '![](assets/e0d639f6-1f3b-49f3-b60f-7de5cac9248c.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e0d639f6-1f3b-49f3-b60f-7de5cac9248c.png)'
- en: 'To view the container performance statistics, in the top-left corner, switch
    to EKS pods. Graphs on the new view will show the total resource utilization of
    pods and list of pods with their individual CPU and memory consumption percentages
    similar to the following screenshot:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看容器性能统计信息，请在左上角切换到EKS Pod。新视图上的图表将显示Pod的总资源利用率，并列出Pod的各自CPU和内存消耗百分比，类似于以下截图：
- en: '![](assets/424be416-0fbf-4206-bdf2-3c28653322d5.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/424be416-0fbf-4206-bdf2-3c28653322d5.png)'
- en: 'To view the detailed logs or AWS X-Ray traces of any resource, select the resource
    name from the list and click on the Actions button. From the drop-down menu, you
    can choose logs that you would like to review. After you select, logs will open
    in a new window:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看任何资源的详细日志或AWS X-Ray跟踪，请从列表中选择资源名称，然后单击“操作”按钮。从下拉菜单中，您可以选择要查看的日志。选择后，日志将在新窗口中打开：
- en: '![](assets/c0cd7c15-5b63-4291-bd71-20a96ea33b4b.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c0cd7c15-5b63-4291-bd71-20a96ea33b4b.png)'
- en: Now you have learned how to monitor node and pod metrics in your Kubernetes
    cluster using Container Insights.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '现在您已经学会了如何使用容器洞察来监视您的Kubernetes集群中的节点和Pod指标。 '
- en: See also
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Using Container Insights [https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html)
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用容器洞察[https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html)
- en: Using CloudWatch Anomaly Detection [https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html)
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CloudWatch异常检测 [https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html)
- en: List of the metrics collected by Container Insights: [https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-metrics-EKS.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-metrics-EKS.html)
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Container Insights收集的指标列表：[https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-metrics-EKS.html](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-metrics-EKS.html)
- en: Monitoring using Google Stackdriver
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Google Stackdriver进行监控
- en: In this section, we will use Google Stackdriver Kubernetes Engine Monitoring
    to monitor, isolate, and diagnose your containerized applications and microservices
    environments. You will learn how to use Stackdriver Kubernetes Engine Monitoring
    to aggregate logs, events, and metrics from your Kubernetes environment on **Google
    Kubernetes Engine** (**GKE**) to help you understand your application's behavior
    in production.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用Google Stackdriver Kubernetes Engine监控来监视、隔离和诊断您的容器化应用程序和微服务环境。您将学习如何使用Stackdriver
    Kubernetes Engine监控来聚合来自**Google Kubernetes Engine**（**GKE**）的Kubernetes环境的日志、事件和指标，以帮助您了解您的应用在生产环境中的行为。
- en: Getting ready
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have a GKE cluster ready and `kubectl` configured to manage the
    cluster resources. If you don't already have one, you can follow the instructions
    in [Chapter 1](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml),* Building Production-Ready
    Kubernetes Clusters*, in the *Configuring a Kubernetes cluster on Google Cloud
    Platform* recipe.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已准备好一个GKE集群，并配置了`kubectl`来管理集群资源。如果您还没有，请按照[第1章](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)，*构建生产就绪的Kubernetes集群*中的*在Google云平台上配置Kubernetes集群*的说明进行操作。
- en: How to do it…
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This section is further divided into the following subsections to make the
    process easier:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 本节进一步分为以下子节，以使流程更加简单：
- en: Installing Stackdriver Kubernetes Engine Monitoring support for GKE
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装GKE的Stackdriver Kubernetes Engine监控支持
- en: Configuring a workspace on Stackdriver
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Stackdriver上配置工作空间
- en: Monitoring GKE metrics using Stackdriver
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Stackdriver监控GKE指标
- en: Installing Stackdriver Kubernetes Engine Monitoring support for GKE
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装GKE的Stackdriver Kubernetes Engine监控支持
- en: 'Installing Stackdriver monitoring support enables you to easily monitor GKE
    clusters, debug logs, and analyze your cluster performance using advanced profiling
    and tracing capabilities. In this recipe, we will enable Stackdriver Kubernetes
    Engine Monitoring support to collect cluster metrics from our GKE cluster:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Stackdriver监控支持可以让您轻松监控GKE集群，调试日志，并使用高级分析和跟踪功能分析您的集群性能。在这个示例中，我们将启用Stackdriver
    Kubernetes Engine监控支持，以从我们的GKE集群中收集集群指标：
- en: 'Open the Google Kubernetes Engine Console at [https://console.cloud.google.com/kubernetes](https://console.cloud.google.com/kubernetes).
    On this console, you will see the list of your GKE clusters. In our example, we
    have only one cluster, and it is called k8s-devops-cookbook-1:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[https://console.cloud.google.com/kubernetes](https://console.cloud.google.com/kubernetes)上打开Google
    Kubernetes Engine控制台。在这个控制台上，您将看到您的GKE集群列表。在我们的示例中，我们只有一个集群，它被称为k8s-devops-cookbook-1：
- en: '![](assets/c30d840b-0424-421d-aa84-182e82ef6d5d.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c30d840b-0424-421d-aa84-182e82ef6d5d.png)'
- en: 'Click on the little pen-shaped Edit icon next to your cluster:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击集群旁边的小笔形编辑图标：
- en: '![](assets/14e028fa-1b95-41c2-9cf4-383bf033a67b.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/14e028fa-1b95-41c2-9cf4-383bf033a67b.png)'
- en: 'On the cluster configuration page, make sure that Legacy Stackdriver Logging
    and Legacy Stackdriver Monitoring are Disabled and the Stackdriver Kubernetes
    Engine Monitoring option is set to Enabled:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在集群配置页面上，确保“传统Stackdriver日志记录”和“传统Stackdriver监控”已禁用，并且“Stackdriver Kubernetes
    Engine监控”选项已设置为启用：
- en: '![](assets/775f7514-c629-4e0a-bcb6-a38388106a25.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/775f7514-c629-4e0a-bcb6-a38388106a25.png)'
- en: Click on the Save button to apply changes to your cluster.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击保存按钮以应用对集群的更改。
- en: Configuring a workspace on Stackdriver
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Stackdriver上配置工作区
- en: 'Stackdriver Monitoring helps you to gain deeper insights into your public cloud.
    Stackdriver''s monitoring capabilities include monitoring, logging, tracing, error
    reporting, and alerting to collect performance and diagnostics data of your public
    cloud service. Kubernetes monitoring is a small part of the complete solution.
    In this recipe, you will learn how to configure the Stackdriver workspace after
    you access it for the first time:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Stackdriver监控帮助您更深入地了解您的公共云。Stackdriver的监控功能包括监控、日志记录、跟踪、错误报告和警报，以收集您的公共云服务的性能和诊断数据。Kubernetes监控是完整解决方案的一小部分。在本教程中，您将学习如何在首次访问后配置Stackdriver工作区：
- en: 'Open the Stackdriver Console at [https://app.google.stackdriver.com](https://app.google.stackdriver.com).
    The first time you access the console, you need to add the workspace to the console,
    otherwise you will see an empty dashboard similar to the following:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[https://app.google.stackdriver.com](https://app.google.stackdriver.com)上打开Stackdriver控制台。第一次访问控制台时，您需要将工作区添加到控制台，否则您将看到一个空的仪表板，类似于以下内容：
- en: '![](assets/9fb46066-4580-4aaa-8251-3eadf2523ffd.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9fb46066-4580-4aaa-8251-3eadf2523ffd.png)'
- en: 'Click on the Add Workspace button to include your existing workspace. You will
    be asked for your Google Cloud Platform project name. Click on the empty Select
    project field and select your project from the list. In our example, it''s DevOpsCookBook.
    After you select the project, click on the Create Workspace button:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“添加工作区”按钮以包括您现有的工作区。您将被要求输入您的Google Cloud Platform项目名称。单击空的“选择项目”字段，并从列表中选择您的项目。在我们的示例中，它是DevOpsCookBook。选择项目后，单击“创建工作区”按钮：
- en: '![](assets/183db9a1-b5fa-4572-97d1-1386f608f675.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/183db9a1-b5fa-4572-97d1-1386f608f675.png)'
- en: 'Stackdriver also allows you to monitor AWS accounts. For this recipe, we will
    skip this option. Click Skip AWS Setup to move to the next step:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Stackdriver还允许您监控AWS账户。对于本教程，我们将跳过此选项。单击“跳过AWS设置”以进行下一步：
- en: '![](assets/23ac9fb9-7880-409d-ae33-afbf822f0207.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/23ac9fb9-7880-409d-ae33-afbf822f0207.png)'
- en: In the Install the Stackdriver Agents window, click on the Continue button.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“安装Stackdriver代理”窗口中，单击“继续”按钮。
- en: 'In the Get Reports by Email window, select the frequency of reports to be emailed.
    Select Weekly reports. Note that you can always select No reports and enable this
    feature later:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“通过电子邮件获取报告”窗口中，选择要通过电子邮件发送报告的频率。选择每周报告。请注意，您始终可以选择不发送报告，并稍后启用此功能：
- en: '![](assets/a8fba332-b774-40ec-908e-00876c324f93.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a8fba332-b774-40ec-908e-00876c324f93.png)'
- en: 'Finally, click on the Launch Monitoring button to access the Stackdriver console:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，单击“启动监控”按钮以访问Stackdriver控制台：
- en: '![](assets/3e254f3f-0a00-49d6-ba23-9e4cba3f96de.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3e254f3f-0a00-49d6-ba23-9e4cba3f96de.png)'
- en: Now you have configured the Stackdriver workspace to collect diagnostics data
    from your public cloud service.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经配置了Stackdriver工作区，以收集来自您的公共云服务的诊断数据。
- en: Monitoring GKE metrics using Stackdriver
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Stackdriver监控GKE指标
- en: 'Installing Stackdriver monitoring support enables you to easily monitor GKE
    clusters, debug logs, and analyze your cluster performance using advanced profiling
    and tracing capabilities. In this recipe, we will enable Stackdriver Kubernetes
    Engine Monitoring support to collect cluster metrics from our GKE cluster:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Stackdriver监控支持可以让您轻松监视GKE集群，调试日志，并使用高级分析和跟踪功能分析集群性能。在本示例中，我们将启用Stackdriver
    Kubernetes Engine监控支持，以从我们的GKE集群收集集群指标：
- en: 'After following the *Configuring a workspace on Stackdriver* recipe, open the
    Stackdriver console at [https://app.google.stackdriver.com](https://app.google.stackdriver.com):'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在按照*在Stackdriver上配置工作空间*的步骤后，打开Stackdriver控制台[https://app.google.stackdriver.com](https://app.google.stackdriver.com)：
- en: '![](assets/b6f26a4c-35ad-4a59-aba0-36c13140c69e.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b6f26a4c-35ad-4a59-aba0-36c13140c69e.png)'
- en: 'From the Resources menu, click on the Kubernetes Engine option:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从资源菜单中，点击“Kubernetes Engine”选项：
- en: '![](assets/68af781b-54af-4e3d-8f77-8d4e7a9dadbd.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/68af781b-54af-4e3d-8f77-8d4e7a9dadbd.png)'
- en: 'The Kubernetes Engine view will show the list of clusters that are Stackdriver
    Kubernetes Engine Monitoring-enabled. In our example, you can see that we have
    one cluster available:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kubernetes Engine视图将显示启用了Stackdriver Kubernetes Engine监控的集群列表。在我们的示例中，您可以看到我们有一个可用的集群：
- en: '![](assets/2ac01aa4-5e4d-47bd-a35f-c57c40452dab.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2ac01aa4-5e4d-47bd-a35f-c57c40452dab.png)'
- en: 'On the Infrastructure tab, click on the expand icon next to the cluster name.
    Stackdriver will expand the list with the individual worker nodes. In the Ready
    column, you can see the number of pods deployed and in a ready state in each node.
    In the CPU Utilization column, the value on the left-hand side shows the total
    available CPUs and the right-hand value shows the current utilization percentage.
    Similarly, in the Memory Utilization column, the value on the left-hand side shows
    the total available memory (GiB), and the right-hand value shows the current utilization
    percentage:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在基础设施选项卡上，点击集群名称旁边的展开图标。Stackdriver将展开列表，显示各个工作节点。在“就绪”列中，您可以看到每个节点上部署并处于就绪状态的pod数量。在“CPU利用率”列中，左侧的值显示总可用CPU数，右侧的值显示当前利用率百分比。类似地，在“内存利用率”列中，左侧的值显示总可用内存（GiB），右侧的值显示当前利用率百分比：
- en: '![](assets/178051c8-51f7-447e-90a6-e7a4d7452c46.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/178051c8-51f7-447e-90a6-e7a4d7452c46.png)'
- en: 'Click on the expand icon next to a node name, and the list will expand to display
    the pods deployed on that specific node:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击节点名称旁边的展开图标，列表将展开以显示部署在该特定节点上的pod：
- en: '![](assets/1049ab7b-a3cb-425d-a7ed-5db45bd1dbc5.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1049ab7b-a3cb-425d-a7ed-5db45bd1dbc5.png)'
- en: 'Click on one of the pods on your cluster. Stackdriver will show a detailed
    view of pod metrics, including pod restarts, CPU, memory, storage, and network
    utilization for the pods. In our example, we can see metrics for the Prometheus
    pod:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击集群中的一个pod。Stackdriver将显示pod指标的详细视图，包括pod重启、CPU、内存、存储和网络利用率。在我们的示例中，我们可以看到Prometheus
    pod的指标：
- en: '![](assets/03f65bd5-6cf9-4543-a92f-2e11b2ed5086.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/03f65bd5-6cf9-4543-a92f-2e11b2ed5086.png)'
- en: 'Click on the Logs tab to switch to the log summary view. This view will only
    show the most recent logs:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“日志”选项卡切换到日志摘要视图。此视图将只显示最近的日志：
- en: '![](assets/77e036ee-938a-41af-9fd7-268da8a01c7c.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/77e036ee-938a-41af-9fd7-268da8a01c7c.png)'
- en: 'Click on the Go to console button to open a detailed log view where you can
    see older logs and use filters to create metrics:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“转到控制台”按钮，打开详细的日志视图，您可以在其中查看旧日志并使用过滤器创建指标：
- en: '![](assets/1966c05e-4835-490b-9964-6c4b83a88e75.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1966c05e-4835-490b-9964-6c4b83a88e75.png)'
- en: Now you know how to use Stackdriver to monitor health, performance metrics,
    and logs for GKE clusters and resources deployed on the GKE clusters.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何使用Stackdriver来监视GKE集群和部署在GKE集群上的资源的健康状况、性能指标和日志。
- en: See also
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Google Stackdriver documentation: [https://cloud.google.com/stackdriver/docs/](https://cloud.google.com/stackdriver/docs/)
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Stackdriver文档：[https://cloud.google.com/stackdriver/docs/](https://cloud.google.com/stackdriver/docs/)
- en: Using Prometheus with Stackdriver Kubernetes Engine Monitoring: [https://cloud.google.com/monitoring/kubernetes-engine/prometheus](https://cloud.google.com/monitoring/kubernetes-engine/prometheus)
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Prometheus与Stackdriver Kubernetes Engine监控：[https://cloud.google.com/monitoring/kubernetes-engine/prometheus](https://cloud.google.com/monitoring/kubernetes-engine/prometheus)
- en: Stackdriver Prometheus sidecar: [https://github.com/Stackdriver/stackdriver-prometheus-sidecar](https://github.com/Stackdriver/stackdriver-prometheus-sidecar)
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Stackdriver Prometheus sidecar: [https://github.com/Stackdriver/stackdriver-prometheus-sidecar](https://github.com/Stackdriver/stackdriver-prometheus-sidecar)'
- en: A collection of technical articles published on Stackdriver by GCP advocates: [https://medium.com/google-cloud/tagged/stackdriv](https://medium.com/google-cloud/tagged/stackdriver)[er](https://medium.com/google-cloud/tagged/stackdriver)
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCP倡导者在Stackdriver上发布的技术文章集合：[https://medium.com/google-cloud/tagged/stackdriver](https://medium.com/google-cloud/tagged/stackdriver)
- en: Monitoring using Azure Monitor
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure Monitor进行监控
- en: In this section, we will use Azure Monitor to monitor, isolate, and diagnose
    your containerized applications and microservices environments. You will learn
    how to use Azure Monitor to aggregate logs, events, and metrics from your Kubernetes
    environment on **Azure Kubernetes Service** (**AKS**) to help you understand your
    application's behavior in production.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用Azure Monitor来监视、隔离和诊断您的容器化应用程序和微服务环境。您将学习如何使用Azure Monitor来聚合来自**Azure
    Kubernetes Service**（**AKS**）上的Kubernetes环境的日志、事件和指标，以帮助您了解应用程序在生产环境中的行为。
- en: Getting ready
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Make sure you have an AKS cluster ready and `kubectl` configured to manage the
    cluster resources. If you don't already have one, you can follow the instructions
    in [Chapter 1](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml), *Building Production-Ready
    Kubernetes Clusters*, in the *Configuring a Kubernetes cluster on Google Cloud
    Platform* recipe.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已经准备好一个AKS集群，并且已经配置好`kubectl`来管理集群资源。如果您还没有，您可以按照《第1章》中的说明进行操作，即《构建生产就绪的Kubernetes集群》，在《在Google
    Cloud Platform上配置Kubernetes集群》的教程中。
- en: How to do it…
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This section is further divided into the following subsections to make the
    process easier:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 本节进一步分为以下子节，以使流程更加简单：
- en: Enabling Azure Monitor support for AKS using the CLI
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CLI为AKS集群启用Azure Monitor支持
- en: Monitoring AKS performance metrics using Azure Monitor
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure Monitor监控AKS性能指标
- en: Viewing live logs using Azure Monitor
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure Monitor查看实时日志
- en: Enabling Azure Monitor support for AKS using the CLI
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用CLI为AKS启用Azure Monitor支持
- en: Enabling Azure Monitor for AKS clusters gives you performance visibility by
    collecting memory and processor metrics from controllers, nodes, and containers
    that are available in Kubernetes through the Kubernetes Metrics API.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 启用Azure Monitor以便从控制器、节点和容器中收集内存和处理器指标，这些指标通过Kubernetes Metrics API在Kubernetes中可用。
- en: 'In this recipe, we will enable monitoring from AKS Kubernetes clusters to collect
    metrics and logs through a containerized version of the Log Analytics agent:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将启用从AKS Kubernetes集群收集指标和日志的监控，通过Log Analytics代理的容器化版本：
- en: 'If you have deployed your AKS cluster following the *Provisioning a managed
    Kubernetes Cluster on AKS* recipe in [Chapter 1](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml),
    *Building Production-Ready Kubernetes Clusters*, you can use the following command
    to enable the Azure Monitor for your cluster. Replace the name `AKSCluster` with
    your AKS cluster name, and replace the resource group, `k8sdevopscookbook`, with
    the Azure resource group name you used when you created your cluster before you
    run the following command:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您按照[第1章](a8580410-3e1c-4e28-8d18-aaf9d38d011f.xhtml)中的*在AKS上部署托管的Kubernetes集群*配方部署了您的AKS集群，您可以使用以下命令为您的集群启用Azure
    Monitor。在运行以下命令之前，将名称`AKSCluster`替换为您的AKS集群名称，并将资源组`k8sdevopscookbook`替换为您在创建集群时使用的Azure资源组名称：
- en: '[PRE40]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'If you are deploying a new cluster, you can add the `--enable-addons monitoring` parameter to
    the CLI command to enable Azure Monitor functionality for your AKS cluster during
    the cluster creation as follows: **`$ az aks create --resource-group k8sdevopscookbook
    \`**'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在部署新的集群，可以在CLI命令中添加`--enable-addons monitoring`参数，以在集群创建期间为您的AKS集群启用Azure
    Monitor功能，如下所示：**`$ az aks create --resource-group k8sdevopscookbook \`**
- en: '**`--name AKSCluster \`**'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '**`--name AKSCluster \`**'
- en: '**`--node-count 3 \`**'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '**`--node-count 3 \`**'
- en: '**`--service-principal <appId> \`**'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '**`--service-principal <appId> \`**'
- en: '**`--client-secret <password> \`**'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '**`--client-secret <password> \`**'
- en: '**`--enable-addons monitoring  \`**'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '**`--enable-addons monitoring  \`**'
- en: '**`--generate-ssh-keys`**'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '**`--generate-ssh-keys`**'
- en: When completed, this command will enable Azure Monitor and logs for your AKS
    cluster.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，此命令将为您的AKS集群启用Azure Monitor和日志记录。
- en: Monitoring AKS performance metrics using Azure Monitor
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Azure Monitor监视AKS性能指标
- en: 'Performance metrics of an AKS cluster can be viewed both directly from the
    AKS cluster management dashboard and also via the Azure Monitor dashboard. In
    this recipe, we will monitor AKS performance metrics through Azure Monitor:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 可以直接从AKS集群管理仪表板和Azure Monitor仪表板查看AKS集群的性能指标。在此配方中，我们将通过Azure Monitor监视AKS性能指标：
- en: 'After following the *Enabling Azure Monitor support for AKS using the CLI* recipe,
    open the Azure portal at [https://portal.azure.com](https://portal.azure.com) and
    click on the Kubernetes Service button to go to the AKS management dashboard:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照*使用CLI为AKS启用Azure Monitor支持*的配方后，打开Azure门户网站[https://portal.azure.com](https://portal.azure.com)，单击“Kubernetes服务”按钮，转到AKS管理仪表板：
- en: '![](assets/3e90313c-78a7-42b3-8b63-b8c334e67c8b.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3e90313c-78a7-42b3-8b63-b8c334e67c8b.png)'
- en: 'On the Kubernetes services view, click on your cluster name. In our example,
    it is AKSCluster:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kubernetes服务视图中，单击您的集群名称。在我们的示例中，它是AKSCluster：
- en: '![](assets/fcde7e75-32cc-480f-8135-ea1a3c635655.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fcde7e75-32cc-480f-8135-ea1a3c635655.png)'
- en: 'Click on the Monitor Containers menu to open the Azure Monitor Insights view
    for your AKS cluster:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“监视容器”菜单，打开您的AKS集群的Azure Monitor Insights视图：
- en: '![](assets/c6b1e871-02ae-4646-9699-0913fcb0432d.png)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c6b1e871-02ae-4646-9699-0913fcb0432d.png)'
- en: 'Monitoring information about your AKS cluster is organized into five categories:
    Cluster, Nodes, Controllers, Containers, and Deployments. In this view, on the
    Cluster tab you will be able to see node CPU and memory utilization, AKS node
    count, and active pod count, like this:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有关您的AKS集群的监视信息分为五个类别：集群、节点、控制器、容器和部署。在此视图中，在集群选项卡上，您将能够查看节点CPU和内存利用率、AKS节点计数和活动pod计数，就像这样：
- en: '![](assets/a217da74-4918-4284-95eb-00184ecebf4c.png)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a217da74-4918-4284-95eb-00184ecebf4c.png)'
- en: 'Click on the Nodes tab to switch to the node performance metrics view. By default,
    CPU usage data is displayed for the last 6 hours for the 95th percentile. These
    options can be adjusted using the drop-down menus on the page:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“节点”选项卡，切换到节点性能指标视图。默认情况下，CPU使用数据显示为过去6小时的95th百分位数。可以使用页面上的下拉菜单调整这些选项：
- en: '![](assets/cfd57746-c26c-484e-be08-698d6fa652eb.png)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cfd57746-c26c-484e-be08-698d6fa652eb.png)'
- en: 'Click on the expand icon next to a node name and a list will expand to display
    the pods and containers inside deployed on that specific node. In this view, CPU
    utilization of every resource and uptime can be viewed:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击节点名称旁边的展开图标，列表将展开显示部署在该特定节点上的Pod和容器。在此视图中，可以查看每个资源的CPU利用率和正常运行时间：
- en: '![](assets/7214bf0f-c795-4278-b34e-42a9f1505a7e.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7214bf0f-c795-4278-b34e-42a9f1505a7e.png)'
- en: Now you know how to monitor AKS performance metrics through Azure Monitor insights.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道如何通过Azure Monitor insights监视AKS性能指标了。
- en: Viewing live logs using Azure Monitor
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Azure Monitor查看实时日志
- en: 'In addition to the performance metrics, Azure Monitor can also help to view
    logs from the AKS cluster resources. In this recipe, we will learn how to access
    the events and logs using Azure Monitor:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 除了性能指标，Azure Monitor还可以帮助查看AKS集群资源的日志。在本教程中，我们将学习如何使用Azure Monitor访问事件和日志：
- en: 'Before you can display pod events and live metrics from your cluster, you will
    need to apply `ClusterRoleBinding`. Create a `ClusterRole` by running the following
    command on your AKS cluster:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的集群中，要显示Pod事件和实时指标，你需要应用`ClusterRoleBinding`。通过在你的AKS集群上运行以下命令来创建`ClusterRole`：
- en: '[PRE41]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Create a `ClusterRoleBinding` by running the following command on your AKS
    cluster:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在你的AKS集群上运行以下命令来创建`ClusterRoleBinding`：
- en: '[PRE42]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Click on the Monitor Containers menu to open the Azure Monitor insights view
    for your AKS cluster.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“监视容器”菜单，打开你的AKS集群的Azure Monitor insights视图。
- en: 'Click on the expand icon next to a node name, and a list will expand displaying
    the pods and containers deployed on that specific node:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击节点名称旁边的展开图标，列表将展开显示部署在该特定节点上的Pod和容器：
- en: '![](assets/7214bf0f-c795-4278-b34e-42a9f1505a7e.png)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7214bf0f-c795-4278-b34e-42a9f1505a7e.png)'
- en: 'Click on one of the pods in your cluster. Insights will show a detailed view
    of pods metrics on the right-hand panel:'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击你的集群中的一个Pod。Insights将在右侧面板上显示Pod指标的详细视图：
- en: '![](assets/2e752e4c-bd3d-4615-9d7d-9b9729f976ae.png)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2e752e4c-bd3d-4615-9d7d-9b9729f976ae.png)'
- en: 'On the right-hand pane, click on the View live data button. This option will
    expand the view with live events from the pods and live metrics, as shown in the
    following screenshot. Events can be used to troubleshoot the pod problems that
    we discussed in the *Inspecting containers* section of this chapter:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧窗格中，单击“查看实时数据”按钮。此选项将展开视图，显示来自Pod的实时事件和实时指标，如下图所示。事件可用于排除本章“检查容器”部分中讨论的Pod问题：
- en: '![](assets/73a98dc7-3ed0-4eb1-9dca-a10f22b81e55.png)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/73a98dc7-3ed0-4eb1-9dca-a10f22b81e55.png)'
- en: 'The log and event messages you see depend on what resource type is selected
    in the view. Click on the View in analytics button to switch to the Kubernetes
    event logs:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在视图中看到的日志和事件消息取决于所选的资源类型。单击“在分析中查看”按钮以切换到Kubernetes事件日志：
- en: '![](assets/87f51ad2-f794-4613-b1d6-80a76ca2e171.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/87f51ad2-f794-4613-b1d6-80a76ca2e171.png)'
- en: 'In this view, you will be able to see and filter pod events:'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此视图中，您将能够查看和过滤Pod事件：
- en: '![](assets/32fd7845-c1bb-4b2a-bec6-123d24d5f853.png)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/32fd7845-c1bb-4b2a-bec6-123d24d5f853.png)'
- en: 'This time, click on one of the containers inside a pod. Insights will show
    a detailed view of container information and performance metrics in the right-hand
    panel:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这次，单击Pod内的一个容器。Insights将在右侧面板中显示容器信息和性能指标的详细视图：
- en: '![](assets/d3669927-aa96-4e52-9acd-bf799584f3c7.png)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d3669927-aa96-4e52-9acd-bf799584f3c7.png)'
- en: 'In the right-hand pane, click on the View in analytics button to switch to
    the View container logs:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧窗格中，单击“在分析中查看”按钮以切换到“查看容器日志”：
- en: '![](assets/a0e6d41b-54b4-4bfd-afee-78aa85777c4d.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a0e6d41b-54b4-4bfd-afee-78aa85777c4d.png)'
- en: 'In this view, you will be able to see and filter container logs:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此视图中，您将能够查看和过滤容器日志：
- en: '![](assets/8b2613e1-6422-47c9-b8a5-867981db4cc5.png)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8b2613e1-6422-47c9-b8a5-867981db4cc5.png)'
- en: Now you know how to use Azure Monitor to monitor health, performance metrics
    and logs for AKS clusters, and resources deployed on the AKS clusters.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何使用Azure监视来监视AKS集群的健康状况、性能指标和日志，以及在AKS集群上部署的资源。
- en: See also
  id: totrans-317
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Azure Monitor for containers documentation: [https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview)
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure容器监视文档：[https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview)
- en: Using Prometheus with Azure Monitor: [https://azure.microsoft.com/en-us/blog/azure-monitor-for-containers-with-prometheus-now-in-preview/](https://azure.microsoft.com/en-us/blog/azure-monitor-for-containers-with-prometheus-now-in-preview/)
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure监视与Prometheus：[https://azure.microsoft.com/en-us/blog/azure-monitor-for-containers-with-prometheus-now-in-preview/](https://azure.microsoft.com/en-us/blog/azure-monitor-for-containers-with-prometheus-now-in-preview/)
- en: Monitoring Kubernetes using Prometheus and Grafana
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Prometheus和Grafana监视Kubernetes
- en: In this section, we will deploy Prometheus and Grafana on our Kubernetes cluster.
    You will learn how to monitor a Kubernetes service with Prometheus and use Grafana
    dashboards to visualize cluster and application metrics.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在Kubernetes集群上部署Prometheus和Grafana。您将学习如何使用Prometheus监视Kubernetes服务，并使用Grafana仪表板可视化集群和应用程序指标。
- en: Getting ready
  id: totrans-322
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Clone the `k8sdevopscookbook/src` repository to your workstation to use manifest
    files in the `chapter8` directory:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 将`k8sdevopscookbook/src`存储库克隆到您的工作站，以便在`chapter8`目录中使用清单文件：
- en: '[PRE43]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Make sure you have a Kubernetes cluster ready and `kubectl` configured to manage
    the cluster resources.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已准备好Kubernetes集群，并配置了`kubectl`以管理集群资源。
- en: How to do it…
  id: totrans-326
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This section is further divided into the following subsections to make the
    process easier:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 本节进一步分为以下子节，以使流程更加简单：
- en: Deploying Prometheus Operator using Helm charts
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Helm图表部署Prometheus Operator
- en: Monitoring metrics using Grafana dashboards
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Grafana仪表板监视指标
- en: Adding a Grafana dashboard to monitor applications
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Grafana仪表板添加到监视应用程序
- en: Deploying Prometheus using Helm charts
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Helm图表部署Prometheus
- en: 'Prometheus is a popular open source solution for event monitoring and alerting.
    Prometheus records real-time metrics in a time-series database, and it is one
    of the most popular components of Kubernetes clusters for monitoring. Almost all
    new managed Kubernetes solutions come with Prometheus installed in some way as
    part of the cluster deployment. In this recipe, you will learn how to deploy Prometheus
    on a Kubernetes cluster using Helm charts:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: Prometheus是一个流行的开源解决方案，用于事件监视和警报。Prometheus记录实时指标在时间序列数据库中，它是Kubernetes集群中最受欢迎的组件之一。几乎所有新的托管Kubernetes解决方案都会在集群部署的某种方式上安装Prometheus。在本教程中，您将学习如何使用Helm图表在Kubernetes集群上部署Prometheus：
- en: 'Update the Helm repository. This command will fetch up-to-date charts locally
    from public chart repositories:'
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新Helm存储库。此命令将从公共图表存储库本地获取最新的图表：
- en: '[PRE44]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Deploy Prometheus Operator in the `monitoring` namespace using the `helm install`
    command. This command will deploy Prometheus along with the Alertmanager, Grafana,
    the node-exporter and kube-state-metrics addon; basically, a bundle of the components
    needed to use Prometheus on a Kubernetes cluster:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`helm install`命令在`monitoring`命名空间中部署Prometheus Operator。此命令将部署Prometheus以及Alertmanager、Grafana、node-exporter和kube-state-metrics附加组件；基本上，这是一组在Kubernetes集群上使用Prometheus所需的组件：
- en: '[PRE45]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Verify the status of the pods deployed in the monitoring namespace:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证在监视命名空间中部署的Pod的状态：
- en: '[PRE46]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Now you have Prometheus installed with the bundle of components required to
    operate it on a Kubernetes environment.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经安装了Prometheus，并且具备在Kubernetes环境中操作所需的组件包。
- en: Monitoring metrics using Grafana dashboards
  id: totrans-340
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Grafana仪表板监视指标
- en: 'Grafana is an open source analytics and monitoring solution. By default, Grafana
    is used for querying Prometheus. Follow these instructions to expose the included
    Grafana service instance and access it through your web browser:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Grafana是一个开源的分析和监控解决方案。默认情况下，Grafana用于查询Prometheus。按照以下说明来公开包含的Grafana服务实例并通过Web浏览器访问它：
- en: 'Get the list of services in the `monitoring` namespace:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取`monitoring`命名空间中的服务列表：
- en: '[PRE47]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Create a port forwarding to access the Grafana UI using the `kubectl port-forward`
    command. This command will forward the local port `8000` to port `3000` of a running
    Grafana pod:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建端口转发以使用`kubectl port-forward`命令访问Grafana UI。此命令将本地端口`8000`转发到运行中的Grafana pod的端口`3000`：
- en: '[PRE48]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: As an alternative, you can patch the `prometheus-grafana` service using the
    `kubectl edit svc prometheus-grafana -n monitoring` command and change the service
    type, `ClusterIP`, to `LoadBalancer` to expose the service externally using a
    cloud load balancer.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代方案，您可以使用`kubectl edit svc prometheus-grafana -n monitoring`命令来修补`prometheus-grafana`服务，并将服务类型`ClusterIP`更改为`LoadBalancer`，以使用云负载均衡器在外部公开服务。
- en: 'Go to `http://localhost:8000` (or the External IP, if using LoadBalancer) in
    your web browser. You should see the Grafana login page:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Web浏览器中转到`http://localhost:8000`（或者如果使用LoadBalancer，则是外部IP）。您应该看到Grafana登录页面：
- en: '![](assets/2e980b93-4bf2-4ad2-b6d7-df69e189d97d.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2e980b93-4bf2-4ad2-b6d7-df69e189d97d.png)'
- en: 'Log in using `admin` as the username and `prom-operator` as the password:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`admin`作为用户名和`prom-operator`作为密码登录：
- en: '![](assets/35e3b8b9-90a3-49ae-9909-98a5d82de501.png)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/35e3b8b9-90a3-49ae-9909-98a5d82de501.png)'
- en: 'Click on the Home button in the upper-left corner of the dashboard to list
    the available built-in dashboards:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击仪表板左上角的主页按钮，列出可用的内置仪表板：
- en: '![](assets/9a9312e4-26ce-4e7f-8f1c-ffeb80641161.png)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9a9312e4-26ce-4e7f-8f1c-ffeb80641161.png)'
- en: 'As an example, select the Nodes dashboard from the list to show Kubernetes
    nodes metrics. In this view, you will see the graphical representation of node
    resources, including CPU, memory, disk, and network utilization:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 例如，从列表中选择`Nodes`仪表板以显示Kubernetes节点指标。在此视图中，您将看到节点资源的图形表示，包括CPU、内存、磁盘和网络利用率：
- en: '![](assets/df28d7ef-d7c6-4aae-b221-a4086743c484.png)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/df28d7ef-d7c6-4aae-b221-a4086743c484.png)'
- en: Now you know how to navigate through dashboards in Grafana. You can use Grafana
    to visualize Kubernetes metrics and other workload metrics that provide metrics
    for Prometheus by following the next recipe.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何在Grafana中浏览仪表板。您可以使用Grafana来可视化Kubernetes指标和其他为Prometheus提供指标的工作负载指标，方法是按照下一个步骤。
- en: Adding a Grafana dashboard to monitor applications
  id: totrans-356
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加Grafana仪表板以监视应用程序
- en: 'Grafana is used to visualize the metrics stored on Prometheus. It offers dynamic
    and reusable dashboards with template variables. In this recipe, we will learn
    how to add a new dashboard from the library of pre-built dashboards to monitor
    an application deployed on Kubernetes:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: Grafana用于可视化存储在Prometheus上的指标。它提供具有模板变量的动态和可重用的仪表板。在本教程中，我们将学习如何从预构建的仪表板库中添加一个新的仪表板，以监视部署在Kubernetes上的应用程序：
- en: Every application has different metrics that are relevant to the continuity
    of the application. First of all, an application needs to expose the metrics to
    Prometheus (additional info on Writing Prometheus exporters is available in the *See
    also* section), and Prometheus must be added as a data source to Grafana. For
    this recipe, we will use the Jenkins we deployed in [Chapter 3](811c24c7-debf-4487-91e9-81db1520c0aa.xhtml), *Building
    CI/CD Pipelines*, in the *Setting up a CI/CD pipeline in Jenkins X* recipe.
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个应用程序都有不同的与应用程序的连续性相关的指标。首先，应用程序需要向Prometheus公开指标（有关编写Prometheus导出器的其他信息，请参阅“另请参阅”部分），并且必须将Prometheus添加为Grafana的数据源。对于此示例，我们将使用我们在第3章“构建CI/CD流水线”中部署的Jenkins，在“在Jenkins
    X中设置CI/CD流水线”食谱中。
- en: 'Click on the Home button in the top-left corner of the dashboard and click
    on Find dashboards on Grafana.com:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击仪表板左上角的“主页”按钮，然后单击“在Grafana.com上查找仪表板”：
- en: '![](assets/7be64ba6-bf4a-48a2-9094-9f2e4eae5384.png)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7be64ba6-bf4a-48a2-9094-9f2e4eae5384.png)'
- en: 'In the search field, type `Jenkins`. You will see a couple of Jenkins-specific
    dashboards:'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索字段中，键入“Jenkins”。您将看到一些特定于Jenkins的仪表板：
- en: '![](assets/0adfecca-dbdc-4902-9acf-4ee493e9ad49.png)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0adfecca-dbdc-4902-9acf-4ee493e9ad49.png)'
- en: 'Click on Jenkins: Performance and health overview and copy the ID to the clipboard.
    At this point, dashboard ID 306 is all you need to add this pre-built dashboard
    to your Grafana instance:'
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“Jenkins：性能和健康概述”，并将ID复制到剪贴板。此时，仪表板ID 306是您添加此预构建仪表板到Grafana实例所需的全部内容：
- en: '![](assets/2b55ebc7-9cb5-4ef1-a636-56ea5a81ad73.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2b55ebc7-9cb5-4ef1-a636-56ea5a81ad73.png)'
- en: If the Dashboard is not enabled, follow the instructions in the Overview section.
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果未启用仪表板，请按照“概述”部分中的说明操作。
- en: 'In the Grafana interface, click on Import dashboard. Paste the dashboard ID
    306 into the Grafana.com Dashboard field. Grafana will automatically detect the
    dashboard and display the details:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Grafana界面中，单击导入仪表板。将仪表板ID 306粘贴到Grafana.com仪表板字段中。Grafana将自动检测仪表板并显示详细信息：
- en: '![](assets/691e380e-e9de-4d34-a8c1-d844425b1e51.png)'
  id: totrans-367
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/691e380e-e9de-4d34-a8c1-d844425b1e51.png)'
- en: 'Select Prometheus as the data source name and click on Import:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择Prometheus作为数据源名称，然后单击导入：
- en: '![](assets/15ac1933-d044-49ff-a2be-ff0d9008a7bf.png)'
  id: totrans-369
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/15ac1933-d044-49ff-a2be-ff0d9008a7bf.png)'
- en: 'Click on the Home button to list the dashboards again, and you will find your
    new dashboard in the most recent dashboards list:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“主页”按钮以再次列出仪表板，您将在最近的仪表板列表中找到新的仪表板：
- en: '![](assets/cfe18365-2ee8-4595-a167-d0f496ddbca8.png)'
  id: totrans-371
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cfe18365-2ee8-4595-a167-d0f496ddbca8.png)'
- en: Similarly, you can find a pre-built dashboard on Grafana for the applications
    we have used in previous chapters such as cloud provider service monitoring (AWS,
    GCP, Azure, Alibaba), GitLab CI, Minio, OpenEBS, and many additional Kubernetes
    cluster metrics.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可以在Grafana上找到预构建的仪表板，用于我们在之前章节中使用的应用程序，例如云提供商服务监控（AWS、GCP、Azure、阿里巴巴）、GitLab
    CI、Minio、OpenEBS以及许多其他Kubernetes集群指标。
- en: See also
  id: totrans-373
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Prometheus documentation: [https://prometheus.io/docs/introduction/overview/](https://prometheus.io/docs/introduction/overview/)
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Prometheus文档：[https://prometheus.io/docs/introduction/overview/](https://prometheus.io/docs/introduction/overview/)
- en: 'Writing Prometheus exporters: [https://prometheus.io/docs/instrumenting/writing_exporters/](https://prometheus.io/docs/instrumenting/writing_exporters/)'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写Prometheus导出器：[https://prometheus.io/docs/instrumenting/writing_exporters/](https://prometheus.io/docs/instrumenting/writing_exporters/)
- en: 'GitHub repository for Prometheus-Operator: [https://github.com/coreos/prometheus-operator](https://github.com/coreos/prometheus-operator)'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Prometheus-Operator的GitHub存储库：[https://github.com/coreos/prometheus-operator](https://github.com/coreos/prometheus-operator)
- en: Grafana documentation: [https://grafana.com/docs/](https://grafana.com/docs/)
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grafana文档：[https://grafana.com/docs/](https://grafana.com/docs/)
- en: Grafana community dashboards: [https://grafana.com/grafana/dashboards](https://grafana.com/grafana/dashboards)
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grafana社区仪表板：[https://grafana.com/grafana/dashboards](https://grafana.com/grafana/dashboards)
- en: Grafana plugins: [https://grafana.com/grafana/plugins](https://grafana.com/grafana/plugins)
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grafana插件：[https://grafana.com/grafana/plugins](https://grafana.com/grafana/plugins)
- en: Enabling the Jenkins Prometheus plugin: [https://wiki.jenkins.io/display/JENKINS/Prometheus+Plugin](https://wiki.jenkins.io/display/JENKINS/Prometheus+Plugin)
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用Jenkins Prometheus插件：[https://wiki.jenkins.io/display/JENKINS/Prometheus+Plugin](https://wiki.jenkins.io/display/JENKINS/Prometheus+Plugin)
- en: Adding Stackdriver as a data source: [https://grafana.com/grafana/plugins/stackdriver](https://grafana.com/grafana/plugins/stackdriver)
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Stackdriver添加为数据源：[https://grafana.com/grafana/plugins/stackdriver](https://grafana.com/grafana/plugins/stackdriver)
- en: Adding Azure Monitor as a data source: [https://grafana.com/grafana/plugins/grafana-azure-monitor-datasource](https://grafana.com/grafana/plugins/grafana-azure-monitor-datasource)
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Azure Monitor添加为数据源：[https://grafana.com/grafana/plugins/grafana-azure-monitor-datasource](https://grafana.com/grafana/plugins/grafana-azure-monitor-datasource)
- en: 'Prometheus alternatives:'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Prometheus替代方案：
- en: DataDog: [https://www.datadoghq.com](https://www.datadoghq.com)
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataDog：[https://www.datadoghq.com](https://www.datadoghq.com)
- en: New Relic: [https://newrelic.com](https://newrelic.com)
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: New Relic：[https://newrelic.com](https://newrelic.com)
- en: Open Falcon: [http://open-falcon.org](http://open-falcon.org)
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Open Falcon：[http://open-falcon.org](http://open-falcon.org)
- en: Monitoring and performance analysis using Sysdig
  id: totrans-387
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Sysdig进行监控和性能分析
- en: In this section, we will use Sysdig Monitor to monitor and simplify Kubernetes
    troubleshooting. You will learn how to install Sysdig Monitor and extend Prometheus
    functionality to meet more advanced enterprise needs.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将使用Sysdig Monitor来监控和简化Kubernetes故障排除。您将学习如何安装Sysdig Monitor并扩展Prometheus功能，以满足更高级的企业需求。
- en: Getting ready
  id: totrans-389
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: All operations mentioned here require a Sysdig account. If you don't have one,
    go to [https://sysdig.com/sign-up/](https://sysdig.com/sign-up/) and create a
    trial or full account.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 这里提到的所有操作都需要一个Sysdig账户。如果您还没有账户，请转到[https://sysdig.com/sign-up/](https://sysdig.com/sign-up/)并创建一个试用或完整账户。
- en: For this recipe, we need to have a Kubernetes cluster ready and the Kubernetes
    command-line tools `kubectl` and `helm` installed to manage the cluster resources.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个教程，我们需要准备好一个Kubernetes集群，并安装Kubernetes命令行工具`kubectl`和`helm`来管理集群资源。
- en: How to do it…
  id: totrans-392
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This section is further divided into the following subsections to make the
    process easier:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分进一步分为以下子部分，以使流程更加简单：
- en: Installing the Sysdig agent
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Sysdig代理
- en: Analyzing application performance
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析应用程序性能
- en: Installing the Sysdig agent
  id: totrans-396
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Sysdig代理
- en: 'Sysdig Monitor is a tool for monitoring and troubleshooting applications available
    as part of the Sysdig Cloud Native Visibility and Security Platform. In this recipe,
    you will learn to deploy Sysdig Monitor and leverage Prometheus metrics:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: Sysdig Monitor是一种用于监视和故障排除应用程序的工具，作为Sysdig Cloud Native Visibility and Security
    Platform的一部分。在这个教程中，您将学习如何部署Sysdig Monitor并利用Prometheus指标：
- en: 'If you don''t have your Sysdig Monitor access key ready, go to your Account
    Settings at [https://app.sysdigcloud.com/#/settings/agentInstallation](https://app.sysdigcloud.com/#/settings/agentInstallation)
    and retrieve your access key:'
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有准备好您的Sysdig Monitor访问密钥，请转到[https://app.sysdigcloud.com/#/settings/agentInstallation](https://app.sysdigcloud.com/#/settings/agentInstallation)的账户设置，并检索您的访问密钥：
- en: '![](assets/32c5535e-065c-4b79-9b23-f5ea7fbd414f.png)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/32c5535e-065c-4b79-9b23-f5ea7fbd414f.png)'
- en: 'Install the Sysdig agent using the Helm chart after replacing `YourAccessKey` in
    the following command with your Sysdig Monitor access key from *step 1*. This
    command will install the Sysdig agent required for Sysdig Monitor and Sysdig Secure
    onto all your Kubernetes worker nodes in your cluster as a DaemonSet:'
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Helm图表安装Sysdig代理，将以下命令中的`YourAccessKey`替换为*步骤1*中的Sysdig Monitor访问密钥。此命令将在集群中的所有Kubernetes工作节点上安装Sysdig
    Monitor和Sysdig Secure所需的Sysdig代理作为DaemonSet：
- en: '[PRE49]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Once the Sysdig agent is installed, the nodes will be detected by Sysdig Monitor.
    In this view, all the nodes should be detected. In our example, we have four nodes
    detected. Click on the Go to Next Step button to continue:'
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Sysdig代理后，节点将被Sysdig Monitor检测到。在这个视图中，所有节点都应该被检测到。在我们的示例中，我们检测到了四个节点。单击“转到下一步”按钮继续：
- en: '![](assets/de244830-51e2-4271-91a3-a818cb866345.png)'
  id: totrans-403
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/de244830-51e2-4271-91a3-a818cb866345.png)'
- en: 'Sysdig Monitor offers deep integration with AWS. If your Kubernetes cluster
    is deployed on AWS, optionally, you can enable the integration by entering your
    AWS Access Key ID and Secret here; otherwise, click on the Skip button to skip
    the AWS integration:'
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sysdig Monitor与AWS深度集成。如果您的Kubernetes集群部署在AWS上，您可以选择输入AWS访问密钥ID和密钥来启用集成；否则，单击“跳过”按钮跳过AWS集成：
- en: '![](assets/2c7877d2-4b1d-4f0f-b201-82fa0b22efd7.png)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2c7877d2-4b1d-4f0f-b201-82fa0b22efd7.png)'
- en: 'Click on Let''s Get Started to explore Sysdig Monitor:'
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“让我们开始”来探索Sysdig Monitor：
- en: '![](assets/d6f58dc0-18cf-4693-b538-60c94ad211de.png)'
  id: totrans-407
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d6f58dc0-18cf-4693-b538-60c94ad211de.png)'
- en: Now you know how to deploy Sysdig Monitor and leverage Prometheus metrics.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道如何部署Sysdig Monitor并利用Prometheus指标了。
- en: Analyzing application performance
  id: totrans-409
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析应用程序性能
- en: Latency, traffic, errors, and saturation are considered Golden Signals by Google
    SRE teams.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 延迟、流量、错误和饱和度被谷歌SRE团队视为黄金信号。
- en: 'Let''s follow these instructions to learn how to navigate through the Sysdig
    Monitor interface to find the Golden Signals for your application on Kubernetes:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照这些说明来学习如何在Kubernetes上的应用程序中导航Sysdig Monitor界面以找到黄金信号：
- en: 'Log in to your Sysdig Cloud-Native Visibility and Security Platform dashboard
    at [https://app.sysdigcloud.com](https://app.sysdigcloud.com):'
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到您的Sysdig云原生可见性和安全平台仪表板，网址为[https://app.sysdigcloud.com](https://app.sysdigcloud.com)：
- en: '![](assets/c7426a65-1d78-4f74-a875-c3cbfc7bd9f1.png)'
  id: totrans-413
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c7426a65-1d78-4f74-a875-c3cbfc7bd9f1.png)'
- en: 'Resources are automatically grouped in the Hosts & Containers group. Click
    on the groups dropdown and select Deployments and pods:'
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 资源会自动分组到主机和容器组中。单击组下拉菜单，然后选择部署和pod：
- en: '![](assets/b184c906-1d1a-45fb-8193-98f03de12259.png)'
  id: totrans-415
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b184c906-1d1a-45fb-8193-98f03de12259.png)'
- en: 'Click on the dashboard and metrics dropdown and select the HTTP dashboard under
    Default Dashboards | Applications:'
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击仪表板和指标下拉菜单，然后在默认仪表板 | 应用程序下选择HTTP仪表板：
- en: '![](assets/c5eb72b9-1df6-4418-b18c-71092bc0c82d.png)'
  id: totrans-417
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c5eb72b9-1df6-4418-b18c-71092bc0c82d.png)'
- en: 'Sysdig can identify and decode application protocols such as HTTP and give
    you detailed metrics. In this view, you can see the number of requests, the most
    requested URLs or endpoints, the slowest URLs, and the HTTP response codes and
    request types for the entire infrastructure:'
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sysdig可以识别和解码诸如HTTP之类的应用程序协议，并为您提供详细的指标。在这个视图中，您可以看到请求的数量，最常请求的URL或端点，最慢的URL，以及整个基础架构的HTTP响应代码和请求类型：
- en: '![](assets/3d50d433-cec7-40fe-b638-146b2c4e0ad8.png)'
  id: totrans-419
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3d50d433-cec7-40fe-b638-146b2c4e0ad8.png)'
- en: 'As an example of performance troubleshooting, move your mouse over the Slowest
    URLs graph to identify problems and applications with slow response times. In
    our example, we see a slow response time of 48 ms from the Kubecost Prometheus
    server we deployed earlier:'
  id: totrans-420
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为性能故障排除的示例，将鼠标移动到*最慢的URL*图表上，以识别问题和响应时间慢的应用程序。在我们的示例中，我们看到我们之前部署的Kubecost Prometheus服务器的响应时间慢，为48毫秒：
- en: '![](assets/06993da6-8804-404e-bafb-579e1be078ab.png)'
  id: totrans-421
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/06993da6-8804-404e-bafb-579e1be078ab.png)'
- en: Now you have basic knowledge about how to navigate through Sysdig dashboards.
    Sysdig provides deep tracing capabilities that can be used when monitoring more
    than one container. We will learn more about Sysdig's security features and anomaly
    detection usage in [Chapter 9](30311229-4c2f-4b9b-8a10-36c755abddb9.xhtml), *Securing
    Applications and Clusters*. You can find the additional use cases in the *Sysdig
    examples* link in the *See also* section.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经对如何浏览Sysdig仪表板有了基本了解。Sysdig提供了深度跟踪功能，可在监视多个容器时使用。我们将在[第9章](30311229-4c2f-4b9b-8a10-36c755abddb9.xhtml)中了解更多关于Sysdig的安全功能和异常检测用法。您可以在*另请参阅*部分的*Sysdig示例*链接中找到其他用例。
- en: See also
  id: totrans-423
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Sysdig Falco – Behavioral activity monitoring tool: [https://github.com/draios/oss-falco](https://github.com/draios/oss-falco)
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysdig Falco - 行为活动监控工具：[https://github.com/draios/oss-falco](https://github.com/draios/oss-falco)
- en: Sysdig Inspect – Container troubleshooting and security investigation tool: [https://github.com/draios/sysdig-inspect](https://github.com/draios/sysdig-inspect)
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysdig Inspect - 容器故障排除和安全调查工具：[https://github.com/draios/sysdig-inspect](https://github.com/draios/sysdig-inspect)
- en: Monitoring distributed systems (Golden Signals): [https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/](https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/)
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控分布式系统（Golden Signals）：[https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/](https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/)
- en: Sysdig examples: [https://github.com/draios/sysdig/wiki/sysdig-examples](https://github.com/draios/sysdig/wiki/sysdig-examples)
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysdig示例：[https://github.com/draios/sysdig/wiki/sysdig-examples](https://github.com/draios/sysdig/wiki/sysdig-examples)
- en: Managing the cost of resources using Kubecost
  id: totrans-428
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Kubecost管理资源成本
- en: In this section, we will install and configure the open source Kubecost project,
    which gives you cost-related visibility into your Kubernetes resources. You will
    learn how to monitor resource costs to reduce spending and potentially prevent
    resource-based outages.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将安装和配置开源Kubecost项目，该项目可以让您了解Kubernetes资源的成本相关可见性。您将学习如何监视资源成本以减少支出，并可能防止基于资源的停机。
- en: Getting ready
  id: totrans-430
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: This recipe requires a functional Kubernetes cluster deployed on AWS or GCP.
    Currently, other cloud providers are not supported.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方需要在AWS或GCP上部署的功能性Kubernetes集群。目前，不支持其他云提供商。
- en: Before you can execute the commands in the following recipes, you need to have `kubectl`
    and `helm` installed. You can find the instructions to install Helm in [Chapter
    2](51383d70-c744-4dba-adf3-b6e6e1b8b2a2.xhtml), *Operating Applications on Kubernetes*,
    in the *Deploying workloads using Helm charts* section.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行以下配方中的命令之前，您需要安装`kubectl`和`helm`。您可以在[第2章](51383d70-c744-4dba-adf3-b6e6e1b8b2a2.xhtml)的*在Kubernetes上操作应用程序*中找到安装Helm的说明，*使用Helm图表部署工作负载*部分。
- en: How to do it…
  id: totrans-433
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This section is further divided into the following subsections to ease the
    process:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 本节进一步分为以下小节，以便简化流程：
- en: Installing Kubecost
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Kubecost
- en: Accessing Kubecost dashboard
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问Kubecost仪表板
- en: Monitoring Kubernetes resource cost allocation
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控Kubernetes资源成本分配
- en: Installing Kubecost
  id: totrans-438
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Kubecost
- en: 'Kubecost creates Kubernetes resource-granular models of current and historical
    Kubernetes spending. These models can be used to provide monitoring of resource
    allocations and cost transparency in Kubernetes environments that support multiple
    applications, teams, and departments. In this recipe, we will take a look at the
    basic steps to get Kubecost up and running:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: Kubecost创建了当前和历史Kubernetes支出的Kubernetes资源粒度模型。这些模型可用于在支持多个应用程序、团队和部门的Kubernetes环境中提供资源分配和成本透明度的监控。在本教程中，我们将看一下使Kubecost运行起来的基本步骤：
- en: 'Add the Kubecost chart repository to the local Helm repository list:'
  id: totrans-440
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Kubecost图表存储库添加到本地Helm图表存储库列表中：
- en: '[PRE50]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Install Kubecost into the `kubecost` namespace using the `Helm install` command:'
  id: totrans-442
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`Helm install`命令将Kubecost安装到`kubecost`命名空间中：
- en: '[PRE51]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Verify that all pods are running. As you can see, this project also deploys
    its own instances of Prometheus and Grafana:'
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证所有的pod都在运行。正如您所看到的，该项目还部署了自己的Prometheus和Grafana实例：
- en: '[PRE52]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: If you have an existing Prometheus deployment, `node-exporter` pods may get
    stuck in Pending mode. In that case, you need to use different ports for Kubecost
    to be deployed; otherwise, pods will not be able to get the requested pod ports.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有现有的Prometheus部署，`node-exporter` pod可能会卡在Pending模式。在这种情况下，您需要使用不同的端口来部署Kubecost；否则，pod将无法获取所请求的pod端口。
- en: Now you have the Kubecost cost analyzer installed with a bundle of components
    required to operate it in a Kubernetes environment.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经安装了Kubecost成本分析器，并且具有在Kubernetes环境中操作所需的一系列组件。
- en: Accessing the Kubecost dashboard
  id: totrans-448
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访问Kubecost仪表板
- en: 'Let''s follow these instructions to access the Kubecost dashboard where you
    can monitor your Kubernetes resources and their costs in real time:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照这些说明来访问Kubecost仪表板，在那里您可以实时监视您的Kubernetes资源及其成本：
- en: 'Get the list of the services in the `kubecost` namespace:'
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取`kubecost`命名空间中服务的列表：
- en: '[PRE53]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Create a port forwarding to access the Kubecost UI using the `kubectl port-forward` command.
    This command will forward the local port `9090` to the Kubecost cost analyzer
    pod:'
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个端口转发以使用`kubectl port-forward`命令访问Kubecost UI。该命令将本地端口`9090`转发到Kubecost成本分析器pod：
- en: '[PRE54]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: As an alternative, you can patch the `kubecost-cost-analyzer` service using
    the `kubectl edit svc kubecost-cost-analyzer -nkubecost` command and change the
    service type `ClusterIP` to `LoadBalancer` to expose the service externally using
    a cloud load balancer.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代方案，您可以使用`kubectl edit svc kubecost-cost-analyzer -nkubecost`命令对`kubecost-cost-analyzer`服务进行修补，并将服务类型`ClusterIP`更改为`LoadBalancer`，以使用云负载均衡器在外部公开服务。
- en: 'Open the address `http://localhost:9090` (or the External IP, if using LoadBalancer)
    in your web browser. You should see the Kubecost login page:'
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Web浏览器中打开地址`http://localhost:9090`（或者如果使用LoadBalancer，则是外部IP）。您应该看到Kubecost登录页面：
- en: '![](assets/b70a21da-4594-4d5c-85f7-b6d3c3302ddb.png)'
  id: totrans-456
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b70a21da-4594-4d5c-85f7-b6d3c3302ddb.png)'
- en: 'The dashboard can be expanded by adding additional Kubecost endpoints into
    one and used to monitor multiple clusters from a single dashboard. If you have
    more than one cluster, click on the add new cluster icon and add your endpoint
    URLs from the other clusters:'
  id: totrans-457
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将额外的Kubecost端点添加到一个中并用于监视单个仪表板上的多个集群来扩展仪表板。如果您有多个集群，请单击添加新集群图标，并添加来自其他集群的端点URL：
- en: '![](assets/2fe36cb1-7c6b-487c-a5ac-6c4eaf92d788.png)'
  id: totrans-458
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2fe36cb1-7c6b-487c-a5ac-6c4eaf92d788.png)'
- en: Monitoring Kubernetes resource cost allocation
  id: totrans-459
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 监控Kubernetes资源成本分配
- en: 'Let''s follow these instructions to learn how to monitor Kubernetes-related
    cloud spending and find possible saving recommendations using Kubecost:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照这些说明来学习如何使用Kubecost监视与Kubernetes相关的云支出，并找到可能的节省建议：
- en: 'Access your Kubecost dashboard by following the previous recipe, *Accessing
    the Kubecost dashboard*. Click on your cluster name on the dashboard to access
    the detailed summary. This view will show the monthly cost and cluster efficiency
    in terms of idle resources:'
  id: totrans-461
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按照前面的步骤“访问Kubecost仪表板”访问您的Kubecost仪表板。在仪表板上点击您的集群名称以访问详细摘要。此视图将显示月度成本和闲置资源的集群效率：
- en: '![](assets/c2342587-22dc-4e24-86da-1f1a4da0a660.png)'
  id: totrans-462
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c2342587-22dc-4e24-86da-1f1a4da0a660.png)'
- en: 'Click on the Real-time assets button. This view shows the real-time costs associated
    with the current cloud provider. In our example, it is one master, three worker
    Kubernetes clusters deployed on an AWS cluster using `kops`, each showing around
    $60 billed since they were created:'
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“实时资产”按钮。此视图显示与当前云提供商相关的实时成本。在我们的示例中，有一个主节点，三个使用`kops`在AWS集群上部署的工作节点Kubernetes集群，自创建以来每个节点的账单大约为60美元：
- en: '![](assets/21ce2025-eef5-459f-8c13-92979fed7254.png)'
  id: totrans-464
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/21ce2025-eef5-459f-8c13-92979fed7254.png)'
- en: 'Click on the Allocations menu. This view shows cumulative costs in the current
    namespaces. You can apply range filters to get the daily, weekly, monthly, or
    custom-range cost of the resource in the selected namespace:'
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“分配”菜单。此视图显示当前命名空间中的累积成本。您可以应用范围过滤器，以获取所选命名空间中资源的每日、每周、每月或自定义范围成本：
- en: '![](assets/a3c40f99-8b8b-4fcc-ae0e-e3db77f3f0e1.png)'
  id: totrans-466
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a3c40f99-8b8b-4fcc-ae0e-e3db77f3f0e1.png)'
- en: 'Click on the Savings menu. Information in this menu is very important, and
    points to possible optimization steps you can take. As an example, the following
    view shows that we have two underutilized nodes (utilization is below 60%) that
    can provide savings if we scale down our cluster. In this case, we can drain the
    nodes and scale down the cluster. Click on each saving category to learn more
    about the actions you can take to achieve the saving rate displayed here:'
  id: totrans-467
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“节省”菜单。此菜单中的信息非常重要，并指向您可以采取的可能的优化步骤。例如，以下视图显示我们有两个利用率不足的节点（利用率低于60%），如果我们缩减集群，可以节省成本。在这种情况下，我们可以排空节点并缩减集群。点击每个节省类别，了解如何采取行动以实现此处显示的节省率：
- en: '![](assets/5dfbbb6f-9ff7-4a36-8d9f-08def74d837e.png)'
  id: totrans-468
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5dfbbb6f-9ff7-4a36-8d9f-08def74d837e.png)'
- en: 'Click on the Health menu. This view shows the assessment of reliability and
    cluster health risks:'
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“健康”菜单。此视图显示可靠性评估和集群健康风险：
- en: '![](assets/ccff73d9-7b28-491e-93ca-a74e0fe9f92a.png)'
  id: totrans-470
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ccff73d9-7b28-491e-93ca-a74e0fe9f92a.png)'
- en: 'Disable the Show all option to list problems that require your attention. In
    our example, we see one high priority pointing to Crash looping pods. You can
    follow the instructions from the *Inspecting containers* section in this chapter
    to further identify the issues:'
  id: totrans-471
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用“显示全部”选项以列出需要您关注的问题。在我们的示例中，我们看到一个高优先级指向Crash looping pods。您可以按照本章节中“检查容器”部分的说明进一步识别问题：
- en: '![](assets/065355fd-c651-420b-b50a-d58bb056c728.png)'
  id: totrans-472
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/065355fd-c651-420b-b50a-d58bb056c728.png)'
- en: 'Click on the Notifications menu. From this menu, you can specify how to handle
    notifications. If you have a Slack channel, you can click on the ADD button here
    to forward notifications to it; otherwise, an email notification is available
    as an option:'
  id: totrans-473
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“通知”菜单。从此菜单，您可以指定如何处理通知。如果您有Slack频道，可以在此处点击“添加”按钮将通知转发到该频道；否则，电子邮件通知可作为选项：
- en: '![](assets/27ea1986-351c-457b-9c0e-9bd59921c888.png)'
  id: totrans-474
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/27ea1986-351c-457b-9c0e-9bd59921c888.png)'
- en: Now you have the knowledge to monitor project costs and a better understanding
    of what actions to take to increase the return on the investment of your DevOps
    environment.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解如何监控项目成本，并更好地了解了如何采取行动来增加DevOps环境的投资回报。
- en: See also
  id: totrans-476
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Kubecost documentation: [http://docs.kubecost.com/](http://docs.kubecost.com/)
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubecost文档：[http://docs.kubecost.com/](http://docs.kubecost.com/)
- en: Deploying Kubecost as a pod only: [https://github.com/kubecost/cost-model/blob/master/deploying-as-a-pod.md](https://github.com/kubecost/cost-model/blob/master/deploying-as-a-pod.md)
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Kubecost部署为一个pod：[https://github.com/kubecost/cost-model/blob/master/deploying-as-a-pod.md](https://github.com/kubecost/cost-model/blob/master/deploying-as-a-pod.md)
