- en: Moving to the Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转移到云端
- en: In this chapter, we will move from using our local virtual machine to using
    Ansible to launch instances in a public cloud provider. For this chapter, we will
    be using DigitalOcean, and we are targeting this provider as it allows us to simply
    launch virtual machines and interact with them, without having too much configuration
    overhead.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将从使用本地虚拟机转移到使用Ansible在公共云提供商中启动实例。在本章中，我们将使用DigitalOcean，我们选择这个提供商是因为它允许我们简单地启动虚拟机并与其交互，而不需要太多的配置开销。
- en: We will then look at adapting our WordPress playbook so that it interacts with
    the newly launched instance.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将研究如何调整我们的WordPress playbook，以便与新启动的实例进行交互。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: A quick introduction to DigitalOcean
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DigitalOcean的简要介绍
- en: Launching instances in DigitalOcean
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在DigitalOcean中启动实例
- en: How to switch between running Ansible locally and remotely so we can deploy
    WordPress
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在本地和远程之间切换运行Ansible，以便我们可以部署WordPress
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we are going to be launching instances in a public cloud, so
    if you are following along you will need an account with DigitalOcean. As with
    other chapters, complete versions of the playbooks can be found in the repository
    in the `Chapter08` folder at [https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter08](https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter08).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将在公共云中启动实例，因此如果您正在跟随操作，您将需要一个DigitalOcean账户。与其他章节一样，playbook的完整版本可以在[https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter08](https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter08)的`Chapter08`文件夹中找到。
- en: Interacting with DigitalOcean
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与DigitalOcean交互
- en: DigitalOcean was founded in 2011 and has grown from a typical virtual private
    server host with a single data center to a developer-friendly cloud service provider
    with data centers around the world. Netcraft noted that in December 2012, DigitalOcean
    hosted around 100 web-facing servers; in March 2018 that number exceeds 400,000,
    making DigitalOcean the third largest host of web-facing instances.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: DigitalOcean成立于2011年，从一个典型的虚拟专用服务器主机发展成为一个拥有全球数据中心的开发者友好的云服务提供商。Netcraft指出，2012年12月，DigitalOcean托管了大约100个面向Web的服务器；到2018年3月，这个数字超过了400,000个，使DigitalOcean成为第三大面向Web的实例主机。
- en: What makes DigitalOcean popular among developers, apart from its prices, is
    its performance; DigitalOcean was one of the first hosting companies to offer
    all **solid-state drives** (**SSD**) for its instance storage. It is simple-to-use
    web-based control panel, alongside the ability to launch instances from its command-line
    interface, and also a powerful API, which allows you to launch instances (which
    DigitalOcean calls Droplets) from within your applications, and also tools such
    as Ansible.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 除了价格之外，DigitalOcean之所以受到开发者的欢迎，还在于其性能；DigitalOcean是最早提供全固态硬盘（SSD）实例存储的托管公司之一。它有易于使用的基于Web的控制面板，可以从命令行界面启动实例，还有强大的API，允许您从应用程序内启动实例（DigitalOcean称之为Droplets），以及诸如Ansible之类的工具。
- en: You can sign up for an account at [https://www.digitalocean.com/](https://www.digitalocean.com/).
    Once you have signed up, the first thing that I recommend you do before proceeding
    with anything else is to configure two-factor authentication on your account.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://www.digitalocean.com/](https://www.digitalocean.com/)注册账户。注册后，在进行其他操作之前，我建议您首先在您的账户上配置双因素认证。
- en: '**Two-factor a****uthentication** (**2FA**) or **m****ulti-factor authentication**
    (**MFA**) adds an additional level of authentication to your account. Typically,
    this is achieved by sending a code via SMS to a device that has been associated
    with your account or by linking the account to a third-party authentication application
    such as Google or Microsoft Authenticator, which is running on your smartphone.
    Accounts that are tied to one of these services require you to typically enter
    a six-digit number, which is rotated every 30 seconds.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 双因素认证（2FA）或多因素认证（MFA）为您的账户增加了额外的认证级别。通常，这是通过向与您的账户关联的设备发送短信验证码来实现的，或者将账户链接到第三方认证应用程序（如Google或Microsoft
    Authenticator）来实现，该应用程序运行在您的智能手机上。与这些服务相关的账户通常需要您输入一个每30秒轮换一次的六位数字。
- en: You can configure 2FA by going to your settings in the DigitalOcean control
    panel and then clicking on Security, which can be found in the left-hand-side
    menu; once there, follow the onscreen instructions to enable 2FA on your account.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过转到DigitalOcean控制面板中的设置，然后点击左侧菜单中的安全来配置2FA；一旦进入，按照屏幕上的说明启用您账户上的2FA。
- en: Generating a personal access token
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成个人访问令牌
- en: For our playbook to be able to be able to launch a Droplet in our DigitalOcean
    account, we will need to generate a personal access token to interact with the
    DigitalOcean API. To do this, click on the API link, which can be found in the
    menu at the top of the DigitalOcean web-based control panel.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的playbook能够在我们的DigitalOcean账户中启动Droplet，我们需要生成一个个人访问令牌以与DigitalOcean API进行交互。要做到这一点，请点击DigitalOcean基于Web的控制面板顶部菜单中的API链接。
- en: 'Clicking on the Generate New Token button will open the following dialog box:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“生成新令牌”按钮将打开以下对话框：
- en: '![](assets/0f0b015c-341f-4a89-ab40-c643a369d2f1.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0f0b015c-341f-4a89-ab40-c643a369d2f1.png)'
- en: As you can see, I have named my token `Ansible` so it can be easily identified.
    Clicking the Generate Token button will create a token; it will only be displayed
    once so please make sure you make a note of it.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我已将我的令牌命名为`Ansible`，以便轻松识别。点击“生成令牌”按钮将创建一个令牌；它只会显示一次，所以请确保您记下来。
- en: Anyone who has a copy of your personal access token will be able to launch resources
    in your DigitalOcean account; please ensure that you keep it safe and do not publish
    your token anywhere.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 任何拥有您个人访问令牌副本的人都可以在您的DigitalOcean账户中启动资源；请确保将其保存在安全的地方，不要在任何地方发布您的令牌。
- en: 'I have blurred out my token in the following screenshot, but it should give
    you an idea of what you will see after generating your personal access token:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经在以下截图中模糊处理了我的令牌，但这应该让您了解在生成个人访问令牌后会看到什么：
- en: '![](assets/d2666137-b386-49fe-aa7a-cbd70a521bdb.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d2666137-b386-49fe-aa7a-cbd70a521bdb.png)'
- en: While we now have our token, there is one more thing we need to configure before
    we start our playbook.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了令牌，但在开始playbook之前，我们还需要配置另一件事。
- en: Installing dopy
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装dopy
- en: 'One of the modules we will be using requires a Python module called `dopy`;
    it acts a wrapper for the DigitalOcean API and can be installed using the following
    `pip` command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的一个模块需要一个名为`dopy`的Python模块；它是DigitalOcean API的包装器，可以使用以下`pip`命令进行安装：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once `dopy` is installed, we can make a start writing the playbook.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了`dopy`之后，我们可以开始编写playbook。
- en: Launching a Droplet
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动Droplet
- en: 'As per previous playbooks we have written, you can create the skeleton structure
    by running the following commands:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们之前编写的playbooks，您可以通过运行以下命令来创建骨架结构：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There are two tasks we need to complete to launch our Droplet; the first is
    that we need to make sure that a copy of our public SSH key is uploaded to DigitalOcean
    so that we can inject it into our Droplet launched during the second task.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要完成两个任务来启动我们的Droplet；首先，我们需要确保我们的公共SSH密钥的副本已上传到DigitalOcean，以便我们可以在第二个任务期间将其注入到我们启动的Droplet中。
- en: 'Before we proceed with looking at the role which launches the Droplet we should
    figure what we are going to do with the personal access token required by the
    playbook to access the DigitalOcean API. For this we are going to use Ansible
    Vault to encode just the token; run the following command, making sure you replace
    the contents of `encrypt_string` with your own token:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续查看启动Droplet的角色之前，我们应该弄清楚playbook需要访问DigitalOcean API的个人访问令牌要做什么。为此，我们将使用Ansible
    Vault对令牌进行编码；运行以下命令，确保用您自己的令牌替换`encrypt_string`的内容：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The tokens used throughout these chapters are randomly generated; please make
    sure you replace them with your own.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的令牌是随机生成的；请确保您用自己的替换它们。
- en: 'The following screenshot shows the output for the preceding commands:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](assets/41bf40bd-a56d-498d-9271-392ab015a599.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/41bf40bd-a56d-498d-9271-392ab015a599.png)'
- en: 'As you can see, this returns the encrypted token, so place the encrypted token
    in the `group_vars/common.yml` file. While we are populating variables, let''s
    take a look at what the content of `roles/droplet/defaults/main.yml` should look
    like:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这返回了加密令牌，因此将加密令牌放入`group_vars/common.yml`文件中。在我们填充变量的同时，让我们看看`roles/droplet/defaults/main.yml`的内容应该是什么样的：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: There are two collections of key values; the first deals with the SSH key, which
    the playbook will be uploading, and the second contains the information for launching
    the Droplet. The defaults for our initial playbook run will launch a 1-CPU core,
    2 GB RAM, 50-GB HDD CentOS 7 Droplet in the DigitalOcean London data center.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个密钥值集合；第一个处理SSH密钥，playbook将上传它，第二个包含启动Droplet的信息。我们初始playbook运行的默认设置将在DigitalOcean伦敦数据中心启动一个1-CPU核心、2
    GB RAM、50 GB HDD的CentOS 7 Droplet。
- en: 'The tasks for the launching the Droplet, which should be in `roles/droplet/tasks/main.yml`,
    contain two separate parts; the first part deals with uploading the SSH key, which
    needs to be there so we can launch the Droplet using it:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 启动Droplet的任务应该在`roles/droplet/tasks/main.yml`中包含两个独立的部分；第一部分处理上传SSH密钥，这是必须的，以便我们可以使用它来启动Droplet：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As you can see, this task uses the token we encrypted with Ansible Vault; we
    are also using the `with_file` directive to copy the contents of the key file,
    which is at `~/.ssh/id_rsa.pub`. This task will do one of three things depending
    on what you already have in your DigitalOcean account:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，此任务使用了我们用Ansible Vault加密的令牌；我们还使用了`with_file`指令来复制密钥文件的内容，即`~/.ssh/id_rsa.pub`。根据您在DigitalOcean帐户中已有的内容，此任务将执行三种操作中的一种：
- en: If the key does not exist, it will upload it
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果密钥不存在，它将上传它
- en: If a key matches the fingerprint of `~/.ssh/id_rsa.pub` but has a different
    name, then it will rename that key
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个密钥与`~/.ssh/id_rsa.pub`的指纹匹配但名称不同，那么它将重命名该密钥
- en: If the key and name match, nothing will be uploaded or changed
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果密钥和名称匹配，将不会上传或更改任何内容
- en: 'Now that we know that we have our key uploaded, we need to know its unique
    ID. To find this out, we should gather facts on all of the keys that are configured
    in our DigitalOcean account by running the following task:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道我们已经上传了我们的密钥，我们需要知道它的唯一ID。为了找出这一点，我们应该通过运行以下任务来收集我们在DigitalOcean帐户中配置的所有密钥的事实：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will return a JSON array named `ssh_keys` which contains the name of the
    key, the fingerprint of the key, the contents of the key itself, and also the
    key's unique ID; this information is returned for each of the keys that are configured
    in our DigitalOcean account. As we need to know the ID of just one of those keys,
    we need to manipulate the results to filter the list down to just the single key
    we uploaded, and then set the ID as a variable.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回一个名为`ssh_keys`的JSON数组，其中包含密钥的名称，密钥的指纹，密钥本身的内容，以及密钥的唯一ID；这些信息对于我们在DigitalOcean帐户中配置的每个密钥都会返回。由于我们只需要知道这些密钥中的一个ID，我们需要操作结果以将列表过滤为我们上传的单个密钥，然后将ID设置为变量。
- en: 'As we know, we have a JSON array of potential keys stored in the `ssh_keys`value;
    for me, this looked like the following:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道，我们有一个存储在`ssh_keys`值中的潜在密钥的JSON数组；对我来说，看起来像这样：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You may have noticed I have already executed the playbook and uploaded my key
    so that I can walk through this task with you. We now need to find the key called
    `key.name`, which in our case is `Ansible`, and then return just the ID. To do
    this, we are going to add the following task:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，我已经执行了playbook并上传了我的密钥，以便我可以与您一起完成这个任务。现在我们需要找到名为`key.name`的密钥，对我们来说是`Ansible`，然后返回ID。为此，我们将添加以下任务：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, we are using the `set_fact` module to create a key-value pair
    called `pubkey`; we are using the ID of an item, and to make sure we return just
    one item, we are applying a JSON query to our array. This query makes sure that
    only the JSON that contains the `key.name` is returned in the `with_items` list;
    from here we can take the `id` of the single item, which allows us to move on
    to the second part, which is launching the Droplet.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们正在使用`set_fact`模块创建一个名为`pubkey`的键值对；我们正在使用一个项目的ID，并确保我们返回的只是一个项目，我们正在对我们的数组应用JSON查询。这个查询确保只返回包含`key.name`的JSON在`with_items`列表中；从这里我们可以取得单个项目的`id`，这使我们可以继续进行第二部分，即启动Droplet。
- en: 'Now that we know the ID of the SSH key we want to launch our Droplet with,
    we can move on to the second part of the role. The following task launches the
    Droplet:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道要使用的SSH密钥的ID，我们可以继续进行角色的第二部分。以下任务启动Droplet：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This uses the `digital_ocean` module to launch the Droplet. Most of the items
    are self-explanatory; however, there is one important option we have to set a
    value for and that is `unique_name`. By default, `unique_name` is set to `no`,
    and what this means is that if we were to run our playbook a second time, a new
    Droplet with exactly the same details as the first Droplet we launched would be
    created; run it a third time and a third Droplet will be created. Setting `unique_name`
    to `yes` will mean that only a single Droplet with whatever the value of `droplet.name`
    is active at one time.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`digital_ocean`模块启动Droplet。大多数项目都是不言自明的；然而，有一个重要的选项我们必须设置一个值，那就是`unique_name`。默认情况下，`unique_name`设置为`no`，这意味着如果我们第二次运行我们的playbook，将创建一个具有与我们启动的第一个Droplet完全相同细节的新Droplet；第三次运行将创建第三个Droplet。将`unique_name`设置为`yes`将意味着只有一个具有`droplet.name`值的Droplet在任一时间处于活动状态。
- en: 'As you can see, we are registering the output of the task as a value. Some
    details about the Droplet are returned as part of the task execution; the IP address
    of the Droplet is one of them, so we can use this to set a fact and then print
    a message with the IP address:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们正在将任务的输出注册为一个值。关于Droplet的一些细节将作为任务执行的一部分返回；Droplet的IP地址就是其中之一，因此我们可以使用它来设置一个事实，然后打印一个带有IP地址的消息：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'That completes the basic playbook and once we have updated the `site.yml` file,
    we can run it. This should contain the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了基本的playbook，一旦我们更新了`site.yml`文件，我们就可以运行它。这应该包含以下内容：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As you can see, we are just using localhost so there is no need to call the
    host inventory file.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们只是使用本地主机，因此不需要调用主机清单文件。
- en: Running the playbook
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行playbook
- en: 'As we have a value that is encrypted using the Vault, we need to run the following
    command to run the playbook:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们有一个使用Vault加密的值，我们需要运行以下命令来运行playbook：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This will prompt for the passphrase you set to encrypt the Vault. Once you
    have entered the passphrase, the play will run:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提示输入你设置的加密Vault的密码。一旦输入了密码，play将运行：
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As you can see, this uploaded my key and launched a Droplet that has an IP
    address of `159.65.27.87` (this IP is no longer in use by this Droplet). This
    is reflected in the DigitalOcean control panel, where we can see the key that
    has been added:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，这上传了我的密钥并启动了一个具有IP地址`159.65.27.87`的Droplet（此IP现在不再被此Droplet使用）。这反映在DigitalOcean控制面板中，我们可以看到已添加的密钥：
- en: '![](assets/182babfc-1dc7-49fc-81d6-2cf586983380.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/182babfc-1dc7-49fc-81d6-2cf586983380.png)'
- en: 'You can also see the Droplet on the Droplets page:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在Droplets页面上看到Droplet：
- en: '![](assets/b49cc2b2-be4a-4ef1-9d4d-43b6cea742c6.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b49cc2b2-be4a-4ef1-9d4d-43b6cea742c6.png)'
- en: 'Also, you can SSH into the Droplet using the  `root` username:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你可以使用`root`用户名SSH登录Droplet：
- en: '![](assets/c75163c1-61f0-49bf-8398-f2923e1ddb4d.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c75163c1-61f0-49bf-8398-f2923e1ddb4d.png)'
- en: As you can see, launching and interacting with DigitalOcean is relatively simple.
    Before we progress to the next section, destroy your instance from within the
    DigitalOcean control panel.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，启动和与DigitalOcean交互是相对简单的。在继续下一部分之前，在DigitalOcean控制面板内销毁你的实例。
- en: WordPress on DigitalOcean
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DigitalOcean上的WordPress
- en: Now we have a playbook that launches a Droplet, we are going to make a slight
    adaptation and install WordPress on the Droplet we launch. To do this, make a
    copy of the folder that holds the playbook we just ran and call it `digitalocean-wordpress`.
    Copy the three roles, `stack-install`, `stack-config`, and `wordpress`, from the
    `Chapter06/lemp-multi/roles` folder.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个启动Droplet的playbook，我们将稍作调整，并在我们启动的Droplet上安装WordPress。为此，复制刚才运行的playbook所在的文件夹，并将其命名为`digitalocean-wordpress`。从`Chapter06/lemp-multi/roles`文件夹中复制三个角色，`stack-install`、`stack-config`和`wordpress`。
- en: The host inventory
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主机清单
- en: 'The first file we are going to change is the host inventory file called production;
    this needs to be updated to be the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要更改的第一个文件是名为production的主机清单文件；这需要更新为以下内容：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: What we have here is an empty host group called `droplets`, and then we set
    some global variables for the Droplet we are launching. Don't worry about adding
    the actual host just yet; we will be adding it during the playbook run.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个名为`droplets`的空主机组，然后我们为要启动的Droplet设置了一些全局变量。暂时不用担心添加实际的主机；我们将在运行playbook期间添加它。
- en: Variables
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变量
- en: 'We are going to be overriding a few of the default variables. To do this, update
    the `group_vars/common.yml` file to read like this, making sure you update the
    `do_token` value to reflect your own:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要覆盖一些默认变量。为此，更新`group_vars/common.yml`文件，确保它读起来像这样，确保你更新`do_token`值以反映你自己的值：
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As you can see, the majority of the values are their default values; the four
    values we are changing are:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，大多数值都是它们的默认值；我们正在更改的四个值是：
- en: '`droplet.name`: This is a simple update to the name so we can easily spot our
    instance in the DigitalOcean control panel.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`droplet.name`：这是对名称的简单更新，这样我们就可以在DigitalOcean控制面板中轻松找到我们的实例。'
- en: '`wordpress.domain`: This is the important change here. As you can see, we are
    using the `droplet_ip` variable we set on our Ansible controller. To make the
    variable available to our WordPress host, we are telling Ansible to use the variable
    from localhost. If we hadn''t done this, then the variable would not have been
    set; we will look at why in the next section.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wordpress.domain`：这里的重要变化。正如您所看到的，我们使用了我们在Ansible控制器上设置的`droplet_ip`变量。为了使变量对我们的WordPress主机可用，我们告诉Ansible从localhost使用变量。如果我们没有这样做，那么变量就不会被设置；我们将在下一节中看到原因。'
- en: '`wordpress.title`: A slight tweak to the title our WordPress site is configured
    to reflect where it is hosted.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wordpress.title`：对我们的WordPress站点配置的标题进行了轻微调整，以反映它所托管的位置。'
- en: '`wordpress.password`: Changing the password so it is more complex, as we are
    launching on a publicly available IP address.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wordpress.password`：更改密码使其更复杂，因为我们在公开可用的IP地址上启动。'
- en: The playbook
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: playbook
- en: 'The next file we are going to change is the `site.yml` one. This file needs
    to be updated to run the roles both locally and also against the Droplet we have
    launched:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来要更改的文件是`site.yml`。这个文件需要更新以在本地和我们启动的Droplet上运行角色：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Our updated `site.yml` file contains two different plays: the first one runs
    on our Ansible controller and interacts with the DigitalOcean API to launch a
    Droplet, the second play then connects to the hosts in the `digitalocean` group
    to install WordPress. So how does Ansible know the IP address of the host to connect
    to?'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更新的`site.yml`文件包含两个不同的play：第一个在我们的Ansible控制器上运行，并与DigitalOcean API交互以启动Droplet，第二个play然后连接到`digitalocean`组中的主机以安装WordPress。那么Ansible如何知道要连接的主机的IP地址呢？
- en: The droplet role
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: droplet角色
- en: 'We need to make one change, the `droplet` role, which can be found at `roles/droplet/tasks/main.yml`;
    this change takes the dynamically assigned IP address and adds it to our `droplets`
    group of hosts. To do this, replace the following task:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做一个改变，`droplet`角色，可以在`roles/droplet/tasks/main.yml`中找到；这个改变将获取动态分配的IP地址，并将其添加到我们的`droplets`主机组中。为此，请替换以下任务：
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Replace it with the following task:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下任务替换它：
- en: '[PRE17]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As you can see, this takes the `droplet_ip` variable and adds a host using the
    `add_host` module to the group.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，这个任务使用`droplet_ip`变量，并使用`add_host`模块将主机添加到组中。
- en: Running the playbook
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行playbook
- en: 'Now that we have all of the pieces of the playbook together, we can launch
    a Droplet and install WordPress by running:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将playbook的所有部分放在一起，我们可以通过运行以下命令启动Droplet并安装WordPress：
- en: '[PRE18]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'It will take a little while to launch the Droplet and perform the installation;
    at the end of it you should have the IP address listed in the play overview as
    the IP address is used as the name of our Droplet host. Here is the end of my
    playbook run:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 启动Droplet并执行安装需要一些时间；在最后，您应该在play概述中列出IP地址，因为IP地址用作我们Droplet主机的名称。这是我的playbook运行的结尾：
- en: '[PRE19]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Going to the IP address in your browser should present you with something like
    the following page:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中输入IP地址应该会呈现出类似以下页面的内容：
- en: '![](assets/2d73f5a8-dbd7-4817-967e-66706e827aa8.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2d73f5a8-dbd7-4817-967e-66706e827aa8.png)'
- en: 'You should be able to log in using the new password we set in the `common.yml`
    file. Have a play with the WordPress installation; when you are ready, destroy
    the Droplet from within the DigitalOcean control panel. But remember: leaving
    the Droplet running will incur a cost.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够使用我们在`common.yml`文件中设置的新密码登录。尝试安装WordPress；当您准备好时，从DigitalOcean控制面板内销毁Droplet。但请记住：保持Droplet运行将产生费用。
- en: Summary
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we launched our first instances in a public cloud using one
    of the Ansible cloud modules; as you have seen, the process was relatively straightforward
    and we managed to launch compute resource in the cloud and then install WordPress
    on it, without making any changes to the roles we covered in [Chapter 5](159d7be3-6d13-4a66-8766-e4cf3b982b0f.xhtml),
    *Deploying WordPress*.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用了Ansible云模块之一在公共云中启动了我们的第一个实例；正如您所看到的，这个过程相对简单，我们成功在云中启动了计算资源，然后安装了WordPress，而没有对我们在[第5章](159d7be3-6d13-4a66-8766-e4cf3b982b0f.xhtml)中涵盖的角色进行任何更改，*部署WordPress*。
- en: In the next chapter, we are going to expand on some of the techniques we have
    covered in this chapter and return to networking, but unlike the last chapter,
    where we covered networking devices, we will be looking at networking in public
    clouds.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将扩展本章涵盖的一些技术，并返回到网络，但与上一章不同，我们在上一章中涵盖了网络设备，我们将研究公共云中的网络。
- en: Questions
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the name of the Python module we need to install to support the `digital_ocean`
    module?
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要安装哪个Python模块来支持`digital_ocean`模块？
- en: 'True or false: You should always encrypt sensitive values such as the DigitalOcean
    personal access token.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误：您应该始终加密诸如DigitalOcean个人访问令牌之类的敏感值。
- en: Which filter are we using to find the ID of the SSH key we need to launch our
    Droplet with?
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用哪个过滤器来查找我们需要使用的SSH密钥的ID？
- en: State and explain why we used the `unique_name` option in the `digital_ocean`
    task.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释为什么我们在`digital_ocean`任务中使用了`unique_name`选项。
- en: What is the correct syntax for accessing variables from another Ansible host?
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从另一个Ansible主机访问变量的正确语法是什么？
- en: 'True or false: The `add_server` module is used to add our Droplet to the host
    group.'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误：`add_server`模块用于将我们的Droplet添加到主机组。
- en: Try launching an Ubuntu Droplet and install WordPress on it; the image ID to
    use is `ubuntu-16-04-x64` and don't forget to change the `ansible_python_interpreter`
    value.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试在Ubuntu Droplet上安装WordPress；要使用的镜像ID是`ubuntu-16-04-x64`，不要忘记更改`ansible_python_interpreter`的值。
- en: Further reading
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: You can read more details on the Netcraft statistics on DigitalOcean at [http://trends.netcraft.com/www.digitalocean.com/](http://trends.netcraft.com/www.digitalocean.com/).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://trends.netcraft.com/www.digitalocean.com/](http://trends.netcraft.com/www.digitalocean.com/)上阅读有关DigitalOcean的Netcraft统计的更多详细信息。
