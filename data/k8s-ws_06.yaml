- en: 6\. Labels and Annotations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6. 标签和注释
- en: Overview
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 概述
- en: Metadata is extremely useful for any organization and has its use in managing
    potentially thousands of resources in a cluster. This chapter teaches you how
    to add metadata to your pods or any other Kubernetes objects. You will be introduced
    to the concept of labels and annotations. We will also explain their use cases
    so that you can decide whether to use labels or annotations for a particular use
    case. You'll utilize labels to organize your objects by using label selectors
    to select or filter organized sets of objects. You'll also use annotations to
    add unstructured metadata information to objects.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 元数据对于任何组织都非常有用，并且在管理集群中潜在的成千上万的资源时非常有用。本章将教你如何向你的Pod或任何其他Kubernetes对象添加元数据。您将了解标签和注释的概念。我们还将解释它们的用例，以便您可以决定是否对特定用例使用标签或注释。您将利用标签通过使用标签选择器来组织对象，以选择或过滤组织好的对象集。您还将使用注释向对象添加非结构化的元数据信息。
- en: Introduction
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In the previous chapter, we created various kinds of pods and managed their
    life cycles. Once we start working with different pods, ideally, we would want
    to organize, group, and filter them based on certain properties. To do that, we
    need to add some information to our pods so that we can later use that information
    to organize them. We have already seen the use of the `name` and `namespace` fields
    as metadata for the pods. In addition to those fields, we can also add key-value
    pairs to the pods in order to add extra information as labels and annotations.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们创建了各种类型的Pod，并管理了它们的生命周期。一旦我们开始使用不同的Pod，理想情况下，我们希望根据某些属性对它们进行组织、分组和过滤。为了做到这一点，我们需要向我们的Pod添加一些信息，以便以后可以使用这些信息来对它们进行组织。我们已经看到了`name`和`namespace`字段作为Pod的元数据的用法。除了这些字段，我们还可以向Pod添加键值对，以便作为标签和注释添加额外的信息。
- en: In this chapter, we will assign metadata to these pods in order to identify
    the pods through queries based on some metadata and then add additional unstructured
    metadata. We will cover labels and annotations in detail and examine the differences
    between them. We will use both labels and annotations and see when to use one
    or the other.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将为这些Pod分配元数据，以便通过基于某些元数据的查询来识别Pod，然后添加额外的非结构化元数据。我们将详细介绍标签和注释，并检查它们之间的区别。我们将同时使用标签和注释，并看看何时使用其中之一。
- en: Labels
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标签
- en: 'Labels are the metadata that contain identifiable information pertaining to
    the Kubernetes objects. These are basically key-value pairs that can be attached
    to objects such as pods. Each key must be unique for an object. Labels contain
    information that is meaningful to users. Labels can be attached to pods at the
    time of creation and can also be added or modified during their runtime too. Here
    is an example of how labels in a YAML file would appear:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 标签是包含与Kubernetes对象相关的可识别信息的元数据。这些基本上是可以附加到对象（如Pod）的键值对。每个键对于一个对象必须是唯一的。标签包含对用户有意义的信息。标签可以在创建时附加到Pod，并且在运行时也可以添加或修改。以下是一个YAML文件中标签的示例：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Constraints for Labels
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标签的约束
- en: As noted earlier, labels are key-value pairs. There are certain rules that label
    keys and values should follow. These constraints exist because this way, the queries
    using labels can be evaluated faster by using optimized data structures and algorithms
    internally. Kubernetes internally maintains the mappings of labels to corresponding
    objects using optimized data structures to make these queries faster.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，标签是键值对。标签键和值应遵循某些规则。存在这些约束是因为这样可以通过内部优化的数据结构和算法更快地评估使用标签的查询。Kubernetes在内部使用优化的数据结构来维护标签与相应对象的映射，以使这些查询更快。
- en: Label Keys
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标签键
- en: 'Here''s an example of what a label key looks like:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是标签键的示例：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As we can see, the label key consists of two parts: the label prefix and the
    label name. Let''s take a closer look at these two parts:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，标签键由两部分组成：标签前缀和标签名称。让我们更仔细地看看这两部分：
- en: '**Label prefix**: The label prefix is optional and must be a DNS subdomain.
    It cannot be longer than 253 characters and cannot contain spaces. The label prefix
    is always followed by a forward slash (`/`). If no prefix is used, the label key
    is assumed to be private to the user. Some of the prefixes, such as `kubernetes.io/`
    and `k8s.io/`, are reserved for use solely by the Kubernetes core systems.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签前缀**：标签前缀是可选的，必须是DNS子域。它不能长于253个字符，也不能包含空格。标签前缀总是跟着一个斜杠（`/`）。如果不使用前缀，则假定标签键是私有的。一些前缀，如`kubernetes.io/`和`k8s.io/`，专门用于Kubernetes核心系统。'
- en: In our example, `label_prefix.com/` is the prefix for that label key.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，`label_prefix.com/`是该标签键的前缀。
- en: '**Label name**: The label name is required and can be up to 63 characters long.
    The label name can only start and end with alphanumeric characters (a – z, A –
    Z, 0 – 9); however, it can contain dashes (`-`), underscores (`_`), dots (`.`),
    and alphanumeric characters in between. A label name cannot have spaces or line
    breaks.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签名称**：标签名称是必需的，最长可以达到63个字符。标签名称只能以字母数字字符（a-z，A-Z，0-9）开头和结尾；但是，它可以包含破折号（`-`），下划线（`_`），点（`.`）和中间的字母数字字符。标签名称不能包含空格或换行符。'
- en: In the example of `label_prefix.com/worker-node-1`, the name for the label key
    is `worker-node-1`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在`label_prefix.com/worker-node-1`的示例中，标签键的名称是`worker-node-1`。
- en: Label Values
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标签值
- en: Label values can be up to 63 characters long. Similar to label names, label
    values should also start and end with alphanumeric characters. However, they can
    contain dashes (`-`), underscores (`_`), dots (`.`), and alphanumeric characters
    in between. A label value cannot have spaces or line breaks.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 标签值最长可以达到63个字符。与标签名称类似，标签值也应该以字母数字字符开头和结尾。但是，它们可以包含破折号（`-`），下划线（`_`），点（`.`）和中间的字母数字字符。标签值不能包含空格或换行符。
- en: Why Do We Need Labels?
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么我们需要标签？
- en: Labels are generally used for organizing a subset of objects. These objects
    can then be filtered on the basis of these labels. With labels, you can also run
    your specific pods on selected nodes. Both of these scenarios are explained in
    detail in the following section.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 标签通常用于组织对象的子集。然后可以根据这些标签对这些对象进行过滤。使用标签，您还可以在选定的节点上运行特定的Pods。这两种情况在以下部分中进行了详细解释。
- en: Organizing Pods by Organization/Team/Project
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按组织/团队/项目组织Pods
- en: 'One of the use cases for labels could be using labels based on teams or organizations
    in your company. Let''s say that your organization has several teams working on
    different projects. You can enable different teams to list only their pods and
    even those specific to certain projects. Expanding on this, if you are an infrastructure
    service provider, you can use an organization label to apply changes only to the
    pods associated with a particular client organization. For such use cases, you
    can use label keys such as `team`, `org`, and `project`. The following is an example
    `labels` section for such a use case:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 标签的一个用例可能是在您公司中基于团队或组织使用标签。假设您的组织有几个团队在不同的项目上工作。您可以使不同的团队只列出他们的Pods，甚至那些特定于某些项目的Pods。此外，如果您是基础设施服务提供商，您可以使用组织标签仅对与特定客户组织相关的Pods应用更改。对于这种用例，您可以使用标签键，如`team`，`org`和`project`。以下是这种用例的一个示例`labels`部分：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Running Selective Pods on Specific Nodes
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在特定节点上运行选择的Pods
- en: 'Another useful scenario can be when you want your pod to be assigned to a certain
    node with specific hardware or other properties. This can be achieved by adding
    labels to the nodes that have special hardware or other properties. We can use
    `nodeSelector` to assign the pod to any node that has a particular label. Consider
    the following example:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的场景可能是当您希望将您的pod分配给具有特定硬件或其他属性的特定节点时。这可以通过向具有特殊硬件或其他属性的节点添加标签来实现。我们可以使用`nodeSelector`将pod分配给具有特定标签的任何节点。考虑以下示例：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The preceding pod template can be used to make sure the pod will be assigned
    to a node that is in the `east-us` region and has `ssd` storage. This check is
    based on the labels added to the nodes. So, we need to ensure that the appropriate
    `region` and `disktype` labels are assigned to all nodes where applicable.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 上述pod模板可用于确保pod将被分配到位于“east-us”地区并具有“ssd”存储的节点。此检查基于添加到节点的标签。因此，我们需要确保适当的“region”和“disktype”标签已分配给所有适用的节点。
- en: Note
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Please note that the exact node labels to be used in the `nodeSelector` section
    will be provided by the cloud infrastructure provider and that the label keys
    and values may change. The values used in this example are just to demonstrate
    the use case.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，要在`nodeSelector`部分中使用的确切节点标签将由云基础设施提供商提供，并且标签键和值可能会更改。本示例中使用的值仅用于演示用例。
- en: In the upcoming exercises, we will show you how you can create pods with labels,
    add labels to a running pod, and modify and/or delete existing labels for a running
    pod.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的练习中，我们将向您展示如何创建带有标签的pod，向正在运行的pod添加标签，并修改和/或删除正在运行的pod的现有标签。
- en: 'Exercise 6.01: Creating a Pod with Labels'
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习6.01：创建带标签的Pod
- en: 'In this exercise, we aim to create a pod with some labels. In order to complete
    this exercise successfully, perform the following steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们的目标是创建一个带有一些标签的pod。为了成功完成这个练习，执行以下步骤：
- en: 'Create a file called `pod-with-labels.yaml` with the following content:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`pod-with-labels.yaml`的文件，内容如下：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As can be seen in the preceding snippet, we have added the `app` and `foo` labels
    and assigned them the values of `nginx` and `bar`, respectively. Now, we need
    to create a pod with these labels and verify whether the labels have actually
    been included in the pod, which will be the focus of the next few steps.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的片段所示，我们已添加了`app`和`foo`标签，并分别将它们分配为`nginx`和`bar`的值。现在，我们需要创建一个带有这些标签的pod，并验证这些标签是否实际包含在pod中，这将是接下来几个步骤的重点。
- en: 'Run the following command in the Terminal to create the pod with the preceding
    configuration:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中运行以下命令以使用上述配置创建pod：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You should see the following response:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下响应：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Verify that the pod was created by using the `kubectl get` command:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl get`命令验证pod是否已创建：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following output indicates that the pod has been created:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出表明已创建了pod：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Verify that the `labels` metadata was actually added to the pod using the `kubectl
    describe` command:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe`命令验证实际是否已将`labels`元数据添加到pod中：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This should lead to the following output:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该导致以下输出：
- en: '![Figure 6.1: Describing pod-with-labels'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.1：描述带标签的pod'
- en: '](image/B14870_06_01.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_01.jpg)'
- en: 'Figure 6.1: Describing pod-with-labels'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1：描述带标签的pod
- en: The output shows various details relating to the pod (as we have seen in the
    previous chapter as well). In this case, we will focus on the highlighted section
    of the output, which shows that the desired labels, `app=nginx`, and `foo=bar`,
    were actually added to the pod. Note that, in this exercise, we added labels while
    creating the pod. However, how can you add labels to a pod when a pod is already
    running? The next exercise will answer this question.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示了与pod相关的各种细节（正如我们在上一章中看到的那样）。在这种情况下，我们将关注输出的突出部分，显示了所需的标签`app=nginx`和`foo=bar`实际上已添加到了pod中。请注意，在这个练习中，我们在创建pod时添加了标签。但是，当pod已经在运行时，如何给pod添加标签呢？下一个练习将回答这个问题。
- en: 'Exercise 6.02: Adding Labels to a Running Pod'
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习6.02：向运行中的pod添加标签
- en: 'In this exercise, we aim to create a pod without labels and then add labels
    once the pod is running. In order to complete this exercise successfully, perform
    the following steps:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们的目标是创建一个没有标签的pod，然后在pod运行时添加标签。为了成功完成这个练习，执行以下步骤：
- en: 'Create a file called `pod-without-initial-labels.yaml` with the following content:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`pod-without-initial-labels.yaml`的文件，内容如下：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note that we have not yet added any labels to our pod.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们尚未向我们的pod添加任何标签。
- en: 'Run the following command in the Terminal to create the pod with the configuration
    mentioned in the previous step:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中运行以下命令，创建具有前面步骤中提到的配置的pod：
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You should see the following response:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下响应：
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Verify that the pod was created by using the `kubectl get` command:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl get`命令验证pod是否已创建：
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following output indicates that the pod has been created:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出表明已创建了pod：
- en: '![Figure 6.2: Checking the status of pod-without-initial-labels'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.2：检查没有初始标签的pod的状态'
- en: '](image/B14870_06_02.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_02.jpg)'
- en: 'Figure 6.2: Checking the status of pod-without-initial-labels'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2：检查没有初始标签的pod的状态
- en: 'Check if the `labels` metadata was actually added to the pod using the `kubectl
    describe` command:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe`命令检查`labels`元数据是否实际添加到了pod中：
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You should see the following output:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '![Figure 6.3: Describing pod-without-initial-labels'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.3：描述没有初始标签的pod'
- en: '](image/B14870_06_03.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_03.jpg)'
- en: 'Figure 6.3: Describing pod-without-initial-labels'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3：描述没有初始标签的pod
- en: In the highlighted section of the output, we can note that the `Labels` field
    is empty. Hence, we can verify that, by default, no label was added to the pod.
    In the next few steps, we will add a label and then run the pod again to verify
    whether the label was actually included in the pod.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出的突出部分中，我们可以注意到`Labels`字段为空。因此，我们可以验证，默认情况下，没有标签添加到pod中。在接下来的几步中，我们将添加一个标签，然后再次运行pod，以验证标签是否实际包含在pod中。
- en: 'Add a label using the `kubectl label` command as follows:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl label`命令添加标签如下：
- en: '[PRE15]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You should see the following response:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下响应：
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The output shows that the `pod-without-initial-labels` pod was labeled.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示`pod-without-initial-labels` pod已被标记。
- en: 'Verify that the label was actually added in the last step by using the `kubectl
    describe` command:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe`命令验证上一步中是否实际添加了标签：
- en: '[PRE17]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You should see the following output:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '![Figure 6.4: Verifying that the app=nginx label was added'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.4：验证已添加app=nginx标签'
- en: '](image/B14870_06_04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_04.jpg)'
- en: 'Figure 6.4: Verifying that the app=nginx label was added'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4：验证已添加app=nginx标签
- en: We can observe in the highlighted section of the output that the `app=nginx`
    label was actually added to the pod. In the preceding case, we only added a single
    label. However, you can add multiple labels to a pod, as will be done in the next
    steps.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以观察到输出的突出显示部分实际上添加了`app=nginx`标签到pod中。在前面的情况下，我们只添加了一个标签。但是，您可以向pod添加多个标签，就像接下来要做的那样。
- en: 'Next, let''s add multiple labels in the same command. We can do this by passing
    multiple labels in the `key=value` format, separated by spaces:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们在同一命令中添加多个标签。我们可以通过以`key=value`格式传递多个标签，用空格分隔来实现这一点：
- en: '[PRE18]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You should see the following response:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下响应：
- en: '[PRE19]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Verify that the two labels were added to the pod using the `kubectl describe`
    command:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe`命令验证两个标签是否已添加到pod中：
- en: '[PRE20]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'You should see the following output:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '![Figure 6.5: Verifying that the new two labels were also added'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.5：验证新的两个标签也已添加'
- en: '](image/B14870_06_05.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_05.jpg)'
- en: 'Figure 6.5: Verifying that the new two labels were also added'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5：验证新的两个标签也已添加
- en: In the highlighted section of the output, we can see that the two new labels,
    `foo=bar,` and `foo2=baz`, were also added to the pod.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出的突出显示部分，我们可以看到两个新标签`foo=bar`和`foo2=baz`也已添加到pod中。
- en: In the next exercise, we will see how we can delete and modify the existing
    labels for a pod that is already running.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的练习中，我们将看到如何删除和修改已经运行的pod的现有标签。
- en: 'Exercise 6.03: Modifying And/Or Deleting Existing Labels for a Running Pod'
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习6.03：修改和/或删除运行中pod的现有标签
- en: 'In this exercise, we aim to create a pod with some labels and modify and delete
    the labels while the pod is running. In order to complete this exercise successfully,
    perform the following steps:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们的目标是创建一个带有一些标签的pod，并在pod运行时修改和删除这些标签。为了成功完成这个练习，请执行以下步骤：
- en: 'Create a file called `pod-with-some-labels.yaml` with the following content:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`pod-with-some-labels.yaml`的文件，内容如下：
- en: '[PRE21]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: As you can see in the pod definition, we have added just one label, `app`, with
    the value of `nginx`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在pod定义中所见，我们只添加了一个标签`app`，其值为`nginx`。
- en: 'Run the following command in the Terminal to create the pod with the preceding
    configuration:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中运行以下命令以创建具有上述配置的pod：
- en: '[PRE22]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You should see the following response:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下响应：
- en: '[PRE23]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Verify that the pod was created by using the `kubectl get` command:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl get`命令验证pod是否已创建：
- en: '[PRE24]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The following output indicates that the pod has been created:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出表明已创建了pod：
- en: '![Figure 6.6: Checking the status of the pod-with-some-labels pod'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.6：检查带有一些标签的pod的状态'
- en: '](image/B14870_06_06.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_06.jpg)'
- en: 'Figure 6.6: Checking the status of the pod-with-some-labels pod'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6：检查带有一些标签的pod的状态
- en: 'Verify that the labels were added as specified in the pod configuration using
    the `kubectl describe` command:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe`命令验证标签是否按照pod配置添加：
- en: '[PRE25]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You should see the following output:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '![Figure 6.7: Verifying that the labels were added to pod-with-some-labels'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.7：验证标签是否已添加到带有一些标签的pod'
- en: '](image/B14870_06_07.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_07.jpg)'
- en: 'Figure 6.7: Verifying that the labels were added to pod-with-some-labels'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7：验证标签是否已添加到带有一些标签的pod
- en: Once we are sure that the `app=nginx` label is present, we will modify this
    label in the next step.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们确定`app=nginx`标签存在，我们将在下一步中修改此标签。
- en: 'Modify the `app=nginx` label to `app=nginx-application` using the `kubectl
    label` command:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl label`命令将`app=nginx`标签修改为`app=nginx-application`：
- en: '[PRE26]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You should see the following response:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下响应：
- en: '[PRE27]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Verify that the value of label was modified from `nginx` to `nginx-application`
    using the `kubectl describe` command:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe`命令验证标签的值是否从`nginx`修改为`nginx-application`：
- en: '[PRE28]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The following screenshot shows the output of this command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了此命令的输出：
- en: '![Figure 6.8: Verifying that the label value has been modified'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.8：验证标签值是否已修改'
- en: '](image/B14870_06_08.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_08.jpg)'
- en: 'Figure 6.8: Verifying that the label value has been modified'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8：验证标签值是否已修改
- en: As highlighted in the output, we can see that the label with the `app` key has
    a new value, `nginx-application`.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如输出所示，我们可以看到具有`app`键的标签具有新值`nginx-application`。
- en: 'Delete the label with the `app` key using the `kubectl label` command:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl label`命令删除具有`app`键的标签：
- en: '[PRE29]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Note the hyphen at the end of the preceding command. You should see the following
    response:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意前面命令的连字符。您应该看到以下响应：
- en: '[PRE30]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Verify that the label with the `app` key was actually deleted using the `kubectl
    describe` command:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl describe`命令验证实际上已删除具有`app`键的标签：
- en: '[PRE31]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'You should see the following output:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '![Figure 6.9: Verifying that the desired label was actually deleted from the
    pod'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.9：验证实际上已从pod中删除所需的标签'
- en: '](image/B14870_06_09.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_09.jpg)'
- en: 'Figure 6.9: Verifying that the desired label was actually deleted from the
    pod'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9：验证实际上已从pod中删除所需的标签
- en: As highlighted in the preceding output, we can again note that the label with
    the `app` key was deleted and, hence, the pod now has no label. Thus, we have
    learned how to modify and delete an existing label for a running pod.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的输出所示，我们可以再次注意到具有`app`键的标签已被删除，因此，该pod现在没有标签。因此，我们已经学会了如何修改和删除运行中pod的现有标签。
- en: Selecting Kubernetes Objects Using Label Selectors
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用标签选择器选择Kubernetes对象
- en: In order to group various objects based on their labels, we use a label selector.
    It allows users to identify a set of objects matching certain criteria.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了根据它们的标签对各种对象进行分组，我们使用标签选择器。它允许用户识别符合某些条件的一组对象。
- en: 'We can use the following syntax for the `kubectl get` command and pass the
    label selector using the `-l` or `--label` argument:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下语法来使用`kubectl get`命令，并使用`-l`或`--label`参数传递标签选择器：
- en: '[PRE32]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: In the following exercises, we will see how to use this command in an actual
    scenario. Before that, let's understand what kinds of `{label_selector}` arguments
    we can use in these commands.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的练习中，我们将看到如何在实际场景中使用此命令。在此之前，让我们了解在这些命令中可以使用哪些`{label_selector}`参数。
- en: 'Currently, there are two types of label selectors: equality-based and set-based.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，有两种类型的标签选择器：基于相等性和基于集合。
- en: Equality-Based Selectors
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于相等性的选择器
- en: Equality-based selectors allow Kubernetes objects to be selected according to
    label keys and values. These kinds of selectors allow us to match all objects
    that have specific label values for given label keys. In fact, we have inequality-based
    selectors as well.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 基于相等性的选择器允许根据标签键和值选择Kubernetes对象。这些类型的选择器允许我们匹配具有给定标签键的特定标签值的所有对象。实际上，我们也有基于不等性的选择器。
- en: 'Overall, there are three kinds of operators: `=`, `==`, and `!=`.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，有三种运算符：`=`，`==`和`!=`。
- en: The first two are actually identical in operation, and denote equality-based
    operations, while the third one denotes inequality-based operations. While using
    these kinds of selectors, we can specify more than one condition using any of
    the preceding operators.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 前两个实际上在操作上是相同的，并表示基于相等性的操作，而第三个表示基于不等性的操作。在使用这些类型的选择器时，我们可以使用任何前述运算符指定多个条件。
- en: 'For example, if we are using label keys such as `environment` and `team`, we
    may want to use the following selectors:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们使用标签键如`environment`和`team`，我们可能想使用以下选择器：
- en: '[PRE33]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The preceding selector matches all the objects that have a label key environment
    and the corresponding `production` value:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的选择器匹配所有具有标签键环境和相应的`production`值的对象：
- en: '[PRE34]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The preceding selector matches all the objects that either doesn't have a `team`
    label key or those for which a `team` label key exists, and the corresponding
    value is **not** equal to `devops-infra`.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的选择器匹配所有没有`team`标签键或者存在`team`标签键但相应的值**不等于**`devops-infra`的对象。
- en: 'Similarly, we can also use both the selectors together, separated by commas
    (`,`):'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们也可以同时使用两个选择器，用逗号（`,`）分隔：
- en: '[PRE35]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: In the preceding example, the selector will match all the objects that match
    both the criteria specified by the two selectors. The comma acts as a logical
    AND (`&&`) operator between the two selectors specified. Let's now try our hands
    at the implementation of these selectors in the following exercises.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，选择器将匹配符合两个选择器指定的条件的所有对象。逗号充当两个选择器之间的逻辑AND（`&&`）运算符。现在，让我们尝试在以下练习中实现这些选择器。
- en: 'Exercise 6.04: Selecting Pods Using Equality-Based Label Selectors'
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习6.04：使用基于相等性的标签选择器选择Pod
- en: 'In this exercise, we aim to create some pods with different labels and then
    select them using equality-based selectors. In order to complete this exercise
    successfully, perform the following steps:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们的目标是创建一些具有不同标签的Pod，然后使用基于相等性的选择器选择它们。为了成功完成这个练习，请执行以下步骤：
- en: 'Create a file called `pod-frontend-production.yaml` with the following content:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`pod-frontend-production.yaml`的文件，内容如下：
- en: '[PRE36]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'As we can see, this is the template for the pod with the following two labels:
    `environment=production` and `role=frontend`.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，这是具有以下两个标签的Pod模板：`environment=production`和`role=frontend`。
- en: 'Create another file called `pod-backend-production.yaml` with the following
    content:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个名为`pod-backend-production.yaml`的文件，内容如下：
- en: '[PRE37]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'This is the template for the pod with the following two labels: `environment=production`
    and `role=backend`.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这是具有以下两个标签的Pod模板：`environment=production`和`role=backend`。
- en: 'Create another file called `pod-frontend-staging.yaml` with the following content:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个名为`pod-frontend-staging.yaml`的文件，内容如下：
- en: '[PRE38]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This is the template for the pod with the following two labels: `environment=staging`
    and `role=frontend`.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这是具有以下两个标签的Pod模板：`environment=staging`和`role=frontend`。
- en: 'Create all three pods using the following three commands:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下三个命令创建所有三个Pod：
- en: '[PRE39]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'You should see the following response:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会看到以下响应：
- en: '[PRE40]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Now, run the following command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行以下命令：
- en: '[PRE41]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The following response indicates that the pod has been created:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下响应表示已创建Pod：
- en: '[PRE42]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Now, run the following command:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行以下命令：
- en: '[PRE43]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'This should give the following response:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会得到以下响应：
- en: '[PRE44]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Verify that all three pods are created with correct labels using the `--show-labels`
    argument to the `kubectl get` command. First, let''s check the `frontend-production`
    pod:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`--show-labels`参数来验证所有三个Pod是否使用正确的标签创建，首先，让我们检查`frontend-production` Pod：
- en: '[PRE45]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The following response indicates that the `frontend-production` pod has been
    created:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 以下响应表示已创建`frontend-production` Pod：
- en: '![Figure 6.10: Verifying labels for the frontend-production pod'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.10：验证frontend-production Pod的标签'
- en: '](image/B14870_06_10.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_10.jpg)'
- en: 'Figure 6.10: Verifying labels for the frontend-production pod'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10：验证frontend-production Pod的标签
- en: 'Now, check the `backend-production` pod:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，检查`backend-production` Pod：
- en: '[PRE46]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The following response indicates that the `backend-production` pod has been
    created:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 以下响应表示已创建`backend-production` Pod：
- en: '![Figure 6.11: Verifying labels for the backend-production pod'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.11：验证backend-production Pod的标签'
- en: '](image/B14870_06_11.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_11.jpg)'
- en: 'Figure 6.11: Verifying labels for the backend-production pod'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11：验证backend-production Pod的标签
- en: 'Finally, check the `frontend-staging` pod:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，检查`frontend-staging` Pod：
- en: '[PRE47]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The following response indicates that the `frontend-staging` pod has been created:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 以下响应表明`frontend-staging` pod已被创建：
- en: '![Figure 6.12: Verifying labels for the frontend-staging pod'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.12：验证frontend-staging pod的标签'
- en: '](image/B14870_06_12.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_12.jpg)'
- en: 'Figure 6.12: Verifying labels for the frontend-staging pod'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12：验证frontend-staging pod的标签
- en: 'Now, we will use label selectors to see all the pods that are assigned to the
    production environment. We can do this by using `environment=production` as the
    label selector with the `kubectl get` command:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用标签选择器来查看分配给生产环境的所有pod。我们可以使用`environment=production`作为标签选择器与`kubectl
    get`命令一起实现：
- en: '[PRE48]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'In the following output, we can see that it only shows those pods that have
    a label with the `environment` key and the `production` value:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的输出中，我们可以看到它只显示那些具有`environment`键和`production`值的标签的pod：
- en: '[PRE49]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: You can confirm from *Figure 6.10* and *Figure 6.11* that these are the pods
    with the `environment=production` label.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从*图6.10*和*图6.11*确认，这些是具有`environment=production`标签的pod。
- en: 'Next, we will use label selectors to see all the pods that have the `frontend`
    role and the `staging` environment. We can do this by using the label selector
    with the `kubectl get` command, as shown here:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用标签选择器来查看所有具有`frontend`角色和`staging`环境的pod。我们可以通过使用标签选择器与`kubectl get`命令来实现，如下所示：
- en: '[PRE50]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'In the following output, we can see that it only shows those pods that have
    `staging` as the environment and `frontend` as the role:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的输出中，我们可以看到它只显示那些具有`staging`作为环境和`frontend`作为角色的pod：
- en: '[PRE51]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: In this exercise, we have used label selectors to select particular pods. Such
    label selectors for the `get` command provide a convenient way to choose the required
    set of pods based on the labels. This also represents a common scenario, where
    you would want to apply some changes only to the pods involved in the production
    or staging environment, or the frontend or backend infrastructure.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们已经使用标签选择器来选择特定的pod。`get`命令的这种标签选择器为基于标签选择所需的一组pod提供了一种便捷的方式。这也代表了一个常见的场景，您可能只想对涉及生产或分段环境的pod或前端或后端基础设施应用一些更改。
- en: Set-Based Selectors
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于集合的选择器
- en: Set-based selectors allow Kubernetes objects to be selected on the basis of
    a set of values for given keys. These kinds of selectors allow us to match all
    objects that have a given label key with a value in a given set of values.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 基于集合的选择器允许根据给定键的一组值选择Kubernetes对象。这种类型的选择器允许我们匹配所有具有给定标签键和给定一组值中的一个值的对象。
- en: 'There are three kinds of operators: `in`, `notin`, and `exists`. Let''s see
    what these operators mean with the help of some examples:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种类型的操作符：`in`，`notin`和`exists`。让我们通过一些例子来看看这些操作符的含义：
- en: '[PRE52]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'In the preceding example, the selector matches all the objects that have an
    `environment` label key and the value is either `production` or `staging`:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，选择器匹配所有具有`environment`标签键且值为`production`或`staging`的对象：
- en: '[PRE53]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The selector in the preceding example matches all the objects that have a `team`
    label key and the value is anything other than `devops-infra`. It also matches
    those objects that don''t have the `team` label key:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，选择器匹配所有具有`team`标签键且值不是`devops-infra`的对象。它还匹配那些没有`team`标签键的对象：
- en: '[PRE54]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: In the preceding example, the selector is equivalent to the `exists` operation.
    It matches all the objects that don't have the `critical` label key. It doesn't
    check for a value at all.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，选择器等同于`exists`操作。它匹配所有没有`critical`标签键的对象。它根本不检查值。
- en: Note
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The two types of selectors can also be used together, as we will observe in
    *Exercises 6.06*, *Selecting Pods Using a Mix of Label Selectors*.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种类型的选择器也可以一起使用，正如我们将在*练习6.06*，*使用混合标签选择器选择Pods*中观察到的那样。
- en: Let's implement the set-based selectors in the following exercise.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在接下来的练习中实现基于集合的选择器。
- en: 'Exercise 6.05: Selecting Pods Using Set-Based Label Selectors'
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习6.05：使用基于集合的标签选择器选择Pods
- en: In this exercise, we aim to create some pods with different labels and then
    select them using set-based selectors.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们的目标是创建一些具有不同标签的pod，然后使用基于集合的选择器来选择它们。
- en: Note
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In this exercise, we assume that you have successfully completed *Exercise 6.04*,
    *Selecting Pods Using Equality-Based Label Selectors*. We will be reusing the
    pods created in that exercise.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们假设您已经成功完成了*练习6.04*，*使用基于相等性的标签选择器选择Pods*。我们将重用在该练习中创建的pods。
- en: 'In order to complete this exercise successfully, perform the following steps:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功完成这个练习，请执行以下步骤：
- en: 'Open the terminal and verify that the `frontend-production` pod we created
    in *Exercise 6.04*, *Selecting Pods Using Equality-Based Label Selectors*, is
    still running and has the required labels. We will be using the `--show-labels`
    argument with the `kubectl get` command:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并验证我们在*练习6.04*，*使用基于相等性的标签选择器选择Pods*中创建的`frontend-production` pod是否仍在运行并具有所需的标签。我们将使用`kubectl
    get`命令和`--show-labels`参数：
- en: '[PRE55]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The following response indicates that the `frontend-production` pod exists:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 以下响应表明`frontend-production` pod存在：
- en: '![Figure 6.13: Verifying labels for the frontend-production pod'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.13：验证前端生产pod的标签'
- en: '](image/B14870_06_13.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_13.jpg)'
- en: 'Figure 6.13: Verifying labels for the frontend-production pod'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13：验证前端生产pod的标签
- en: 'Verify that the `backend-production` pod we created in *Exercise 6.04*, *Selecting
    Pods Using Equality-Based Label Selectors* is still running and has the required
    labels using the `kubectl get` command with the `--show-labels` argument:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl get`命令和`--show-labels`参数验证我们在*练习6.04*，*使用基于相等性的标签选择器选择Pods*中创建的`backend-production`
    pod是否仍在运行并具有所需的标签：
- en: '[PRE56]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The following response indicates that the `backend-production` pod exists:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 以下响应表明`backend-production` pod存在：
- en: '![Figure 6.14: Verifying labels for the backend-production pod'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.14：验证后端生产pod的标签'
- en: '](image/B14870_06_14.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_14.jpg)'
- en: 'Figure 6.14: Verifying labels for the backend-production pod'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14：验证后端生产pod的标签
- en: 'Verify that the `frontend-staging` pod we created in *Exercise 6.04*, *Selecting
    Pods Using Equality-Based Label Selectors* is still running and has the required
    labels using the `kubectl get` command with the `--show-labels` argument:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl get`命令和`--show-labels`参数验证我们在*练习6.04*，*使用基于相等性的标签选择器选择Pods*中创建的`frontend-staging`
    pod是否仍在运行并具有所需的标签：
- en: '[PRE57]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The following response indicates that the `frontend-staging` pod exists:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 以下响应表明`frontend-staging` pod存在：
- en: '![Figure 6.15: Verifying labels for the frontend-staging pod'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15：验证前端暂存pod的标签
- en: '](image/B14870_06_15.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_15.jpg)'
- en: 'Figure 6.15: Verifying labels for the frontend-staging pod'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15：验证前端暂存pod的标签
- en: 'Now, we will use the label selectors to match all the pods for which the environment
    is `production`, and the role is either `frontend` or `backend`. We can do this
    by using the label selector with the `kubectl get` command as shown here:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用标签选择器来匹配所有环境为“production”，角色为“frontend”或“backend”的所有pod。我们可以通过使用标签选择器和`kubectl
    get`命令来实现这一点，如下所示：
- en: '[PRE58]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'You should see the following response:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下响应：
- en: '[PRE59]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Next, we will use the label selectors to match all those pods that have the
    `environment` label and whose role is anything other than `backend`. We also want
    to exclude those pods that don''t have the `role` label set:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用标签选择器来匹配所有具有`environment`标签且角色不是`backend`的pod。我们还希望排除那些没有设置`role`标签的pod：
- en: '[PRE60]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'This should produce the following output:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该产生以下输出：
- en: '[PRE61]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: In this example, we have the set-based selectors that can be used to get the
    desired pods. We can also combine these with selector-based pods, as we shall
    see in the following exercise.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们有基于集合的选择器，可以用来获取所需的pods。我们还可以将这些与基于选择器的pods结合起来，正如我们将在接下来的练习中看到的。
- en: 'Exercise 6.06: Selecting Pods Using a Mix of Label Selectors'
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习6.06：使用混合标签选择器选择Pods
- en: In this exercise, we aim to create some pods with different labels and then
    select them using a combination of equality-based and set-based selectors.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们的目标是创建一些具有不同标签的pods，然后使用基于相等性和基于集合的选择器来选择它们。
- en: Note
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In this exercise, we assume that you have successfully completed *Exercise 6.04*,
    *Selecting Pods Using Equality-Based Label Selectors*. We will be reusing the
    pods created in that exercise.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们假设您已成功完成*练习6.04*，*使用基于相等性的标签选择器选择Pods*。我们将重用在该练习中创建的pods。
- en: 'In order to complete this exercise successfully, perform the following steps:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功完成这个练习，请执行以下步骤：
- en: 'Open the terminal and verify that the `frontend-production` pod we created
    in *Exercise 6.04*, *Selecting Pods Using Equality-Based Label Selectors*, is
    still running and has the required labels. We will be using the `--show-labels`
    argument with the `kubectl get` command:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，验证我们在*练习6.04*，*使用基于相等性的标签选择器选择Pods*中创建的`frontend-production` pod是否仍在运行并具有所需的标签。我们将使用`kubectl
    get`命令和`--show-labels`参数：
- en: '[PRE62]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The following response indicates that the `frontend-production` pod exists:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的响应表明`frontend-production` pod存在：
- en: '![Figure 6.16: Verifying labels for the frontend-production pod'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.16：验证frontend-production pod的标签'
- en: '](image/B14870_06_16.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_16.jpg)'
- en: 'Figure 6.16: Verifying labels for the frontend-production pod'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16：验证frontend-production pod的标签
- en: 'Verify that the `backend-production` pod we created in *Exercise 6.04*, *Selecting
    Pods Using Equality-Based Label Selectors* is still running and has the required
    labels using the `kubectl get` command with the `--show-labels` argument:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl get`命令和`--show-labels`参数验证我们在*练习6.04*，*使用基于相等性的标签选择器选择Pods*中创建的`backend-production`
    pod是否仍在运行并具有所需的标签：
- en: '[PRE63]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The following response indicates that the `backend-production` pod exists:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的响应表明`backend-production` pod存在：
- en: '![Figure 6.17: Verifying labels for the backend-production pod'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.17：验证backend-production pod的标签'
- en: '](image/B14870_06_17.jpg)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_17.jpg)'
- en: 'Figure 6.17: Verifying labels for the backend-production pod'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17：验证backend-production pod的标签
- en: 'Verify that the `frontend-staging` pod we created in *Exercise 6.04*, *Selecting
    Pods Using Equality-Based Label Selectors* is still running and has the required
    labels using the `kubectl get` command with the `--show-labels` argument:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubectl get`命令和`--show-labels`参数验证我们在*练习6.04*，*使用基于相等性的标签选择器选择Pods*中创建的`frontend-staging`
    pod是否仍在运行并具有所需的标签：
- en: '[PRE64]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The following response indicates that the `frontend-staging` pod exists:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的响应表明`frontend-staging` pod存在：
- en: '![Figure 6.18: Verifying labels for the frontend-staging pod'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.18：验证frontend-staging pod的标签'
- en: '](image/B14870_06_18.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_18.jpg)'
- en: 'Figure 6.18: Verifying labels for the frontend-staging pod'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.18：验证frontend-staging pod的标签
- en: 'Now, we will use the label selectors to match all the pods that have a `frontend`
    role and whose environment is one of `production`, `staging`, or `dev`:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用标签选择器来匹配所有具有`frontend`角色且环境为`production`、`staging`或`dev`之一的pod：
- en: '[PRE65]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'This command should give the following list of pods:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令应该给出以下pod列表：
- en: '[PRE66]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: In the output, we can only see those pods that have a `frontend` role, whereas
    the `environment` can be any one of the given values. Thus, we have seen that
    a mix of different types of selectors can be used as required.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出中，我们只能看到具有“frontend”角色的那些pod，而“environment”可以是给定值中的任何一个。因此，我们已经看到可以根据需要使用不同类型的选择器的混合。
- en: Annotations
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注释
- en: As we have seen previously, labels are used to add the identifying metadata
    that we can later use to filter or select objects by. However, labels have certain
    constraints in terms of what we can store in the values, such as the limitation
    of 63 characters and alphanumeric characters at the beginning and end. Annotations,
    on the other hand, have fewer constraints in terms of what kind of data can be
    stored in them. However, we cannot filter or select objects by using annotations.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所看到的，标签用于添加我们稍后可以使用来过滤或选择对象的标识元数据。然而，标签在值方面有一定的限制，比如我们可以存储的字符数限制为63个字符，并且在开头和结尾只能使用字母数字字符。另一方面，注释在可以存储的数据类型方面有更少的限制。然而，我们不能使用注释来过滤或选择对象。
- en: 'Annotations are also key-value pairs that can be used to store the unstructured
    information pertaining to the Kubernetes objects. Here is an example of how annotations
    in a YAML file would appear:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 注释也是可以用于存储与Kubernetes对象相关的非结构化信息的键值对。以下是YAML文件中注释的示例：
- en: '[PRE67]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Constraints for Annotations
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注释的约束
- en: As noted in the previous section, annotations are key-value pairs, just like
    labels. However, the rules for annotations are more relaxed than the rules for
    label keys and values. The reason for more relaxed constraints is the lack of
    support for filtering or selecting objects using annotations. This is because
    the key-value pairs of annotations are not stored in a lookup-efficient data structure.
    Hence, there are fewer restrictions here.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，注释是键值对，就像标签一样。然而，注释的规则比标签键和值的规则更宽松。更宽松的约束是因为注释不能用于过滤或选择对象。这是因为注释的键值对没有存储在一个高效的查找数据结构中。因此，在这里有更少的限制。
- en: Annotation Keys
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释键
- en: 'Similar to label keys, annotation keys also have two parts: a prefix and a
    name. The constraints for both annotation prefixes and names are the same as those
    for the label prefixes and names, respectively.'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 与标签键类似，注释键也有两部分：前缀和名称。注释前缀和名称的约束与标签前缀和名称的约束相同。
- en: 'Here''s an example of how an annotation key may appear:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是注释键可能出现的示例：
- en: '[PRE68]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Annotation Values
  id: totrans-294
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释值
- en: There are no restrictions in terms of what kinds of data annotation values may
    contain.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在注释值中，没有任何数据类型的限制。
- en: Use Case for Annotations
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注释的用例
- en: 'Annotations are generally used to add metadata that won''t be used to filter
    or select objects. It''s used to add metadata that will be used by users or tools
    to get more subjective information regarding the Kubernetes objects. Let''s look
    at some of the scenarios where using annotations can be useful:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 注释通常用于添加元数据，这些元数据不会用于过滤或选择对象。它用于添加将由用户或工具用于获取有关Kubernetes对象的更主观信息的元数据。让我们看一些使用注释可能有用的场景：
- en: 'Annotations can be used to add timestamps, commit SHA, issue tracker links,
    or names/information about users who are responsible for specific objects in an
    organization. In this case, we can use the following type of metadata, depending
    on our use case:'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释可用于添加时间戳、提交SHA、问题跟踪器链接，或者组织中负责特定对象的用户的名称/信息。在这种情况下，我们可以根据我们的用例使用以下类型的元数据：
- en: '[PRE69]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Annotations can also be used to add information about client libraries or tools.
    We can add information such as the name of the library, the version used, and
    public documentation links. This information can later be used for debugging issues
    in our application:'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释还可以用于添加有关客户端库或工具的信息。我们可以添加诸如库的名称、使用的版本和公共文档链接等信息。这些信息以后可以用于调试我们应用程序中的问题：
- en: '[PRE70]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'We can also use annotations to store the previous pod configuration deployed.
    This can be really helpful in figuring out what configuration was deployed before
    the current revision and what has changed:'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可以使用注释来存储先前部署的pod配置。这在弄清当前修订之前部署的配置以及发生了什么变化方面非常有帮助：
- en: '[PRE71]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Annotations can also be used to store the configuration or checkpoints that
    can be helpful in the deployment process for our applications.
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释还可以用于存储在部署过程中对我们的应用程序有帮助的配置或检查点。
- en: We will learn how to add annotations to a pod in the following exercise.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一个练习中学习如何向pod添加注释。
- en: 'Exercise 6.07: Adding Annotations to Help with Application Debugging'
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习6.07：添加注释以帮助应用程序调试
- en: 'In this exercise, we will add some arbitrary metadata to our pod. In order
    to complete this exercise successfully, perform the following steps:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将向我们的pod添加一些任意的元数据。为了成功完成这个练习，请执行以下步骤：
- en: 'Create a file called `pod-with-annotations.yaml` with the following content:'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`pod-with-annotations.yaml`的文件，内容如下：
- en: '[PRE72]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: The highlighted part in the pod definition shows the annotations that we have
    added.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在pod定义的突出显示部分显示了我们添加的注释。
- en: 'Run the following command in the Terminal to create the pod using the `kubectl
    create` command:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中运行以下命令，使用`kubectl create`命令创建pod：
- en: '[PRE73]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'You should get the following response:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该收到以下响应：
- en: '[PRE74]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Run the following command in the Terminal to verify that the pod was created
    as desired:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中运行以下命令以验证pod是否按预期创建：
- en: '[PRE75]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'You should see the following list of pods:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下pod列表：
- en: '[PRE76]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Run the following command in the Terminal to verify that the created pod has
    the desired annotations:'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中运行以下命令以验证创建的pod是否具有所需的注释：
- en: '[PRE77]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'You should see the following output of this command:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到此命令的以下输出：
- en: '![Figure 6.19: Verifying annotations for the pod-with-annotations pod'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.19：验证带注释的pod的注释'
- en: '](image/B14870_06_19.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14870_06_19.jpg)'
- en: 'Figure 6.19: Verifying annotations for the pod-with-annotations pod'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.19：验证带注释的pod的注释
- en: As we can see in the highlighted section of the preceding output, the desired
    metadata has been added as annotations to the pod. Now, this data can be used
    by any deployment tools or clients who may know about the key names used.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上述输出的突出显示部分中所看到的，所需的元数据已作为注释添加到了pod中。现在，这些数据可以被任何了解使用的部署工具或客户端使用。
- en: Working with Annotations
  id: totrans-326
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用注释
- en: 'In the previous exercise, we created a pod with annotations. Similar to labels,
    we can add annotations to a running pod and modify/delete the annotations of a
    running pod. This can be achieved by running similar commands as those for labels.
    The following list presents you with the various operations that can be performed
    on annotations along with the relevant commands:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个练习中，我们创建了一个带有注释的pod。与标签类似，我们可以向运行中的pod添加注释，并修改/删除运行中的pod的注释。这可以通过运行类似于标签的命令来实现。以下列表向您展示了可以对注释执行的各种操作以及相关命令：
- en: 'Thus, we can add annotations to a running pod by using the following command:'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，我们可以通过使用以下命令向运行中的pod添加注释：
- en: '[PRE78]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: In the preceding command, we can add multiple annotations similar to multiple
    labels, as in *step 7* of *Exercise 6.02*, *Adding Labels to a Running Pod*.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，我们可以添加多个注释，类似于*练习6.02*中*步骤7*中添加多个标签。
- en: 'We can also modify (overwrite) an annotation as follows:'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可以修改（覆盖）注释，如下所示：
- en: '[PRE79]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Finally, we can delete an annotation using the following command:'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们可以使用以下命令删除注释：
- en: '[PRE80]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Note the hyphen at the end of the preceding command. Now that we have learned
    about labels and annotations as well as the various ways in which we can use them,
    let's bring all of this together in the following activity.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 注意前面命令末尾的连字符。现在我们已经了解了标签和注释以及我们可以使用它们的各种方式，让我们在以下活动中将所有这些内容汇总起来。
- en: 'Activity 6.01: Creating Pods with Labels/Annotations and Grouping Them as per
    Given Criteria'
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动6.01：使用标签/注释创建Pod并根据给定标准对它们进行分组
- en: Consider that you're working on supporting two teams called `product-development`
    and `infra-libraries`. Both teams have some application pods for different environments
    (production or staging). The teams also want to mark their pods as critical if
    that is indeed the case.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到您正在支持名为`product-development`和`infra-libraries`的两个团队。这两个团队都有一些应用程序pod用于不同的环境（生产或分级）。如果情况确实如此，团队还希望将其pod标记为关键。
- en: 'In short, you need to create three pods as per the following metadata requirements:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，您需要根据以下元数据要求创建三个pod：
- en: An `arbitrary-product-application` pod that runs in a production environment
    and is owned by the `product-development` team. This needs to be marked as a non-critical
    pod.
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个在生产环境中运行并由`product-development`团队拥有的`arbitrary-product-application` pod。这需要标记为非关键pod。
- en: An `infra-libraries-application` pod that runs in a production environment and
    is owned by the `infra-libraries` team. This needs to be marked as a critical
    pod.
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个在生产环境中运行并由`infra-libraries`团队拥有的`infra-libraries-application` pod。这需要标记为关键pod。
- en: An `infra-libraries-application-staging` pod that runs in a staging environment
    and is owned by the `infra-libraries` team. Since it runs in staging, the criticality
    of the pod does not need to be indicated.
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个在分级环境中运行并由`infra-libraries`团队拥有的`infra-libraries-application-staging` pod。由于它在分级环境中运行，因此不需要指示该pod的重要性。
- en: In addition to this, both teams also want to add another piece of metadata –
    "team-link" in which they want to store the internal link of the team's contact
    information.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，两个团队还想要添加另一个元数据 - "team-link"，他们希望在其中存储团队联系信息的内部链接。
- en: 'You should be able to perform the following tasks once all three pods have
    been created:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了所有三个pod，您应该能够执行以下任务：
- en: Group all the pods that run in the production environment and are critical.
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有在生产环境中运行且关键的pod分组。
- en: Group all the pods that are not critical among all environments.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有环境中不关键的pod分组。
- en: Note
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Ideally, you would want to create this pod to be in a different namespace so
    as to keep it separate from the rest of the stuff that you created during the
    exercises. Therefore, feel free to create a namespace and create the pod in that
    namespace.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，您希望创建此pod位于不同的命名空间中，以使其与您在练习期间创建的其他内容分开。因此，可以随意创建一个命名空间并在该命名空间中创建pod。
- en: 'The high-level steps to perform this activity are as follows:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此活动的高级步骤如下：
- en: Create a namespace for this activity.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此活动创建一个命名空间。
- en: Write the pod configurations for all three pods. Ensure that all the metadata
    requested is added correctly among the labels and annotations.
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写所有三个pod的pod配置。确保在标签和注释中正确添加所有请求的元数据。
- en: Create all three pods using the configurations written in the previous step.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用上一步中编写的配置创建所有三个pod。
- en: Make sure that all three pods are running and have all the requested metadata.
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保所有三个pod都在运行并具有所有请求的元数据。
- en: Group all the pods that run in the production environment and are critical.
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有在生产环境中运行且关键的pod分组。
- en: Group all the pods that are not critical among all environments.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有环境中不重要的pod分组。
- en: 'For the first task, your goal should get the `infra-libraries-application`
    pod once you complete the activity, as shown here:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一个任务，您的目标是在完成活动后获得`infra-libraries-application` pod，如下所示：
- en: '[PRE81]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'For the second task, your goal is to obtain `arbitrary-product-application`
    and `infra-libraries-application-staging` once you complete the activity, as shown
    here:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第二个任务，您的目标是在完成活动后获得`arbitrary-product-application`和`infra-libraries-application-staging`，如下所示：
- en: '[PRE82]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Note
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The solution to this activity can be found at the following address: [https://packt.live/304PEoD](https://packt.live/304PEoD).'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 此活动的解决方案可在以下地址找到：[https://packt.live/304PEoD](https://packt.live/304PEoD)。
- en: Summary
  id: totrans-361
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have described labels and annotations and used them to add
    metadata information, which can either be identifiable information that can be
    used to filter or select objects, or non-identifiable information that can be
    used by users or tools to get more context regarding the state of the application.
    More specifically, we have also organized objects such as pods using labels and
    annotations. These are important skills that will help you manage your Kubernetes
    objects more efficiently.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们描述了标签和注释，并使用它们添加元数据信息，这些信息可以是可识别的信息，可用于过滤或选择对象，也可以是用户或工具用于获取有关应用程序状态的更多上下文的不可识别信息。更具体地说，我们还使用标签和注释组织了诸如pod之类的对象。这些是重要的技能，将帮助您更有效地管理Kubernetes对象。
- en: In the following chapters, as we become familiar with more Kubernetes objects
    such as Deployments and Services, we will see the further application of labels
    and label selectors while organizing pods for deployment or discovery.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，当我们熟悉更多的Kubernetes对象，比如部署和服务时，我们将看到标签和标签选择器在组织用于部署或发现的pod时的进一步应用。
