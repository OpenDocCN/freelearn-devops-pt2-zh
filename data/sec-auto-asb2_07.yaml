- en: Security Hardening for Applications and Networks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序和网络的安全加固
- en: 'Security hardening is the most obvious task for any security-conscious endeavor.
    By doing the effort of securing systems, applications, and networks, one can achieve
    multiple security goals given as follows:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 安全加固是任何注重安全的努力中最明显的任务。通过保护系统、应用程序和网络，可以实现多个安全目标，如下所述：
- en: Ensuring that applications and networks are not compromised (sometimes)
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保应用程序和网络没有受到威胁（有时）
- en: Making it difficult for compromises to stay hidden for long
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使威胁难以长期隐藏
- en: Securing by default ensures that compromises in one part of the network don't
    propagate further and more
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下进行安全加固，确保网络的一部分遭受威胁时不会进一步传播和蔓延
- en: 'The Ansible way of thinking about automation around security is a great fit
    for automating security hardening. In this chapter, we will introduce security
    benchmarks and frameworks that can be used to build playbooks that will allow
    us to do the following things:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 在围绕安全自动化方面的思考方式非常适合用于自动化安全加固。在本章中，我们将介绍可以用于构建 playbook 的安全基准和框架，这些 playbook
    将允许我们做以下事情：
- en: Secure our master images so that as soon as the applications and systems are
    part of the network, they offer decent security
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保我们的主镜像安全，以便应用程序和系统一旦成为网络的一部分，它们就提供了合适的安全性
- en: Execute audit processes so that we can verify and measure periodically if the
    applications, systems, and networks are in line with the security policies that
    are required by the organization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行审计过程，以便我们可以周期性地验证和测量应用程序、系统和网络是否符合组织所需的安全策略
- en: This is by no stretch a new idea. Extensive work has taken place in this sphere.
    We will look at projects such as dev-sec.io ([http://dev-sec.io/](http://dev-sec.io/)),
    which make it simple to start with security hardening of our applications and
    networks.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这绝不是一个新的想法。在这个领域已经进行了大量工作。我们将看一些项目，如 dev-sec.io ([http://dev-sec.io/](http://dev-sec.io/)),
    它们使我们可以简单地开始对应用程序和网络进行安全加固。
- en: 'Topics to be covered in this chapter are as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖的主题如下：
- en: Security hardening with benchmarks such as **Center for Internet Security**
    (**CIS**), **Security Technical Implementation Guides** (**STIG**), and **National
    Institute of Standards and Technology** (**NIST**)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 CIS、STIG 和 NIST 等基准进行安全加固
- en: Automating security audit checks for networking devices using Ansible
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ansible 自动化进行网络设备的安全审计检查
- en: Automating security audit checks for applications using Ansible
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ansible 自动化进行应用程序的安全审计检查
- en: Automated patching approaches using Ansible
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ansible 进行自动打补丁的方法
- en: Security hardening with benchmarks such as CIS, STIGs, and NIST
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CIS、STIG 和 NIST 等基准进行安全加固
- en: Benchmarks provide a great way for anyone to gain assurance of their individual
    security efforts. Created by security experts globally or led by security mature
    government departments such as NIST, benchmarks cover a whole range of systems,
    configurations, software, and more.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 基准为任何人提供了获得其个人安全努力保证的好方法。这些基准由全球安全专家创建，或由安全成熟的政府部门如 NIST 领导，涵盖了各种系统、配置、软件等。
- en: 'Hardening for security mostly boils down to do the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 安全加固主要归结为以下几点：
- en: Agreeing on what is the minimal set of configuration that qualifies as secure
    configuration. This is usually defined as a hardening benchmark or framework.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 达成一致，确定最小配置集合何时符合安全配置的定义。通常将其定义为加固基准或框架。
- en: Making changes to all the aspects of the system that are touched by such configuration.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对受到此类配置影响的系统的所有方面进行更改。
- en: Measuring periodically if the application and system are still in line with
    the configuration or if there is any deviation.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定期测量应用程序和系统是否仍与配置一致，或是否存在任何偏差。
- en: If any deviation is found, take corrective action to fix that.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果发现任何偏差，立即采取纠正措施修复它。
- en: If no deviation is found, log that.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有发现任何偏差，记录下来。
- en: Since software is always getting upgraded, staying on top of the latest configuration
    guidelines and benchmarks is most important.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于软件始终在升级，跟踪最新的配置指南和基准非常重要。
- en: 'The three important benchmarks/frameworks for our discussion are:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论的三个重要的基准/框架是：
- en: CIS Benchmarks
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CIS 基准
- en: STIG guides
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: STIG 指南
- en: NIST's **National Checklist Program** (**NCP**)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NIST 的**国家检查清单计划**(**NCP**)
- en: These CIS Benchmarks are usually expressed as PDF documents available to anyone
    who would like to get an idea of how secure their system is compared with what
    CIS experts think about it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这些 CIS 基准通常以 PDF 文档的形式表达，任何想了解他们的系统与 CIS 专家对其安全性的看法相比有多安全的人都可以获得。
- en: CIS is a not-for-profit organization with not-for-profit standards for internet
    security, and are a recognized global standard and best practices for securing
    IT systems and data against attacks. CIS Benchmarks are the only consensus-based,
    best-practice security configuration guides both developed and accepted by the
    government, business, industry, and academia. For more information, visit [https://www.cisecurity.org/cis-benchmarks](https://www.cisecurity.org/cis-benchmarks).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: CIS 是一个非营利性组织，为互联网安全制定了非营利性标准，并被认可为全球标准和最佳实践，用于保护 IT 系统和数据免受攻击。CIS 基准是唯一由政府、企业、行业和学术界开发并接受的基于共识的最佳实践安全配置指南。更多信息，请访问
    [https://www.cisecurity.org/cis-benchmarks](https://www.cisecurity.org/cis-benchmarks)。
- en: STIG is related to the configuration of information systems by US Government's
    department named **DISA**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: STIG 与美国政府部门**DISA**的信息系统配置相关。
- en: The STIGs contain technical guidance to **lock down** information systems/software
    that might otherwise be vulnerable to a malicious computer attack. For more information,
    visit [https://iase.disa.mil/stigs/Pages/index.aspx](https://iase.disa.mil/stigs/Pages/index.aspx).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: STIGs 包含了技术指导，用于**锁定**可能易受恶意计算机攻击影响的信息系统/软件。更多信息，请访问 [https://iase.disa.mil/stigs/Pages/index.aspx](https://iase.disa.mil/stigs/Pages/index.aspx)。
- en: NIST maintains a checklist program that are expressed in files that follows
    the **Security Content Automation Protocol** (**SCAP**). Software tools can read
    these files to automate the configuration changes and audit running configurations.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: NIST 维护一个以符合**安全内容自动化协议**（**SCAP**）的文件形式表达的检查表程序。软件工具可以读取这些文件以自动化配置更改和审计运行配置。
- en: SCAP enables validated security tools to automatically perform configuration
    checking using SCAP-expressed NCP checklists. For more information, visit [https://www.nist.gov/programs-projects/national-checklist-program](https://www.nist.gov/programs-projects/national-checklist-program).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: SCAP 使得验证过的安全工具可以使用 SCAP 表达的 NCP 检查表来自动执行配置检查。更多信息请访问 [https://www.nist.gov/programs-projects/national-checklist-program](https://www.nist.gov/programs-projects/national-checklist-program)。
- en: Operating system hardening for baseline using an Ansible playbook
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ansible 剧本对基线进行操作系统加固
- en: Till now, we have created multiple playbooks to perform certain operations.
    Now, we will see how we can use existing playbooks from the community (**Ansible
    Galaxy**).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经创建了多个剧本来执行某些操作。现在，我们将看到如何使用社区提供的现有剧本（**Ansible Galaxy**）。
- en: Hardening Framework is a project by Deutsche Telekom to manage thousands of
    servers for security, compliance, and maintenance. The goal of this project is
    to create a common layer for hardening operating systems and services easily.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Hardening Framework 是德国电信的一个项目，用于管理成千上万台服务器的安全性、合规性和维护。该项目的目标是创建一个通用的层，以便轻松地加固操作系统和服务。
- en: If your organization is using chef or puppet tools as configuration management
    tools, the concepts are completely the same. You can find related cookbooks and
    details at [http://dev-sec.io](http://dev-sec.io).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的组织使用 chef 或 puppet 工具作为配置管理工具，那么这些概念完全相同。你可以在 [http://dev-sec.io](http://dev-sec.io)
    找到相关的菜谱和详细信息。
- en: The following playbook provides multiple security configurations, standards,
    and ways to protect operating system against different attacks and security vulnerabilities.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的剧本提供了多种安全配置、标准以及保护操作系统免受不同攻击和安全漏洞的方法。
- en: 'Some of the tasks it will perform include the following:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 它将执行的一些任务包括以下内容：
- en: Configures package management, for example, allows only signed packages
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置软件包管理，例如，只允许签名软件包
- en: Remove packages with known issues
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除已知问题的软件包
- en: Configures `pam` and `pam_limits` modules
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 `pam` 和 `pam_limits` 模块
- en: Shadow password suite configuration
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shadow 密码套件配置
- en: Configures system path permissions
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置系统路径权限
- en: Disable core dumps via soft limits
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过软限制禁用核心转储
- en: Restrict root logins to system console
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制 root 登录到系统控制台
- en: Set SUIDs
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 SUIDs
- en: Configures kernel parameters via `sysctl`
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 `sysctl` 配置内核参数
- en: 'Downloading and executing Ansible playbooks from galaxy is as simple as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 从 galaxy 下载和执行 Ansible 剧本就像下面这样简单：
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/5028b574-37de-4f45-aa1b-185c6ec6f696.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5028b574-37de-4f45-aa1b-185c6ec6f696.png)'
- en: The dev-sec.os-hardening playbook in execution
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行中的 dev-sec.os-hardening 剧本
- en: The preceding playbook will detect the operating system and perform hardening steps
    based on the different guidelines. This can be configured as required by updating
    the default variables values. Refer to [https://github.com/dev-sec/ansible-os-hardening](https://github.com/dev-sec/ansible-os-hardening)
    for more details about the playbook.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的 playbook 将检测操作系统，并根据不同的指南执行加固步骤。可以通过更新默认变量值来配置此内容。有关 playbook 的更多详细信息，请参阅
    [https://github.com/dev-sec/ansible-os-hardening](https://github.com/dev-sec/ansible-os-hardening)。
- en: STIGs Ansible role for automated security hardening for Linux hosts
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于 Linux 主机的自动化安全加固的 STIGs Ansible 角色
- en: OpenStack has an awesome project named **ansible-hardening** ([https://github.com/openstack/ansible-hardening](https://github.com/openstack/ansible-hardening)),
    which applies the security configuration changes as per the STIGs standards. More
    details about the STIGs benchmarks for Unix/Linux operating systems can be found
    at [https://iase.disa.mil/stigs/os/unix-linux/Pages/index.aspx](https://iase.disa.mil/stigs/os/unix-linux/Pages/index.aspx).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack 有一个名为 **ansible-hardening** 的令人敬畏的项目（[https://github.com/openstack/ansible-hardening](https://github.com/openstack/ansible-hardening)），它根据
    STIGs 标准应用安全配置更改。有关 Unix/Linux 操作系统的 STIGs 基准的更多详细信息，请访问 [https://iase.disa.mil/stigs/os/unix-linux/Pages/index.aspx](https://iase.disa.mil/stigs/os/unix-linux/Pages/index.aspx)。
- en: 'It performs security hardening for the following domains:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 它为以下领域执行安全强化：
- en: '`accounts`: User account security controls'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accounts`: 用户帐户安全控制'
- en: '`aide`: Advanced Intrusion Detection Environment'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aide`: 高级入侵检测环境'
- en: '`auditd`: Audit daemon'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auditd`: 审计守护程序'
- en: '`auth`: Authentication'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auth`: 认证'
- en: '`file_perms`: Filesystem permissions'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file_perms`: 文件系统权限'
- en: '`graphical`: Graphical login security controls'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`graphical`: 图形化登录安全控制'
- en: '`kernel`: Kernel parameters'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kernel`: 内核参数'
- en: '`lsm`: Linux Security Modules'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lsm`: Linux 安全模块'
- en: '`misc`: Miscellaneous security controls'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`misc`: 杂项安全控制'
- en: '`packages`: Package managers'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packages`: 软件包管理器'
- en: '`sshd`: SSH daemon'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sshd`: SSH 守护程序'
- en: The `ansible-hardening` playbook supports multiple Linux operating systems
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`ansible-hardening` playbook 支持多个 Linux 操作系统'
- en: CentOS 7
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS 7
- en: Debian jessie
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian jessie
- en: Fedora 26
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora 26
- en: openSUSE Leap 42.2 and 42.3
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: openSUSE Leap 42.2 和 42.3
- en: Red Hat Enterprise Linux 7
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Red Hat Enterprise Linux 7
- en: SUSE Linux Enterprise 12 (experimental)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SUSE Linux Enterprise 12（实验性）
- en: Ubuntu 16.04
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 16.04
- en: For more details about the project and documentation, see [https://docs.openstack.org/ansible-hardening/latest](https://docs.openstack.org/ansible-hardening/latest).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有关项目和文档的更多详细信息，请参阅 [https://docs.openstack.org/ansible-hardening/latest](https://docs.openstack.org/ansible-hardening/latest)。
- en: 'Download the role from the GitHub repository itself using `ansible-galaxy`
    as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `ansible-galaxy` 从 GitHub 存储库本身下载角色，如下所示：
- en: '[PRE1]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The playbook looks like the following. As similar to the previous playbook,
    this can be configured as required by changing the default variables values:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: playbook 如下所示。与以前的 playbook 类似，可以通过更改默认变量值来配置它所需的内容：
- en: '[PRE2]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](img/4b142365-4106-401d-9773-a6f0b7908a38.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b142365-4106-401d-9773-a6f0b7908a38.png)'
- en: An Ansible-hardening playbook in execution CentOS-7 for STIGs checklist
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一个在 CentOS-7 上执行的 Ansible-hardening playbook 用于 STIGs checklist
- en: The preceding playbook is executing on a CentOS-7 server against the STIG checklist.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的 playbook 在 CentOS-7 服务器上执行，用于执行 STIG checklist。
- en: Continuous security scans and reports for OpenSCAP using Ansible Tower
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ansible Tower 进行 OpenSCAP 的持续安全扫描和报告
- en: OpenSCAP is a set of security tools, policies, and standards to perform security
    compliance checks against the systems by following SCAP. SCAP is the U.S. standard
    maintained by NIST.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAP 是一组安全工具、策略和标准，通过遵循 SCAP 对系统执行安全合规性检查。SCAP 是由 NIST 维护的美国标准。
- en: The SCAP scanner application reads a SCAP security policy and checks whether
    the system is compliant with it. It goes through all of the rules defined in the
    policy one by one and reports whether each rule is fulfilled. If all checks pass,
    the system is compliant with the security policy.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: SCAP 扫描器应用程序读取 SCAP 安全策略，并检查系统是否符合该策略。它逐个检查策略中定义的所有规则，并报告每个规则是否得到满足。如果所有检查都通过，则系统符合安全策略。
- en: 'OpenSCAP follows these steps to perform scanning on your system:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAP 按照以下步骤对系统进行扫描：
- en: Install SCAP Workbench or OpenSCAP Base (for more information, visit [https://www.open-scap.org](https://www.open-scap.org))
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 SCAP Workbench 或 OpenSCAP Base（有关更多信息，请访问 [https://www.open-scap.org](https://www.open-scap.org)）
- en: Choose a policy
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择一个策略
- en: Adjust your settings
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整您的设置
- en: Evaluate the system
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估系统
- en: The following playbook will install `openscap-scanner` and `scap-security-guide`
    software to perform checks. Then, it will perform the scan as per the given profile
    and policy using the `oscap` tool.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以下playbook将安装 `openscap-scanner` 和 `scap-security-guide` 软件来执行检查。然后，它将根据给定的配置文件和策略使用
    `oscap` 工具执行扫描。
- en: 'As you can see, the variable `oscap_profile` is to use the profile from the
    list of available profiles and `oscap_policy` is to choose the specific policy
    to scan the system:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，变量 `oscap_profile` 是从可用配置文件列表中选择配置文件，`oscap_policy` 是选择用于扫描系统的特定策略：
- en: '[PRE3]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Check playbook reference at [https://medium.com/@jackprice/ansible-openscap-for-compliance-automation-14200fe70663](https://medium.com/@jackprice/ansible-openscap-for-compliance-automation-14200fe70663).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://medium.com/@jackprice/ansible-openscap-for-compliance-automation-14200fe70663](https://medium.com/@jackprice/ansible-openscap-for-compliance-automation-14200fe70663)查看
    playbooks 参考。
- en: 'Now, we can use this playbook to perform continuously automated checks using
    Ansible Tower:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用此playbook 使用 Ansible Tower 进行持续自动化检查：
- en: First, we need to create a directory in Ansible Tower server in order to store
    this playbook with the `awx` user permission to add the custom playbook.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要在 Ansible Tower 服务器上创建一个目录，以便使用 `awx` 用户权限存储此playbook以添加自定义playbook。
- en: 'Create a new project in Ansible Tower to perform the OpenSCAP setup and scan
    against the checks:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ansible Tower 中创建一个新项目，执行 OpenSCAP 设置并针对检查进行扫描：
- en: '![](img/a162a353-3ae4-45be-8493-86a077e7512a.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a162a353-3ae4-45be-8493-86a077e7512a.png)'
- en: 'Then, we have to create a new job to execute the playbook. Here, we can include
    the list of hosts, credentials for login, and other details required to perform
    the execution:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们必须创建一个新作业来执行此playbook。在这里，我们可以包含主机列表、登录凭据和执行所需的其他详细信息：
- en: '![](img/b1981d8b-aaf2-474f-8a52-4dc4ad876ea9.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1981d8b-aaf2-474f-8a52-4dc4ad876ea9.png)'
- en: 'This audit can be scheduled to perform frequently. Here you can see that we
    scheduled every day, this can be modified as per compliance frequency (security
    compliance requires to perform these kinds of audits frequently):'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以定期安排执行此审核。在这里，您可以看到我们每天都安排，这可以根据合规性频率进行修改（安全合规性要求经常执行这些类型的审核）：
- en: '![](img/b4f3cd4d-9e54-4460-b46c-92aa55eda502.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b4f3cd4d-9e54-4460-b46c-92aa55eda502.png)'
- en: 'We can also launch this job on demand when required. The playbook execution
    looks as follows:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们也可以根据需要随时启动此作业。playbook 的执行如下所示：
- en: '![](img/d292f00e-d1b8-459d-baa9-b2e57a7f4459.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d292f00e-d1b8-459d-baa9-b2e57a7f4459.png)'
- en: The output of the playbook will generate the OpenSCAP report, and it will be
    fetched to Ansible Tower. We can access this playbook at the `/tmp/` location.
    Also, we can send this report to the other centralized reporting server if required.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: playbook 的输出将生成 OpenSCAP 报告，并将其获取到 Ansible Tower。我们可以在 `/tmp/` 位置访问此playbook。此外，如果需要，我们还可以将此报告发送到其他集中式报告服务器。
- en: '![](img/6eb62327-0390-411d-bfa3-9308485458b8.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6eb62327-0390-411d-bfa3-9308485458b8.png)'
- en: We can also set up notifications based on playbook execution results. By doing
    this, we can send this notifications to respective channels, such as email, slack,
    and message.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以根据 playbook 执行结果设置通知。通过这样做，我们可以将此通知发送到相应的渠道，如电子邮件、slack 和消息。
- en: '![](img/228a2418-68c1-416e-875e-5960af935706.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/228a2418-68c1-416e-875e-5960af935706.png)'
- en: CIS Benchmarks
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CIS 基准
- en: 'CIS has benchmarks for different type OS, software, and services. The following
    are some high-level categories:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: CIS 为不同类型的操作系统、软件和服务制定了基准。以下是一些高级分类：
- en: Desktops and web browsers
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 桌面和网络浏览器
- en: Mobile devices
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动设备
- en: Network devices
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络设备
- en: Security metrics
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全指标
- en: Servers – operating systems
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器 – 操作系统
- en: Servers – other
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器 – 其他
- en: Virtualization platforms, cloud, and other
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟化平台、云和其他
- en: Read more about CIS benchmarks at [https://www.cisecurity.org](https://www.cisecurity.org).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 了解有关 CIS 基准的更多信息，请访问[https://www.cisecurity.org](https://www.cisecurity.org)。
- en: Ubuntu CIS Benchmarks (server level)
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ubuntu CIS 基准（服务器级别）
- en: CIS Benchmarks Ubuntu provides prescriptive guidance to establish a secure configuration
    posture for Ubuntu Linux systems running on x86 and x64 platforms. This benchmark
    is intended for system and application administrators, security specialists, auditors,
    help desk, and platform deployment personnel who plan to develop, deploy, assess,
    or secure solutions that incorporate Linux platform.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: CIS 基准 Ubuntu 提供了为运行在 x86 和 x64 平台上的 Ubuntu Linux 系统建立安全配置姿态的指导方针。此基准适用于系统和应用程序管理员、安全专家、审计员、帮助台和计划开发、部署、评估或保护包含
    Linux 平台的解决方案的平台部署人员。
- en: 'Here are the high-level six domains that are part of CIS Ubuntu 16.04 LTS benchmarks:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '这是CIS Ubuntu 16.04 LTS基准的六个高级域的概述:'
- en: 'Initial setup:'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '初始设置:'
- en: Filesystem configuration
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件系统配置
- en: Configure software updates
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置软件更新
- en: Filesystem integrity checking
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件系统完整性检查
- en: Secure boot settings
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全引导设置
- en: Additional process hardening
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附加进程强化
- en: Mandatory access control
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制访问控制
- en: Warning banners
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警告横幅
- en: 'Services:'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '服务:'
- en: Inted Services
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Inted服务
- en: Special purpose services
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专用服务
- en: Service clients
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务客户端
- en: 'Network configuration:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '网络配置:'
- en: Network parameters (host only)
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络参数（仅主机）
- en: Network parameters (host and router)
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络参数（主机和路由器）
- en: IPv6
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPv6
- en: TCP wrappers
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP包装器
- en: Uncommon network protocols
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不常见的网络协议
- en: 'Logging and auditing:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '日志和审计:'
- en: Configure system accounting (`auditd`)
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置系统会计（`auditd`）
- en: Configure logging
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置日志记录
- en: 'Access, authentication, and authorization:'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '访问、身份验证和授权:'
- en: Configure cron
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置cron
- en: SSH server configuration
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSH服务器配置
- en: Configure PAM
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置PAM
- en: User accounts and environment
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户帐户和环境
- en: 'System maintenance:'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '系统维护:'
- en: System file permissions
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统文件权限
- en: User and group settings
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户和组设置
- en: 'Here are the Ansible Playbooks for 14.04 LTS and 16.04 LTS, respectively:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '这是分别用于14.04 LTS和16.04 LTS的Ansible Playbooks:'
- en: '[https://github.com/oguya/cis-ubuntu-14-ansible](https://github.com/oguya/cis-ubuntu-14-ansible)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/oguya/cis-ubuntu-14-ansible](https://github.com/oguya/cis-ubuntu-14-ansible)'
- en: '[https://github.com/grupoversia/cis-ubuntu-ansible](https://github.com/grupoversia/cis-ubuntu-ansible)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/grupoversia/cis-ubuntu-ansible](https://github.com/grupoversia/cis-ubuntu-ansible)'
- en: '[PRE4]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then, update the variables and inventory and execute the playbook using the
    following command. The variables are not required mostly, as this performs against
    different CIS checks unless, if we wanted to customize the benchmarks as per the
    organization:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，更新变量和清单，并使用以下命令执行playbook。除非我们想要根据组织自定义基准，否则大多数情况下不需要变量：
- en: '[PRE5]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](img/6cb09ea9-82e5-4608-adf9-a14ca11464ff.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6cb09ea9-82e5-4608-adf9-a14ca11464ff.png)'
- en: CIS Ubuntu Benchmarks Ansible playbook execution
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: CIS Ubuntu基准Ansible playbook执行
- en: The preceding playbook will execute the CIS security benchmark against an Ubuntu
    server and performs all the checks listed in the CIS guidelines.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 前述playbook将针对Ubuntu服务器执行CIS安全基准，并执行CIS指南中列出的所有检查。
- en: AWS benchmarks (cloud provider level)
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS基准（云提供商级别）
- en: AWS CIS Benchmarks provides prescriptive guidance to configure security options
    for a subset of AWS with an emphasis on foundational, testable, and architecture
    agnostic settings. It is intended for system and application administrators, security
    specialists, auditors, help desk, platform deployment, and/or DevOps personnel
    who plan to develop, deploy, assess, or secure solutions in AWS.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CIS基准提供了针对AWS子集的安全选项配置的指导方针，重点是基础、可测试和与架构无关的设置。适用于计划在AWS中开发、部署、评估或保护解决方案的系统和应用程序管理员、安全专家、审计员、帮助台、平台部署和/或DevOps人员。
- en: 'Here are the high-level domains, which are part of AWS CIS Benchmarks:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '这是AWS CIS基准的高级域:'
- en: Identity and access management
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份和访问管理
- en: Logging
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志记录
- en: Monitoring
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控
- en: Networking
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络
- en: Extra
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外
- en: Currently, there is a tool named **prowler** ([https://github.com/Alfresco/prowler](https://github.com/Alfresco/prowler))
    based on AWS-CLI commands for AWS account security assessment and hardening.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，有一个名为**prowler**的工具（[https://github.com/Alfresco/prowler](https://github.com/Alfresco/prowler)），它基于AWS-CLI命令用于AWS帐户安全评估和加固。
- en: This tools follows the guidelines of the CIS Amazon Web Services Foundations
    Benchmark 1.1
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具遵循CIS Amazon Web Services Foundations Benchmark 1.1的准则
- en: 'Before running the playbook, we have to provide AWS API keys to perform security
    audit. This can be created using IAM role in AWS service. If you have an already
    existing account with required privileges, these steps can be skipped:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行playbook之前，我们必须提供AWS API密钥以执行安全审核。这可以使用AWS服务中的IAM角色创建。如果您已经有一个具有所需权限的现有帐户，则可以跳过这些步骤：
- en: 'Create a new user in your AWS account with programmatic access:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在您的AWS帐户中创建一个具有编程访问权限的新用户:'
- en: '![](img/165b0bb6-95ec-4c62-a86f-3bcbcd519697.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/165b0bb6-95ec-4c62-a86f-3bcbcd519697.png)'
- en: 'Apply the SecurityAudit policy for the user from existing policies in IAM console:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为用户从IAM控制台中的现有策略应用SecurityAudit策略：
- en: '![](img/134883fc-1d97-411a-a9ce-1e3d297d8daa.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/134883fc-1d97-411a-a9ce-1e3d297d8daa.png)'
- en: 'Then, create the new user by following the steps. Make sure that you safely
    save the Access key ID and Secret access key for later use:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，按照步骤创建新用户。确保安全保存访问密钥ID和秘密访问密钥以供以后使用：
- en: '![](img/da2e9f77-aac7-4a7e-b128-ea5bfa1ce836.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/da2e9f77-aac7-4a7e-b128-ea5bfa1ce836.png)'
- en: Here is the simple playbook to set up and execute checks using the prowler tool.
    Provide the access and secret keys from the previous steps.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是使用prowler工具设置和执行检查的简单playbook。从前面的步骤提供访问密钥和秘密密钥。
- en: 'The following playbook assume that you already have installed `python` and
    `pip` in your local system:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下playbook假定您已经在本地系统中安装了`python`和`pip`：
- en: '[PRE6]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The playbook will trigger the setup and security audit scan for AWS CIS Benchmarks
    using the prowler tool:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该playbook将使用prowler工具触发AWS CIS基准的设置和安全审计扫描：
- en: '![](img/a5f1b4b6-efcd-4012-a609-d68756119a38.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a5f1b4b6-efcd-4012-a609-d68756119a38.png)'
- en: 'Prowler-generated HTML report looks as follows, and the report can be downloaded
    in different formats as required and also scanning checks can be configured as
    required:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Prowler生成的HTML报告如下，报告可以按需下载为不同格式，并且扫描检查可以根据需要配置：
- en: '![](img/bf620722-2f7a-4d3f-9603-d319ffcd9e80.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf620722-2f7a-4d3f-9603-d319ffcd9e80.png)'
- en: More reference about the tool can be found at [https://github.com/Alfresco/prowler](https://github.com/Alfresco/prowler).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 有关该工具的更多参考资料可以在[https://github.com/Alfresco/prowler](https://github.com/Alfresco/prowler)找到。
- en: Lynis – open source security auditing tool for Unix/Linux systems
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lynis - 用于Unix/Linux系统的开源安全审计工具
- en: Lynis is an open source security auditing tool. Used by system administrators,
    security professionals, and auditors, to evaluate the security defenses of their
    Linux and Unix-based systems. It runs on the host itself, so it performs more
    extensive security scans than vulnerability scanners.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis是一个开源安全审计工具。被系统管理员、安全专业人员和审计员使用，评估他们的Linux和基于Unix的系统的安全防御。它在主机上运行，因此执行的安全扫描比漏洞扫描器更加广泛。
- en: 'Supported Operating Systems: Lynis runs on almost all Unix-based systems and
    versions, including the following:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的操作系统：Lynis几乎可以在所有基于Unix的系统和版本上运行，包括以下系统：
- en: AIX
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AIX
- en: FreeBSD
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FreeBSD
- en: HP-UX
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HP-UX
- en: Linux
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux
- en: macOS
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS
- en: NetBSD
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NetBSD
- en: OpenBSD
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenBSD
- en: Solaris and others
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Solaris和其他系统
- en: 'As stated in [https://cisofy.com/lynis](https://cisofy.com/lynis):'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如[https://cisofy.com/lynis](https://cisofy.com/lynis)所述：
- en: '"It even runs on systems like the Raspberry Pi, or QNAP storage devices."'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '"甚至可以在像树莓派或QNAP存储设备等系统上运行。"'
- en: 'The playbook looks as follows:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 该playbook如下所示：
- en: '[PRE7]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The preceding playbook will set up the Lynis, run the system audit scan against
    it, and finally fetches the report locally:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 上述playbook将设置Lynis，对其进行系统审计扫描，最后在本地获取报告：
- en: '![](img/7f105908-dfa3-4d2b-866d-5612f4925dfc.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f105908-dfa3-4d2b-866d-5612f4925dfc.png)'
- en: Lynis system audit scan playbook in execution
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis系统审计扫描playbook正在执行
- en: 'The following screenshot is the report from the recent audit scan:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图是最近审计扫描的报告：
- en: '![](img/bc364635-9f04-4a74-8824-647fa167ce9a.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bc364635-9f04-4a74-8824-647fa167ce9a.png)'
- en: Lynis system audit scan report
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis系统审计扫描报告
- en: This can be run via Ansible Tower and other automation tools to perform periodical
    checks against systems using Lynis for audit scans.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过Ansible Tower和其他自动化工具运行此项，以执行使用Lynis进行审计扫描的系统的周期性检查。
- en: Lynis commands and advanced options
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lynis命令和高级选项
- en: The Lynis has multiple options and commands that can be used to perform different
    options. For example, we can use `audit dockerfile <filename>` to perform analysis
    of Dockerfiles and the `--pentest` option to perform scan-related for pentesting.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis具有多个选项和命令，可用于执行不同的选项。例如，我们可以使用`audit dockerfile <filename>`来执行Dockerfiles的分析，使用`--pentest`选项来执行与渗透测试相关的扫描。
- en: '>![](img/38be2079-174e-47e5-bdc7-690e696d6cda.png)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '>![](img/38be2079-174e-47e5-bdc7-690e696d6cda.png)'
- en: Windows server audit using Ansible playbooks
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ansible playbooks进行Windows服务器审计
- en: Most of the enterprises use Windows to centrally manage their policies and updates
    through the organization using Active Directory type of features. Also, it is
    a very critical asset to protect and check for security issues in the organizations.
    We know that Ansible supports Windows operating system using WinRM to perform
    configuration changes. Let's see some examples to add security to your Windows
    servers using Ansible playbooks.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数企业使用Windows通过Active Directory类型的功能集中管理其政策和更新，这也是保护组织并检查安全问题的非常关键的资产。我们知道Ansible支持使用WinRM执行配置更改的Windows操作系统。让我们看一些示例，通过Ansible
    playbooks为您的Windows服务器添加安全性。
- en: Windows security updates playbook
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows安全更新playbook
- en: 'The following playbook is a simple reference from the Ansible documentation
    at [https://docs.ansible.com/ansible/devel/windows_usage.html#installing-updates](https://docs.ansible.com/ansible/devel/windows_usage.html#installing-updates):'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 playbook 是从 Ansible 文档中简单引用的参考，网址为 [https://docs.ansible.com/ansible/devel/windows_usage.html#installing-updates](https://docs.ansible.com/ansible/devel/windows_usage.html#installing-updates)：
- en: '[PRE8]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](img/c1555722-c3c5-4ce8-bc9f-0fd24ae1a05b.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c1555722-c3c5-4ce8-bc9f-0fd24ae1a05b.png)'
- en: Windows updates playbook in action
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 更新 playbook 正在运行
- en: The preceding playbook will perform an automated Windows security updates of
    critical severity and restart the computer if required to apply the updated changes.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的 playbook 将自动执行临界严重性的 Windows 安全更新，并在需要时重新启动计算机以应用更新后的更改。
- en: Windows workstation and server audit
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows 工作站和服务器审计
- en: The following Ansible playbook is created based on [https://github.com/alanrenouf/Windows-Workstation-and-Server-Audit,](https://github.com/alanrenouf/Windows-Workstation-and-Server-Audit)
    and it will perform an audit of the system and generates a detailed HTML report.
    This is an example of how we can perform an audit using the PowerShell script.
    This can be extended by adding more checks and also adding other security audits
    scripts.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 Ansible playbook 是基于 [https://github.com/alanrenouf/Windows-Workstation-and-Server-Audit,](https://github.com/alanrenouf/Windows-Workstation-and-Server-Audit)
    创建的，它将对系统进行审计并生成详细的 HTML 报告。这是一个我们可以使用 PowerShell 脚本执行审计的示例。可以通过添加更多检查和其他安全审计脚本来扩展此功能。
- en: 'The playbook looks as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: Playbook 如下所示：
- en: '[PRE9]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](img/dbf33878-3877-4c36-91b8-6594fb70458e.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dbf33878-3877-4c36-91b8-6594fb70458e.png)'
- en: Windows Audit Playbook in Action
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 审计 playbook 正在运
- en: Once the playbook execution completed, we can see the output report in HTML
    format with detailed information about running services, security patches, events,
    logging and other configuration details.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 playbook 执行完成，我们可以在 HTML 格式的输出报告中看到有关运行服务、安全补丁、事件、日志记录和其他配置详细信息。
- en: '![](img/653549cd-8640-415f-9a18-9408661e37bf.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/653549cd-8640-415f-9a18-9408661e37bf.png)'
- en: Automating security audit checks for networking devices using Ansible
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ansible 自动化进行网络设备的安全审计检查
- en: We have seen that Ansible lends itself really well to work with a variety of
    tools, and we can use this to do security audit checks for networking devices.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到 Ansible 很适合与各种工具一起使用，我们可以利用它来进行网络设备的安全审计检查。
- en: Nmap scanning and NSE
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap 扫描和 NSE
- en: '**Network Mapper** (**Nmap**) is a free open source software to perform network
    discovery, scanning, audit, and many others. It has a various amount of features
    such as OS detection, system fingerprinting, firewall detection, and many other
    features. **Nmap Scripting Engine** (**Nmap NSE**) provides advanced capabilities
    like scanning for particular vulnerabilities and attacks. We can also write and
    extend Nmap using our own custom script. Nmap is a swiss army knife for pen testers
    (security testers) and network security teams.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络映射器**（**Nmap**）是一个免费的开源软件，用于进行网络发现、扫描、审计等。它具有各种功能，如操作系统检测、系统指纹识别、防火墙检测等。**Nmap
    脚本引擎**（**Nmap NSE**）提供了高级功能，如扫描特定的漏洞和攻击。我们还可以编写和扩展自己的自定义脚本来使用 Nmap。Nmap 是渗透测试人员（安全测试人员）和网络安全团队的瑞士军刀。'
- en: Read more about Nmap at [https://nmap.org](https://nmap.org). Ansible also has
    a module to perform the inventory using Nmap [https://github.com/ansible/ansible/pull/32857/files](https://github.com/ansible/ansible/pull/32857/files).
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [https://nmap.org](https://nmap.org) 上了解更多关于 Nmap 的信息。Ansible 还有一个模块可以使用 Nmap
    执行清单 [https://github.com/ansible/ansible/pull/32857/files](https://github.com/ansible/ansible/pull/32857/files)。
- en: 'The following playbook will install Nmap if not available and perform the basic
    network port scan using the specified flags:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 playbook 将在必要时安装 Nmap 并使用指定的标志执行基本网络端口扫描：
- en: '[PRE10]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`{{ network_hosts|join('' '') }}` is a Jinja2 feature named **filter arguments**
    to parse the given `network_hosts` by space delimited'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{{ network_hosts|join('' '') }}` 是一个名为 **filter arguments** 的 Jinja2 功能，用于通过空格分隔解析给定的
    `network_hosts`'
- en: '`network_hosts` variable holds the list of IPs, network range (CIDR), hosts,
    and so on to perform scan using Nmap'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`network_hosts` 变量保存要使用 Nmap 扫描的 IP 列表、网络范围（CIDR）、主机等。'
- en: '`top_ports` is the number that is ranging from `0` to `65535`. Nmap by default
    picks commonly opened top ports'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`top_ports` 是一个范围从 `0` 到 `65535` 的数字。Nmap 默认选择常见的顶级端口'
- en: '`-Pn` specifies that scans the host if ping (ICMP) doesn''t work also'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Pn` 指定如果 ping（ICMP）不起作用，则扫描主机'
- en: '`-oA` gets the output in all formats, which includes gnmap (greppable  format),
    Nmap, and XML'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-oA` 将输出格式设置为所有格式，其中包括 gnmap（可 greppable 格式）、Nmap 和 XML'
- en: More details about the options and documentation for nmap can be found at [https://nmap.org/book/man.html](https://nmap.org/book/man.html)
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于nmap的选项和文档信息可以在[https://nmap.org/book/man.html](https://nmap.org/book/man.html)找到。
- en: '![](img/4df18006-8ab5-47eb-88a0-a1cc62216722.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4df18006-8ab5-47eb-88a0-a1cc62216722.png)'
- en: Nmap basic port scan playbook execution
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap基本端口扫描playbook执行
- en: 'The output of playbook for running a basic Nmap scan is:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 运行基本Nmap扫描的playbook的输出为：
- en: '![](img/989d0d43-98ad-47c5-ae25-b416d93178d2.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/989d0d43-98ad-47c5-ae25-b416d93178d2.png)'
- en: 'Figure: Playbook scan output in 3 different formats'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图：playbook以三种不同的格式进行扫描输出
- en: 'The playbook after executing has created three reports of the format Nmap supports:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 执行playbook后，生成了Nmap支持的三种格式的报告：
- en: '![](img/df624100-27d6-491f-b672-156233fac84e.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![](img/df624100-27d6-491f-b672-156233fac84e.png)'
- en: 'Figure: Playbook scan output in nmap format'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图：nmap格式的playbook扫描输出
- en: By seeing the output of the `.nmap` file, we can easily see exactly what was
    found by the Nmap scan.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看`.nmap`文件的输出，我们可以轻松地看到Nmap扫描发现了什么。
- en: Nmap NSE scanning playbook
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap NSE扫描playbook
- en: The following playbook will perform enumeration of directories used by popular
    web applications and servers using `http-enum` and finds options that are supported
    by an HTTP server using `http-methods` using Nmap scripts.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 以下playbook将使用Nmap脚本执行对常用Web应用和服务器使用的目录进行枚举，并使用Nmap脚本查找HTTP服务器支持的选项。
- en: More about Nmap NSE can be found at [https://nmap.org/book/nse.html](https://nmap.org/book/nse.html).
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于Nmap NSE的信息可以在[https://nmap.org/book/nse.html](https://nmap.org/book/nse.html)找到。
- en: 'The following playbook will perform `http-enum` and `http-methods` scans against `scanme.nmap.org` of
    ports `80` and `443`:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的playbook将对`scanme.nmap.org`的端口`80`和`443`进行`http-enum`和`http-methods`扫描：
- en: '[PRE11]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following playbook will execute the Nmap NSE script using Ansible playbook
    for the HTTP enumeration and methods check:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的playbook将使用Ansible playbook执行Nmap NSE脚本进行HTTP枚举和方法检查：
- en: '![](img/67c6aaed-144e-4da1-8d9e-375f137206e8.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/67c6aaed-144e-4da1-8d9e-375f137206e8.png)'
- en: Nmap NSE Playbook execution
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 执行Nmap NSE playbook
- en: 'The output of the playbook when we run a simple NSE script is as follows:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 运行简单的NSE脚本时，playbook的输出如下所示：
- en: '![](img/5c7335fd-6631-409d-b556-4b70fd465b0c.png)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5c7335fd-6631-409d-b556-4b70fd465b0c.png)'
- en: Nmap NSE scans output in .nmap format
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap NSE扫描的.nmap格式输出
- en: The `http-enum` script runs additional tests against network ports where web
    servers are detected. In the preceding screenshot, we can see that two folders
    were discovered by the script and additionally all HTTP methods that are supported
    got enumerated as well.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`http-enum`脚本在检测到网络端口上有Web服务器时会运行额外的测试。在前面的截图中，我们可以看到脚本发现了两个文件夹，并且还枚举了所有支持的HTTP方法。'
- en: AWS security audit using Scout2
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Scout2进行AWS安全审计
- en: Scout2 is an open source AWS security auditing tool and it is used to assess
    AWS environments security posture using AWS Python API. The scan output will be
    stored in JSON format, and the final results of the Scout2 will be produced as
    a simple HTML website with detailed information of AWS cloud security posture.
    It performs the scans and audits based on its existing rule set and test cases,
    and this can be extended based on our custom scripts and scenarios.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: Scout2是一款开源的AWS安全审计工具，它使用AWS Python API来评估AWS环境的安全状况。扫描输出将以JSON格式存储，并且Scout2的最终结果将以简单的HTML网站的形式呈现，其中包含了关于AWS云安全状况的详细信息。它根据现有的规则集和测试用例执行扫描和审核，并且可以根据我们的自定义脚本和场景进行扩展。
- en: More details about the tool can be found at [https://github.com/nccgroup/Scout2](https://github.com/nccgroup/Scout2).
    This tool requires AWS IAM credentials to perform the scan; refer to [https://github.com/nccgroup/AWS-recipes/blob/master/IAM-Policies/Scout2-Default.json](https://github.com/nccgroup/AWS-recipes/blob/master/IAM-Policies/Scout2-Default.json) for
    user policy creation.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于该工具的详细信息可以在[https://github.com/nccgroup/Scout2](https://github.com/nccgroup/Scout2)找到。此工具需要AWS
    IAM凭证来执行扫描；请参考[https://github.com/nccgroup/AWS-recipes/blob/master/IAM-Policies/Scout2-Default.json](https://github.com/nccgroup/AWS-recipes/blob/master/IAM-Policies/Scout2-Default.json)以创建用户策略。
- en: 'Installing AWS Scout2 is very simple using the following playbook:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下playbook安装AWS Scout2非常简单：
- en: '[PRE12]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'There are multiple rules configured to perform the audit, and the following
    snippet is the example of IAM password policy rule:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 配置了多个规则来进行审核，以下代码片段是IAM密码策略规则的示例：
- en: '[PRE13]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following playbook will perform the AWS Scout2 scan and returns the report
    in HTML format:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的playbook会执行AWS Scout2扫描，并以HTML格式返回报告：
- en: '[PRE14]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](img/60a83305-4ff1-438f-822a-74f940a6fb42.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/60a83305-4ff1-438f-822a-74f940a6fb42.png)'
- en: AWS Scout2 report high-level overview
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Scout2 报告高级概览
- en: 'The preceding screenshot is of a high-level report, and the detailed report
    is as follows:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 上述屏幕截图是高级报告，详细报告如下：
- en: '![](img/53cb544d-e62c-451b-a7fc-f18b511df56f.png)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![](img/53cb544d-e62c-451b-a7fc-f18b511df56f.png)'
- en: AWS Scout2 report detailed results for IAM section
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Scout2 报告 IAM 部分的详细结果
- en: Automation security audit checks for applications using Ansible
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ansible 对应用程序进行自动化安全审计检查
- en: Modern applications can get pretty complex fairly quickly. Having the ability
    to run automation to do security tasks is almost a mandatory requirement.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 现代应用程序很快就会变得非常复杂。拥有运行自动化执行安全任务的能力几乎是一个强制性要求。
- en: 'The different types of application security scanning we can do can range from
    the following:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以进行的不同类型的应用程序安全扫描包括以下内容：
- en: Run CI/CD scanning against the source code (for example, RIPS and brakeman).
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对源代码运行 CI/CD 扫描（例如，RIPS 和 brakeman）。
- en: Dependency checking scanners (for example, OWASP dependency checker and snyk.io
    ([https://snyk.io/](https://snyk.io/))).
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 依赖项检查扫描器（例如，OWASP 依赖项检查器和 snyk.io ([https://snyk.io/](https://snyk.io/))）。
- en: Once deployed then run the web application scanner (for example, Nikto, Arachni,
    and w3af).
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦部署，然后运行 Web 应用程序扫描器（例如，Nikto、Arachni 和 w3af）。
- en: Framework-specific security scanners (for example, WPScan and Droopscan) and
    many other.
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 针对特定框架的安全扫描器（例如，WPScan 和 Droopscan）以及许多其他。
- en: Source code analysis scanners
  id: totrans-281
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 源代码分析扫描器
- en: This is one of the first and common way to minimize the security risk while
    applications going to production. Source code analysis scanner also known as **Static
    Application Security Testing** (**SAST**) will help to find security issues by
    analyzing the source code of the application. This kind of tools and testing methodology
    allows developers to scan their code for security vulnerabilities repeatedly and
    automatically in the process of **continuous integration/continuous delivery**
    (**CI/CD**).
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在应用程序即将投入生产时最早和常见的减少安全风险的方式之一。源代码分析扫描器，也称为**静态应用程序安全测试**（**SAST**），将通过分析应用程序的源代码来帮助发现安全问题。这种工具和测试方法允许开发人员在**持续集成/持续交付**（**CI/CD**）的过程中反复自动地扫描其代码以查找安全漏洞。
- en: There are multiple stages we can introduce these tools to effectively identify
    security vulnerabilities like integrated with IDE (code editors such as Eclipse,
    Visual Studio Code, and so on) and integrating in CI/CD process tools (Jenkins,
    Travis CI, and so on).
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以引入这些工具的多个阶段来有效地识别安全漏洞，比如与 IDE 集成（诸如 Eclipse、Visual Studio Code 等代码编辑器）以及与
    CI/CD 过程工具集成（Jenkins、Travis CI 等）。
- en: Source code analysis is kind of white box testing and looking through code.
    This kind of testing methodology may not find 100% coverage of security vulnerabilities,
    and it requires manual testing as well. For example, finding logical vulnerabilities
    requires some kind of user interactions such as dynamic functionalities.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码分析是一种白盒测试，它查看代码。这种测试方法可能无法发现 100% 的安全漏洞覆盖率，而且还需要手动测试。例如，要找到逻辑漏洞，需要某种用户交互，如动态功能。
- en: There are many open source and commercial tools available in the market to perform
    static code analysis. Also, some of the tools are specific to the technology and
    frameworks you are using. For example, if you are scanning PHP code, then RIPS
    ([http://rips-scanner.sourceforge.net/](http://rips-scanner.sourceforge.net/));
    if it's Ruby on Rails code, then it's Brakeman ([https://brakemanscanner.org/](https://brakemanscanner.org/));
    and if it's python, then Bandit ([https://wiki.openstack.org/wiki/Security/Projects/Bandit](https://wiki.openstack.org/wiki/Security/Projects/Bandit));
    and so on.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在市场上有许多开源和商业工具可用于执行静态代码分析。此外，一些工具是针对您使用的技术和框架的。例如，如果您正在扫描 PHP 代码，则使用 RIPS ([http://rips-scanner.sourceforge.net/](http://rips-scanner.sourceforge.net/))；如果是
    Ruby on Rails 代码，则使用 Brakeman ([https://brakemanscanner.org/](https://brakemanscanner.org/))；如果是
    Python，则使用 Bandit ([https://wiki.openstack.org/wiki/Security/Projects/Bandit](https://wiki.openstack.org/wiki/Security/Projects/Bandit))；依此类推。
- en: For more reference, visit [https://www.owasp.org/index.php/Source_Code_Analysis_Tools](https://www.owasp.org/index.php/Source_Code_Analysis_Tools).
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 更多参考，请访问 [https://www.owasp.org/index.php/Source_Code_Analysis_Tools](https://www.owasp.org/index.php/Source_Code_Analysis_Tools)。
- en: Brakeman scanner – Rails security scanner
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Brakeman 扫描器 - Rails 安全扫描器
- en: Brakeman is an open source tool to do a static security analysis of Ruby on
    Rails applications. This can be applied at any stage of development and deployment
    process that includes staging, QA, production, and so on.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: Brakeman 是一个开源工具，用于对 Ruby on Rails 应用程序进行静态安全分析。 这可以应用于开发和部署流程的任何阶段，包括分期、QA、生产等。
- en: 'A simple playbook to execute Brakeman against our application looks like the
    following:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 用于执行 Brakeman 对我们应用程序的简单 playbook 如下：
- en: '[PRE15]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](img/2865649a-ab00-4757-910c-a2e05334a084.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2865649a-ab00-4757-910c-a2e05334a084.png)'
- en: Brakeman Playbook in Action against Rails goat project
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: Brakeman Playbook 在 Rails goat 项目中的操作
- en: 'Brakeman report overview is:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: Brakeman 报告的概述是：
- en: '![](img/003978d9-edb3-4a74-aa8a-f5bedb3839c9.png)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![](img/003978d9-edb3-4a74-aa8a-f5bedb3839c9.png)'
- en: Brakeman report overview at high level
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: Brakeman 报告的高级概述
- en: 'Here is Brakeman report in detail:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Brakeman 报告的详细情况：
- en: '![](img/dced611e-8391-495e-be04-8d2da8b55735.png)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dced611e-8391-495e-be04-8d2da8b55735.png)'
- en: This is the detailed report with code and issue-level.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个包含代码和问题级别的详细报告。
- en: Reference about the Brakeman tool and options can be found at [https://brakemanscanner.org](https://brakemanscanner.org).
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Brakeman 工具和选项的参考信息可在 [https://brakemanscanner.org](https://brakemanscanner.org)
    找到。
- en: Dependency-checking scanners
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖检查扫描器
- en: Most of the developers use third-party libraries while developing applications,
    and it's very common to see using open source plugins and modules inside their
    code. Many of the open source projects might be vulnerable to known attacks such
    as Cross-Site Scripting and SQL injection. If developers don't know the vulnerability
    that exists in the library they use, that means their entire application becomes
    vulnerable the attacker because of a bad library.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数开发人员在开发应用程序时使用第三方库，使用开源插件和模块在其代码中非常常见。 许多开源项目可能容易受到已知攻击的影响，如跨站脚本和 SQL 注入。
    如果开发人员不知道所使用库中存在的漏洞，那么他们的整个应用程序就会因为使用了糟糕的库而变得容易受到攻击。
- en: So dependency checks will allow us to find using components with known vulnerabilities
    (OWASP A9) issues in application code by scanning the libraries against the CVE
    and NIST vulnerability database.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，依赖性检查将允许我们通过扫描库来查找应用程序代码中存在的已知漏洞（OWASP A9）问题，并与 CVE 和 NIST 漏洞数据库进行比较。
- en: 'There are multiple projects out there in the market for performing these checks,
    and some of them includes the following:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有多个项目可用于执行这些检查，其中一些包括以下内容：
- en: OWASP Dependency-Check
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP Dependency-Check
- en: Snyk.io ([https://snyk.io/](https://snyk.io/))
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snyk.io ([https://snyk.io/](https://snyk.io/))
- en: Retire.js
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Retire.js
- en: '[:] SourceClear and many other'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[:] SourceClear 以及许多其他'
- en: OWASP Dependency-Check
  id: totrans-308
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OWASP Dependency-Check
- en: OWASP Dependency-Check is an open source tool to perform checks for known vulnerabilities
    in Java and .NET applications primarily. It also supports other platforms such
    as Node.js and Python as an experiment analyzer. This can also produce false positives
    and can be configured to fine tune the scanning as required.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP Dependency-Check 是一个开源工具，主要用于检查 Java 和 .NET 应用程序中已知的漏洞。 它还支持其他平台，如 Node.js
    和 Python 作为实验分析器。 这也可能产生误报，并可以根据需要进行配置以调整扫描。
- en: This tool can also be run in multiple ways such as CLI, build tools (Ant, Gradle,
    Maven, and so on) and CI/CD (Jenkins) process.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具也可以以多种方式运行，比如 CLI、构建工具（Ant、Gradle、Maven 等）和 CI/CD（Jenkins）流程。
- en: More details about the project can be found at [https://www.owasp.org/index.php/OWASP_Dependency_Check](https://www.owasp.org/index.php/OWASP_Dependency_Check).
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 有关项目的更多详细信息，请访问 [https://www.owasp.org/index.php/OWASP_Dependency_Check](https://www.owasp.org/index.php/OWASP_Dependency_Check)。
- en: 'The following code snippet is to set up and perform a scan using OWASP Dependency-Check
    tool on vulnerable Java project:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段用于在易受攻击的 Java 项目上设置和使用 OWASP Dependency-Check 工具进行扫描：
- en: '[PRE16]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](img/e4476850-3332-45ce-9ee3-3c272a573afa.png)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4476850-3332-45ce-9ee3-3c272a573afa.png)'
- en: OWASP Dependency-Check scan against Bodgeit project using Ansible playbook
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Ansible playbook 对 Bodgeit 项目执行 OWASP Dependency-Check 扫描
- en: 'OWASP Dependency-Check report in high level:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 高级 OWASP Dependency-Check 报告：
- en: '![](img/26012f79-ee08-4889-a214-e1fb44da9902.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![](img/26012f79-ee08-4889-a214-e1fb44da9902.png)'
- en: High-level report of OWASP Dependency-Check tool
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP Dependency-Check 工具的高级报告
- en: 'Here is a detailed report with vulnerability, fixes, and the references:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个包含漏洞、修复措施和参考资料的详细报告：
- en: '![](img/f31ce711-3c95-44a5-bb3c-2c0d5686a704.png)'
  id: totrans-320
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f31ce711-3c95-44a5-bb3c-2c0d5686a704.png)'
- en: A detailed report with vulnerability, fixes, and reference
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 包含漏洞、修复措施和参考资料的详细报告
- en: 'The report format looks like the following at high level:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 高级报告格式如下：
- en: '**Dependency**: The file name of the dependency scanned'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**依赖项**：扫描的依赖项的文件名'
- en: '**CPE**: Any Common Platform Enumeration identifiers found'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPE**：发现的任何通用平台枚举标识符'
- en: '**GAV**: The Maven Group, Artifact, and Version (GAV)'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GAV**: Maven 组、Artifact 和版本（GAV）'
- en: '**Highest severity**: The highest severity of any associated CVEs'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最高严重性**：任何相关 CVE 的最高严重性'
- en: '**CVE count**: The number of associated CVEs'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CVE 数量**：相关 CVE 的数量'
- en: '**CPE confidence**: A ranking of how confident Dependency-check is that the
    CPE was identified correctly'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPE 确信度**：Dependency-check 确定已正确识别 CPE 的可信度排名'
- en: '**Evidence count**: The quantity of data extracted from the dependency that
    was used to identify CPE'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**证据数量**：从用于识别 CPE 的依赖项中提取的数据量'
- en: More detailed documentation can be found at [https://jeremylong.github.io/DependencyCheck](https://jeremylong.github.io/DependencyCheck).
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在[https://jeremylong.github.io/DependencyCheck](https://jeremylong.github.io/DependencyCheck)找到更详细的文档。
- en: Running web application security scanners
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 Web 应用程序安全扫描器
- en: This is the phase where the application went live to QA, stage, (or) Production.
    Then, we wanted to perform security scans like an attacker (black box view). At
    this stage, an application will have all the dynamic functionalities and server
    configurations applied.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 这是应用程序上线到 QA、阶段（或）生产环境的阶段。然后，我们希望像攻击者一样执行安全扫描（黑盒视图）。在此阶段，应用程序将应用所有动态功能和服务器配置。
- en: These scanner results tell us how good the server configured and any other application
    security issues before releasing the replica copy into the production.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 这些扫描器的结果告诉我们服务器配置得有多好以及在将复制品发布到生产环境之前是否存在任何其他应用程序安全问题。
- en: At this stage, most of the scanners just work at a certain level only. And we
    need to put some manual testing using human brain to find logical vulnerabilities
    and other security vulnerabilities that can't be detected by security scanners
    and tools.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，大多数扫描器只能在某个特定水平上工作。我们需要通过人脑进行一些手动测试，以发现逻辑漏洞和其他安全漏洞，这些漏洞无法被安全扫描器和工具检测到。
- en: 'As we have seen in other sections, there are many tools in the market to do
    these jobs for you in both open source and commercial world. Some of them includes
    the following:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在其他部分中所看到的，市场上有许多工具可以代替您执行这些工作，无论是开源还是商业。其中一些包括以下内容：
- en: Nikto
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nikto
- en: Arachni
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arachni
- en: w3af
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: w3af
- en: Acunetix and many other
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Acunetix 和许多其他工具
- en: Nikto – web server scanner
  id: totrans-340
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nikto - web 服务器扫描器
- en: Nikto is an open source web server assessment tool written in Perl to perform
    security configuration checks and web server and application scanning using its
    checklist of items to scan.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto 是一个用 Perl 编写的开源 Web 服务器评估工具，用于执行安全配置检查和 Web 服务器和应用程序扫描，使用其要扫描的条目清单。
- en: 'Some of the checks Nikto does includes the following:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto 进行的一些检查包括以下内容：
- en: Server and software misconfigurations
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器和软件配置错误
- en: Default files and programs
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认文件和程序
- en: Insecure files and programs
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不安全的文件和程序
- en: Outdated servers and programs
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过时的服务器和程序
- en: 'Nikto setup and execution Ansible playbook looks like the following:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto 设置和执行 Ansible playbook 如下所示：
- en: '[PRE17]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](img/d482f296-8b37-4235-9a8a-36009a47f6ed.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d482f296-8b37-4235-9a8a-36009a47f6ed.png)'
- en: Nikto Playbook in action
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto Playbook 实例
- en: 'Playbook to download, install, and run Nikto with report output is:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 用于下载、安装和运行带有报告输出的 Nikto 的 Playbook 如下：
- en: '![](img/621f521f-71d4-4152-accf-fd3095f16a92.png)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![](img/621f521f-71d4-4152-accf-fd3095f16a92.png)'
- en: Nikto HTML scan report
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto HTML 扫描报告
- en: Read more about Nikto options and documentation at [https://cirt.net/Nikto2.](https://cirt.net/Nikto2)
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 了解更多关于 Nikto 选项和文档的信息：[https://cirt.net/Nikto2.](https://cirt.net/Nikto2)
- en: Framework-specific security scanners
  id: totrans-355
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特定框架的安全扫描器
- en: This kind of check and scanning is to perform against specific to framework,
    CMS, and platforms. It allows to get more detailed results by validating against
    multiple security test cases and checks. Again, there are multiple tools and scanners
    available in both open source and commercial world.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的检查和扫描是针对特定的框架、CMS 和平台进行的。它允许通过对多个安全测试案例和检查进行验证来获得更详细的结果。同样，在开源和商业世界中有多种工具和扫描器可用。
- en: 'Some of the examples includes the following:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 一些示例包括以下内容：
- en: Scanning against WordPress CMS using WPScan: [https://github.com/wpscanteam/wpscan](https://github.com/wpscanteam/wpscan)
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 WPScan 对 WordPress CMS 进行扫描：[https://github.com/wpscanteam/wpscan](https://github.com/wpscanteam/wpscan)
- en: 'Scanning against JavaScript libraries using Retire.js: [https://retirejs.github.io/retire.js](https://retirejs.github.io/retire.js)'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Retire.js 对 JavaScript 库进行扫描：[https://retirejs.github.io/retire.js](https://retirejs.github.io/retire.js)
- en: Scanning against Drupal CMS using Droopescan - [https://github.com/droope/droopescan](https://github.com/droope/droopescan) and
    many others
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Droopescan 扫描针对 Drupal CMS - [https://github.com/droope/droopescan](https://github.com/droope/droopescan)
    和其他许多工具
- en: WordPress vulnerability scanner – WPScan
  id: totrans-361
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WordPress 漏洞扫描器 – WPScan
- en: WPScan is black box WordPress vulnerability scanner written in Ruby to perform
    security scanning and vulnerability checks against WordPress CMS using WPScan
    vulnerability database ([https://wpvulndb.com](https://wpvulndb.com)).
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: WPScan 是一个用 Ruby 编写的黑盒 WordPress 漏洞扫描器，用于针对 WordPress CMS 使用 WPScan 漏洞数据库 ([https://wpvulndb.com](https://wpvulndb.com))
    进行安全扫描和漏洞检查。
- en: 'Some of the checks it does includes but not limited to are as follows:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 它执行的一些检查包括但不限于以下内容：
- en: WordPress core
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WordPress 核心
- en: WordPress plugins and themes
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WordPress 插件和主题
- en: Old software known vulnerabilities
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已知的旧软件漏洞
- en: Username, attachment enumeration
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名，附件枚举
- en: Brute force attacks
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暴力破解攻击
- en: Security misconfiguration and many other
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全配置错误等等
- en: The following playbook will perform WPScan as per the given domain and produces
    the scan report with list of issues and references.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 Playbook 将根据给定的域执行 WPScan，并生成带有问题列表和参考信息的扫描报告。
- en: 'Update the `domain_name` and `output_dir` values as required in the playbook.
    Also, the following playbook assumes that you already have Docker installed in
    the system:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 根据需要更新 Playbook 中的`domain_name`和`output_dir`值。此外，以下 Playbook 假定您已在系统中安装了 Docker：
- en: '[PRE18]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](img/3207c05c-05d2-4aac-bc3b-19c3f926a006.png)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3207c05c-05d2-4aac-bc3b-19c3f926a006.png)'
- en: WPScan Ansible playbook execution
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: WPScan Ansible playbook 执行
- en: 'Playbook output of downloading, executing, and storing the scan results for
    WPScan:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 下载、执行和存储 WPScan 扫描结果的 Playbook 输出：
- en: '![](img/dc1ae916-dded-4e76-8f3a-6396427b5ccf.png)'
  id: totrans-376
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc1ae916-dded-4e76-8f3a-6396427b5ccf.png)'
- en: WPScan output report with issue details and references
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 带有问题详情和参考信息的 WPScan 输出报告
- en: These scans can be integrated into our CI/CD pipeline and execute once the deployment
    completed to validate against the security checks and configuration checks. Also,
    this scan can be customized as required based on the WPScan; refer to the WPScan
    documentation for more reference [https://github.com/wpscanteam/wpscan](https://github.com/wpscanteam/wpscan).
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 这些扫描可以集成到我们的 CI/CD 管道中，并在部署完成后执行以验证安全检查和配置检查。此外，根据需要可以根据 WPScan 定制此扫描；有关更多参考，请参阅
    WPScan 文档 [https://github.com/wpscanteam/wpscan](https://github.com/wpscanteam/wpscan)。
- en: Automated patching approaches using Ansible
  id: totrans-379
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ansible 的自动修补方法
- en: 'Patching and updating is a task that everyone who has to manage production
    systems has to deal with. There are two approaches that we will look are as follows:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 补丁和更新是每个必须管理生产系统的人都必须处理的任务。我们将看到的两种方法如下：
- en: Rolling updates
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滚动更新
- en: BlueGreen deployments
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蓝绿部署
- en: Rolling updates
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 滚动更新
- en: Imagine that we have five web servers behind a load balancer. What we would
    like to do is a zero downtime upgrade of our web application. Using certain keywords
    available in Ansible, we can make this happen.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下我们在负载均衡器后面有五台 web 服务器。我们想要做的是对我们的 Web 应用进行零停机升级。使用 Ansible 中提供的某些关键字，我们可以实现这一点。
- en: 'In our example, we want to achieve the following:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们希望实现以下目标：
- en: Tell the load balancer that web server node is down
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 告诉负载均衡器 web 服务器节点已经宕机
- en: Bring down the web server on that node
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将该节点上的 web 服务器关闭
- en: Copy the updated application files to that node
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将更新后的应用程序文件复制到该节点
- en: Bring up the web server on that node
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在该节点上启动 web 服务器
- en: 'The first keyword for us to look at is `serial`. Let''s see this example from
    Ansible documentation:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先要查看的关键字是`serial`。让我们从 Ansible 文档中看一个例子：
- en: '[PRE19]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The example is from [http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size](http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size).
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 该示例来自 [http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size](http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size)。
- en: This ensures that the execution of the playbook is done serially rather than
    in parallel. So the steps we listed previously can be done for one node at a time.
    The load balancer distributes traffic to the website on running nodes, and we
    achieve rolling updates.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了 Playbook 的执行是串行而不是并行进行的。因此，我们先前列出的步骤可以逐个节点完成。负载均衡器将流量分发到正在运行的节点上的网站，并且我们实现了滚动更新。
- en: 'Apart from giving a number to serial, we can also use percentage. Therefore,
    the example becomes as follows:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 除了给 serial 一个数字之外，我们还可以使用百分比。因此，示例变为以下形式：
- en: '[PRE20]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The example is from [http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size](http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size).
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 示例来自 [http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size](http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size)。
- en: We can choose to provide a percentage value or numeric value to serial. In this
    case the the play will run against 1, then 20% of the remaining nodes and finally
    all the remaining ones.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择为serial提供百分比值或数字值。在这种情况下，play将针对1个节点运行，然后是剩余节点的20%，最后是所有剩余节点。
- en: '[PRE21]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Example is from [http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size](http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size).
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 示例来自 [http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size](http://docs.ansible.com/ansible/latest/playbooks_delegation.html#rolling-update-batch-size)。
- en: A great example for this way of doing updates is given in the following link
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 这种更新方式的一个很好的示例在下面的链接中给出
- en: '*Episode #47 - Zero-downtime Deployments with Ansible*: [https://sysadmincasts.com/episodes/47-zero-downtime-deployments-with-ansible-part-4-4](https://sysadmincasts.com/episodes/47-zero-downtime-deployments-with-ansible-part-4-4)'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '*第47集 - 使用Ansible进行零停机部署*：[https://sysadmincasts.com/episodes/47-zero-downtime-deployments-with-ansible-part-4-4](https://sysadmincasts.com/episodes/47-zero-downtime-deployments-with-ansible-part-4-4)'
- en: BlueGreen deployments
  id: totrans-402
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蓝绿部署
- en: The concept of BlueGreen is attributed to Martin Fowler. A good reference is
    this article [http://martinfowler.com/bliki/BlueGreenDeployment.html](http://martinfowler.com/bliki/BlueGreenDeployment.html) on
    it. The idea is to consider our current live production workload as blue. Now
    what we want to do is upgrade the application. So a replica of blue is brought
    up behind the same load balancer. The replica of the infrastructure has the updated
    application.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝绿的概念归功于马丁·福勒。一个很好的参考是这篇文章 [http://martinfowler.com/bliki/BlueGreenDeployment.html](http://martinfowler.com/bliki/BlueGreenDeployment.html)。其想法是将我们当前的生产工作负载视为蓝色。现在我们想要做的是升级应用程序。因此，在相同的负载均衡器后面启动蓝色的副本。基础设施的副本具有更新的应用程序。
- en: 'Once it is up and running, the load balancer configuration is switched from
    current blue to point to green. Blue keeps running in case there are any operational
    issues. Once we are happy with the progress, we can tear down the older host. The
    following playbook demonstrate this in a very simplistic manner:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦它启动并运行，负载均衡器配置将从当前的蓝色切换到指向绿色。蓝色保持运行，以防有任何操作问题。一旦我们对进展满意，就可以关闭旧主机。下面的playbook以非常简单的方式演示了这一点：
- en: The first playbook brings up three hosts. Two web servers running nginx behind
    a load balancer
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个playbook启动三个主机。两个运行nginx的Web服务器在负载均衡器后面
- en: The second playbook switches what is live (blue) to green
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个playbook将当前正在运行的内容（蓝色）切换为绿色
- en: BlueGreen deployment setup playbook
  id: totrans-407
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蓝绿部署设置playbook
- en: The following playbook will set up three nodes, which includes load balancer
    and two web server nodes. Follow https://www.upcloud.com/support/haproxy-load-balancer-ubuntu
    to create a playbook.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 以下playbook将设置三个节点，包括负载均衡器和两个Web服务器节点。请参阅 [https://www.upcloud.com/support/haproxy-load-balancer-ubuntu](https://www.upcloud.com/support/haproxy-load-balancer-ubuntu)
    创建一个playbook。
- en: 'The following snippet is the `inventory` file:'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段是 `inventory` 文件：
- en: '[PRE22]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then, the `main.yml` playbook file looks like the following, which describes
    what roles to execute on which nodes and flow:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，`main.yml` playbook文件如下所示，描述了在哪些节点上执行哪些角色和流程：
- en: '[PRE23]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Each role has it''s own functionality to perform; the following is the common
    role to perform across all the nodes:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 每个角色都有其自己的功能要执行；以下是在所有节点上执行的常见角色：
- en: '[PRE24]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then, the proxy server role looks like the following to set up and configure
    the `haproxy` server:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，代理服务器角色如下所示，用于设置和配置 `haproxy` 服务器：
- en: '[PRE25]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The `haproxy.cfg.j2` looks as follows, it has all the configuration required
    to perform the setup. This can be improved based on what configuration we want
    to add (or) remove like SSL/TLS certificates and exposing `haproxy` stats and
    so on:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '`haproxy.cfg.j2` 如下所示，其中包含执行设置所需的所有配置。根据我们想要添加（或）移除的配置，可以进行改进，如SSL/TLS证书和暴露
    `haproxy` 统计信息等：'
- en: '[PRE26]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The following snippet will add the servers as part of load balancer and serves
    when user requested. We can add multiple servers as well. `haproxy` also supports
    both L7 and L4 load balancing as well:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段将服务器添加为负载均衡器的一部分，并在用户请求时提供服务。我们也可以添加多个服务器。`haproxy`还支持L7和L4负载平衡：
- en: '[PRE27]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The web server is very simple nginx server setup to install and add the service
    to startup process:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: Web服务器是非常简单的nginx服务器设置，用于安装并将服务添加到启动过程中：
- en: '[PRE28]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Finally, the following code snippets are the code for `blue` and`green` servers,
    respectively:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，以下代码片段分别是`blue`和`green`服务器的代码：
- en: '[PRE29]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The following screenshot is the reference to playbook execution of this entire
    setup:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是整个设置的 playbook 执行的参考截图：
- en: '![](img/20124216-1607-4579-8648-cb4427a6716c.png)'
  id: totrans-426
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20124216-1607-4579-8648-cb4427a6716c.png)'
- en: 'Once the playbook is completed, we can check the production site at our load
    balancer IP address to see the blue deployment:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 playbook 完成，我们就可以在负载均衡器 IP 地址上检查生产站点，查看蓝色部署：
- en: '![](img/16ae76c4-6cda-480d-85b3-e17b0d2a0748.png)'
  id: totrans-428
  prefs: []
  type: TYPE_IMG
  zh: '![](img/16ae76c4-6cda-480d-85b3-e17b0d2a0748.png)'
- en: BlueGreen deployment update playbook
  id: totrans-429
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BlueGreen 部署更新 playbook
- en: Now, the developer has updated the code (or) server is patched for some security
    vulnerabilities. We want to deploy the new version of production site with green
    deployment.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，开发人员已经更新了代码（或者）服务器已经修补了一些安全漏洞。我们希望使用绿色部署部署生产站点的新版本。
- en: 'The playbook looks very simple as follows, it will update the configuration
    and reloads the `haproxy` service to serve the new production deployment:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: playbook 看起来非常简单，如下所示，它将更新配置并重新加载 `haproxy` 服务以服务新的生产部署：
- en: '[PRE30]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![](img/419d233e-30b5-4776-9c71-f330f26771f9.png)'
  id: totrans-433
  prefs: []
  type: TYPE_IMG
  zh: '![](img/419d233e-30b5-4776-9c71-f330f26771f9.png)'
- en: 'Then, we can check our production site again to see the update deployment by
    navigating to the load balancer IP:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以再次检查我们的生产站点，通过导航到负载均衡器 IP 地址来查看更新的部署：
- en: '![](img/b323f803-2c55-43cc-be61-d81a8179856b.png)'
  id: totrans-435
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b323f803-2c55-43cc-be61-d81a8179856b.png)'
- en: Now, we can see that our production site is running the new updated deployment.
    There are multiple advanced options available in HAProxy to perform different
    kind of updates and can be configurable as required.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以看到我们的生产站点正在运行新的更新部署。HAProxy 中有多个高级选项可用于执行不同类型的更新，并且可以根据需要进行配置。
- en: Summary
  id: totrans-437
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter touched upon various use cases for application and network security.
    By combining various tools with the power of Ansible playbooks, we created powerful
    workflows for security automation in this space. Based on requirements, you may
    use benchmarks in order to enable secure defaults or periodic checks for compliance
    and fulfill audit requirements. We looked at tools that allow us to do the same
    for AWS Cloud as well. From application security scanners to approaches to doing
    software updates and patches in a secure configuration-driven manner, we tried
    to cover a wide variety of tasks that are made powerful by Ansible automation.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涉及了应用程序和网络安全的各种用例。通过将各种工具与 Ansible playbook 的强大功能相结合，我们在这个领域创建了强大的安全自动化工作流程。根据需求，您可以使用基准来启用安全默认值或定期检查合规性并满足审计要求。我们研究了允许我们对
    AWS 云执行相同操作的工具。从应用程序安全扫描器到以安全配置驱动的软件更新和补丁方法，我们尝试涵盖一系列任务，这些任务通过 Ansible 自动化变得强大。
- en: In the next chapter, we will focus on one of the most exciting emerging areas
    of IT and operations, that is, containers. Docker being synonymous with containers
    has become a widely deployed technology for developers, system administrators,
    and a core part of the modern software development and deployment pipelines. Let's
    explore what does Ansible have in store to work with Docker containers.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将专注于 IT 和运维中最激动人心的新兴领域之一，即容器。Docker 作为容器的代名词，已经成为开发人员、系统管理员广泛部署的技术，也是现代软件开发和部署流程的核心组成部分。让我们探索
    Ansible 与 Docker 容器配合使用的秘密。
