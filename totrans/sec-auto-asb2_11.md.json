["```\n├── group_vars\n│   └── mysql.yml # contains vault secret values\n├── hosts\n├── main.yml\n└── roles\n    └── mysqlsetup\n        └── tasks\n            └── main.yml\n\n```", "```\n- name: set mysql root password\n  debconf:\n    name: mysql-server\n    question: mysql-server/root_password\n    value: \"{{ mysql_root_password | quote }}\"\n    vtype: password\n\n- name: confirm mysql root password\n  debconf: \n    name: mysql-server\n    question: mysql-server/root_password_again\n    value: \"{{ mysql_root_password | quote }}\"\n    vtype: password\n\n- name: install mysqlserver\n  apt:\n    name: \"{{ item }}\"\n    state: present\n    update_cache: yes\n\n  with_items:\n   - mysql-server\n   - mysql-client\n```", "```\nmysql_root_password: supersecretpassword​\n```", "```\n$ ansible-vault encrypt group_vars/mysql.yml\n\nNew Vault password: \nConfirm New Vault password: \nEncryption successful\n```", "```\n$ cat group_vars/main.yml \n\n$ANSIBLE_VAULT;1.1;AES256\n30356164636532373531656636666330316330373764323938653462376630653038386531303362\n3631623330663939666235326638343164393564303630320a383338613635623533383236613339\n65333164663262626565333231343861613764383238363136333639643637353439623832356263\n3038343830373137650a633261653037306438633030326165356436623832386230373030326131\n34353534313337616561643333613435396636363836396239306139383330333539653138343231\n6430656638626162306463333736666536336139643637376636\n```", "```\n$ ansible-playbook --ask-vault-pass -i hosts main.yml\n```", "```\n$ cat ~/.vaultpassword\n\nthisisvaultpassword\n```", "```\n$ ansible-playbook --vault-password-file ~/.vaultpassword -i hosts main.yml\n```", "```\n$ ansbile-vault create vault.yml\n\nNew Vault password: \nConfirm New Vault password: \n```", "```\n$ ansible-vault view vault.yml\nVault password: \nAPI_KEY: KANGEG4TNG434G43HG43H9GH344FEGEW\n```", "```\n$ ansible-vault edit vault.yml\n\nVault password: \n```", "```\n$ ansible-vault decrypt vault.yml\n\nVault password: \nDecryption successful\n```", "```\n$ ansible-vault rekey vault.yml\nVault password: \nNew Vault password: \nConfirm New Vault password: \nRekey successful\n```", "```\n$ echo -n '53ff4ad63849e6977cb652763g7b7c64e2fa42a' | ansible-vault encrypt_string --stdin-name 'api_key'\n```", "```\n- name: ViewDNS domain information\n  hosts: localhost\n  vars:\n    domain: google.com\n    api_key: !vault |\n          $ANSIBLE_VAULT;1.1;AES256\n          36623761316238613461326466326162373764353437393733343334376161336630333532626465\n          6662383435303930303164353664643639303761353664330a393365633237306530653963353764\n          64626237313738656530373639653739656564316161663831653431623832336635393637653330\n          6632663563363264340a323537356166653338396135376161323435393730306133626635376539\n          37383861653239326336613837666237636463396465393662666561393132343166666334653465\n          6265386136386132363534336532623061646438363235383334\n    output_type: json\n\n  tasks:\n    - name: \"getting {{ domain }} server info\"\n      uri:\n        url: \"https://api.viewdns.info/reverseip/?host={{ domain }}&apikey={{ api_key }}&output={{ output_type }}\"\n        method: GET\n      register: results\n\n    - debug:\n        msg: \"{{ results.json }}\"\n```", "```\n$ ansible-galaxy install username.role_name\n```", "```\n$ ansible-galaxy install angstwad.docker_ubuntu\n\n- downloading role 'docker_ubuntu', owned by angstwad\n- downloading role from https://github.com/angstwad/docker.ubuntu/archive/v3.3.4.tar.gz\n- extracting angstwad.docker_ubuntu to /home/ubuntu/.ansible/roles/angstwad.docker_ubuntu\n- angstwad.docker_ubuntu (v3.3.4) was installed successfully\n```", "```\n- name: Run docker.ubuntu\n hosts: docker\n become: yes\n\n roles:\n - angstwad.docker_ubuntu $ ansible-playbook -i hosts main.yml\n```", "```\n$ ansible-galaxy install git+https://github.com/geerlingguy/ansible-role-composer.git\n```", "```\n$ git clone https://username@github.com/username/ansible-role-docker.git docker\n```", "```\n$ ansible-galaxy init docker --force\n- docker was created successfully\n\n# The structure looks like below\n├── defaults\n│   └── main.yml\n├── files\n├── handlers\n│   └── main.yml\n├── meta\n│   └── main.yml\n├── README.md\n├── tasks\n│   └── main.yml\n├── templates\n├── tests\n│   ├── inventory\n│   └── test.yml\n└── vars\n └── main.yml\n```", "```\n---\ngalaxy_info:\n  author: USERNAME\n  description: Quick and easy docker installer.\n  company: ORG\n  license: MIT\n  min_ansible_version: 1.9\n  platforms:\n  - name: Ubuntu\n    versions:\n    - xenial\n    - trusty\n  galaxy_tags:\n    - docker\n    - installer\n    - ubuntu\ndependencies:\n  - { role: username.common, some_parameter: 3 }\n```", "```\n$ git clone https://github.com/ansible/galaxy.git\n$ cd galaxy/installer\n```", "```\n$ ansible-playbook -i inventory galaxy.yml --tags start\n```", "```\n$ ansible-galaxy install dev-sec.os-hardening\n```", "```\n- hosts: localhost\n become: yes\n\n roles:\n - dev-sec.os-hardening\n$ ansible-playbook main.yml\n```", "```\n$ docker run --name debops -it debops/debops\n```"]