["```\n- name: installing nessus server\n  hosts: nessus\n  remote_user: \"{{ remote_user_name }}\"\n  gather_facts: no\n  vars:\n    remote_user_name: ubuntu\n    nessus_download_url: \"http://downloads.nessus.org/nessus3dl.php?file=Nessus-6.11.2-ubuntu1110_amd64.deb&licence_accept=yes&t=84ed6ee87f926f3d17a218b2e52b61f0\"\n\n  tasks:\n    - name: install python 2\n      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)\n\n    - name: downloading the package and installing\n      apt:\n        deb: \"{{ nessus_download_url }}\"\n\n    - name: start the nessus daemon\n      service:\n        name: \"nessusd\"\n        enabled: yes\n        state: started\n```", "```\n- name: installing python-pip\n  apt:\n    name: python-pip\n    update_cache: yes\n    state: present\n\n- name: install python requests\n  pip:\n    name: requests\n\n- name: setting up autonessus\n  get_url:\n    url: \"https://github.com/redteamsecurity/AutoNessus/raw/master/autoNessus.py\"\n    dest: /usr/bin/autoNessus\n    mode: 0755\n\n- name: updating the credentials\n  replace:\n    path: /usr/bin/autoNessus\n    regexp: \"{{ item.src }}\"\n    replace: \"{{ item.dst }}\"\n    backup: yes\n  no_log: True\n\n  with_items:\n    - { src: \"token = ''\", dst: \"token = '{{ nessus_user_token }}'\" }\n    - { src: \"url = 'https://localhost:8834'\", dst: \"url = '{{ nessus_url }}'\" } \n    - { src: \"username = 'xxxxx'\", dst: \"username = '{{ nessus_user_name }}'\" }\n    - { src: \"password = 'xxxxx'\", dst: \"password = '{{ nessus_user_password }}'\" }\n```", "```\n- name: list current scans and IDs using autoNessus\n  command: \"autoNessus -l\"\n  register: list_scans_output\n\n- debug:\n    msg: \"{{ list_scans_output.stdout_lines }}\"\n```", "```\n- name: starting nessus scan \"{{ scan_id }}\" using autoNessus\n  command: \"autoNessus -sS {{ scan_id }}\"\n  register: start_scan_output\n\n- debug:\n    msg: \"{{ start_scan_output.stdout_lines }}\"\n```", "```\n- name: working with nessus rest api\n  connection: local\n  hosts: localhost\n  gather_facts: no\n  vars:\n    scan_id: 17\n    nessus_access_key: 620fe4ffaed47e9fe429ed749207967ecd7a77471105d8\n    nessus_secret_key: 295414e22dc9a56abc7a89dab713487bd397cf860751a2\n    nessus_url: https://192.168.33.109:8834\n    nessus_report_format: html\n\n  tasks:\n    - name: export the report for given scan \"{{ scan_id }}\"\n      uri:\n        url: \"{{ nessus_url }}/scans/{{ scan_id }}/export\"\n        method: POST\n        validate_certs: no\n        headers:\n            X-ApiKeys: \"accessKey={{ nessus_access_key }}; secretKey={{ nessus_secret_key }}\"\n        body: \"format={{ nessus_report_format }}&chapters=vuln_by_host;remediations\"\n      register: export_request\n\n    - debug:\n        msg: \"File id is {{ export_request.json.file }} and scan id is {{ scan_id }}\"\n\n    - name: check the report status for \"{{ export_request.json.file }}\"\n      uri:\n        url: \"{{ nessus_url }}/scans/{{ scan_id }}/export/{{ export_request.json.file }}/status\"\n        method: GET\n        validate_certs: no\n        headers:\n            X-ApiKeys: \"accessKey={{ nessus_access_key }}; secretKey={{ nessus_secret_key }}\"\n      register: report_status\n\n    - debug:\n        msg: \"Report status is {{ report_status.json.status }}\"\n\n    - name: downloading the report locally\n      uri:\n        url: \"{{ nessus_url }}/scans/{{ scan_id }}/export/{{ export_request.json.file }}/download\"\n        method: GET\n        validate_certs: no\n        headers:\n          X-ApiKeys: \"accessKey={{ nessus_access_key }}; secretKey={{ nessus_secret_key }}\"\n        return_content: yes\n        dest: \"./{{ scan_id }}_{{ export_request.json.file }}.{{ nessus_report_format }}\"\n      register: report_output\n\n    - debug:\n      msg: \"Report can be found at ./{{ scan_id }}_{{ export_request.json.file }}.{{ nessus_report_format }}\"\n```"]