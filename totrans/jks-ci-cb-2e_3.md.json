["```\n<build>\n<plugins>\n  <plugin>\n    <artifactId>maven-antrun-plugin</artifactId>\n    <configuration>\n      <tasks>\n        <scp file=\"${user}:${pass}@${host}:${file.remote}\" localTofile=\"${file.local}\"/>\n      </tasks>\n    </configuration>\n    <dependencies>\n      <dependency>\n        <groupId>ant</groupId>\n        <artifactId>ant-jsch</artifactId>\n        <version>1.6.5</version>\n      </dependency>\n      <dependency>\n        <groupId>com.jcraft</groupId>\n        <artifactId>jsch</artifactId>\n        <version>0.1.42</version>\n      </dependency>\n    </dependencies>\n  </plugin>\n</plugins>\n</build>\n```", "```\n<project \n\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://Maven.apache.org/maven-v4_0_0.xsd\">\n<modelVersion>4.0.0</modelVersion>\n<groupId>org.berg</groupId>\n<artifactId>ch3.builds.xxx</artifactId>\n<version>1.0-SNAPSHOT</version>\n<name>Template</name>\n</project>\n```", "```\nmvn help:effective-pom\n\n```", "```\nsudo update-alternatives --config mvn\n\n```", "```\n    #!/usr/bin/perl\n    my $workspace = $ENV{'WORKSPACE'};\n\n    open(P1, \">$workspace/hits.properties\")|| die;\n    open(P2, \">$workspace/misses.properties\")|| die;\n    print P1 \"YVALUE=\".rand(100);\n    print P2 \"YVALUE=\".rand(50);\n    ```", "```\n    <build>\n      <plugins>\n        <plugin>\n          <groupId>org.codehaus.gmaven</groupId>\n          <artifactId>gmaven-plugin</artifactId>\n          <version>1.3</version>\n          <executions><execution>\n          <id>run-myGroovy</id>\n          <goals><goal>execute</goal></goals>\n          <phase>verify</phase>\n          <configuration>\n            <classpath>\n              <element>\n                <groupId>commons-lang</groupId>\n                <artifactId>commons-lang</artifactId>\n                <version>2.6</version>\n              </element>\n            </classpath>\n            <source>\n              Import org.apache.commons.lang.SystemUtils\n              if(!SystemUtils.IS_OS_UNIX) { fail(\"Sorry, Not a UNIX box\")}\n              def command=\"ls -l\".execute()\n              println \"OS Type ${SystemUtils.OS_NAME}\"\n              println \"Output:\\n ${command.text}\"\n            </source>\n          </configuration>\n          </execution></executions>\n        </plugin>\n      </plugins>\n    </build>\n    ```", "```\n    OS Type Linux\n    Output:\n    total 12\n    -rwxrwxrwx 1 jenkins jenkins 1165 2011-09-02 11:03 pom.xml\n    drwxrwxrwx 1 jenkins jenkins 3120 2014-09-02 11:03 target\n\n    ```", "```\n    Sorry, Not a UNIX box\n\n    ```", "```\nImport org.apache.commons.lang.SystemUtils\nif(!SystemUtils.IS_OS_UNIX) { fail(\"Sorry, Not a UNIX box\")}\ndef command=\"ls -l\".execute()\nprintln \"OS Type ${SystemUtils.OS_NAME}\"\nprintln \"Output:\\n ${command.text}\"\n```", "```\n<properties><project.build.sourceEncoding>UTF8</project.build.sourceEncoding>\n</properties>\n```", "```\n<source>${script.dir}/scripts/do_some_good.Groovy</source>\n```", "```\n<source>http://localhost/scripts/test.Groovy</source>\n```", "```\n<!-- START SNIPPET: lifecycle -->\n```", "```\n    <project \n\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.berg</groupId>\n    <artifactId>ch3.jenkins.builds.properties</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <name>${name.from.jenkins}</name>\n    <properties><project.build.sourceEncoding>UTF8</project.build.sourceEncoding>\n    </properties>\n    <build>\n    <plugins><plugin>\n    <groupId>org.codehaus.gmaven</groupId>\n    <artifactId>gmaven-plugin</artifactId>\n    <version>1.3</version>\n    <executions><execution>\n    <id>run-myGroovy</id>\n    <goals><goal>execute</goal></goals>\n    <phase>verify</phase>\n    <configuration>\n    <source>\n    def environment = System.getenv()\n    println \"----Environment\"\n    environment.each{println it } \n    println \"----Property\"\n    println(System.getProperty(\"longname\"))\n    println \"----Project and session\"\n    println \"Project: ${project.class}\"\n    println \"Session: ${session.class}\"\n    println \"longname: ${project.properties.longname}\"\n    println \"Project name: ${project.name}\"\n    println \"JENKINS_HOME: ${project.properties.JENKINS_HOME}\"\n    </source>\n    </configuration>\n    </execution></executions>\n    </plugin></plugins>\n    </build>\n    </project>\n    ```", "```\n    project.type=prod\n    secrets.file=/etc/secrets\n    enable.email=true\n    JOB_URL=I AM REALLY NOT WHAT I SEEM\n    ```", "```\n    ----Project and session\n    Project: class org.apache.Maven.model.Model\n    Session: class org.apache.Maven.execution.MavenSession\n    longname: SuperGood\n    [INFO] -------------------------------------------------------\n    [ERROR] BUILD ERROR\n    [INFO] -------------------------------------------------------\n    [INFO] Groovy.lang.MissingPropertyException: No such property: name for class: script1315151939046\n\n    ```", "```\n<build>\n<plugins>\n<plugin>\n<groupId>org.codehaus.mojo</groupId>\n<artifactId>properties-maven-plugin</artifactId>\n<version>1.0-alpha-2</version>\n<executions>\n<execution>\n<phase>initialize</phase>\n<goals>\n<goal>read-project-properties</goal>\n</goals>\n<configuration>\n<files>\n<file>${fullpath.to.properties}</file>\n</files>\n</configuration>\n</execution>\n</executions>\n</plugin>\n</plugins>\n</build>\n```", "```\n    <build>\n    <plugins><plugin>\n    <groupId>org.codehaus.gmaven</groupId>\n    <artifactId>gmaven-plugin</artifactId>\n    <version>1.3</version>\n    <executions>\n    <execution>\n    <id>run-myGroovy-test</id>\n    <goals><goal>execute</goal></goals>\n    <phase>test</phase>\n    <configuration>\n    <source>\n    def ant = new AntBuilder()\n    ant.echo(\"\\n\\nTested ----> With Groovy\")\n    </source>\n    </configuration>\n    </execution>\n    <execution>\n    <id>run-myGroovy-verify</id>\n    <goals><goal>execute</goal></goals>\n    <phase>verify</phase>\n    <configuration>\n    <source>\n    def ant = new AntBuilder()\n    ant.echo(\"\\n\\nVerified at ${new Date()}\")\n    </source>\n    </configuration>\n    </execution>\n    </executions>\n    </plugin></plugins>\n    </build>\n    ```", "```\n    <build>\n    <plugins><plugin>\n    <groupId>org.codehaus.gmaven</groupId>\n    <artifactId>gmaven-plugin</artifactId>\n    <version>1.3</version>\n    <executions><execution>\n    <id>run-myGroovy</id>\n    <goals><goal>execute</goal></goals>\n    <phase>verify</phase>\n    <configuration>\n    <source>\n    def ant = new AntBuilder()\n    host=\"Myhost_series\"\n    print \"user: \"\n    user = new String(System.console().readPassword())\n    print \"password: \"\n    pw = new String(System.console().readPassword())\n\n    for ( i in 1..920) {\n    counterStr=String.format('%02d',i)\n    ant.scp(trust:'true',file:\"${user}:${pw}${host}${counterStr}:/${full_path_to_location}\",\n    localTofile:\"${myfile}-${counterStr}\", verbose:\"true\")   \n    }\n    </source>\n    </configuration>\n    </execution></executions>\n    <dependencies>\n    <dependency>\n    <groupId>ant</groupId>\n    <artifactId>ant</artifactId>\n    <version>1.6.5</version>\n    </dependency>\n    <dependency>\n    <groupId>ant</groupId>\n    <artifactId>ant-launcher</artifactId>\n    <version>1.6.5</version>\n    </dependency>\n    <dependency>\n    <groupId>ant</groupId>\n    <artifactId>ant-jsch</artifactId>\n    <version>1.6.5</version>\n    </dependency>\n    <dependency>\n    <groupId>com.jcraft</groupId>\n    <artifactId>jsch</artifactId>\n    <version>0.1.42</version>\n    </dependency>\n    </dependencies>\n    </plugin></plugins>\n    </build>\n    ```", "```\nmvn verify â€“f pom_ant_simple.xml will fail\n\n```", "```\nant.echo(\"\\n\\nVerified at ${new Date()}\").\n```", "```\ndef ant = new AntBuilder()\nant.echo(message: \"x=1\\n\", append: \"false\", file: \"values.properties\")\nant.echo(message: \"y=2\\n\", append: \"true\", file: \"values.properties\")\n```", "```\n    mvn archetype:generate -DarchetypeArtifactId=maven-archetype-webapp\n\n    ```", "```\n    <build>\n    <finalName>jsp_example</finalName>\n    <plugins>\n    <plugin>\n    <groupId>org.mortbay.jetty</groupId>\n    <artifactId>maven-jetty-jspc-plugin</artifactId>\n    <version>6.1.14</version>\n    <executions>\n    <execution>\n    <id>jspc</id>\n    <goals>\n    <goal>jspc</goal>\n    </goals>\n    <configuration>\n    </configuration>\n    </execution>\n    </executions>\n    </plugin>\n    <plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-war-plugin</artifactId>\n    <version>2.4</version>\n    <configuration>\n    <webXml>${basedir}/target/web.xml</webXml>\n    </configuration>\n    </plugin>\n    </plugins>\n    </build>\n    ```", "```\n    <html>\n      <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n        <title>Hello World Example</title>\n      </head>\n      <body>\n        <% String evilInput= null;\n          evilInput = request.getParameter(\"someUnfilteredInput\");\n          if (evilInput==null){evilInput=\"Hello Kind Person\";}\n        %>\n        <form action=\"index.jsp\">\n          The big head says: <%=evilInput%><p>\n          Please add input:<input type='text' name='someUnfilteredInput'>\n          <input type=\"submit\">\n        </form>\n      </body>\n    </html>\n    ```", "```\n    [ERROR] Failed to execute goal org.mortbay.jetty:maven-jetty-jspc-plugin:6.1.14:jspc (jspc) on project jsp_example: Failure processing jsps -> [Help 1]\n\n    ```", "```\n<servlet>\n  <servlet-name>jsp.index_jsp</servlet-name>\n  <servlet-class>jsp.index_jsp</servlet-class>\n</servlet>\n\n<servlet-mapping>\n  <servlet-name>jsp.index_jsp</servlet-name>\n  <url-pattern>/index.jsp</url-pattern>\n</servlet-mapping>\n```", "```\njavax.servlet.ServletException: Error instantiating servlet class jsp.index_jsp\nRoot Cause\njava.lang.NoClassDefFoundError: Lorg/apache/jasper/runtime/ResourceInjector;\n\n```", "```\n<%@ page language=\"java\" contentType=\"text/html;charset=UTF-8\"\npageEncoding=\"UTF-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n```", "```\n    <plugin>\n    <groupId>org.codehaus.mojo</groupId>\n    <artifactId>keytool-maven-plugin</artifactId>\n    <version>1.5</version>\n    <executions>\n    <execution>\n    <phase>generate-resources</phase>\n    <id>clean</id>\n    <goals>\n    <goal>clean</goal>\n    </goals>\n    </execution>\n    <execution>\n    <phase>generate-resources</phase>\n    <id>generateKeyPair</id>\n    <goals>\n    <goal>generateKeyPair</goal>\n    </goals>\n    </execution>\n    </executions>\n    <configuration>\n    <keystore>${project.build.directory}/jetty-ssl.keystore</keystore>\n    <dname>cn=HOSTNAME</dname>\n    <keypass>jetty8</keypass>\n    <storepass>jetty8</storepass>\n    <alias>jetty8</alias>\n    <keyalg>RSA</keyalg>\n    </configuration>\n    </plugin>\n    <plugin>\n    <groupId>org.mortbay.jetty</groupId>\n    <artifactId>jetty-maven-plugin</artifactId>\n    <version>8.1.16.v20140903</version>\n    <configuration>\n    <war>${basedir}/target/jsp_example.war</war>\n    <stopPort>8083</stopPort>\n    <stopKey>stopmeplease</stopKey>\n    <connectors>\n    <connector implementation=\"org.eclipse.jetty.server.nio.SelectChannelConnector\">\n    <port>8082</port>\n    </connector>\n    <connector implementation=\"org.eclipse.jetty.server.ssl.SslSocketConnector\">\n    <port>9443</port>\n    <keystore>\n    ${project.build.directory}/jetty-ssl.keystore</keystore>\n    <password>jetty8</password>\n    <keyPassword>jetty8</keyPassword>\n    </connector>\n    </connectors>\n    </configuration>\n    <executions>\n    <execution>\n    <id>start-jetty</id>\n    <phase>pre-integration-test</phase>\n    <goals>\n    <goal>run</goal>\n    </goals>\n    <configuration>\n    <daemon>true</daemon>\n    </configuration>\n    </execution>\n    <execution>\n    <id>stop-jetty</id>\n    <phase>post-integration-test</phase>\n    <goals>\n    <goal>stop</goal>\n    </goals>\n    </execution>\n    </executions>\n    </plugin>\n    ```", "```\n    java -jar ./apache-rat/target/apache-rat-0.12-SNAPSHOT.jar --help\n    java -jar ./apache-rat/target/apache-rat-0.12-SNAPSHOT.jar -d ${JENKINS_HOME}/workspace/License_Check/Â  -e '*.js'  -e '*target*'\n\n    ```", "```\nERROR: /var/lib/jenkins/jobs/License_Check/workspace\nFinished: Success\n\n```", "```\n<plugin>\n<groupId>com.mycila.maven-license-plugin</groupId>\n<artifactId>maven-license-plugin</artifactId>\n<version>2.6</version>\n<configuration>\n<header>src/etc/header.txt</header>\n</configuration>\n</plugin>\n```", "```\nCopyright (C) ${year} Licensed under this open source License\n```", "```\nmvn license:format -Dyear=2012\n\n```", "```\n    <pluginRepositories>\n    <pluginRepository>\n    <id>apache.snapshots</id>\n    <url>http://repository.apache.org/snapshots/</url>\n    </pluginRepository>\n    </pluginRepositories>\n    <build>\n    <plugins><plugin>\n    <groupId>org.apache.rat</groupId>\n    <artifactId>apache-rat-plugin</artifactId>\n    <version>0.11-SNAPSHOT</version>\n    <executions><execution>\n    <phase>verify</phase>\n    <goals><goal>check</goal></goals>\n    </execution></executions><configuration>\n    <excludeSubProjects>false</excludeSubProjects><numUnapprovedLicenses>597</numUnapprovedLicenses>\n    <excludes>\n    <exclude>**/.*/**</exclude>\n    <exclude>**/target/**/*</exclude>\n    </excludes>\n    <includes>\n    <include>**/src/**/*.css</include>\n    <include>**/src/**/*.html</include>\n    <include>**/src/**/*.java</include>\n    <include>**/src/**/*.js</include>\n    <include>**/src/**/*.jsp</include>\n    <include>**/src/**/*.properties</include>\n    <include>**/src/**/*.sh</include>\n    <include>**/src/**/*.txt</include>\n    <include>**/src/**/*.vm</include>\n    <include>**/src/**/*.xml</include>\n    </includes>\n    </configuration>\n    </plugin></plugins></build>\n    ```", "```\n    rat.basedir=/var/lib/Jenkins/workspace/ch3.BasicLTI_license\n    ```", "```\n    <build>\n    <plugins><plugin>\n    <groupId>org.codehaus.gmaven</groupId>\n    <artifactId>gmaven-plugin</artifactId>\n    <version>1.3</version>\n    <executions><execution>\n    <id>run-myGroovy</id>\n    <goals><goal>execute</goal></goals>\n    <phase>verify</phase>\n    <configuration>\n    <source>\n    if ( new Random().nextInt(50) > 25){\n    fail \"MySevere issue:  Due to little of resource X\"\n    } else {\n    println \"Great stuff happens because: This world is fully resourced\"\n    }\n    </source>\n    </configuration>\n    </execution></executions>\n    </plugin></plugins>\n    </build>\n    ```", "```\nif ( new Random().nextInt(50) > 25){\nfail \"MySevere issue:  Due to little of resource X\"\n} else {\nprintln \"Great stuff happens because: This world is fully resourced\"\n```", "```\n    <plugin>\n    <groupId>org.codehaus.gmaven</groupId>\n    <artifactId>gmaven-plugin</artifactId>\n    <version>1.3</version>\n    <executions><execution>\n    <id>run-myGroovy</id>\n    <goals><goal>execute</goal></goals>\n    <phase>verify</phase>\n    <configuration>\n    <source>\n    new File(\"${basedir}/target/rat.txt\").eachLine{line->println line}\n    </source>\n    </configuration>\n    </execution></executions>\n    </plugin>\n    ```", "```\n    def matcher = manager.getMatcher(manager.build.logFile, \"^(.*) Unknown Licenses\\$\")\n    if(matcher?.matches()) {\n    title=\"Unknown Licenses: ${matcher.group(1)}\"\n    manager.addWarningBadge(title)\n    manager.addShortText(title, \"grey\", \"white\", \"0px\", \"white\")\n    manager.createSummary(\"error.gif\").appendText(\"<h2>${title}</h2>\", false, false, false, \"grey\")\n    manager.buildUnstable()\n    }\n    ```", "```\n    wget --auth-no-challenge --http-user=username --http-password=apiToken http://localhost:8080/job/ch3.RunMe/build?token=changeme\n\n    ```", "```\n    Resolving localhost (localhost)... 127.0.0.1Connecting to localhost (localhost)|127.0.0.1|:8080... connected.\n    HTTP request sent, awaiting response... 405 Method Not Allowed\n    2014-08-14 15:08:43 ERROR 405: Method Not Allowed.\n\n    ```", "```\n    wget --auth-no-challenge --http-user=username --http-password=apiToken http://localhost:8080/job/ch3.RunMe/buildWithParameters?token=changeme\\&myvariable='Hello World'\n    Connecting to localhost (localhost)|127.0.0.1|:8080... connected.\n    HTTP request sent, awaiting response... 201 Created\n\n    ```", "```\n<build>\n<plugin>\n<groupId>org.apache.maven.plugins</groupId>\n<artifactId>maven-antrun-plugin</artifactId>\n<version>1.7</version>\n<executions><execution>\n<phase>compile</phase>\n<configuration>\n<tasks>\n<exec executable=\"wget\">\n<arg line=\"--auth-no-challenge --http-user=username --http-password=apiToken http://localhost:8080/job/ch3.RunMe/build?token=changeme\" />\n</exec>\n</tasks>\n</configuration>\n<goals><goal>run</goal></goals>\n</execution></executions>\n</plugin>\n</build>\n```", "```\n    <url>My_host/my_dir</url>\n    <description>This is the meaningful DESCRIPTION</description>\n    <build>\n    <plugins><plugin>\n    <groupId>org.codehaus.gmaven</groupId>\n    <artifactId>gmaven-plugin</artifactId>\n    <version>1.3</version>\n    <executions>\n    <execution>\n    <id>run-myGroovy-add-site-xml</id>\n    <goals><goal>execute</goal></goals>\n    <phase>pre-site</phase>\n    <configuration>\n    <source>\n    site_xml.Groovy\n    </source>\n    </configuration>\n    </execution>\n    <execution>\n    <id>run-myGroovy-add-results-to-site</id>\n    <goals><goal>execute</goal></goals>\n    <phase>site</phase>\n    <configuration>\n    <source>\n    site.Groovy\n    </source>\n    </configuration>\n    </execution></executions>\n    </plugin></plugins>\n    </build>\n    ```", "```\n    def site= new File('./src/site')\n    site.mkdirs()\n    defs xml=new File('./src/site/site.xml')\n    if (sxml.exists()){sxml.delete()}\n\n    sxml<< '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>'\n    sxml<< '<project name=\"Super Project\">'\n    sxml<< '<body>'\n    def random = new Random()\n    if (random.nextInt(10) > 5){\n    sxml<< '    <menu name=\"My super project\">'\n    sxml<< '     <item name=\"Key Performance Indicators\" href=\"/our_results.html\"/>'\n    sxml<< '   </menu>'\n    print \"Data Found menu item created\\n\"\n    }\n    sxml<< '   <menu ref=\"reports\" />'\n    sxml<< '  </body>'\n    sxml<< '</project>'\n\n    print \"FINISHED - site.xml creation\\n\"\n    ```", "```\n    def site= new File('./target/site')\n    site.mkdirs()\n    def index = new File('./target/site/our_results.html')\n    if (index.exists()){index.delete()}\n    index<< '<h3>ImportAnt results</h3>'\n    index<< \"${new Date()}\\n\"\n    index<< '<ol>'\n\n    def random = new Random()\n    for ( i in 1..40 ) {\n    index<< \"<li>Result[${i}]=${random.nextInt(50)}\\n\"\n    }\n    index<< '</ol>'\n    ```", "```\n<plugin>\n<groupId>org.codehaus.mojo</groupId>\n<artifactId>keytool-maven-plugin</artifactId>\n<executions>\n<execution>\n<phase>generate-resources</phase>\n<id>clean</id>\n<goals>\n<goal>clean</goal>\n</goals>\n</execution>\n<execution>\n<phase>generate-resources</phase>\n<id>genkey</id>\n<goals>\n<goal>genkey</goal>\n</goals>\n</execution>\n</executions>\n```", "```\n<plugin>\n  <groupId>org.codehaus.mojo</groupId>\n  <artifactId>keytool-maven-plugin</artifactId>\n <version>1.5</version>\n  <executions>\n    <execution>\n      <phase>generate-resources</phase>\n      <id>clean</id>\n      <goals>\n        <goal>clean</goal>\n      </goals>\n    </execution>\n    <execution>\n      <phase>generate-resources</phase>\n        <id>generateKeyPair</id>\n        <goals>\n <goal>generateKeyPair</goal>\n        </goals>\n    </execution>\n  </executions>\n</plugin>\n```", "```\n<dependencies>\n  <dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n    <scope>test</scope>\n  </dependency>\n</dependencies>\n```"]