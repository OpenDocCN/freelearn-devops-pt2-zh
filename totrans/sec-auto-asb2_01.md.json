["```\nansible-playbook -i inventory playbook.yml\n```", "```\n$ ansible-doc apt\n\n```", "```\n$ ansible-doc -l\n```", "```\n$ ansible webservers -m service -a \"name=httpd state=started\"\n```", "```\n- name: restart webserver\n  service:\n    name: httpd\n    state: started\n```", "```\n- hosts: webservers\n  vars:\n    http_port: 80\n    max_clients: 200\n  remote_user: root\n\n  tasks:\n  - name: Ensure apache is at the latest version\n    yum:\n      name: httpd\n      state: latest\n  - name: Write the apache config file\n    template:\n      src: /srv/httpd.j2\n      dest: /etc/httpd.conf\n\n    notify:\n    - restart apache\n\n  - name: Ensure apache is running (and enable it at boot)\n    service:\n      name: httpd\n      state: started\n      enabled: yes\n\n  handlers:\n    - name: Restart apache\n      service:\n        name: httpd\n        state: restarted\n```", "```\n- name: LAMP stack setup on ubuntu 16.04\n  hosts: all\n  gather_facts: False\n  remote_user: \"{{remote_username}}\"\n  become: yes\n\n roles:\n   - common\n   - web\n   - db\n   - php\n```", "```\ntasks:\n  - name: \"shut down Debian flavored systems\"\n    command: /sbin/shutdown -t now\n    when: ansible_os_family == \"Debian\"\n```", "```\n- name: add several users\n  user:\n    name: \"{{ item.name }}\"\n    state: present\n    groups: \"{{ item.groups }}\"\n  with_items:\n    - { name: 'testuser1', groups: 'wheel' }\n    - { name: 'testuser2', groups: 'root' }\n```", "```\ninventory               # inventory file\ngroup_vars/             #\n   all.yml              # variables\nsite.yml                # master playbook (contains list of roles)\nroles/                  #\n    common/             # common role\n        tasks/          #\n            main.yml    # installing basic tasks\n    web/                # apache2 role\n        tasks/          #\n            main.yml    # install apache\n        templates/      #\n            web.conf.j2 # apache2 custom configuration\n        vars/           # \n            main.yml    # variables for web role \n        handlers/       #\n            main.yml    # start apache2\n    php/                # php role\n        tasks/          # \n            main.yml    # installing php and restart apache2\n    db/                 # db role\n        tasks/          #\n            main.yml    # install mysql and include harden.yml\n            harden.yml  # security hardening for mysql\n        handlers/       #\n            main.yml    # start db and restart apache2\n        vars/           #\n            main.yml    # variables for db role\n```", "```\n[lamp]\nlampstack    ansible_host=192.168.56.10\n```", "```\nremote_username: \"hodor\"\n```", "```\n- name: LAMP stack setup on Ubuntu 16.04\n hosts: lamp\n gather_facts: False\n remote_user: \"{{ remote_username }}\"\n become: True\n\n roles:\n   - common\n   - web\n   - db\n   - php\n```", "```\n# In ubuntu 16.04 by default there is no python2\n- name: install python 2\n  raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)\n\n- name: install curl and git\n  apt:\n    name: \"{{ item }}\"\n    state: present\n    update_cache: yes\n\n  with_items:\n    - curl\n    - git\n```", "```\n- name: install apache2 server\n  apt:\n    name: apache2\n    state: present\n\n- name: update the apache2 server configuration\n  template: \n    src: web.conf.j2\n    dest: /etc/apache2/sites-available/000-default.conf\n    owner: root\n    group: root\n    mode: 0644\n\n- name: enable apache2 on startup\n  systemd:\n    name: apache2\n    enabled: yes\n  notify:\n    - start apache2\n```", "```\n- name: start apache2\n  systemd:\n    state: started\n    name: apache2\n\n- name: stop apache2\n  systemd:\n    state: stopped\n    name: apache2\n\n- name: restart apache2\n  systemd:\n    state: restarted\n    name: apache2\n    daemon_reload: yes\n```", "```\n<VirtualHost *:80><VirtualHost *:80>\n    ServerAdmin {{server_admin_email}}\n    DocumentRoot {{server_document_root}}\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```", "```\nserver_admin_email: hodor@localhost.local\nserver_document_root: /var/www/html\n```", "```\n- name: set mysql root password\n  debconf:\n    name: mysql-server\n    question: mysql-server/root_password\n    value: \"{{ mysql_root_password | quote }}\"\n    vtype: password\n\n- name: confirm mysql root password\n  debconf: \n    name: mysql-server\n    question: mysql-server/root_password_again\n    value: \"{{ mysql_root_password | quote }}\"\n    vtype: password\n\n- name: install mysqlserver\n  apt:\n    name: \"{{ item }}\"\n    state: present \n  with_items:\n    - mysql-server\n    - mysql-client\n\n- include: harden.yml\n```", "```\n- name: deletes anonymous mysql user\n  mysql_user:\n    user: \"\"\n    state: absent\n    login_password: \"{{ mysql_root_password }}\"\n    login_user: root\n\n- name: secures the mysql root user\n  mysql_user: \n    user: root\n    password: \"{{ mysql_root_password }}\"\n    host: \"{{ item }}\"\n    login_password: \"{{mysql_root_password}}\"\n    login_user: root\n with_items:\n   - 127.0.0.1\n   - localhost\n   - ::1\n   - \"{{ ansible_fqdn }}\"\n\n- name: removes the mysql test database\n  mysql_db:\n    db: test\n    state: absent\n    login_password: \"{{ mysql_root_password }}\"\n    login_user: root\n\n- name: enable mysql on startup\n  systemd:\n    name: mysql\n    enabled: yes\n\n  notify:\n    - start mysql\n```", "```\n- name: start mysql\n  systemd:\n    state: started\n    name: mysql\n\n- name: stop mysql\n  systemd:\n    state: stopped\n    name: mysql\n\n- name: restart mysql\n  systemd:\n    state: restarted\n    name: mysql\n    daemon_reload: yes\n```", "```\nmysql_root_password: R4nd0mP4$$w0rd\n```", "```\n- name: install php7\n  apt:\n    name: \"{{ item }}\"\n    state: present\n  with_items:\n    - php7.0-mysql\n    - php7.0-curl\n    - php7.0-json\n    - php7.0-cgi\n    - php7.0\n    - libapache2-mod-php7\n\n- name: restart apache2\n  systemd:\n    state: restarted\n    name: apache2\n    daemon_reload: yes\n```", "```\n$ ansible-playbook -i inventory site.yml\n```"]