["```\n    git clone https://github.com/jenkinsci/jsgames-plugin\n    git tag\n    git checkout jsgames-0.2\n\n    ```", "```\n    ls /var/lib/jenkins/plugins\n\n    ```", "```\n    ant                             ant.jpi\n    jsgames                     jsgames.jpi\n    maven-plugin             maven-plugin.jpi\n\n    ```", "```\n    sudo touch /var/lib/jenkins/plugins/jsgames.jpi.pinned\n    sudo chown jenkins /var/lib/jenkins/plugins/jsgames.jpi.pinned\n\n    ```", "```\n    <?xml version=\"1.0\"?>\n    <project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n     <modelVersion>4.0.0</modelVersion>\n    <parent>\n      <groupId>org.jenkins-ci.plugins</groupId>\n      <artifactId>plugin</artifactId>   \n      <version>1.584</version>\n    </parent>\n      <artifactId>Startup</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <packaging>hpi</packaging>\n      <name>Startup</name>\n      <repositories>\n        <repository>\n        <id>repo.jenkins-ci.org</id>\n        <url>http://repo.jenkins-ci.org/public/</url>\n        </repository>\n        </repositories>\n        <pluginRepositories>\n        <pluginRepository>\n        <id>repo.jenkins-ci.org</id>\n        <url>http://repo.jenkins-ci.org/public/</url>\n      </pluginRepository>\n      </pluginRepositories>\n      <properties>\n        <project.build.sourceEncoding>UTF-8   \n        </project.build.sourceEncoding>\n      </properties>\n    </project>\n    ```", "```\n    2012-02-05 09:56:57.827::WARN:  failed SelectChannelConnector @ 0.0.0.0:8080\n    java.net.BindException: Address already in use\n    at sun.nio.ch.Net.bind0(Native Method)\n\n    ```", "```\n    mvn hpi:run -Djetty.port=8090\n\n    ```", "```\n    SEVERE: Failed Inspecting plugin  /DRAFT/Exploring_plugins/hpi_run/./work/plugins/Startup.hpl\n    java.io.IOException: No such file: /DRAFT/Exploring_plugins/hpi_run/target/classes\n\n    ```", "```\ngit clone https://github.com/jenkinsci/filesystem_scm-plugin cd filesystem_scm-plugin/\n\n```", "```\n    git tag –l\n    filesystem_scm-0.1\n    filesystem_scm-1.10\n    filesystem_scm-1.20\n    filesystem_scm-1.5\n    filesystem_scm-1.6\n    filesystem_scm-1.7\n    filesystem_scm-1.8\n    filesystem_scm-1.9\n    git checkout –b filesystem_scm-1.20\n\n    ```", "```\n      <parent>\n        <groupId>org.jenkins-ci.plugins</groupId>\n        <artifactId>plugin</artifactId> \n        <version>1.584</version>\n      </parent>\n    ```", "```\n      <repositories>\n        <repository>\n          <id>repo.jenkins-ci.org</id>\n          <url>http://repo.jenkins-ci.org/public/</url>\n        </repository>\n      </repositories>\n      <pluginRepositories>\n        <pluginRepository>\n          <id>repo.jenkins-ci.org</id>\n          <url>http://repo.jenkins-ci.org/public/</url>\n        </pluginRepository>\n      </pluginRepositories>\n    ```", "```\n    <div>\n      <p>\n    <h3>HELLO WORLD</h3>\n      </p>\n    </div>\n    ```", "```\n    Failed tests:   test1(hudson.plugins.filesystem_scm.SimpleAntWildcardFilterTest): expected:<2> but was:<0>\n    Tests run: 27, Failures: 1, Errors: 0, Skipped: 0\n\n    ```", "```\n  <f:entry title=\"Clear Workspace\" help=\"/plugin/filesystem_scm/help-clearWorkspace.html\">\n    <f:checkbox name=\"fs_scm.clearWorkspace\" checked=\"${scm.clearWorkspace}\"/>\n  </f:entry>\n```", "```\ngit clone https://github.com/jenkinsci/escaped-markup-plugin\n\n```", "```\n    cd escaped-markup-plugin\n    git tag -l\n    git –b checkout escaped-markup-plugin-0.1\n\n    ```", "```\n    <parent>\n      <groupId>org.jenkins-ci.plugins</groupId>\n      <artifactId>plugin</artifactId>\n      <version>1.584</version>\n    </parent>\n    ```", "```\n      <repositories>\n        <repository>\n          <id>repo.jenkins-ci.org</id>\n          <url>http://repo.jenkins-ci.org/public/</url>\n        </repository>\n      </repositories>\n      <pluginRepositories>\n        <pluginRepository>\n          <id>repo.jenkins-ci.org</id>\n          <url>http://repo.jenkins-ci.org/public/</url>\n        </pluginRepository>\n      </pluginRepositories>\n    ```", "```\n    sudo /etc/init.d/jenkins restart\n\n    ```", "```\n    <div>\n      This plugin escapes the description of project, use, view, and build  to prevent from XSS.\n      Revision: Unescaped banner added at the end.\n    </div>\n    ```", "```\n    public class EscapedMarkupFormatter extends MarkupFormatter\n    {\n      private final String BANNER= \"\\n<hr><h2>THINK BIG WITH xyz dot blah</h2><hr>\\n\";\n\n      @DataBoundConstructor\n      public EscapedMarkupFormatter() {\n    }\n    @Override\n    public void translate(String markup, Writer output) throws IOException {\n        output.write(Util.escape(markup)+BANNER);\n      }\n        @Extension\n        public static class DescriptorImpl extends MarkupFormatterDescriptor {\n        @Override\n        public String getDisplayName() {\n          return \"Escaped HTML with BANNER\";\n        }\n      }\n    }\n    ```", "```\n    mvn -Dmaven.test.skip=true -DskipTests=true clean install\n\n    ```", "```\n    sudo /etc/init.d/jenkins stop\n\n    ```", "```\n    sudo rm /var/lib/jenkins/plugins/escaped-markup-plugin.jpi\n    sudo rm -rf /var/lib/jenkins/plugins/escaped-markup-plugin\n\n    ```", "```\n      <artifactId>Startup</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <packaging>hpi</packaging>\n       <name>Startup</name>\n    ```", "```\n      <artifactId>rootaction</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <packaging>hpi</packaging>\n       <name>Jenkins Root Action Plugin</name>\n    ```", "```\n    package jenkins.plugins.rootaction;\n    import hudson.Extension;\n    import hudson.model.RootAction;\n\n    @Extension\n    public class MyRootAction implements RootAction {\n\n      public final String getDisplayName() {\n        return \"Root Action Example\";\n      }\n\n      public final String getIconFileName() {\n        return \"/plugin/rootaction/myicon.png\";\n      }\n\n      //Feel free to modify the URL\n      public final String getUrlName() {\n        return \"http://www.uva.nl\";\n      }\n    }\n    ```", "```\n    <div>\n      This plugin adds a root link.\n    </div>\n    ```", "```\n    mvn -Dmaven.test.skip=true -DskipTests=true clean install hpi:run -Djetty.port=8090\n\n    ```", "```\n  <artifactId>rootaction</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <packaging>hpi</packaging>\n   <name>Jenkins Root Action Plugin</name>\n```", "```\n    svn export -r 40275 https://svn.jenkins-ci.org/trunk/hudson/plugins/job-exporter\n\n    ```", "```\n    (Replace with email)\n    Started by user Alan Mark Berg \n    Building remotely on unix-node01 (dumb functional unix) in workspace\n     /home/jenkins-unix-nodex/workspace/c7.plugins.job_export ################################################################### job-exporter plugin started\n     hudson.version: 1.584\n     host: home.local\n     id: 2014-10-13_16-58-18\n     duration: 2.5 sec\n     slave: unix-node01\n     started: 2014-10-13T16:58:18\n     result: SUCCESS\n     summary: Executor #1 for unix-node01 : executing c7.plugins.job_export #1\n     executor: 1\n     elapsedTime: 2602\n     number: 1\n     jobName: c7.plugins.job_export\n     we have 1 build cause:       Cause.UserIdCause  Started by user Alan Mark Berg\n     user.id: aaaaaaa\n     user.name: Alan Mark Berg\n     user.fullName: Alan Mark Berg\n     user.emailAddress: xxxxx@yyyy.zzz\n     new file written: /home/jenkins-unix-nodex/workspace/c7.plugins.job_export/hudsonBuild.properties\n     job-exporter plugin  finished.  That's All Folks! ################################################################### Finished: SUCCESS\n\n    ```", "```\n    #created by com.meyling.hudson.plugin.job_exporter.ExporterBuilder\n    #Thu Feb 02 15:58:51 CET 2012\n    build.user.id=Alan\n    build.result=SUCCESS\n\n    ```", "```\nfinal EnvVars env = build.getEnvironment(new LogTaskListener(Logger.getLogger(\n  this.getClass().getName()), Level.INFO));\n```", "```\n    svn export -r 40275 https://svn.jenkins-ci.org/trunk/hudson/plugins/startup-trigger-plugin\n\n    ```", "```\n    Started due to the start of a node.\n    Building on master in workspace /var/lib/jenkins/workspace/ch7.plugins.startup\n    Finished: SUCCESS\n\n    ```", "```\n@Override\n  public void start( BuildableItem project, boolean newInstance )\n  {\n    super.start( project, newInstance );\n\n    // do not schedule build when trigger was just added to the job\n    if ( !newInstance )\n    {\n      project.scheduleBuild( new HudsonStartupCause() );\n    }\n  }\n```", "```\n@Override\n   public String  getShortDescription()\n  {\n    return \"Started due to Hudson startup.\";\n  }\n```", "```\n    import jenkins.model.Jenkins\n    import java.util.logging.LogManager\n    def logger = LogManager.getLogManager().getLogger(\"\")logger.info(\"RUNNING init.groovy from ${Jenkins.instance.getRootDir().absolutePath}\")logger.info(\"Here are the Jenkins environment variables on startup\")\n    def env = System.getenv()\n    env.each{\n     logger.info(\"${it}\")\n    }\n    logger.info(\"<PLUGINS>\")\n    count=0\n    for(plugin in hudson.model.Hudson.instance.pluginManager.plugins.sort())\n    {\n     logger.info( plugin.shortName)\n     count = count+1\n    }\n    logger.info(\"<PLUGINS>\\nFound \" + count + \" plugins\")\n    logger.info(\"End of init.groovy \\n... Goodbye Cruel world\")\n    ```", "```\n    sudo /etc/init.d/jenkins restart\n\n    ```", "```\n    INFO: RUNNING init.groovy from /var/lib/jenkins\n    INFO: Here are the Jenkins environment variables on startup\n    INFO: TERM=xterm\n    INFO: JENKINS_HOME=/var/lib/jenkins\n    INFO: SHLVL=1\n    INFO: XFILESEARCHPATH=/usr/dt/app-defaults/%L/Dt\n    INFO: COLORTERM=gnome-terminal\n    INFO: MAIL=/var/mail/jenkins\n    INFO: XDG_SESSION_COOKIE=3e4cca1158bd9704ef8146c500000008-1413227204.360563-1079526024\n    INFO: QT_QPA_PLATFORMTHEME=appmenu-qt5\n    INFO: PWD=/var/lib/jenkins\n    INFO: LOGNAME=jenkins\n    INFO: _=/usr/bin/daemon\n    INFO: NLSPATH=/usr/dt/lib/nls/msg/%L/%N.cat\n    INFO: SHELL=/bin/bash\n    INFO: PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games\n    INFO: DISPLAY=:0.0\n    INFO: USER=jenkins\n    INFO: HOME=/var/lib/jenkins\n    INFO: XAUTHORITY=/home/alan/.Xauthority\n    INFO: XDG_SEAT=seat0\n    INFO: XDG_SESSION_ID=c3\n    INFO: XDG_VTNR=7\n    INFO: LANG=en_US.UTF-8\n    INFO: <PLUGINS>\n    INFO: ant\n    INFO: antisamy-markup-formatter\n    INFO: buildresult-trigger\n    INFO: claim\n    INFO: credentials\n    INFO: cvs\n    INFO: \n    Found 46 plugins\n    INFO: End of init.groovy\n    ... Goodbye Cruel world\n\n    ```", "```\ndef env = System.getenv()\nenv.each{\n  logger.info(\"${it}\")\n}\n```", "```\nfor(plugin in hudson.model.Hudson.instance.pluginManager.plugins.sort()) {\n  logger.info( plugin.shortName)\n```", "```\nant:1.2\nantisamy-markup-formatter:1.2\nbackup:1.6.1\ncas1:1.0.1\ncredentials:1.16.1\n\n```", "```\n    Inspecting Monitor a change of the content for URL http://localhost:8080\n    Polling started on Oct 13, 2014 5:49:00 PM\n    Polling for the job ch7.plugin.url\n    Looking nodes where the poll can be run.\n    Looking for a candidate node to run the poll.\n    Looking for a node with no predefined label.\n    Trying to poll with the last built on node.\n    Trying to poll on master node.\n\n    Polling on master.\n    Invoking the url:   http://localhost:8080\n    Inspecting the content\n    The content of the URL has changed.\n\n    Polling complete. Took 0.13 sec.\n    Changes found. Scheduling a build.\n\n    ```", "```\njava.lang.ClassCastException: sun.net.www.protocol.file.FileURLConnection cannot be cast to java.net.HttpURLConnection\n\n```", "```\n    git clone https://github.com/jenkinsci/lastfailureversioncolumn-plugin\n    git clone https://github.com/jenkinsci/lastsuccessversioncolumn-plugin\n    git clone https://github.com/jenkinsci/lastsuccessdescriptioncolumn-plugin\n\n    ```", "```\n    <artifactId> rootaction</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <packaging>hpi</packaging>\n       <name>Jenkins Root Action Plugin</name>\n    <?xml version=\"1.0\"?>\n    <project \n\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n    http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n         <groupId>org.jenkins-ci.plugins</groupId>\n         <artifactId>plugin</artifactId>\n         <version>1.548</version>\n    </parent>\n      <artifactId>rootaction</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <packaging>hpi</packaging>\n       <name>Jenkins Root Action Plugin</name>\n      <repositories>\n        <repository>\n          <id>repo.jenkins-ci.org</id>\n          <url>http://repo.jenkins-ci.org/public/</url>\n        </repository>\n      </repositories>\n      <pluginRepositories>\n        <pluginRepository>\n          <id>repo.jenkins-ci.org</id>\n          <url>http://repo.jenkins-ci.org/public/</url>\n        </pluginRepository>\n      </pluginRepositories>\n     <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n      </properties>\n    </project>\n    ```", "```\n    package jenkins.plugins.comments;\n    import org.kohsuke.stapler.StaplerRequest;\n    import hudson.views.ListViewColumn;\n    import net.sf.json.JSONObject;\n    import hudson.Extension;\n    import hudson.model.Descriptor;\n    import hudson.model.Job;\n\n      public class CommentsColumn extends ListViewColumn {\n        public String getFakeComment(Job job) {\n          return \"Comments for <em>\"+job.getName()+\"</em>\"+\n          \"Short URL: <em>\"+job.getShortUrl()+\"</em>\";\n        }\n\n        @Extension\n        public static final Descriptor<ListViewColumn> DESCRIPTOR = new DescriptorImpl();\n        public Descriptor<ListViewColumn> getDescriptor(){\n          return DESCRIPTOR;\n        }\n\n        private static class DescriptorImpl extends Descriptor<ListViewColumn> {\n          @Override\n          public ListViewColumn newInstance(StaplerRequest req,\n          JSONObject formData) throws FormException {\n          return new CommentsColumn();\n        }\n        @Override\n        public String getDisplayName() {\n          return \"FakeCommentsColumn\";\n        }\n      }\n    }\n    ```", "```\n    <j:jelly >\n      <j:set var=\"comment\" value=\"${it.getFakeComment(job)}\"/>\n      <td data=\"${comment}\">${comment}</td>\n    </j:jelly>\n    ```", "```\n    <j:jelly >\n      <th>${%Fake Comment}</th>\n    </j:jelly>\n    ```", "```\n    Fake\\ Comment=My Fake Column [Default]\n    ```", "```\n    Fake\\ Comment=My Fake Column [an]\n    ```", "```\n    <div>\n      This plugin adds a comment to the sections mentioned in list view.\n    </div>\n    ```", "```\n    mvn -Dmaven.test.skip=true clean install hpi:run -Djetty.port=8090\n\n    ```", "```\n├── pom.xml\n└── src\n └── main\n ├── java\n │   └── jenkins\n │       └── plugins\n │           └── comments\n │               └── CommentsColumn.java\n └── resources\n ├── index.jelly\n └── jenkins\n └── plugins\n └── comments\n └── CommentsColumn\n ├── columnHeader_an.properties\n ├── columnHeader.jelly\n ├── columnHeader.properties\n └── column.jelly\n\n```", "```\n<j:jelly >\n  <th>${%Fake Comment}</th>\n</j:jelly>\n```", "```\n<j:jelly >\n  <j:set var=\"comment\" value=\"${it.getFakeComment(job)}\"/>\n  <td data=\"${comment}\">${comment}</td>\n</j:jelly>\n```", "```\nThe MIT License\n\nCopyright (c) 20xx, Name x, Name y…\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```"]