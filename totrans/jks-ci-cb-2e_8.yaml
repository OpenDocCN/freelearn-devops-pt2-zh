- en: Appendix A. Processes that Improve Quality
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 A. 提高质量的流程
- en: Quality assurance requires that the expert pays attention to a wide range of
    details. Rather than being purely technical, many of these details relate to human
    behavior. This chapter mentions both the soft skills needed to run successful
    projects and the configuration skills codified in the recipes of this book. Here
    are a few hard-learned observations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 质量保证要求专家关注各种细节。这些细节与人类行为相关，而不仅仅是技术性的。本章提到了运行成功项目所需的软技能以及本书配方中所规范化的配置技能。以下是一些通过实践获得的观察。
- en: Fail early
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 早期失败
- en: The later in the software life cycle you correct a problem, the more costly
    it will become. Failing early is significantly cheaper than failing later. Continuous
    Integration allows you to automatically fail software early. Adding extra tests
    through plugins or connected cloud services gives greater opportunity to face
    your issues early, improving quality and decreasing costs. Embrace acknowledging
    issues because you are saving time and money.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件生命周期的后期纠正问题，成本会更高。尽早失败比之后失败要便宜得多。持续集成允许您自动早期失败。通过插件或连接的云服务添加额外的测试会更有机会早期发现问题，从而提高质量并降低成本。接受问题是一种拥抱，因为这样可以节省时间和金钱。
- en: 'The following are a few relevant resources:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些相关资源：
- en: The *Deliberately failing builds through log parsing* recipe in [Chapter 1](ch01.html
    "Chapter 1. Maintaining Jenkins"), *Maintaining Jenkins*
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "Chapter 1. Maintaining Jenkins") *Maintaining Jenkins* 中的*通过日志解析有意失败的构建*配方
- en: The *Triggering failsafe integration tests with Selenium Webdriver* recipe in
    [Chapter 6](ch06.html "Chapter 6. Testing Remotely"), *Testing Remotely*
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第6章](ch06.html "Chapter 6. Testing Remotely") *Testing Remotely* 中的*使用Selenium
    Webdriver触发故障安全集成测试* 配方
- en: Error Cost Escalation Through the Project Life Cycle at [http://ntrs.nasa.gov/search.jsp?R=20100036670](http://ntrs.nasa.gov/search.jsp?R=20100036670)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过项目生命周期的错误成本递增在[http://ntrs.nasa.gov/search.jsp?R=20100036670](http://ntrs.nasa.gov/search.jsp?R=20100036670)
- en: Data-driven testing
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据驱动的测试
- en: You can efficiently cover your testing surface if you use a data-driven testing
    approach. For example, when writing JMeter test plans, you can use the CSV configuration
    element to read in variables from text files. This allows JMeter to read out parameters
    from your CSV files, such as hostname, and transverse your infrastructure. This
    enables one test plan to attack many servers. The same is true for SoapUI; by
    adding an Excel data source and looping through the rows, you can test an application
    with many different test users who each have a range of roles. Data-driven testing
    has a tendency to be maintainable. During refactoring, instead of changing your
    test plan as the URLs in your application change, you can factor the URLs out
    into CSV files.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用数据驱动的测试方法，您可以有效地覆盖您的测试范围。例如，在编写JMeter测试计划时，您可以使用CSV配置元素从文本文件中读取变量。这允许JMeter从CSV文件中读取参数，例如主机名，并横跨您的基础设施。这使得一个测试计划可以攻击许多服务器。对于SoapUI也是如此；通过添加Excel数据源并循环遍历行，您可以测试具有许多不同测试用户的应用程序，每个用户都具有一系列角色。数据驱动的测试有一种易于维护的倾向。在重构期间，不需要像应用程序中的URL一样更改测试计划，可以将URL因素化为CSV文件。
- en: 'The following are a few relevant resources:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些相关资源：
- en: The *Creating JMeter test plans* recipe in [Chapter 6](ch06.html "Chapter 6. Testing
    Remotely"), *Testing Remotely*
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第6章](ch06.html "Chapter 6. Testing Remotely") *Testing Remotely* 中的*创建JMeter测试计划*
    配方
- en: The *Writing test plans with SoapUI* recipe in [Chapter 6](ch06.html "Chapter 6. Testing
    Remotely"), *Testing Remotely*
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第6章](ch06.html "Chapter 6. Testing Remotely") *Testing Remotely* 中的*使用SoapUI编写测试计划*
    配方
- en: The *Custom setup scripts for slave nodes* recipe in [Chapter 6](ch06.html "Chapter 6. Testing
    Remotely"), *Testing Remotely*
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第6章](ch06.html "Chapter 6. Testing Remotely") *Testing Remotely* 中的*用于从属节点的自定义设置脚本*
    配方
- en: Test cloud-based applications with Apache JMeter at [http://www.ibm.com/developerworks/cloud/library/cl-jmeter-restful/](http://www.ibm.com/developerworks/cloud/library/cl-jmeter-restful/)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第6章](ch06.html "Chapter 6. Testing Remotely") *Testing Remotely* 中的*使用Apache
    JMeter测试云应用程序* 配方
- en: The data-driven approach with SoapUI at [http://www.soapui.org/Data-Driven-Testing/functional-tests.html](http://www.soapui.org/Data-Driven-Testing/functional-tests.html)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SoapUI进行数据驱动方法的测试，[http://www.soapui.org/Data-Driven-Testing/functional-tests.html](http://www.soapui.org/Data-Driven-Testing/functional-tests.html)
- en: Learning from history
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 历史教训
- en: 'Teams tend to have their own coding habits. If a project fails because of the
    quality of the code, try to work out which code metrics would have stopped the
    code reaching production. Which mistakes are seen repeatedly? Take a look at the
    following examples:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 团队往往有自己的编码习惯。如果项目因代码质量而失败，请尝试弄清楚哪些代码指标会阻止代码达到生产环境。哪些错误经常出现？看看以下例子：
- en: '**Friday afternoon code failure**: We all are human and have secondary agendas.
    By the end of the week, programmers may have their minds focused elsewhere other
    than on the code. A small subset of programmers have their code quality affected,
    consistently injecting more defects towards the tail end of their roster. Consider
    scheduling a weekly Jenkins job that has harsher thresholds for quality metrics
    near the time of least attention.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**周五下午的代码失效**：我们都是人，都有次要议程。到了一周的末尾，程序员可能把注意力放在代码之外的地方。一小部分程序员会受到影响，他们的代码质量会受到影响，而在排班的最后阶段会不断注入更多的缺陷。考虑安排一个每周执行的
    Jenkins 作业，在注意力最不集中的时间附近设置更严格的质量指标阈值。'
- en: '**Code churn**: A sudden surge in code commits just before a product is being
    moved from an acceptance environment to product indicates that there is a last-minute
    rush. For some teams with a strong sense of code quality, this is also a sign
    of extra vigilance. For other less disciplined teams, this could be a naïve push
    towards destruction. If a project fails and QA is overwhelmed due to a surge of
    code changes, look at setting up a warning Jenkins job based on commit velocity.
    If necessary, you can display your own custom metrics. For more information, refer
    to the *Plotting alternative code metrics in Jenkins* recipe in [Chapter 3](ch03.html
    "Chapter 3. Building Software"), *Building Software*.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码变动**: 在将产品从验收环境移至产品环境之前，代码提交突然激增表明存在最后一刻的匆忙。对于一些有着较强代码质量意识的团队来说，这也是额外警惕的迹象。对于其他纪律性较差的团队来说，这可能是朝着毁灭的天真推进。如果项目失败，QA
    因代码变动激增而不堪重负，请考虑根据提交速度设置一个警告 Jenkins 作业。如有必要，您可以展示您自己的定制指标。有关更多信息，请参阅 [第 3 章](ch03.html
    "第 3 章. 构建软件") 中的 *构建软件* 中的 *在 Jenkins 中绘制替代代码指标* 配方。'
- en: '**A rogue coder**: Not all developers create code of the same uniform high
    quality. It is possible that there is consistent underachievement within a project.
    Rogue coders are caught by human code review. However, for a secondary defense
    consider setting thresholds on static code review reports from FindBugs and PMD.
    If a particular developer is not following accepted practice, builds will fail
    with great regularity. For more information, refer to the *Finding bugs with FindBugs*
    recipe in [Chapter 5](ch05.html "Chapter 5. Using Metrics to Improve Quality"),
    *Using Metrics to Improve Quality*.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个流氓程序员**：并非所有开发者都能创造出统一高质量的代码。在一个项目中可能存在持续的表现不佳情况。流氓程序员会被人工代码审查发现。然而，作为第二道防线，考虑在
    FindBugs 和 PMD 的静态代码审查报告中设置阈值。如果某个开发者没有遵循接受的做法，构建将会以极高的频率失败。有关更多信息，请参阅 [第 5 章](ch05.html
    "第 5 章. 使用指标提高质量") 中的 *使用指标提高质量* 中的 *使用 FindBugs 查找错误* 配方。'
- en: '**The GUI does not make sense**: Isn''t it painful when you build a web application
    only to be told at the last moment that the GUI does not quite interact in the
    way that the product owner expected? One solution is to write a mockup in FitNesse
    and surround it with automatic functional tests, using fixtures. When the GUI
    diverges from the planned workflow, then Jenkins will start shouting. For more
    information, refer to the *Activating FitNesse HtmlUnit fixtures* recipe in [Chapter
    6](ch06.html "Chapter 6. Testing Remotely"), *Testing Remotely*.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GUI 没有意义**: 当您构建一个 Web 应用程序，最后时刻却被告知 GUI 与产品所有者预期的交互方式不太一样时，这不是很痛苦吗？一个解决方案是在
    FitNesse 中编写一个模型，并用夹具将其包围起来进行自动功能测试。当 GUI 与计划的工作流程不符时，那么 Jenkins 将开始大声喊叫。有关更多信息，请参阅
    [第 6 章](ch06.html "第 6 章. 远程测试") 中的 *远程测试* 中的 *激活 FitNesse HtmlUnit 夹具* 配方。'
- en: '**Tracking responsibility**: Mistakes are made and lessons need to be learned.
    However, if there is no clear chain of documented responsibility, it is difficult
    to pin down who needs the learning opportunity. One approach is to structure the
    workflow in Jenkins through a series of connected jobs and use the promoted builds
    plugin to make sure the right group verifies at the right point. This methodology
    is also good for reminding the team of the short-term tasks. For more information,
    refer to the *Testing and then promoting builds* recipe in [Chapter 7](ch07.html
    "Chapter 7. Exploring Plugins"), *Exploring Plugins*.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跟踪责任**：错误总会发生，需要吸取教训。然而，如果没有清晰的责任链条记录，很难确定谁需要学习机会。一种方法是通过一系列连接的任务来构建 Jenkins
    中的工作流程，并使用推广构建插件确保正确的团队在正确的时点进行验证。这种方法也适用于提醒团队完成短期任务。有关更多信息，请参阅[第 7 章](ch07.html
    "Chapter 7. Exploring Plugins")中的*测试然后推广构建*配方，*探索插件*。'
- en: Considering test automation as a software project
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将测试自动化视为一个软件项目
- en: If you see automated testing as a software project and apply well-known principles,
    then you will save on maintenance costs and increase the reliability of tests.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将自动化测试视为一个软件项目，并应用已知原则，那么您将节省维护成本并提高测试的可靠性。
- en: 'The **Don''t Repeat Yourself** (**DRY**) principle is a great example. Under
    time pressure, it is tempting to cut and paste similar tests from one area of
    the code base to another: don''t. Projects evolve bending the shape of the code
    base; the tests need to be reusable to adapt to that change. Fragile tests push
    up maintenance costs. One concrete example discussed briefly in [Chapter 6](ch06.html
    "Chapter 6. Testing Remotely"), *Testing Remotely*, is the use of page objects
    with Selenium WebDriver. If you separate the code into pages, then when the workflow
    between pages changes most of the testing code remains intact.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**不要重复自己**（**DRY**）原则是一个很好的例子。在时间压力下，从代码库的一个区域复制并粘贴类似的测试是诱人的：不要这样做。项目发展会扭曲代码库的形状；测试需要可重用以适应这种变化。脆弱的测试会增加维护成本。一个具体的例子是在[第
    6 章](ch06.html "Chapter 6. Testing Remotely")中简要讨论的，*远程测试*，就是使用 Selenium WebDriver
    的页面对象。如果将代码分开成页面，那么当页面之间的工作流程发生变化时，大部分测试代码仍然保持不变。'
- en: For more information, refer to the *Activating more PMD rulesets* recipe in
    [Chapter 5](ch05.html "Chapter 5. Using Metrics to Improve Quality"), *Using Metrics
    to Improve Quality*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第 5 章](ch05.html "Chapter 5. Using Metrics to Improve Quality")中的*激活更多
    PMD 规则集*配方，*使用指标提高质量*。
- en: The **Keep It Simple Stupid** (**KISS**) principle implies keeping every aspect
    of the project as simple as possible. For example, it is possible to use real
    browsers for automated functional tests or the HtmlUnit framework to simulate
    a browser. The second choice avoids the need to set up an in-memory X server or
    VNC ([http://en.wikipedia.org/wiki/Virtual_Network_Computing](http://en.wikipedia.org/wiki/Virtual_Network_Computing))
    and will also keep track of browser versioning. These extra chores decrease the
    reliability of running a Jenkins job, but do increase the value of the tests.
    Therefore, for small projects, consider starting with HtmlUnit. For larger projects,
    the extra effort is worth the cost. For more detail, refer to the *Triggering
    failsafe integration tests with Selenium WebDriver* recipe in [Chapter 3](ch03.html
    "Chapter 3. Building Software"), *Building Software*.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**保持简单愚蠢**（**KISS**）原则意味着尽可能地保持项目的每个方面简单。例如，可以使用真实的浏览器进行自动化功能测试，也可以使用 HtmlUnit
    框架模拟浏览器。第二种选择避免了设置内存中的 X 服务器或 VNC（[http://en.wikipedia.org/wiki/Virtual_Network_Computing](http://en.wikipedia.org/wiki/Virtual_Network_Computing)）的需要，并且还会跟踪浏览器版本。这些额外的琐事会降低运行
    Jenkins 作业的可靠性，但会增加测试的价值。因此，对于小型项目，考虑从 HtmlUnit 开始。对于较大的项目，额外的努力是值得的。有关更详细信息，请参阅[第
    3 章](ch03.html "Chapter 3. Building Software")中的*使用 Selenium WebDriver 触发 failsafe
    集成测试*配方，*构建软件*。'
- en: Consider if you need a standalone integration server or if you can get away
    with using a Jetty server called during the integration goal in Maven. For more
    detail, refer to the *Configuring Jetty for integration tests* recipe in [Chapter
    3](ch03.html "Chapter 3. Building Software"), *Building Software*.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑是否需要一个独立的集成服务器，或者是否可以使用 Maven 中的集成目标调用 Jetty 服务器。有关更详细信息，请参阅[第 3 章](ch03.html
    "Chapter 3. Building Software")中的*为集成测试配置 Jetty*配方，*构建软件*。
- en: Visualize, visualize, visualize
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化，可视化，可视化
- en: When you have many projects scattered across multiple servers developed by different
    teams and individuals, it is difficult to understand the key metrics and emerging
    issues.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当您拥有由不同团队和个人开发的许多项目散布在多个服务器上时，要理解关键指标和出现的问题是困难的。
- en: With 80 percent of information going through to your brain being visual and
    your brain being an excellent pattern recognizer, one of the tricks to understand
    the underlying complexity is to visualize the results of your Jenkins jobs.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 80% 的信息通过您的大脑进行视觉处理，并且您的大脑是一个出色的模式识别器，理解底层复杂性的技巧之一是可视化您的 Jenkins 作业结果。
- en: SonarQube is an excellent starting point to visualize and gain an overview of
    the overall quality of projects and for delving into relationships and couplings
    between different areas of the code. For more information, refer to the *Integrating
    Jenkins with SonarQube* recipe in [Chapter 5](ch05.html "Chapter 5. Using Metrics
    to Improve Quality"), *Using Metrics to Improve Quality*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: SonarQube 是可视化和获取项目整体质量概览的绝佳起点，并且用于深入研究代码不同领域之间的关系和耦合。有关更多信息，请参阅[第五章](ch05.html
    "第五章。使用指标改善质量")中的 *将 Jenkins 与 SonarQube 集成* 配方，*使用指标改善质量*。
- en: However, if you have specialized requirements, you will need to build graph
    generation. Test results are usually stored in XML or CSV format. Once you accumulated
    the results, you can easily transform them with your language of choice.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您有专门的需求，您将需要构建图形生成。测试结果通常以 XML 或 CSV 格式存储。一旦积累了结果，您可以使用您选择的语言轻松地转换它们。
- en: R is a language designed for statisticians and scientists. After data is gathered,
    it is explored to try and discover which variables are related. For this purpose,
    the R community has created many helper graphic packages. For more detail, refer
    to the *Analyzing project data with the R plugin* recipe in [Chapter 5](ch05.html
    "Chapter 5. Using Metrics to Improve Quality"), *Using Metrics to Improve Quality*.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: R 是专为统计学家和科学家设计的语言。数据收集后，会尝试探索哪些变量是相关的。为此，R 社区创建了许多辅助图形包。有关详细信息，请参阅[第五章](ch05.html
    "第五章。使用指标改善质量")中的 *使用 R 插件分析项目数据* 配方，*使用指标改善质量*。
- en: The following graphic is a wordcloud summarizing this book's content. Within
    10 lines of code, the R language generated it. R uses a combination of the `tm`
    and `wordcloud` packages. You can download the code from the book's website.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图形是总结本书内容的词云。在 10 行代码内，R 语言生成了它。R 使用 `tm` 和 `wordcloud` 包的组合。您可以从本书的网站下载代码。
- en: '![Visualize, visualize, visualize](img/0082OS_08_01.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![可视化，可视化，可视化](img/0082OS_08_01.jpg)'
- en: 'The graphics libraries in R have great examples of what is achievable. The
    `example()` command placed around the function of your choice runs example code
    based on the function. The following code displays graphs for the `plot` and `hist`
    graphics functions. The code is included with the plots:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: R 中的图形库展示了令人瞩目的成果示例。将`example()`命令置于您选择的函数周围，基于该函数运行示例代码。以下代码显示了`plot`和`hist`图形函数的图形。代码包含在图形中：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once you have discovered a new, interesting function, you can explore its help
    further by searching the documentation. For example, typing `?rchisq` outputs
    the following information:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您发现了一个新的有趣函数，您可以通过搜索文档进一步探索其帮助。例如，键入 `?rchisq` 将输出以下信息：
- en: '`Density, distribution function, quantile function and random generation for
    the chi-squared (chi^2) distribution with df degrees of freedom and optional non-centrality
    parameter ncp.`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`密度、分布函数、卡方分布（chi^2）的分位函数和随机生成具有 df 自由度和可选非中心参数 ncp 的卡方分布。`'
- en: For more information, refer to the Simplifying *powerful visualizations using
    the R plugin* recipe in [Chapter 4](ch04.html "Chapter 4. Communicating Through
    Jenkins"), *Communicating Through Jenkins*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第四章](ch04.html "第四章。通过 Jenkins 进行通信")中简化 *使用 R 插件进行强大的可视化* 配方，*通过
    Jenkins 进行通信*。
- en: 'The following screenshot shows the graph generated by the `hist` function:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了`hist`函数生成的图形：
- en: '![Visualize, visualize, visualize](img/0082OS_08_03.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![可视化，可视化，可视化](img/0082OS_08_03.jpg)'
- en: The `rgl` package has a wide range of features for generating impressive graphics.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`rgl` 包具有生成引人注目图形的广泛功能。'
- en: 'To install the `rgl` package and its dependencies from the Ubuntu command line,
    type the following command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 Ubuntu 命令行安装 `rgl` 包及其依赖项，请键入以下命令：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To look at some examples, run the following commands from the R console:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看一些示例，请从 R 控制台运行以下命令：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will see output similar to the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到类似以下截图的输出：
- en: '![Visualize, visualize, visualize](img/0082OS_08_02.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![可视化，可视化，可视化](img/0082OS_08_02.jpg)'
- en: 'The following are a few relevant resources:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些相关资源：
- en: A full list of official R packages at [http://cran.r-project.org/web/packages/available_packages_by_name.html](http://cran.r-project.org/web/packages/available_packages_by_name.html)
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方 R 包的完整列表在[http://cran.r-project.org/web/packages/available_packages_by_name.html](http://cran.r-project.org/web/packages/available_packages_by_name.html)
- en: Documentation for the `rgl` package at [http://cran.r-project.org/web/packages/rgl/rgl.pdf](http://cran.r-project.org/web/packages/rgl/rgl.pdf)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[rgl](http://cran.r-project.org/web/packages/rgl/rgl.pdf)包的文档'
- en: Documentation for the `tm` package at [http://cran.r-project.org/web/packages/tm/tm.pdf](http://cran.r-project.org/web/packages/tm/tm.pdf)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[tm](http://cran.r-project.org/web/packages/tm/tm.pdf)包的文档'
- en: Documentation for the `wordcloud` package at [http://cran.r-project.org/web/packages/wordcloud/wordcloud.pdf](http://cran.r-project.org/web/packages/wordcloud/wordcloud.pdf)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[wordcloud](http://cran.r-project.org/web/packages/wordcloud/wordcloud.pdf)包的文档'
- en: Conventions are good
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定是好的
- en: By following conventions, you decrease the amount of maintenance and lower the
    number of defects hidden in your code. Coding conventions are particularly important
    when more than one developer is involved in writing the code. Conventions aid
    readability. Consistently indented code focuses the eye on poorly written sections.
    Well-structured variable names help avoid naming collisions between codes written
    in different parts of the organization. Structure in naming highlights the data
    that you can later move to configuration files and increases the opportunity for
    semi-automatic refactoring using regular expressions, for example, you can write
    a short piece of R code to visualize the number of global variables you have per
    module. The more global variables you have, the greater the risk of using the
    same variable for multiple purposes. Hence, the plot is a rough indicator of smelly
    code.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循约定，你会减少维护量并降低代码中隐藏的缺陷数量。当有多个开发人员参与编写代码时，编码约定尤为重要。约定有助于可读性。一致缩进的代码会让人注意到编写不好的部分。良好结构化的变量名有助于避免组织不同部分编写的代码之间的命名冲突。命名中的结构突出了以后可以移动到配置文件中的数据，并增加了使用正则表达式进行半自动重构的机会，例如，你可以编写一小段
    R 代码来可视化每个模块的全局变量数量。全局变量越多，多个用途使用相同变量的风险就越大。因此，图表是代码质量的一个粗略指标。
- en: 'The following are a few relevant resources:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些相关资源：
- en: The *Deliberately failing builds through log parsing* recipe in [Chapter 1](ch01.html
    "Chapter 1. Maintaining Jenkins"), *Maintaining Jenkins*
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第一章](ch01.html "Chapter 1. Maintaining Jenkins")中的*通过日志解析故意失败的构建*配方，*维护 Jenkins*'
- en: The *Plotting alternative code metrics in Jenkins* recipe in [Chapter 3](ch03.html
    "Chapter 3. Building Software"), *Building Software*
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第三章](ch03.html "Chapter 3. Building Software")中的*在 Jenkins 中绘制替代代码度量*配方，*构建软件*'
- en: The *Creating custom PMD rules* recipe in [Chapter 5](ch05.html "Chapter 5. Using
    Metrics to Improve Quality"), *Using Metrics to Improve Quality*
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第五章](ch05.html "Chapter 5. Using Metrics to Improve Quality")中的*创建自定义 PMD
    规则*配方，*使用度量来提高质量*'
- en: Google's code of conventions for Java programmers at [https://google-styleguide.googlecode.com/svn/trunk/javaguide.html](https://google-styleguide.googlecode.com/svn/trunk/javaguide.html)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 程序员的谷歌代码约定在[https://google-styleguide.googlecode.com/svn/trunk/javaguide.html](https://google-styleguide.googlecode.com/svn/trunk/javaguide.html)
- en: Coding and naming conventions for the GCC project at [https://gcc.gnu.org/codingconventions.html](https://gcc.gnu.org/codingconventions.html)
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCC 项目的编码和命名约定在[https://gcc.gnu.org/codingconventions.html](https://gcc.gnu.org/codingconventions.html)
- en: Test frameworks and commercial choices are increasing
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试框架和商业选择不断增加
- en: 'In the past few years, there has been a lot of improvement in test automation.
    One example is that static code review is being used more thoroughly for security
    checks. SonarQube is an all-encompassing reporter of project quality and new frameworks
    are emerging to improve on the old. Here are a few implications:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年中，测试自动化方面取得了很多进展。一个例子是静态代码审查被更全面地用于安全检查。SonarQube是一个全面报告项目质量的工具，新框架正在出现以改进旧框架。以下是一些含义：
- en: '**SonarQube**: This measures project quality. Its community is active. SonarQube
    will evolve faster than the full range of Jenkins quality metrics plugins. Consider
    using Jenkins plugins for early warnings of negative quality changes and SonarQube
    for in-depth reporting. For more information, refer to the *Integrating Jenkins
    with SonarQube* recipe in [Chapter 5](ch05.html "Chapter 5. Using Metrics to Improve
    Quality"), *Using Metrics to Improve Quality*.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SonarQube**: 这可以衡量项目质量。其社区活跃。SonarQube 将比 Jenkins 的全部质量度量插件更快地发展。考虑使用 Jenkins
    插件来提前警告负面质量变化，使用 SonarQube 进行深度报告。有关更多信息，请参阅 [第 5 章](ch05.html "第 5 章。使用指标改进质量")
    *使用指标改进质量* 中的 *将 Jenkins 与 SonarQube 集成* 配方。'
- en: '**Static code review tools**: These are improving. FindBugs has moved comment-making
    into the cloud. More bug pattern detectors are being developed. Static code review
    tools are getting better at finding security defects. Expect significantly improved
    tools over time, possibly just by updating the version of your current tools.
    For more detail, refer to the *Finding security defects with FindBugs* recipe
    in [Chapter 5](ch05.html "Chapter 5. Using Metrics to Improve Quality"), *Using
    Metrics to Improve Quality*.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**静态代码审查工具**: 这些正在改进。FindBugs 已将评论功能移到云中。正在开发更多的错误模式检测器。静态代码审查工具在查找安全性缺陷方面变得更加出色。随着时间的推移，您可能会期望显着改进的工具，可能只需更新当前工具的版本即可。有关更多详细信息，请参阅
    [第 5 章](ch05.html "第 5 章。使用指标改进质量") *使用指标改进质量* 中的 *使用 FindBugs 查找安全性缺陷* 配方'
- en: '**Code search**: Wouldn''t it be great if code search engines ranked the position
    in their search results of a particular piece of code, based on the defect density
    or coding practice? You could then search a wide range of open source products
    for best practices. You could search for defects to remove and then send patches
    back to the code''s communities.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码搜索**: 如果代码搜索引擎根据缺陷密度或编码实践在其搜索结果中对特定代码片段的位置进行排名，那不是很好吗？然后，您可以搜索广泛的开源产品以找到最佳实践。您可以搜索缺陷以删除，然后将补丁发送回代码的社区。'
- en: '**The cloud**: CloudBees allows you to create on-demand slave nodes in the
    cloud. Expect more kinds of cloud-like integrations around Jenkins.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云**: CloudBees 允许您在云中创建按需的从节点。预计在 Jenkins 周围会有更多类似云的集成。'
- en: For more information about SonarQube features and the CloudBees cloud service,
    visit [http://www.sonarqube.org/features/](http://www.sonarqube.org/features/)
    and [http://www.CloudBees.com/products/dev](http://www.CloudBees.com/products/dev).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 SonarQube 功能和 CloudBees 云服务的更多信息，请访问 [http://www.sonarqube.org/features/](http://www.sonarqube.org/features/)
    和 [http://www.CloudBees.com/products/dev](http://www.CloudBees.com/products/dev)。
- en: Offsetting work to Jenkins nodes
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将工作分配到 Jenkins 节点
- en: Thanks to its wealth of plugins, Jenkins can easily connect to many types of
    system. Therefore, Jenkins usage can grow virally in an organization. Testing
    and JavaDoc generation takes up system resources. A master Jenkins is best used
    to report back quickly on jobs distributed across a range of Jenkins nodes. This
    approach makes it easier to analyze where the failure lies in the infrastructure.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其丰富的插件，Jenkins 可以轻松连接到许多类型的系统。因此，在组织中，Jenkins 的使用可能会像病毒一样扩散。测试和 JavaDoc 生成会占用系统资源。最好使用主
    Jenkins 快速报告分布在一系列 Jenkins 节点上的作业。这种方法使得更容易分析失败在基础架构中的位置。
- en: If you are using JMeter for your performance tests at scale, consider offloading
    from Jenkins to a cloud service such as BlazeMeter ([http://blazemeter.com/](http://blazemeter.com/)).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在规模上使用 JMeter 进行性能测试，请考虑将其从 Jenkins 转移到诸如 BlazeMeter ([http://blazemeter.com/](http://blazemeter.com/))
    等云服务。
- en: For functional testing with Selenium, there is also a wide range of cloud services.
    Consider using them not only because of load, but also because of the use of a
    wide range of browser types and versions offered. One example of a commercial
    service is Sauce Labs ([https://saucelabs.com/](https://saucelabs.com/)). It is
    worth periodically reviewing the market for new cloud services.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用 Selenium 进行功能测试，也有许多云服务可供选择。考虑使用它们不仅仅是因为负载，还因为它们提供了广泛的浏览器类型和版本。一个商业服务的例子是
    Sauce Labs ([https://saucelabs.com/](https://saucelabs.com/))。定期审查市场以了解新的云服务是值得的。
- en: 'The following are a few relevant resources:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些相关资源：
- en: The *Monitoring via JavaMelody* recipe in [Chapter 1](ch01.html "Chapter 1. Maintaining
    Jenkins"), *Maintaining Jenkins*
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第 1 章](ch01.html "第 1 章。维护 Jenkins") *维护 Jenkins* 中的 *通过 JavaMelody 进行监控*
    配方
- en: The *Creating multiple Jenkins nodes* recipe in [Chapter 6](ch06.html "Chapter 6. Testing
    Remotely"), *Testing Remotely*
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Custom setup scripts for slave nodes* recipe in [Chapter 6](ch06.html "Chapter 6. Testing
    Remotely"), *Testing Remotely*
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Starving QA/integration servers
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A few hundred years ago, coal miners would die because of the build-up of methane
    and carbon monoxide in the mines. To give early warning of this situation, canaries
    were brought into the mines. Being more sensitive, the birds would faint first,
    giving the miners enough time to escape. Consider doing the same for your integration
    servers in your acceptance environment: deliberately starve them of resources.
    If they fall over, you will have enough time to review before watching the explosion
    in production.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: For more information, refer to the *Monitoring via JavaMelody* recipe in [Chapter
    1](ch01.html "Chapter 1. Maintaining Jenkins"), *Maintaining Jenkins*.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Reading the change log of Jenkins
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Jenkins practices what it preaches. Minor version number releases occur about
    once a week. New features appear, bugs are resolved, and new bugs introduced.
    In general, the great majority of changes lead to improvement, but a few do not.
    However, when introduced, bugs are generally caught early and removed quickly.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: Before updating Jenkins for new features and potential stability glitches, it's
    worth reading the changelog ([http://jenkins-ci.org/changelog](http://jenkins-ci.org/changelog)).
    Occasionally, you might want to speed up a deployment to production because of
    a security issue or miss a version due to a stability blooper.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you are focused on stability rather than feature richness, consider using
    the older but more stable long-term support release. For more details visit: [https://wiki.jenkins-ci.org/display/JENKINS/LTS+Release+Line](https://wiki.jenkins-ci.org/display/JENKINS/LTS+Release+Line).'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding human bottlenecks
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The simpler your testing environment is, the less skill you'll need to maintain
    it. As you learn to use the plugins and explore the potential of new tools and
    scripting languages, the more knowledge the organization needs to maintain a stable
    system. If you wish to go on holidays without random text messages asking for
    advice, make sure that your knowledge is transferred to at least a second person.
    This sounds obvious, but in the rush of your daily load, this principle is often
    forgotten or put to one side.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: One of the easiest ways to share knowledge is to send a couple of developers
    off to the same conferences and events together ([https://www.CloudBees.com/company/events/juc](https://www.CloudBees.com/company/events/juc)).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: This is where managers play a significant role in knowledge dissemination. They
    need to plan in time and activities for the sharing of knowledge, rather than
    expecting it to happen by magic.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding groupthink
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is easy to be perfect on paper, defining the importance of a solid set of
    JavaDocs and unit tests. However, the real world on its best days is chaotic.
    Project momentum, motivated by the need to deliver, is an elusive force to push
    back against.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在纸上变得完美很容易，定义了一套完整的 JavaDocs 和单元测试的重要性。然而，现实世界在最好的日子里也是混乱的。由于需要交付而产生的项目动力是一股难以抵御的力量。
- en: Related to project momentum is the potential of groupthink ([http://en.wikipedia.org/wiki/Groupthink](http://en.wikipedia.org/wiki/Groupthink))
    by the project team or resource owners. If the team has the wrong collective attitude,
    as a quality assurance professional it is much harder to inject hard-learnt realism.
    Quality assurance is not only about finding and capturing defects as early as
    possible, it is also about injecting objective criteria for success or failure
    into the different phases of a project's cycle.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 与项目动力相关的是项目团队或资源所有者可能发生的群体思维现象。如果团队有错误的集体态度，作为质量保证专业人员，注入已经学到的现实主义会更加困难。质量保证不仅仅是尽早发现和捕获缺陷，还要在项目周期的不同阶段注入客观的成功或失败标准。
- en: Consider adding measurable criteria into the Jenkins build. Obviously, if the
    code fails to compile, then the product should not go to acceptance and production.
    Less obviously, are the rules around code coverage of unit tests worth defending
    in release management meetings?
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑将可衡量的标准添加到 Jenkins 构建中。显然，如果代码无法编译，则产品不应提交给验收和生产。不太明显的是，关于单元测试代码覆盖率的规则是否值得在发布管理会议上辩护？
- en: Try getting the whole team involved at the start of the project before any coding
    has taken place and agree on metrics that fail a build. One approach is to compare
    a small successful project to a small failed project. If later there is a disagreement,
    then the debate is about process and numbers rather than personality.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目开始之前让整个团队参与，并在任何编码之前就达成一致，同意构建失败的度量标准。一种方法是将一个小成功项目与一个小失败项目进行比较。如果后来发生争议，那么争论的焦点就是流程和数字，而不是个性。
- en: For more information, refer to the *Looking for "smelly code" through code coverage*
    recipe in [Chapter 5](ch05.html "Chapter 5. Using Metrics to Improve Quality"),
    *Using Metrics to Improve Quality*.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参阅 [第五章](ch05.html "Chapter 5. Using Metrics to Improve Quality") *使用指标提高质量*
    中的 *通过代码覆盖寻找“有味道的代码”* 配方。
- en: Training and community
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 培训和社区
- en: 'Training and participating in Jenkins and the wider tester community are vital
    for long-term learning paths that lead to optimized environments. Here are a few
    relevant resources:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 参与 Jenkins 和更广泛的测试人员社区的培训对于通向优化环境的长期学习路径至关重要。以下是一些相关资源：
- en: CloudBees is a commercial company working with Jenkins cloud services. At the
    time of writing this book, CloudBees' CTO is Kohsuke Kawaguchi, the father of
    Jenkins. CloudBees provides a number of training opportunities and conference
    events. The company's training information can be found at [http://www.CloudBees.com/jenkins/training](http://www.CloudBees.com/jenkins/training).
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudBees 是一家与 Jenkins 云服务合作的商业公司。在撰写本书时，CloudBees 的首席技术官是 Jenkins 的创始人 Kawaguchi
    Kohsuke。CloudBees 提供了许多培训机会和会议活动。该公司的培训信息可在[http://www.CloudBees.com/jenkins/training](http://www.CloudBees.com/jenkins/training)找到。
- en: When starting with an online community, it is wise to first review and participate
    in the mailing lists. This allows you to judge your own standard and gradually
    become recognized. The mailing lists are summarized at [http://jenkins-ci.org/content/mailing-lists](http://jenkins-ci.org/content/mailing-lists).
    Once you are confident that you can productively participate, consider progressing
    to real-time interactions through the IRC channel at [https://wiki.jenkins-ci.org/display/JENKINS/IRC+Channel](https://wiki.jenkins-ci.org/display/JENKINS/IRC+Channel).
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当开始参与在线社区时，首先审查并参与邮件列表是明智的选择。这样可以评估自己的水平，并逐渐被认可。邮件列表总结在[http://jenkins-ci.org/content/mailing-lists](http://jenkins-ci.org/content/mailing-lists)。一旦你有信心可以有效参与，请考虑通过
    IRC 频道实时交流，链接在[https://wiki.jenkins-ci.org/display/JENKINS/IRC+Channel](https://wiki.jenkins-ci.org/display/JENKINS/IRC+Channel)。
- en: The ISTQB software certification body keeps example documentation on its website
    for its software tester exams. You can find the documentation at [http://www.istqb.org/downloads.html](http://www.istqb.org/downloads.html).
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ISTQB 软件认证机构在其网站上为软件测试人员考试提供示例文档。你可以在[http://www.istqb.org/downloads.html](http://www.istqb.org/downloads.html)找到这些文档。
- en: The slideshow from Kohsuke Kawaguchi explaining the funnel of participation
    as a method to build a community is available at [http://www.slideshare.net/kohsuke/building-developer-community](http://www.slideshare.net/kohsuke/building-developer-community).
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visibly rewarding successful developers
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a call to resource managers. Developers and testers specialize in technical
    matters that are at times hard to explain to those outside their problem domain.
    To reach the highest level of expertise and to keep track of trends requires time
    (sometimes a lot of their own time), energy, and motivation. Undermining their
    motivation or underestimating the time required to build their skills will ultimately
    decrease the quality of your products and will cost more in the end. Consider
    what you can do to support them, from pay scale jumps, learning paths, reserving
    time in the week for developers to read and practice new ideas, to conferences
    and gadgets. For example, after a pay rise, Kickstarter ([https://www.kickstarter.com/](https://www.kickstarter.com/))
    is a great place to look for motivational rewards and to stimulate the developers'
    creative muscle.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: Finally, do not make developers do non-development stuff. In general, they need
    to be highly focused on the complex task of understanding detailed requirements
    and turning them into rock-solid code.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Stability and code maintenance
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book mentions many plugins and a number of languages and testing tools.
    It is OK to experiment in development and then push to acceptance, but the more
    diversity you have in production, the more skills are needed to maintain and especially
    to write a fluent workflow. Subtle choices, such as pinning Jenkins plugins at
    known versions and keeping the production version of your Jenkins server stable
    for fixed periods, help with up-time. Just as importantly, monitoring the load
    and offsetting most of the jobs away from the master Jenkins ensues a high degree
    of determinism in the timing of the jobs.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: To limit job maintenance implies keeping configuration simple and similar. This
    is not realistic in a complex organization with a high degree of diversity. Using
    a test-driven approach helps; conventions also simplify configuration. As the
    diversity increases, communicating and agreeing the conventions becomes important.
    Simple strategies—such as one source of documentation wisdom (for example, a communal
    wiki), regular lessons, learned meetings, and weekly reviews—become vital.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Resources on quality assurance
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is a mistake to consider testing to be the sole responsibility of the testers.
    Coders should feel responsible for the quality of their code, architects for the
    quality of their designs, managers for the ethos of the project and project planning,
    and so on. Here are some examples of a range of practical resources on actionable
    quality assurance—this is not just for the testers:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: There are many wise words on avoiding classic mistakes based on years of hard
    knocks and bruising. One well thought-out set of comments can be found at [http://www.exampler.com/testing-com/writings/classic/mistakes.html](http://www.exampler.com/testing-com/writings/classic/mistakes.html).
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If unit tests cover your code thoroughly, then if you break a piece of code
    during an update, you will know this quickly during the next build. JUnit is arguably
    the most well-known framework in this genre. You can find the framework's home
    page at [http://junit.org/](http://junit.org/).
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Jenkins home page ([http://jenkins-ci.org/](http://jenkins-ci.org/)) covers
    a wealth of information around the practicalities of configuration, plugins, the
    community, and hints and tips.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Open Web Application Security Project** (**OWASP**) is a great source
    of information and tools on security testing. OWASP is focused on improving the
    security of software. Its mission is to make software security visible so that
    individuals and organizations worldwide can make informed decisions about true
    software security risks. You can find the OWASP home page at [https://www.owasp.org/index.php/Main_Page](https://www.owasp.org/index.php/Main_Page).
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you want a hardcopy or e-book of any of the OWASP material, then you can
    download or buy from Lulu ([http://www.lulu.com/spotlight/owasp](http://www.lulu.com/spotlight/owasp)).
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can find OWASP's security testing guide at [https://www.owasp.org/index.php/OWASP_Testing_Guide_v4_Table_of_Contents](https://www.owasp.org/index.php/OWASP_Testing_Guide_v4_Table_of_Contents).
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One popular example of a commercial company selling Jenkins infrastructure in
    the cloud is Sauce Labs ([https://docs.saucelabs.com/ci-integrations/jenkins/](https://docs.saucelabs.com/ci-integrations/jenkins/)).
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are a number of excellent and free-to-download software testing magazines.
    The Professional Tester is one such example and is available at [http://www.professionaltester.com/](http://www.professionaltester.com/).
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uTest is the world's largest open community dedicated to professional testers
    and software testing. Its sole purpose is to promote and advance the testing profession,
    and the people who do this vital work. For more information, visit [http://www.utest.com/about-us](http://www.utest.com/about-us).
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are more and more free MOOC courses and a number of them support the learning
    paths of software testers. You can find a full list of currently running MOOC
    courses at [https://www.mooc-list.com/](https://www.mooc-list.com/).
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are many hundreds of excellent blogs centered on testing. Martin Fowler's
    blog ([http://martinfowler.com/](http://martinfowler.com/)) is a great resource
    and the father of Jenkins, Kohsuke Kawaguchi, has another ([http://kohsuke.org/](http://kohsuke.org/)).
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Static code review allows jobs to find a wide range of issues without human
    intervention. A set of articles I wrote about static code review for the Free
    Software Magazine is available at [http://www.freesoftwaremagazine.com/articles/destroy_annoying_bugs_part_1](http://www.freesoftwaremagazine.com/articles/destroy_annoying_bugs_part_1).
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And there's always more
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are always more points to consider. Here are a few of the cherry-picked
    ones:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '**Blurring the team boundary**: Tools such as FitNesse and Selenium IDE make
    it easier for non-Java programmers to write tests. The easier it is to write tests,
    the more likely it is that the relevant tests capture the quintessential details
    of user expectations. Look for new Jenkins plugins that support tools that lower
    the learning curve. For more information, refer to the *Running Selenium IDE tests*
    recipe in [Chapter 6](ch06.html "Chapter 6. Testing Remotely"), *Testing Remotely*.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deliberately adding defects**: By rotating through Jenkins builds and then
    deliberately adding code that fails, you can test the alertness and response time
    of the team.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Warning**'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Before adding defects, make sure that the team has agreed to the process or
    you might be getting angry e-mails late at night.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Increasing code coverage with link crawlers and security scanners**: A fuzzer
    discovers the inputs of the application it is attacking and then fires off unexpected
    input. Not only is this good for security testing, but also for boundary testing.
    If your server returns an unexpected error, then use a fuzzer to trigger a more
    thorough review. Fuzzers and link crawlers are a cheap way to increase the code
    coverage of your tests. For more information, refer to the *Finding 500 errors
    and XSS attacks in Jenkins through fuzzing* recipe in [Chapter 2](ch02.html "Chapter 2. Enhancing
    Security"), *Enhancing Security*.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In your development environment, periodically review for new Jenkin plugins.
    The number of plugins is increasing rapidly and there may be new ways for Jenkins
    to connect different parts of your organization's infrastructure to Continuous
    Integration.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Final comments
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The combination of Jenkins with aggressive automated testing acts as a solid
    safety net around coding projects. The recipes in this book support best practices.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Producing quality requires great attention to detail. Jenkins can pay attention
    to many of the details and then shout loudly when violations occur.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Each project is different and there are many ways to structure the workflow.
    Luckily, with over 1,000 plugins and the number rising rapidly, Jenkins is flexible
    enough to adapt to even the most obscure infrastructures.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: If you do not have the exact plugin that you want, then it is straightforward
    for Java programmers to adapt or create their own plugin.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Without a thriving open source Jenkins community, none of this would be possible.
    Jenkins is yet another positive example of the open source mentality working in
    practice. If you agree, consider participating.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 没有蓬勃发展的开源 Jenkins 社区，这一切都不可能实现。Jenkins 是开源精神在实践中的又一个积极例证。如果您同意，请考虑参与。
