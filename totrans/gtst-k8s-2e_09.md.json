["```\n$ kubectl config unset contexts $ kubectl config unset clusters\n\n```", "```\n$ kubectl config get-contexts $ kubectl config get-clusters\n\n```", "```\n$ sudo cp kubernetes/client/bin/kubefed /usr/local/bin\n$ sudo chmod +x /usr/local/bin/kubefed\n\n```", "```\n$ cd kubernetes/cluster/\n\n```", "```\n$ export KUBERNETES_PROVIDER=aws\n$ export OVERRIDE_CONTEXT=awsk8s\n$ ./kube-up.sh\n\n```", "```\n$ export KUBERNETES_PROVIDER=gce\n$ export OVERRIDE_CONTEXT=gcek8s\n$ ./kube-up.sh\n\n```", "```\n$ kubectl config get-contexts \n\n```", "```\n$ kubectl config use-context gcek8s\n$ kubefed init master-control --host-cluster-context=gcek8s --dns-zone-name=\"mydomain.com\" \n\n```", "```\n$ kubectl config get-contexts \n\n```", "```\n$ kubectl get pods --namespace=federation-system\n\n```", "```\n$ kubectl config use-context master-control\n\n```", "```\n$ kubefed join gcek8s --host-cluster-context=gcek8s --secret-name=fed-secret-gce\n$ kubefed join awsk8s --host-cluster-context=gcek8s --secret-name=fed-secret-aws\n\n```", "```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: node-js-deploy\n  labels:\n    name: node-js-deploy\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        name: node-js-deploy\n    spec: \n      containers: \n      - name: node-js-deploy \n        image: jonbaier/pod-scaling:latest \n        ports: \n        - containerPort: 80\n\n```", "```\n$ kubectl create -f node-js-deploy-fed.yaml\n\n```", "```\n$ kubectl get pods\n\n```", "```\n$ kubectl get deployments\n$ kubectl describe deployments node-js-deploy \n\n```", "```\n$ kubectl get events\n\n```", "```\n$ kubectl config use-context awsk8s\n$ kubectl get pods\n\n```", "```\n$ kubectl config use-context gcek8s\n$ kubectl get pods\n\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: my-application-config\n  namespace: default\ndata:\n  backend-service.url: my-backend-service\n\n```", "```\n$ kubectl config use-context master-control\n\n```", "```\n$ kubectl create -f configmap-fed.yaml\n\n```", "```\n$ kubectl get configmap my-application-config -o yaml\n\n```", "```\napiVersion: extensions/v1beta1\nkind: ReplicaSet\nmetadata:\n  name: node-js-rs\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      name: node-js-configmap-rs\n  template:\n    metadata:\n      labels:\n        name: node-js-configmap-rs\n    spec:\n      containers:\n      - name: configmap-pod\n        image: jonbaier/node-express-info:latest\n        ports:\n        - containerPort: 80\n          name: web\n        volumeMounts:\n        - name: configmap-volume\n          mountPath: /etc/config\n      volumes:\n      - name: configmap-volume\n        configMap:\n          name: my-application-config\n\n```", "```\n$ kubectl config use-context gcek8s\n\n```", "```\n$ kubectl get configmaps\n\n```", "```\n$ kubectl get pods\n\n```", "```\n$ kubectl exec -it node-js-rs-6g7nj bash\n\n```", "```\n$ cd /etc/config\n$ ls\n\n```", "```\n$ echo $(cat backend-service.url)\n\n```"]