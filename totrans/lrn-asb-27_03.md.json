["```\nname: 'This is the name'\n```", "```\n- 'item1' \n- 'item2' \n- 'item3' \n```", "```\nitem: \n  name: TheName \n  location: TheLocation \n```", "```\npeople:\n  - name: Albert \n    number: +1000000000 \n    country: USA \n  - name: David \n    number: +44000000000 \n    country: UK \n```", "```\n$ ansible all -i HOST, -m ping \n```", "```\n$ ansible all -i test01.fale.io, -m ping \n```", "```\ntest01.fale.io | SUCCESS => {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n```", "```\n$ ansible --help \n```", "```\nUsage: ansible <host-pattern> [options]\n\nOptions:\n  -i INVENTORY, --inventory=INVENTORY, --inventory-file=INVENTORY\n                        specify inventory host path or comma separated host\n                        list. --inventory-file is deprecated\n  -m MODULE_NAME, --module-name=MODULE_NAME\n                        module name to execute (default=command)\n```", "```\n$ ansible all -i test01.fale.io, -m shell -a '/bin/echo hello ansible!' \n```", "```\ntest01.fale.io | CHANGED | rc=0 >>\nhello ansible!\n```", "```\nUsage: ansible <host-pattern> [options]\nOptions:\n  -a MODULE_ARGS, --args=MODULE_ARGS\n                        module arguments\n```", "```\n\n- hosts: all \n  remote_user: vagrant\n  tasks: \n    - name: Ensure the HTTPd package is installed \n      yum: \n        name: httpd \n        state: present \n      become: True \n    - name: Ensure the HTTPd service is enabled and running \n      service: \n        name: httpd \n        state: started \n        enabled: True \n      become: True\n```", "```\n$ ansible-playbook -i HOST, setup_apache.yaml\n```", "```\n$ ansible-playbook -i test01.fale.io, setup_apache.yaml \n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [test01.fale.io]\n\nTASK [Ensure the HTTPd package is installed] *************************\nchanged: [test01.fale.io]\n\nTASK [Ensure the HTTPd service is enabled and running] ***************\nchanged: [test01.fale.io]\n\nPLAY RECAP ***********************************************************\ntest01.fale.io                : ok=3 changed=2 unreachable=0 failed=0\n```", "```\n$ rpm -qa | grep httpd \n```", "```\nhttpd-tools-2.4.6-80.el7.centos.1.x86_64\nhttpd-2.4.6-80.el7.centos.1.x86_64\n```", "```\n$ systemctl status httpd\n```", "```\nhttpd.service - The Apache HTTP Server\n Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)\n Active: active (running) since Tue 2018-12-04 15:11:03 UTC; 29min ago\n Docs: man:httpd(8)\n man:apachectl(8)\n Main PID: 604 (httpd)\n Status: \"Total requests: 0; Current requests/sec: 0; Current traffic: 0 B/sec\"\n CGroup: /system.slice/httpd.service\n ├─604 /usr/sbin/httpd -DFOREGROUND\n ├─624 /usr/sbin/httpd -DFOREGROUND\n ├─626 /usr/sbin/httpd -DFOREGROUND\n ├─627 /usr/sbin/httpd -DFOREGROUND\n ├─628 /usr/sbin/httpd -DFOREGROUND\n └─629 /usr/sbin/httpd -DFOREGROUND \n```", "```\nPLAY [all] ***********************************************************\n```", "```\nTASK [Gathering Facts] ***********************************************\nok: [test01.fale.io]\n```", "```\nTASK [Ensure the HTTPd package is installed] *************************\nchanged: [test01.fale.io]\n\nTASK [Ensure the HTTPd service is enabled and running] ***************\nchanged: [test01.fale.io]\n```", "```\nPLAY RECAP ***********************************************************\ntest01.fale.io : ok=3 changed=2 unreachable=0 failed=0\n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [test01.fale.io]\n\nTASK [Ensure the HTTPd package is installed] *************************\nok: [test01.fale.io]\n\nTASK [Ensure the HTTPd service is enabled and running] ***************\nok: [test01.fale.io]\n\nPLAY RECAP ***********************************************************\ntest01.fale.io                : ok=3 changed=0 unreachable=0 failed=0\n```", "```\nPLAY RECAP ***********************************************************\ntest01.fale.io                : ok=3 changed=2 unreachable=0 failed=0\n```", "```\nPLAY RECAP ***********************************************************\ntest01.fale.io                : ok=3 changed=0 unreachable=0 failed=0\n```", "```\n--- \n- hosts: all \n  remote_user: vagrant\n  tasks: \n    - yum: \n        name: httpd \n        state: present \n      become: True \n    - service: \n        name: httpd \n        state: started \n        enabled: True \n      become: True\n```", "```\n$ ansible-playbook -i test01.fale.io, setup_apache_no_com.yaml\n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [test01.fale.io]\n\nTASK [yum] ***********************************************************\nok: [test01.fale.io]\n\nTASK [service] *******************************************************\nok: [test01.fale.io]\n\nPLAY RECAP ***********************************************************\ntest01.fale.io                : ok=3 changed=0 unreachable=0 failed=0\n```", "```\nUsing /etc/ansible/ansible.cfg as config file\ntest01.fale.io | SUCCESS => {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n```", "```\nansible 2.7.2\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/home/fale/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /bin/ansible\n  python version = 2.7.15 (default, Oct 15 2018, 15:24:06) [GCC 8.1.1 20180712 (Red Hat 8.1.1-5)]\nUsing /etc/ansible/ansible.cfg as config file\nMETA: ran handlers\ntest01.fale.io | SUCCESS => {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\nMETA: ran handlers\nMETA: ran handlers\n```", "```\nansible 2.7.2\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/home/fale/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /bin/ansible\n  python version = 2.7.15 (default, Oct 15 2018, 15:24:06) [GCC 8.1.1 20180712 (Red Hat 8.1.1-5)]\nUsing /etc/ansible/ansible.cfg as config file\nParsed test01.fale.io, inventory source with host_list plugin\nMETA: ran handlers\n<test01.fale.io> ESTABLISH SSH CONNECTION FOR USER: None\n<test01.fale.io> SSH: EXEC ssh -C -o ControlMaster=auto -o \n...\n```", "```\n- hosts: all \n  remote_user: vagrant\n  tasks: \n    - name: Set variable 'name' \n      set_fact: \n        name: Test machine \n    - name: Print variable 'name' \n      debug: \n        msg: '{{ name }}' \n```", "```\n$ ansible-playbook -i test01.fale.io, variables.yaml\n```", "```\nPLAY [all] *********************************************************\n\nTASK [Gathering Facts] *********************************************\nok: [test01.fale.io]\n\nTASK [Set variable 'name'] *****************************************\nok: [test01.fale.io]\n\nTASK [Print variable 'name'] ***************************************\nok: [test01.fale.io] => {\n \"msg\": \"Test machine\"\n}\n\nPLAY RECAP *********************************************************\ntest01.fale.io              : ok=3 changed=0 unreachable=0 failed=0 \n```", "```\n$ ansible all -i HOST, -m setup \n```", "```\n$ ansible all -i test01.fale.io, -m setup \n```", "```\ntest01.fale.io | SUCCESS => {\n    \"ansible_facts\": {\n        \"ansible_all_ipv4_addresses\": [\n            \"192.168.121.190\"\n        ], \n        \"ansible_all_ipv6_addresses\": [\n            \"fe80::5054:ff:fe93:f113\"\n        ], \n        \"ansible_apparmor\": {\n            \"status\": \"disabled\"\n        }, \n        \"ansible_architecture\": \"x86_64\", \n        \"ansible_bios_date\": \"04/01/2014\", \n        \"ansible_bios_version\": \"?-20180531_142017-buildhw-08.phx2.fedoraproject.org-1.fc28\", \n        ...\n```", "```\n\n- hosts: all\n  remote_user: vagrant\n  tasks: \n    - name: Print OS and version\n      debug:\n        msg: '{{ ansible_distribution }} {{ ansible_distribution_version }}'\n```", "```\n$ ansible-playbook -i test01.fale.io, setup_variables.yaml\n```", "```\nPLAY [all] *********************************************************\n\nTASK [Gathering Facts] *********************************************\nok: [test01.fale.io]\n\nTASK [Print OS and version] ****************************************\nok: [test01.fale.io] => {\n \"msg\": \"CentOS 7.5.1804\"\n}\n\nPLAY RECAP *********************************************************\ntest01.fale.io              : ok=2 changed=0 unreachable=0 failed=0 \n```", "```\nUsage: ansible <host-pattern> [options]\n\nOptions:\n  -e EXTRA_VARS, --extra-vars=EXTRA_VARS\n                        set additional variables as key=value or YAML/JSON, if\n                        filename prepend with @\n```", "```\n---\n- hosts: all\n  remote_user: vagrant\n  tasks:\n    - name: Print variable 'name'\n      debug:\n        msg: '{{ name }}'\n```", "```\n$ ansible-playbook -i test01.fale.io, cli_variables.yaml -e 'name=test01'\n```", "```\n [WARNING]: Found variable using reserved name: name\n\nPLAY [all] *********************************************************\n\nTASK [Gathering Facts] *********************************************\nok: [test01.fale.io]\n\nTASK [Print variable 'name'] ***************************************\nok: [test01.fale.io] => {\n \"msg\": \"test01\"\n}\n\nPLAY RECAP *********************************************************\ntest01.fale.io              : ok=2 changed=0 unreachable=0 failed=0 \n```", "```\n$ ansible-playbook -i test01.fale.io, cli_variables.yaml\n```", "```\nPLAY [all] *********************************************************\n\nTASK [Gathering Facts] *********************************************\nok: [test01.fale.io]\n\nTASK [Print variable 'name'] ***************************************\nfatal: [test01.fale.io]: FAILED! => {\"msg\": \"The task includes an option with an undefined variable. The error was: 'name' is undefined\\n\\nThe error appears to have been in '/home/fale/Learning-Ansible-2.X-Third-Edition/Ch2/cli_variables.yaml': line 5, column 7, but may\\nbe elsewhere in the file depending on the exact syntax problem.\\n\\nThe offending line appears to be:\\n\\n tasks:\\n - name: Print variable 'name'\\n ^ here\\n\"}\n to retry, use: --limit @/home/fale/Learning-Ansible-2.X-Third-Edition/Ch2/cli_variables.retry\n\nPLAY RECAP *********************************************************\ntest01.fale.io : ok=1 changed=0 unreachable=0 failed=1\n```", "```\n--- \n- hosts: all \n  user: vagrant \n  tasks: \n    - name: Ensure ansible user exists \n      user: \n        name: ansible \n        state: present \n        comment: Ansible \n      become: True\n    - name: Ensure ansible user accepts the SSH key \n      authorized_key: \n        user: ansible \n        key: https://github.com/fale.keys \n        state: present \n      become: True\n    - name: Ensure the ansible user is sudoer with no password required \n      lineinfile: \n        dest: /etc/sudoers \n        state: present \n        regexp: '^ansible ALL\\=' \n        line: 'ansible ALL=(ALL) NOPASSWD:ALL' \n        validate: 'visudo -cf %s'\n      become: True\n```", "```\n$ ansible-playbook -i test01.fale.io, firstrun.yaml\n```", "```\nPLAY [all] *********************************************************\n\nTASK [Gathering Facts] *********************************************\nok: [test01.fale.io]\n\nTASK [Ensure ansible user exists] **********************************\nchanged: [test01.fale.io]\n\nTASK [Ensure ansible user accepts the SSH key] *********************\nchanged: [test01.fale.io]\n\nTASK [Ensure the ansible user is sudoer with no password required] *\nchanged: [test01.fale.io]\n\nPLAY RECAP *********************************************************\ntest01.fale.io              : ok=4 changed=3 unreachable=0 failed=0\n```", "```\n- name: Ensure EPEL is enabled \n  yum: \n    name: epel-release \n    state: present \n  become: True \n```", "```\n- name: Ensure libselinux-python is present \n  yum: \n    name: libselinux-python \n    state: present \n  become: True \n- name: Ensure libsemanage-python is present \n  yum: \n    name: libsemanage-python \n    state: present \n  become: True \n```", "```\n- name: Ensure we have last version of every package \n  yum: \n    name: \"*\" \n    state: latest \n  become: True \n```", "```\n- name: Ensure NTP is installed \n  yum: \n    name: ntp \n    state: present \n  become: True\n```", "```\n- name: Ensure the timezone is set to UTC \n  file: \n    src: /usr/share/zoneinfo/GMT \n    dest: /etc/localtime \n    state: link \n  become: True \n```", "```\n- name: Ensure the NTP service is running and enabled \n  service: \n    name: ntpd \n    state: started \n    enabled: True \n  become: True \n```", "```\n- name: Ensure FirewallD is installed \n  yum: \n    name: firewalld \n    state: present \n  become: True\n```", "```\n- name: Ensure SSH can pass the firewall \n  firewalld: \n    service: ssh \n    state: enabled \n    permanent: True \n    immediate: True \n  become: True\n```", "```\n- name: Ensure FirewallD is running \n  service: \n    name: firewalld \n    state: started \n    enabled: True \n  become: True \n```", "```\n                This system is managed by Ansible \n  Any change done on this system could be overwritten by Ansible \n\nOS: {{ ansible_distribution }} {{ ansible_distribution_version }} \nHostname: {{ inventory_hostname }} \neth0 address: {{ ansible_eth0.ipv4.address }} \n\n            All connections are monitored and recorded \n     Disconnect IMMEDIATELY if you are not an authorized user\n```", "```\n- name: Ensure the MOTD file is present and updated \n  template: \n    src: motd \n    dest: /etc/motd \n    owner: root \n    group: root \n    mode: 0644 \n  become: True \n```", "```\n- name: Ensure the hostname is the same of the inventory \n  hostname: \n    name: \"{{ inventory_hostname }}\" \n  become: True\n```", "```\n--- \n- hosts: all \n  remote_user: ansible \n  tasks: \n    - name: Ensure EPEL is enabled \n      yum: \n        name: epel-release \n        state: present \n      become: True \n    - name: Ensure libselinux-python is present \n      yum: \n        name: libselinux-python \n        state: present \n      become: True \n  ...\n```", "```\n$ ansible-playbook common_tasks.yaml --list-tasks \n```", "```\nplaybook: common_tasks.yaml\n play #1 (all): all TAGS: []\n tasks:\n Ensure EPEL is enabled TAGS: []\n Ensure libselinux-python is present TAGS: []\n Ensure libsemanage-python is present TAGS: []\n Ensure we have last version of every package TAGS: []\n Ensure NTP is installed TAGS: []\n Ensure the timezone is set to UTC TAGS: []\n Ensure the NTP service is running and enabled TAGS: []\n Ensure FirewallD is installed TAGS: []\n Ensure FirewallD is running TAGS: []\n Ensure SSH can pass the firewall TAGS: []\n Ensure the MOTD file is present and updated TAGS: []\n Ensure the hostname is the same of the inventory TAGS: []\n```", "```\n$ ansible-playbook -i test01.fale.io, common_tasks.yaml\n```", "```\nPLAY [all] ***************************************************\n\nTASK [Gathering Facts] ***************************************\nok: [test01.fale.io]\n\nTASK [Ensure EPEL is enabled] ********************************\nchanged: [test01.fale.io]\n\nTASK [Ensure libselinux-python is present] *******************\nok: [test01.fale.io]\n\nTASK [Ensure libsemanage-python is present] ******************\nchanged: [test01.fale.io]\n\nTASK [Ensure we have last version of every package] **********\nchanged: [test01.fale.io]\n...\n```", "```\n--- \n- hosts: all \n  remote_user: ansible\n  tasks: \n    - name: Ensure the HTTPd package is installed \n      yum: \n        name: httpd \n        state: present \n      become: True \n    - name: Ensure the HTTPd service is enabled and running \n      service: \n        name: httpd \n        state: started \n        enabled: True \n      become: True \n    - name: Ensure HTTP can pass the firewall \n      firewalld: \n        service: http \n        state: enabled \n        permanent: True \n        immediate: True \n      become: True \n    - name: Ensure HTTPS can pass the firewall \n      firewalld: \n        service: https \n        state: enabled \n        permanent: True \n        immediate: True \n      become: True  \n```", "```\n$ ansible-playbook -i test01.fale.io, webserver.yaml \n```", "```\nPLAY [all] *************************************************\n\nTASK [Gathering Facts] *************************************\nok: [test01.fale.io]\n\nTASK [Ensure the HTTPd package is installed] ***************\nok: [test01.fale.io]\n\nTASK [Ensure the HTTPd service is enabled and running] *****\nok: [test01.fale.io]\n\nTASK [Ensure HTTP can pass the firewall] *******************\nchanged: [test01.fale.io]\n\nTASK [Ensure HTTPS can pass the firewall] ******************\nchanged: [test01.fale.io]\n\nPLAY RECAP *************************************************\ntest01.fale.io      : ok=5 changed=2 unreachable=0 failed=0 \n```", "```\n--- \n- hosts: all \n  remote_user: ansible\n  tasks: \n    - name: Ensure the website is present and updated \n      template: \n        src: index.html.j2 \n        dest: /var/www/html/index.html \n        owner: root \n        group: root \n        mode: 0644 \n      become: True  \n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n    </body> \n</html>\n```", "```\n$ ansible-playbook -i test01.fale.io, deploy_website.yaml \n```", "```\nPLAY [all] ***********************************************\n\nTASK [Gathering Facts] ***********************************\nok: [test01.fale.io]\n\nTASK [Ensure the website is present and updated] *********\nchanged: [test01.fale.io]\n\nPLAY RECAP ***********************************************\ntest01.fale.io    : ok=2 changed=1 unreachable=0 failed=0\n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n    </body> \n</html>\n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n{% if ansible_eth0.active == True %} \n        <p>eth0 address {{ ansible_eth0.ipv4.address }}.</p> \n{% endif %} \n    </body> \n</html> \n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n{% if ansible_eth0.active is equalto True %} \n        <p>eth0 address {{ ansible_eth0.ipv4.address }}.</p> \n{% endif %} \n    </body> \n</html> \n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n        <p>This machine can be reached on the following IP addresses</p> \n        <ul> \n{% for address in ansible_all_ipv4_addresses %} \n            <li>{{ address }}</li> \n{% endfor %} \n        </ul> \n    </body> \n</html> \n```"]