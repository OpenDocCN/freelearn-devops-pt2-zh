["```\n<properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <sonar.language>java</sonar.language>\n</properties>\n```", "```\nnode('docker') {\n}\n```", "```\nscm checkout\n```", "```\nstage('Poll') {\n    scm checkout\n}\n```", "```\nsh 'mvn clean verify -DskipITs=true';\njunit '**/target/surefire-reports/TEST-*.xml'\narchive 'target/*.jar'\n```", "```\nstage('Build & Unit test'){\n    sh 'mvn clean verify -DskipITs=true';\n    junit '**/target/surefire-reports/TEST-*.xml'\n    archive 'target/*.jar'\n}\n```", "```\nsh 'mvn clean verify sonar:sonar -Dsonar.projectName=example-project\n-Dsonar.projectKey=example-project -Dsonar.projectVersion=$BUILD_NUMBER';\n```", "```\nstage('Static Code Analysis'){\n    sh 'mvn clean verify sonar:sonar -Dsonar.projectName=example-project\n    -Dsonar.projectKey=example-project -Dsonar.projectVersion=$BUILD_NUMBER';}\n```", "```\nsh 'mvn clean verify -Dsurefire.skip=true';\njunit '**/target/failsafe-reports/TEST-*.xml'\narchive 'target/*.jar'\n```", "```\nstage ('Integration Test'){\n    sh 'mvn clean verify -Dsurefire.skip=true';\n    junit '**/target/failsafe-reports/TEST-*.xml'\n    archive 'target/*.jar'\n}\n```", "```\n\"files\": [\n    {\n      \"pattern\": \"[Mandatory]\",\n      \"target\": \"[Mandatory]\",\n      \"props\": \"[Optional]\",\n      \"recursive\": \"[Optional, Default: 'true']\",\n      \"flat\" : \"[Optional, Default: 'true']\",\n      \"regexp\": \"[Optional, Default: 'false']\"\n    }\n  ]\n```", "```\ndef server = Artifactory.server 'Default Artifactory Server'\ndef uploadSpec = \"\"\"{\n  \"files\": [\n    {\n       \"pattern\": \"target/hello-0.0.1.war\",\n       \"target\": \"example-project/${BUILD_NUMBER}/\",\n       \"props\": \"Integration-Tested=Yes;Performance-Tested=No\"\n    }\n  ]\n}\"\"\"\nserver.upload(uploadSpec)\n```", "```\nstage ('Publish'){\n    def server = Artifactory.server 'Default Artifactory Server'\n    def uploadSpec = \"\"\"{\n      \"files\": [\n        {\n          \"pattern\": \"target/hello-0.0.1.war\",\n          \"target\": \"helloworld-greeting-project/${BUILD_NUMBER}/\",\n          \"props\": \"Integration-Tested=Yes;Performance-Tested=No\"\n        }\n      ]\n    }\"\"\"\n  server.upload(uploadSpec)\n}\n```", "```\nnode('docker') {\n  stage('Poll') {\n    checkout scm\n  }\n  stage('Build & Unit test'){\n    sh 'mvn clean verify -DskipITs=true';\n    junit '**/target/surefire-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage('Static Code Analysis'){\n    sh 'mvn clean verify sonar:sonar -Dsonar.projectName=example-project\n    -Dsonar.projectKey=example-project -Dsonar.projectVersion=$BUILD_NUMBER';\n  }\n  stage ('Integration Test'){\n    sh 'mvn clean verify -Dsurefire.skip=true';\n    junit '**/target/failsafe-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage ('Publish'){\n    def server = Artifactory.server 'Default Artifactory Server'\n    def uploadSpec = \"\"\"{\n      \"files\": [\n        {\n          \"pattern\": \"target/hello-0.0.1.war\",\n          \"target\": \"example-project/${BUILD_NUMBER}/\",\n          \"props\": \"Integration-Tested=Yes;Performance-Tested=No\"\n        }\n      ]\n    }\"\"\"\n    server.upload(uploadSpec)\n  }\n}\n```", "```\nnode('docker') {\n  stage('Poll') {\n    checkout scm\n  }\n  stage('Build & Unit test'){\n    sh 'mvn clean verify -DskipITs=true';\n    junit '**/target/surefire-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage('Static Code Analysis'){\n    sh 'mvn clean verify sonar:sonar\n    -Dsonar.projectName=example-project\n    -Dsonar.projectKey=example-project\n    -Dsonar.projectVersion=$BUILD_NUMBER';\n  }\n  stage ('Integration Test'){\n    sh 'mvn clean verify -Dsurefire.skip=true';\n    junit '**/target/failsafe-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage ('Publish'){\n    def server = Artifactory.server 'Default Artifactory Server'\n    def uploadSpec = \"\"\"{\n      \"files\": [\n        {\n          \"pattern\": \"target/hello-0.0.1.war\",\n          \"target\": \"example-project/${BUILD_NUMBER}/\",\n          \"props\": \"Integration-Tested=Yes;Performance-Tested=No\"\n        }\n      ]\n    }\"\"\"\n    server.upload(uploadSpec)\n  }\n}\n```", "```\nStarted by user nikhil pathania\n[Sun Nov 05 22:37:19 UTC 2017] Starting branch indexing...\n22:37:19 Connecting to https://api.github.com using nikhilpathania@hotmail.com/****** (credentials to access GitHub account)\n22:37:20 Connecting to https://api.github.com using nikhilpathania@hotmail.com/****** (credentials to access GitHub account)\nExamining nikhilpathania/hello-world-greeting Checking branches...  \n  Getting remote branches...    \n    Checking branch master  \n  Getting remote pull requests... ‘Jenkinsfile’ found    \n    Met criteria\nChanges detected: master (c6837c19c3906b0f056a87b376ca9afdff1b4411 1e5834a140d572f4d6f9665caac94828b779e2cd)Scheduled build for branch: master  \n1 branches were processed  \nChecking pull-requests...  \n0 pull requests were processed\nFinished examining nikhilpathania/hello-world-greeting\n[Sun Nov 05 22:37:21 UTC 2017] Finished branch indexing. Indexing took 2.1 sec\nFinished: SUCCESS\n```"]