["```\n\"bin/sh\",\n\"-c\",\n\"/usr/local/bin/kube-apiserver --v=2 --cloud-config=/etc/gce.conf --address=127.0.0.1 --allow-\nprivileged=true --authorization-policy-file=/etc/srv/kubernetes/abac-authz-policy.jsonl --basic-auth-file=/etc/srv/kubernetes/basic_auth.csv --cloud-provider=gce --client-ca-file=/etc/srv/kubernetes/ca.crt \n--etcd-servers=http://127.0.0.1:2379 --etcd-servers-overrides=/events#http://127.0.0.1:4002 --secure-port=443 --tls-cert-file=/etc\n/srv/kubernetes/server.cert --tls-private-key-file=/etc/srv/kubernetes/server.key --token-auth-file=/etc/srv/kubernetes/known_tokens.csv --storage-backend=etcd2 --target-ram-mb=180 --service-cluster-ip-range=10.0.0.0/16 --etcd-quorum-read=false --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota \n--authorization-mode=ABAC --allow-privileged=true 1>>/var/log/kube-apiserver.log 2>&1\"\n\n```", "```\n\"bin/sh\",\n\"-c\",\n\"/usr/local/bin/kube-apiserver --v=2 --cloud-config=/etc/gce.conf --address=127.0.0.1 \n--allow-privileged=true --authorization-policy-file=/etc/srv/kubernetes/abac-authz-policy.jsonl --basic-auth-file=/etc/srv/kubernetes/basic_auth.csv --cloud-provider=gce --client-ca-file=/etc/srv/kubernetes/ca.crt --etcd-servers=http://127.0.0.1:2379 --etcd-servers-overrides=/events#http://127.0.0.1:4002 --secure-port=443 --tls-cert-file=/etc/srv/kubernetes/server.cert --tls-private-key-file=/etc/srv/kubernetes/server.key --token-auth-file=/etc/srv/kubernetes/known_tokens.csv --storage-backend=etcd2 --target-ram-mb=180 --service-cluster-ip-range=10.0.0.0/16 --etcd-quorum-read=false \n--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota,PodSecurityPolicy --authorization-mode=ABAC --allow-privileged=true --runtime-config=extensions/v1beta1=true,extensions/v1beta1/podsecuritypolicy=true 1>>/var/log/kube-apiserver.log 2>&1\"\n\n```", "```\n$ kubectl get pods --namespace=kube-system\n\n```", "```\n{\n  \"kind\": \"PodSecurityPolicy\",\n  \"apiVersion\":\"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"default\"\n  },\n  \"spec\": {\n    \"privileged\": false,\n    \"seLinux\": {\n      \"rule\": \"RunAsAny\"\n    },\n    \"supplementalGroups\": {\n      \"rule\": \"RunAsAny\"\n    },\n    \"runAsUser\": {\n      \"rule\": \"RunAsAny\"\n    },\n    \"fsGroup\": {\n      \"rule\": \"RunAsAny\"\n    },\n    \"volumes\": [\"*\"],\n    \"readOnlyRootFilesystem\": true\n  }\n}\n\n```", "```\n$ kubectl create -f default-security-policy.json\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n    name: node-js-nopsc\nspec:\n  containers:\n  - name: node-js-nopsc\n    image: jonbaier/node-express-info:latest\n    ports:\n    - containerPort: 80\n\n```", "```\n$ kubectl exec -it node-js-nopsc bash root@node-js-nopsc:/src# touch file.txt\n\n```", "```\nFROM node:latest\n\nADD src/ /src\nWORKDIR /src\n\nRUN npm install\n\nENV PORT=80\n\nCMD [\"node\", \"index.js\"]\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n    name: node-js-pod\nspec:\n  containers:\n  - name: node-js-pod\n    image: jonbaier/node-express-info:latest\n    ports:\n    - containerPort: 80\n  securityContext:\n    runAsNonRoot: true\n\n```", "```\n$ kubectl delete psp default \n\n```", "```\n$ kubectl create secret generic secret-phrases --from-literal=quiet-phrase=\"Shh! Dont' tell\"\n\n```", "```\n$ kubectl get secrets\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: secret-pod\nspec:\n  containers:\n  - name: secret-pod\n    image: jonbaier/node-express-info:latest\n    ports:\n    - containerPort: 80\n      name: web\n    volumeMounts:\n      - name: secret-volume\n        mountPath: /etc/secret-phrases\n  volumes:\n  - name: secret-volume\n    secret:\n      secretName: secret-phrases\n\n```", "```\n$ kubectl exec -it secret-pod bash\n$ cd /etc/secret-phrases\n$ ls\n\n```", "```\n$ cat quiet-phrase\n\n```"]