["```\n    $ sudo dnf install ansible\n```", "```\n    $ sudo yum install ansible\n```", "```\n    $ sudo apt-get install ansible\n```", "```\n    $ brew update\n    $ brew install ansible\n```", "```\n    $ sudo easy_install pip\n```", "```\n    $ sudo pip install ansible\n```", "```\n    $ ansible --version\n```", "```\nansible 2.7.1\n config file = /etc/ansible/ansible.cfg\n configured module search path = [u'/home/fale/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n ansible python module location = /usr/lib/python2.7/site-packages/ansible\n executable location = /bin/ansible\n python version = 2.7.15 (default, Oct 15 2018, 15:24:06) [GCC 8.1.1 20180712 (Red Hat 8.1.1-5)]\n```", "```\n    $ git clone git://github.com/ansible/ansible.git\n    Cloning into 'ansible'...\n    remote: Counting objects: 116403, done.\n    remote: Compressing objects: 100% (18/18), done.\n    remote: Total 116403 (delta 3), reused 0 (delta 0), pack-reused 116384\n    Receiving objects: 100% (116403/116403), 40.80 MiB | 844.00 KiB/s, done.\n    Resolving deltas: 100% (69450/69450), done.\n    Checking connectivity... done.\n    $ cd ansible/\n    $ source ./hacking/env-setup\n    Setting up Ansible to run out of checkout...\n    PATH=/home/vagrant/ansible/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/vagrant/bin\n    PYTHONPATH=/home/vagrant/ansible/lib:\n    MANPATH=/home/vagrant/ansible/docs/man:\n    Remember, you may wish to specify your host file with -i\n    Done!\n```", "```\n    $ sudo easy_install pip\n    <A long output follows>\n```", "```\n    $ sudo pip install paramiko PyYAML jinja2 httplib2\n    Requirement already satisfied (use --upgrade to upgrade): paramiko in /usr/lib/python2.6/site-packages\n    Requirement already satisfied (use --upgrade to upgrade): PyYAML in /usr/lib64/python2.6/site-packages\n    Requirement already satisfied (use --upgrade to upgrade): jinja2 in /usr/lib/python2.6/site-packages\n    Requirement already satisfied (use --upgrade to upgrade): httplib2 in /usr/lib/python2.6/site-packages\n    Downloading/unpacking markupsafe (from jinja2)\n      Downloading MarkupSafe-0.23.tar.gz\n      Running setup.py (path:/tmp/pip_build_root/markupsafe/setup.py) egg_info for package markupsafe\n    Installing collected packages: markupsafe\n      Running setup.py install for markupsafe\n        building 'markupsafe._speedups' extension\n        gcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -I/usr/include/python2.6 -c markupsafe/_speedups.c -o build/temp.linux-x86_64-2.6/markupsafe/_speedups.o\n        gcc -pthread -shared build/temp.linux-x86_64-2.6/markupsafe/_speedups.o -L/usr/lib64 -lpython2.6 -o build/lib.linux-x86_64-2.6/markupsafe/_speedups.so\n    Successfully installed markupsafe\n    Cleaning up...\n```", "```\n    [node ansible]$ git checkout v2.7.1\n    Note: checking out 'v2.0.2'.\n    [node ansible]$ ansible --version\n    ansible 2.7.1 (v2.7.1 c963ef1dfb) last updated 2018/10/25 20:12:52 (GMT +000)\n```", "```\n    $ sudo dnf install -y vagrant  \n```", "```\n$ sudo yum install -y qemu-kvm libvirt virt-install bridge-utils libvirt-devel libxslt-devel libxml2-devel libvirt-devel libguestfs-tools-c\n$ sudo systemctl enable libvirtd\n$ sudo systemctl start libvirtd\n$ sudo rpm -Uvh https://releases.hashicorp.com/vagrant/2.2.1/vagrant_2.2.1_x86_64.rpm\n$ vagrant plugin install vagrant-libvirt\n```", "```\n    $ sudo apt install virtualbox vagrant\n```", "```\n$ sudo vagrant init centos/7 && sudo vagrant up\n```", "```\n==> default: Configuring and enabling network interfaces...\ndefault: SSH address: 192.168.121.60:22\ndefault: SSH username: vagrant\ndefault: SSH auth method: private key\n==> default: Rsyncing folder: /tmp/ch01/ => /vagrant\n```"]