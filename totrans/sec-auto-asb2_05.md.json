["```\n- name: installing docker on ubuntu\n  hosts: zap\n  remote_user: \"{{ remote_user_name }}\"\n  gather_facts: no\n  become: yes\n  vars:\n    remote_user_name: ubuntu\n    apt_repo_data: \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\"\n    apt_gpg_key: https://download.docker.com/linux/ubuntu/gpg\n\n  tasks:\n    - name: adding docker gpg key\n      apt_key:\n        url: \"{{ apt_gpg_key }}\"\n        state: present\n\n    - name: add docker repository\n      apt_repository:\n        repo: \"{{ apt_repo_data }}\"\n        state: present\n\n    - name: installing docker-ce\n      apt:\n        name: docker-ce\n        state: present\n        update_cache: yes\n    - name: install python-pip\n      apt:\n        name: python-pip\n        state: present\n    - name: install docker-py\n      pip:\n        name: \"{{ item }}\"\n        state: present\n\n      with_items:\n        - docker-py\n\n```", "```\npip install ansible --upgrade \n```", "```\n- name: setting up owasp zap container\n  hosts: zap\n  remote_user: \"{{ remote_user_name }}\"\n  gather_facts: no\n  become: yes\n  vars:\n    remote_user_name: ubuntu\n    owasp_zap_image_name: owasp/zap2docker-weekly\n\n  tasks:\n    - name: pulling {{ owasp_zap_image_name }} container\n      docker_image:\n        name: \"{{ owasp_zap_image_name }}\"\n\n    - name: running owasp zap container\n      docker_container:\n        name: owasp-zap\n        image: \"{{ owasp_zap_image_name }}\"\n        interactive: yes\n        state: started\n        user: zap\n        command: zap.sh -daemon -host 0.0.0.0 -port 8090 -config api.disablekey=true -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true\n        ports:\n          - \"8090:8090\"\n</span>\n```", "```\n- name: setting up DVWS container\n  hosts: dvws\n  remote_user: \"{{ remote_user_name }}\"\n  gather_facts: no\n  become: yes\n  vars:\n    remote_user_name: ubuntu\n    dvws_image_name: cyrivs89/web-dvws\n\n  tasks:\n    - name: pulling {{ dvws_image_name }} container\n      docker_image:\n        name: \"{{ dvws_image_name }}\"\n\n    - name: running dvws container\n      docker_container:\n        name: dvws\n        image: \"{{ dvws_image_name }}\"\n        interactive: yes\n        state: started\n        ports:\n          - \"80:80\"\n\n```", "```\n- name: Running OWASP ZAP Baseline Scan\n  hosts: zap\n  remote_user: \"{{ remote_user_name }}\"\n  gather_facts: no\n  become: yes\n  vars:\n    remote_user_name: ubuntu\n    owasp_zap_image_name: owasp/zap2docker-weekly\n    website_url: {{ website_url }}\n    reports_location: /zapdata/\n    scan_name: owasp-zap-base-line-scan-dvws\n\n  tasks:\n    - name: adding write permissions to reports directory\n      file:\n        path: \"{{ reports_location }}\"\n        state: directory\n        owner: root\n        group: root\n        recurse: yes\n        mode: 0770\n\n    - name: running owasp zap baseline scan container against \"{{ website_url }}\"\n      docker_container:\n        name: \"{{ scan_name }}\"\n        image: \"{{ owasp_zap_image_name }}\"\n        interactive: yes\n        auto_remove: yes\n        state: started\n        volumes: \"{{ reports_location }}:/zap/wrk:rw\"\n        command: \"zap-baseline.py -t {{ website_url }} -r {{ scan_name }}_report.html\"\n\n    - name: getting raw output of the scan\n      command: \"docker logs -f {{ scan_name }}\"\n      register: scan_output\n\n    - debug:\n        msg: \"{{ scan_output }}\"\n\n```", "```\n- name: Running OWASP ZAP Full Scan\n  hosts: zap\n  remote_user: \"{{ remote_user_name }}\"\n  gather_facts: no\n  become: yes\n  vars:\n    remote_user_name: ubuntu\n    owasp_zap_image_name: owasp/zap2docker-weekly\n    website_url: {{ website_url }}\n    reports_location: /zapdata/\n    scan_name: owasp-zap-full-scan-dvws\n\n  tasks:\n    - name: adding write permissions to reports directory\n      file:\n\n        path: \"{{ reports_location }}\"\n        state: directory\n        owner: root\n        group: root\n        recurse: yes\n        mode: 0777\n\n    - name: running owasp zap full scan container against \"{{ website_url }}\"\n      docker_container:\n        name: \"{{ scan_name }}\"\n        image: \"{{ owasp_zap_image_name }}\"\n        interactive: yes\n        auto_remove: yes\n        state: started\n        volumes: \"{{ reports_location }}:/zap/wrk:rw\"\n        command: \"zap-full-scan.py -t {{ website_url }} -r {{ scan_name }}_report.html\"\n\n    - name: getting raw output of the scan\n      raw: \"docker logs -f {{ scan_name }}\"\n      register: scan_output\n\n    - debug:\n        msg: \"{{ scan_output }}\"\n```", "```\n- name: Running OWASP ZAP API Scan\n  hosts: zap\n  remote_user: \"{{ remote_user_name }}\"\n  gather_facts: no\n  become: yes\n  vars:\n    remote_user_name: ubuntu\n    owasp_zap_image_name: owasp/zap2docker-weekly\n    website_url: {{ website_url }}\n    reports_location: /zapdata/\n    scan_name: owasp-zap-api-scan-dvws\n    api_type: openapi\n>\n  tasks:\n    - name: adding write permissions to reports directory\n      file:\n        path: \"{{ reports_location }}\"\n        state: directory\n        owner: root\n        group: root\n        recurse: yes\n        mode: 0777\n\n    - name: running owasp zap api scan container against \"{{ website_url }}\"\n      docker_container:\n        name: \"{{ scan_name }}\"\n        image: \"{{ owasp_zap_image_name }}\"\n        interactive: yes\n        auto_remove: yes\n        state: started\n        volumes: \"{{ reports_location }}:/zap/wrk:rw\"\n        command: \"zap-api-scan.py -t {{ website_url }} -f {{ api_type }} -r {{ scan_name }}_report.html\"\n\n    - name: getting raw output of the scan\n      raw: \"docker logs -f {{ scan_name }}\"\n      register: scan_output\n\n    - debug:\n        msg: \"{{ scan_output }}\"\n```", "```\n- name: installing jenkins in ubuntu 16.04\n  hosts: jenkins\n  remote_user: {{ remote_user_name }}\n  gather_facts: False\n  become: yes\n  vars:\n    remote_user_name: ubuntu\n\n  tasks:\n    - name: adding jenkins gpg key\n      apt_key:\n        url: 'https://pkg.jenkins.io/debian/jenkins-ci.org.key'\n        state: present\n\n    - name: jeknins repository to system\n      apt_repository:\n        repo: 'deb http://pkg.jenkins.io/debian-stable binary/'\n        state: present\n    - name: installing jenkins\n      apt:\n        name: jenkins\n        state: present\n        update_cache: yes\n\n    - name: adding jenkins to startup\n      service:\n        name: jenkins\n        state: started\n        enabled: yes\n\n    - name: printing jenkins default administration password\n      command: cat \"/var/lib/jenkins/secrets/initialAdminPassword\"\n      register: jenkins_default_admin_password\n\n    - debug: \n        msg: \"{{ jenkins_default_admin_password.stdout }}\"\n\n```", "```\necho 'YOURTOKENGOESHERE' | ansible-vault encrypt_string --stdin-name 'jenkins_api_token'\n```", "```\n- name: jenkins build job trigger\n  hosts: localhost\n  connection: local\n  vars:\n    jenkins_username: username\n    jenkins_api_token: !vault |\n          $ANSIBLE_VAULT;1.1;AES256\n          36636563313932313366313030623232623338333638363465343339636362353534363536366161\n          3062666536613764396439326534663237653438616335640a613564643366623462666361633763\n          31326161303666653366343931366265333238383937656435663061363665643431336638353436\n          3532646434376533390a646332646639653161343165363832616233333232323130623034313032\n          66643537336634633263346363313437666262323064386539616333646132353336\n    jenkins_host: 192.168.11.111\n    jenkins_target_url: 'http://demo.testfire.net'\n    jenkins_token: ansible2security\n>\n  tasks:\n    - name: trigger jenkins build\n      uri:\n        url: \"http://{{ jenkins_username }}:{{ jenkins_api_token }}@{{ jenkins_host }}/job/ZAP-Jenkins/buildWithParameters?TARGET={{ jenkins_target_url }}&token={{ jenkins_token }}\"\n        method: GET\n      register: results\n    - debug:\n        msg: \"{{ results.stdout }}\"\n```", "```\n$ ansible-playbook --ask-vault-pass main.yml\n```"]