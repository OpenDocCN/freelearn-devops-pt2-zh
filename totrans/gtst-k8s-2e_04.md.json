["```\napiVersion: v1 \nkind: ReplicationController \nmetadata: \n  name: node-js-scale \n  labels: \n    name: node-js-scale \nspec: \n  replicas: 1 \n  selector: \n    name: node-js-scale \n  template: \n    metadata: \n      labels: \n        name: node-js-scale \n    spec: \n      containers: \n      - name: node-js-scale \n        image: jonbaier/pod-scaling:0.1 \n        ports: \n        - containerPort: 80\n\n```", "```\napiVersion: v1 \nkind: Service \nmetadata: \n  name: node-js-scale \n  labels: \n    name: node-js-scale \nspec: \n  type: LoadBalancer \n  sessionAffinity: ClientIP \n  ports: \n  - port: 80 \n  selector: \n    name: node-js-scale\n\n```", "```\n$ kubectl create -f pod-scaling-controller.yaml\n$ kubectl create -f pod-scaling-service.yaml\n\n```", "```\n$ kubectl get pods -l name=node-js-scale\n\n```", "```\n$ kubectl scale --replicas=3 rc/node-js-scale\n\n```", "```\n$ kubectl rolling-update node-js-scale --image=jonbaier/pod-scaling:0.2 --update-period=\"2m\"\n\n```", "```\n$ kubectl get pods -l name=node-js-scale\n\n```", "```\n$ kubectl rolling-update node-js-scale node-js-scale-v2.0 --image=jonbaier/pod-scaling:0.2 --update-period=\"2m\"\n\n```", "```\napiVersion: v1 \nkind: Service \nmetadata: \n  name: node-js-scale-ab \n  labels: \n    service: node-js-scale-ab \nspec: \n  type: LoadBalancer \n  ports: \n  - port: 80 \n  sessionAffinity: ClientIP \n  selector: \n    service: node-js-scale-ab\n\n```", "```\n$ kubectl create -f pod-AB-service.yaml\n\n```", "```\napiVersion: v1 \nkind: ReplicationController \nmetadata: \n  name: node-js-scale-a \n  labels: \n    name: node-js-scale-a \n    version: \"0.2\" \n    service: node-js-scale-ab \nspec: \n  replicas: 2 \n  selector: \n    name: node-js-scale-a \n    version: \"0.2\" \n    service: node-js-scale-ab \n  template: \n    metadata: \n      labels: \n        name: node-js-scale-a \n        version: \"0.2\" \n        service: node-js-scale-ab \n    spec: \n      containers: \n      - name: node-js-scale \n        image: jonbaier/pod-scaling:0.2 \n        ports: \n        - containerPort: 80 \n        livenessProbe: \n          # An HTTP health check \n          httpGet: \n            path: / \n            port: 80 \n          initialDelaySeconds: 30 \n          timeoutSeconds: 5 \n        readinessProbe: \n          # An HTTP health check \n          httpGet: \n            path: / \n            port: 80 \n          initialDelaySeconds: 30 \n          timeoutSeconds: 1\n\n```", "```\napiVersion: v1 \nkind: ReplicationController \nmetadata: \n  name: node-js-scale-b \n  labels: \n    name: node-js-scale-b \n    version: \"0.3\" \n    service: node-js-scale-ab \nspec: \n  replicas: 2 \n  selector: \n    name: node-js-scale-b \n    version: \"0.3\" \n    service: node-js-scale-ab \n  template: \n    metadata: \n      labels: \n        name: node-js-scale-b \n        version: \"0.3\" \n        service: node-js-scale-ab \n    spec: \n      containers: \n      - name: node-js-scale \n        image: jonbaier/pod-scaling:0.3 \n        ports: \n        - containerPort: 80 \n        livenessProbe: \n          # An HTTP health check \n          httpGet: \n            path: / \n            port: 80 \n          initialDelaySeconds: 30 \n          timeoutSeconds: 5 \n        readinessProbe: \n          # An HTTP health check \n          httpGet: \n            path: / \n            port: 80 \n          initialDelaySeconds: 30 \n          timeoutSeconds: 1\n\n```", "```\n$ kubectl create -f pod-A-controller.yaml\n$ kubectl create -f pod-B-controller.yaml\n\n```", "```\n$ kubectl scale --replicas=3 rc/node-js-scale-b\n$ kubectl scale --replicas=1 rc/node-js-scale-a\n$ kubectl scale --replicas=4 rc/node-js-scale-b\n$ kubectl scale --replicas=0 rc/node-js-scale-a\n\n```", "```\n$ kubectl delete rc/node-js-scale-a\n\n```", "```\n$ kubectl scale --replicas=1 rc/node-js-scale\n\n```", "```\napiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: node-js-scale\nspec:\n  minReplicas: 1\n  maxReplicas: 3\n  scaleTargetRef:\n    apiVersion: v1\n    kind: ReplicationController\n    name: node-js-scale\n  targetCPUUtilizationPercentage: 20\n\n```", "```\n$ kubectl get hpa \n\n```", "```\n$ kubectl get pods -l name=node-js-scale\n\n```", "```\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: boomload\nspec:\n  replicas: 1\n  selector:\n    app: loadgenerator\n  template:\n    metadata:\n      labels:\n        app: loadgenerator\n    spec:\n      containers:\n      - image: williamyeh/boom\n        name: boom\n        command: [\"/bin/sh\",\"-c\"]\n        args: [\"while true ; do boom http://node-js-scale/ -c 10 -n 100      \n        ; sleep 1 ; done\"]\n\n```", "```\n$ kubectl get pods -l name=node-js-scale\n\n```", "```\n$ kubectl delete rc/boomload\n\n```", "```\n$ export NUM_MINIONS=5\n$ export KUBE_AUTOSCALER_MIN_NODES=2\n$ export KUBE_AUTOSCALER_MAX_NODES=5\n$ export KUBE_ENABLE_CLUSTER_AUTOSCALER=true \n\n```", "```\n$ kubectl get nodes\n\n```"]