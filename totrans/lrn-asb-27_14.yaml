- en: Introducing Ansible for Enterprises
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为企业介绍 Ansible
- en: In the previous chapter, we saw how Ansible works and how to leverage it. We
    have gone through this whole book—up until now—on the assumptions that we were
    targeting Unix machines, that we were going to write all of our playbooks ourselves,
    and that the Ansible CLI was what were looking for. We will now move away from
    those assumptions to see how we can go beyond typical Ansible usage.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，我们看到了 Ansible 的工作原理以及如何利用它。到目前为止，我们一直在假定我们的目标是 Unix 机器，我们将自己编写所有 playbook，并且
    Ansible CLI 是我们要寻找的。现在我们将摆脱这些假设，看看如何超越典型的 Ansible 用法。
- en: 'In this chapter, we''ll explore the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下主题：
- en: Ansible on Windows
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 上的 Ansible
- en: Ansible Galaxy
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Galaxy
- en: Ansible Tower
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Tower
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Aside from Ansible itself, to be able to follow the examples in this chapter
    on your machine, you will need a Windows box.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 Ansible 本身之外，为了能够在您的机器上按本章示例操作，您需要一个 Windows 机器。
- en: Ansible on Windows
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows 上的 Ansible
- en: Ansible version 1.7 started being able to manage Windows machines with a few
    basic modules. After the acquisition of Ansible by Red Hat, a lot of effort was
    put into this task by Microsoft and many other companies and people. By the time
    of the 2.1 release, Ansible's ability to manage Windows machines was close to
    being complete. Some modules have been extended to work seamlessly on Unix and
    Windows, while in other cases, the Windows logic was so different from Unix that
    new modules needed to be created.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 版本 1.7 开始能够通过一些基本模块管理 Windows 机器。在 Ansible 被 Red Hat 收购后，Microsoft 和许多其他公司以及个人都为此付出了大量努力。到
    2.1 版本发布之时，Ansible 管理 Windows 机器的能力已接近完整。一些模块已扩展以在 Unix 和 Windows 上无缝工作，而在其他情况下，Windows
    逻辑与 Unix 有很大差异，因此需要创建新的模块。
- en: At the time of writing, using Windows as a control machine is not supported,
    though some users have tweaked the code and their environment to make it work.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，尚不支持将 Windows 作为控制机器，尽管某些用户已调整了代码和环境使其能够运行。
- en: 'The connection from the control machine to Windows machines is not made over
    SSH; instead, it''s made over **Windows Remote Management** (**WinRM**). You can
    visit Microsoft''s website for a detailed explanation and implementation: [http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx](https://docs.microsoft.com/en-in/windows/desktop/WinRM/portal).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 从控制机器到 Windows 机器的连接不是通过 SSH 进行的；而是通过**Windows 远程管理**（**WinRM**）进行的。您可以访问微软的网站以获取详细解释和实施方法：[http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx](https://docs.microsoft.com/en-in/windows/desktop/WinRM/portal)。
- en: 'On the control machine, once you''ve installed Ansible, it''s important that
    you install WinRM. You can do so via `pip` with the following command:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制机器上，一旦安装了 Ansible，重要的是安装 WinRM。您可以通过以下命令使用 `pip` 安装：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You may need to use `sudo` or the `root` account to execute this command.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要使用 `sudo` 或 `root` 帐户来执行此命令。
- en: 'On each of the remote Windows machines, you need to install PowerShell version
    3.0 or higher. Ansible provides a couple of helpful scripts to set it up:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在每台远程 Windows 机器上，您需要安装 PowerShell 版本 3.0 或更高。Ansible 提供了一些有用的脚本来设置它：
- en: WinRM ([https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1](https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1))
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRM ([https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1](https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1))
- en: PowerShell 3.0 upgrade ([https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1](https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1))
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 3.0 升级 ([https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1](https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1))
- en: You will also need to allow port `5986` via the firewall, as this is the default
    WinRM connection port, and make sure it is accessible from the command center.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要通过防火墙允许端口`5986`，因为这是默认的 WinRM 连接端口，并确保它可以从命令中心访问。
- en: 'To make sure you can access the service remotely, run a `curl` command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保可以远程访问服务，请运行 `curl` 命令：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If basic authentication works, you can start running commands. Once the setup
    is done, you're ready to start running Ansible! Let's run the equivalent of the
    Windows version of the `Hello, world!` program in Ansible by running `win_ping`.
    In order to do this, let's set up our credentials file.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果基本身份验证可用，则可以开始运行命令。设置完成后，您就可以开始运行 Ansible！让我们通过运行 `win_ping` 来运行 Ansible 中
    Windows 版本的 `Hello, world!` 程序的等效程序。为此，让我们设置我们的凭据文件。
- en: 'This can be done using `ansible-vault`, as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `ansible-vault` 完成此操作，如下所示：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As we''ve already seen, `ansible-vault` will ask you to set `password`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经看到的，`ansible-vault` 会要求您设置 `password`：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'At this point, we can add the variables we need:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们可以添加我们需要的变量：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s set up our `inventory` file, as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置我们的 `inventory` 文件，如下所示：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Followed by this, let''s run `win_ping`:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，让我们运行 `win_ping`：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Ansible will ask us for `Vault password` and then print the result of the run,
    as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 将要求我们输入 `Vault 密码`，然后打印运行结果，如下所示：
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We have now seen how we can connect to a remote machine. Now, you can manage
    Windows machines in the same way that you can manage Unix machines. The only thing
    to be aware of is that, due to the huge differences between the Windows OS and
    Unix systems, not every Ansible module will work properly. For this reason, many
    Unix modules have been rewritten from scratch to have similar behaviors to the
    Unix modules, but with completely different implementations. A list of those modules
    can be found at [https://docs.ansible.com/ansible/latest/modules/list_of_windows_modules.html](https://docs.ansible.com/ansible/latest/modules/list_of_windows_modules.html).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了如何连接到远程计算机。现在，您可以以与管理 Unix 计算机相同的方式管理 Windows 计算机。需要注意的是，由于 Windows 操作系统和
    Unix 系统之间存在巨大差异，不是每个 Ansible 模块都能正常工作。因此，许多 Unix 模块已经被从头开始重写，以具有与 Unix 模块相似的行为，但具有完全不同的实现方式。这些模块的列表可以在
    [https://docs.ansible.com/ansible/latest/modules/list_of_windows_modules.html](https://docs.ansible.com/ansible/latest/modules/list_of_windows_modules.html)
    找到。
- en: Ansible Galaxy
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Galaxy
- en: Ansible Galaxy is a free website where you can download Ansible roles that have
    been developed by the community and kick-start your automation within minutes.
    You can share or review community roles so that others can easily find the most
    trusted roles on Ansible Galaxy. You can start using Ansible Galaxy by simply
    signing up with social media applications such as Twitter, Google, and GitHub
    or by creating a new account on the Ansible Galaxy website at [https://galaxy.ansible.com/](https://galaxy.ansible.com/)
    and downloading the required roles using the `ansible-galaxy` command, which ships
    with Ansible version 1.4.2 and higher.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Galaxy 是一个免费网站，您可以在该网站上下载由社区开发的 Ansible 角色，并在几分钟内启动自动化。您可以分享或审查社区角色，以便其他人可以轻松找到
    Ansible Galaxy 上最值得信赖的角色。您可以通过简单地注册 Twitter、Google 和 GitHub 等社交媒体应用程序，或者在 Ansible
    Galaxy 网站 [https://galaxy.ansible.com/](https://galaxy.ansible.com/) 上创建新帐户，并使用
    `ansible-galaxy` 命令下载所需的角色，该命令随 Ansible 版本 1.4.2 及更高版本一起提供。
- en: In case you want to host your own local Ansible Galaxy instance, you can do
    so by fetching the code from [https://github.com/ansible/galaxy](https://github.com/ansible/galaxy).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要托管自己的本地 Ansible Galaxy 实例，可以通过从 [https://github.com/ansible/galaxy](https://github.com/ansible/galaxy)
    获取代码来实现。
- en: 'To download an Ansible role from Ansible Galaxy, use the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 Ansible Galaxy 下载 Ansible 角色，请使用以下命令：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can also specify a version, as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以按照以下步骤指定版本：
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you don''t specify a version, then the `ansible-galaxy` command will download
    the latest available version. You can install multiple roles in two ways; firstly,
    by passing multiple role names separated by a space, as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不指定版本，则 `ansible-galaxy` 命令将下载最新可用的版本。您可以通过以下两种方式安装多个角色；首先，通过将多个角色名称用空格分隔，如下所示：
- en: '[PRE10]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Secondly, you can do so by specifying role names in a file and passing that
    filename to the `-r/--role-file` option. For instance, you could create the `requirements.txt`
    file with the following content:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，您可以通过在文件中指定角色名称，并将该文件名传递给 `-r/--role-file` 选项来完成此操作。例如，您可以创建以下内容的 `requirements.txt`
    文件：
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You could then install roles by passing the filename to the `ansible-galaxy`
    command, as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将文件名传递给 `ansible-galaxy` 命令来安装角色，如下所示：
- en: '[PRE12]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Let''s see how we can use `ansible-galaxy` to download a role for Apache HTTPd:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 `ansible-galaxy` 下载 Apache HTTPd 的角色：
- en: '[PRE13]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You''ll see output similar to the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到类似以下内容的输出：
- en: '[PRE14]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The preceding `ansible-galaxy` command will download the Apache HTTPd role
    to the `~/.ansible/roles` directory. You can now directly use the preceding role
    in your playbook and create the `playbooks/galaxy.yaml` file with the following
    content:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 前述的 `ansible-galaxy` 命令将把 Apache HTTPd 角色下载到 `~/.ansible/roles` 目录中。您现在可以直接在您的
    playbook 中使用前述的角色，并创建 `playbooks/galaxy.yaml` 文件，并填写以下内容：
- en: '[PRE15]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As you can see, we created a simple playbook with a `geerlingguy.apache` role.
    We can now test it:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们创建了一个带有 `geerlingguy.apache` 角色的简单 playbook。现在我们可以测试它：
- en: '[PRE16]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This should give us the following output:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该给我们以下输出：
- en: '[PRE17]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As you may have noticed, many steps were skipped due to the fact that this role
    is designed to work on many different Linux distributions.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经注意到的，由于该角色设计用于在许多不同的 Linux 发行版上工作，因此跳过了许多步骤。
- en: Now that you know how to leverage Ansible Galaxy roles, you can spend less time
    rewriting code that someone already wrote and spend more time writing the parts
    that are specific to your architecture and give you more value.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何利用 Ansible Galaxy 角色，您可以花更少的时间重写其他人已经写过的代码，并花更多的时间编写对您的架构特定且给您带来更多价值的部分。
- en: Pushing a role to Ansible Galaxy
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将角色推送到 Ansible Galaxy
- en: Since Ansible Galaxy is a community-driven effort, you can also add your own
    roles to it. Before we can start the process of publishing it, we will need to
    prepare it.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Ansible Galaxy 是社区驱动的工作，您还可以将自己的角色添加到其中。在我们可以开始发布它的流程之前，我们需要对其进行准备。
- en: 'Ansible gives us a tool to bootstrap a new Galaxy Role from a template. To
    leverage it, we can run the following command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 为我们提供了一个工具，可以从模板中引导一个新的 Galaxy 角色。为了利用它，我们可以运行以下命令：
- en: '[PRE18]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This will create the `ansible-role-test` folder, along with all of the usual
    folders an Ansible Role usually has.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建 `ansible-role-test` 文件夹，以及通常具有的所有文件夹的 Ansible 角色。
- en: The only file that is going to be new to you is `meta/main.yaml`, which, even
    though it is possible to use without Ansible Galaxy, contains a lot of information
    about the role that's readable by Ansible Galaxy.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一对您新的文件将是 `meta/main.yaml`，即使没有 Ansible Galaxy 也可以使用，但包含了很多关于角色的信息，这些信息可被 Ansible
    Galaxy 读取。
- en: 'The main information that''s available in this file that you will probably
    need to set accordingly to your needs are as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于设置的主要信息在该文件中都可以找到，以满足您的需求，如下所示：
- en: '`author`: Your name.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`author`：您的名字。'
- en: '`description`: Put a description of the role here.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`：在此处放置角色的描述。'
- en: '`company`: Put the name of the company you work for here (or delete the line).'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`company`：在此处放置您所工作公司的名称（或删除该行）。'
- en: '`license`: Set the license that your module will have. Some suggested licenses
    are BSD (which is also the default), MIT, GPLv2, GPLv3, Apache, and CC-BY.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`license`：设置您的模块将具有的许可证。一些建议的许可证包括 BSD（也是默认的），MIT，GPLv2，GPLv3，Apache 和 CC-BY。'
- en: '`min_ansible_version`: Set the minimum version of Ansible that you''ve tested
    the role with.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_ansible_version`：设置您已测试过角色的最低 Ansible 版本。'
- en: '`galaxy_tags`: In this section, put the platforms and versions your module
    is written for.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`galaxy_tags`：在此部分中，放置您的模块适用的平台和版本。'
- en: '`dependencies`: List the roles that are required to execute your role.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dependencies`：列出执行您的角色所需的角色。'
- en: To proceed with the publication, you need to log in to Galaxy using a GitHub
    account, and then you can go to My Content to start adding a content.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行发布，您需要使用 GitHub 账户登录 Galaxy，然后您可以转到“我的内容”开始添加内容。
- en: 'After you press Add Content, a window will appear that will show you the repositories
    that you can choose from, as shown in the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 按下“添加内容”后，将会出现一个窗口，其中显示您可以选择的存储库，如下截图所示：
- en: '![](img/f3ddb72c-f36a-4ced-b4e3-5786e4c73e33.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3ddb72c-f36a-4ced-b4e3-5786e4c73e33.png)'
- en: After selecting the right repository and then clicking the OK button, Ansible
    Galaxy will start to import the given role.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择正确的存储库后，然后点击“确定”按钮，Ansible Galaxy 将开始导入给定的角色。
- en: 'If you go back to the My Content page a few minutes after doing this, you''ll
    see your roles and their status, like so:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在执行此操作几分钟后返回到“我的内容”页面，您将看到您的角色及其状态，如下所示：
- en: '![](img/42d74864-d05d-4170-a2a9-c41880b7b8bc.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42d74864-d05d-4170-a2a9-c41880b7b8bc.png)'
- en: You can now use the role in the same way as other people would have done. Remember
    to update it when changes are needed!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以像其他人一样使用该角色。记得在需要更改时更新它！
- en: Ansible Tower and AWX
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Tower 和 AWX
- en: 'Ansible Tower is a web-based GUI that was developed by Red Hat. Ansible Tower
    provides you with an easy-to-use dashboard where you can manage your nodes and
    role-based authentication to control access to your Ansible Tower dashboard. The
    biggest features of Ansible Tower are as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Tower 是由 Red Hat 开发的基于 Web 的 GUI。Ansible Tower 提供了一个易于使用的仪表板，您可以在其中管理节点和基于角色的身份验证以控制对
    Ansible Tower 仪表板的访问。Ansible Tower 的主要特点如下：
- en: '**LDAP/AD integration**: You can import (and give privileges to) users based
    on the result of LDAP/AD queries that Ansible Tower performs on your LDAP/AD server.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LDAP/AD 集成**：您可以基于 Ansible Tower 对 LDAP/AD 服务器执行的查询结果导入（并授予权限给）用户。'
- en: '**Role-based access control**: It limits the users to only run the playbooks
    they are authorized to run and/or target only a limited amount of hosts.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于角色的访问控制**：它限制用户只能运行他们被授权运行的 Playbook，并/或者仅针对有限数量的主机。'
- en: '**REST API**: All Ansible Tower capabilities are exposed via a REST API.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**REST API**：所有 Ansible Tower 的功能都通过 REST API 暴露出来。'
- en: '**Job scheduling**: Ansible Tower allows us to schedule jobs (playbook execution).'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**作业调度**：Ansible Tower 允许我们调度作业（Playbook 执行）。'
- en: '**Graphical inventory management**: Ansible Tower manages the inventory in
    a more dynamic way than Ansible.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形化清单管理**：Ansible Tower 对清单的管理方式比 Ansible 更加动态。'
- en: '**Dashboard**: Ansible Tower allows us to see the situation of all current
    and previous job executions.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仪表盘**：Ansible Tower 允许我们查看所有当前和之前作业执行的情况。'
- en: '**Logging**: Ansible Tower logs all the results of every job execution to be
    able to go back and check if needed.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志记录**：Ansible Tower 记录每次作业执行的所有结果，以便在需要时进行查看。'
- en: During the acquisition of Ansible Inc. by Red Hat, it was promised that Ansible
    Tower would have become open source. In 2017, this happened, and it came back
    with the name AWX.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Red Hat 收购 Ansible Inc. 期间，承诺过将使 Ansible Tower 成为开源项目。2017 年，这一承诺得以实现，并且以
    AWX 的名字回归。
- en: AWX and Ansible Tower are commonly used in the Enterprise version due to the
    very handy features it provides to the Ansible ecosystem. We are going to discuss
    these in more detail in the chapters that follow.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: AWX 和 Ansible Tower 在企业版中经常被使用，因为它为 Ansible 生态系统提供了非常方便的功能。我们将在接下来的章节中更详细地讨论这些功能。
- en: Summary
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we have seen how to move Ansible outside the Unix world by
    looking at how to control Windows hosts. We then moved to Ansible Galaxy, where
    you can find many roles written by other people that you can simply reuse. Lastly,
    we touched on Ansible Tower, which is an open source incarnation of AWX. In the
    upcoming chapters, we are going to discuss more about AWX, from the installation
    process to running your first job.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经了解了如何通过查看如何控制 Windows 主机将 Ansible 移出 Unix 世界。然后我们转向 Ansible Galaxy，在那里您可以找到许多其他人编写的角色，您可以简单地重用。最后，我们提到了
    Ansible Tower，它是 AWX 的开源化身。在接下来的章节中，我们将更多地讨论关于 AWX 的内容，从安装过程到运行您的第一个作业。
