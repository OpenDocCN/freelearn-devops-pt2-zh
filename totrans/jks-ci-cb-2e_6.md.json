["```\n    mvn archetype:generate -DgroupId=nl.berg.packt.simplewar -DartifactId=simplewar -Dversion=1.0-SNAPSHOT -DarchetypeArtifactId=maven-archetype-webapp \n\n    ```", "```\n     <Connector port=\"38887\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" />\n\n    ```", "```\n    bin/startup.sh\n\n    ```", "```\n    <role rolename=\"manager-gui\"/>\n    <role rolename=\"manager-script\"/>\n    <role rolename=\"manager-jmx\"/>\n    <role rolename=\"manager-status\"/>\n    <user username=\"jenkins_build\" password=\"mylongpassword\" roles=\"manager-gui,manager-script,manager-jmx,manager-status\"/>\n    ```", "```\n    sudo adduser jenkins-unix-nodex\n\n    ```", "```\n    sudo -u jenkins ssh-keygen -t rsa\n    Generating public/private rsa key pair.\n    Enter file in which to save the key \n    (/var/lib/jenkins/.ssh/id_rsa): \n    Created directory '/var/lib/jenkins/.ssh'.\n    Enter passphrase (empty for no passphrase): \n    Enter same passphrase again: \n    Your identification has been saved in \n    /var/lib/jenkins/.ssh/id_rsa.\n    Your public key has been saved in \n    /var/lib/jenkins/.ssh/id_rsa.pub\n\n    ```", "```\n    sudo -u jenkins-unix-nodex mkdir /home/jenkins-unix-nodex/.ssh \n    sudo cp /var/lib/jenkins/.ssh/id_rsa.pub /home/jenkins-unix-nodex/.ssh/authorized_keys\n\n    ```", "```\n    sudo chown jenkins-unix-nodex:jenkins-unix-nodex /home/jenkins-unix-nodex/.ssh/authorized_keys\n\n    ```", "```\n    sudo –u Jenkins ssh jenkins-unix-nodex@localhost\n    The authenticity of host 'localhost (127.0.0.1)' can't be established.\n    ECDSA key fingerprint is \n    xx:yy:21:zz:46:dd:02:fa:1w:15:27:20:e6:74:3e:a2.\n    Are you sure you want to continue connecting (yes/no)? yes\n    Warning: Permanently added 'localhost' (ECDSA) to the list of known hosts.\n\n    ```", "```\ncurl -s -D - localhost:8080 -o /dev/null\n\n```", "```\nHTTP/1.1 200 OK\nCache-Control: no-cache,no-store,must-revalidate\nX-Hudson-Theme: default\nContent-Type: text/html;charset=UTF-8\nSet-Cookie: JSESSIONID.bebd81dc=1mkx0f5m97ipsjqhygljrbqmo;Path=/;HttpOnly\nExpires: Thu, 01 Jan 1970 00:00:00 GMT\nX-Hudson: 1.395\nX-Jenkins: 1.583\nX-Jenkins-Session: 5c9958f6\nX-Hudson-CLI-Port: 39269\nX-Jenkins-CLI-Port: 39269\nX-Jenkins-CLI2-Port: 39269\nX-Frame-Options: sameorigin\nX-SSH-Endpoint: localhost:57024\nX-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjOABhI+cuNtKfu5b46FKGr/IXh9IgaTVgf16QgCmoAR41S00gXJezDRJ1i4tC0tB6Tqz5SuKqcDDxU19fndIe7qhmNOPdAIMUU8i/UmKLC4eY/WfYqE9y4PpIR23yCVd2RB+KzADEhTB/voiLLoEkogj22WtUd7TZWhzRnAW58wrzI6uAWHqOtHvlO7MxFo1AY4ZyXLw202Dz+1tlKkECr5oy9dFyKy3U1lnpilg6snG70AYz+/uFs52FeOl3qkCfDVCGMDHqLEvJJzWsZ5hAv37fEaj1QyMA69joBjesgt1n1CeJeD0cy5+BIkwoHmrGW2VwvrxssIkm3RVhjJbeQIDAQABContent-Length: 19857\nServer: Jetty(8.y.z-SNAPSHOT)\n```", "```\n    println \"pwd\".execute().text\n    println \"ls ./workspace\".execute().text\n    ```", "```\n    #!/bin/sh\n    echo -------------------------- > slave_banner.txt\n    echo THIS IS A SLAVE INIT BANNER  >> slave_banner.txt\n    echo WORKING ON SLAVE: ${NODE_TO_SETUP_NAME} >> slave_banner.txt\n    date >> slave_banner.txt\n    echo SCRIPT DOES SOME WORK HERE >> slave_banner.txt\n    echo -------------------------- >> slave_banner.txt\n    mv slave_banner.txt  /home/jenkins-unix- nodex/workspace/ch6.remote.slave.setup/\n    ```", "```\n    --------------------------\n    THIS IS A SLAVE INIT BANNER\n    WORKING ON SLAVE: unix-node01\n    Tue Oct 14 13:39:09 CEST 2014\n    SCRIPT DOES SOME WORK HERE\n    --------------------------\n\n    ```", "```\nprintln \"which perl\".execute().text\n```", "```\n#!/usr/bin/perl\nprint \"Hello World\"\n```", "```\n    java -jar fitnesse-standalone.jar –help\n    Usage: java -jar fitnesse.jar [-vpdrleoab]\n    -p <port number> {80}\n    -d <working directory> {.}\n    -r <page root directory> {FitNesseRoot}\n    -l <log directory> {no logging}\n    -f <config properties file> {plugins.properties}\n    -e <days> {14} Number of days before page versions expire\n    -o omit updates\n    -a {user:pwd | user-file-name} enable authentication.\n    -i Install only, then quit.\n    -c <command> execute single command.\n    -b <filename> redirect command output.\n    -v {off} Verbose logging\n\n    ```", "```\n    java -jar fitnesse-standalone.jar -p 39996 -l logs -a tester:test\n    Bootstrapping FitNesse, the fully integrated standalone wiki and acceptance testing framework.\n    root page: fitnesse.wiki.fs.FileSystemPage at ./FitNesseRoot#latest\n    logger: /home/alan/Desktop/X/fitness/logs\n    authenticator: fitnesse.authentication.OneUserAuthenticator\n    page factory: fitnesse.html.template.PageFactory\n    page theme: fitnesse_straight\n    Starting FitNesse on port: 39996\n\n    ```", "```\n    127.0.0.1 - tester [01/Oct/2014:11:14:59 +0100] \"GET /FitNesse.SuiteAcceptanceTests?suite HTTP/1.1\" 200 6086667\n\n    ```", "```\n<testResults>\n<FitNesseVersion>v20140901</FitNesseVersion>\n<rootPath>FitNesse.SuiteAcceptanceTests</rootPath>\n<result>\n<counts><right>103</right>\n<wrong>0</wrong>\n<ignores>0</ignores>\n<exceptions>0</exceptions>\n</counts>\n<runTimeInMillis>27</runTimeInMillis>\n<relativePageName>CopyAndAppendLastRow</relativePageName>\n<pageHistoryLink>\nFitNesse.SuiteAcceptanceTests.SuiteFitDecoratorTests.CopyAndAppendLastRow?pageHistory&resultDate=20141101164526\n</pageHistoryLink>\n</result>\n```", "```\n    java -jar fitnesse-standalone.jar -p 39996 -l logs -a tester:test\n\n    ```", "```\n    !path /FitHome/FitNesseRoot/lib/*\n    !fixture com.jbergin.HtmlFixture \n    ```", "```\n    |Import|\n    |com.jbergin|\n    '''STORY'''\n    This is an example of using HtmlUnit:http://htmlunit.sourceforge.net/\n    '''TESTS'''\n    !|HtmlFixture|\n    |http://localhost:8080/login| Login||\n    |Print Cookies||\n    |Print Response Headers||\n    |Has Text|log in|\n    |Element Focus|search-box|input|\n    |Set Value|ch5||\n    |Focus Parent Type|form|/search/||\n    ```", "```\n    !|HtmlFixture|\n    |http://localhost:8080/login| Login|\n    |Has Text|log in|\n    |Element Focus|search-box|input|\n    |Set Value|ch5|\n    |Focus Parent Type|form|/search/|\n    ```", "```\n|Import|\n|com.jbergin|\n```", "```\n|Print something||\n```", "```\n|http://localhost:8080/login| Login||\n|http://localhost:8080/login| Login|\n```", "```\n    mvn archetype:generate -DgroupId=nl.berg.packt.selenium -DartifactId=selenium_html -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0-SNAPSHOT\n\n    ```", "```\n    <build>\n        <plugins>\n         <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>selenium-maven-plugin</artifactId>\n          <version>2.3</version>              \n           <executions>\n            <execution>\n              <id>xvfb</id>\n              <phase>pre-integration-test</phase>\n              <goals>\n                 <goal>xvfb</goal>\n              </goals>\n             </execution>\n             <execution>\n                <id>start-selenium</id>\n                <phase>integration-test</phase>\n             <goals>\n             <goal>selenese</goal> \n            </goals>\n           <configuration> <suite>src/test/resources/selenium/TestSuite.xhtml</suite>\n         <browser>*firefox</browser>                        \n         <multiWindow>true</multiWindow>\n         <background>true</background>                           <results>./target/results/selenium.html</results> <startURL>http://localhost:8080/login/</startURL>\n          </configuration>\n         </execution>\n        </executions>\n       </plugin>\n      </plugins>\n    </build>\n    ```", "```\n    log4j.rootLogger=INFO, A1\n    log4j.appender.A1=org.apache.log4j.ConsoleAppender\n    log4j.appender.A1.layout=org.apache.log4j.PatternLayout\n    log4j.appender.A1.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\n    ```", "```\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n    <html  xml:lang=\"en\" lang=\"en\">\n    <head>\n      <meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\" />\n      <title>My Test Suite</title>\n    </head>\n    <body>\n    <table id=\"suiteTable\" cellpadding=\"1\" cellspacing=\"1\" border=\"1\" class=\"selenium\"><tbody>\n    <tr><td><b>Test Suite</b></td></tr>\n    <tr><td><a href=\"MyTest.xhtml\">Just pinging Jenkins Login Page</a></td></tr>\n    </tbody></table>\n    </body>\n    </html>\n    ```", "```\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n    <html  xml:lang=\"en\" lang=\"en\">\n    <head profile=\"http://selenium-ide.openqa.org/profiles/test-case\">\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <title>MyTest</title>\n    </head><body>\n    <table cellpadding=\"1\" cellspacing=\"1\" border=\"1\">\n    <thead>\n    <tr><td rowspan=\"1\" colspan=\"3\">MyTest</td></tr>\n    </thead><tbody>\n    <tr><td>open</td><td>/login?from=%2F</td><td></td></tr>\n    <tr><td>verifyTextPresent</td><td>log in</td><td></td></tr>\n    </tbody></table></body></html>\n    ```", "```\n    mvn clean integration-test –Dlog4j.configuration=file./src/test/resources/log4j.properties\n\n    ```", "```\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project  \n      xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n        <modelVersion>4.0.0</modelVersion>\n        <groupId>nl.uva.berg</groupId>\n        <artifactId>integrationtest</artifactId>\n        <version>1.0-SNAPSHOT</version>\n        <build> \n          <plugins>\n            <plugin>\n              <groupId>org.apache.maven.plugins</groupId>\n              <artifactId>maven-compiler-plugin</artifactId>\n                <version>2.3.2</version>\n            </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-failsafe-plugin</artifactId>\n            <version>2.10</version>\n        </plugin>\n        </plugins>\n      </build>\n      <dependencies>\n        <dependency>\n          <groupId>org.testng</groupId>\n            <artifactId>testng</artifactId>\n            <version>6.1.1</version>\n            <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.seleniumhq.selenium</groupId>\n        <artifactId>selenium-htmlunit-driver</artifactId>\n        <version>2.15.0</version>\n      </dependency>\n      </dependencies>\n    </project>\n    ```", "```\n    package nl.berg.packt.webdriver;\n\n    import org.openqa.selenium.WebDriver;\n    import org.openqa.selenium.htmlunit.HtmlUnitDriver;\n    import org.testng.Assert;\n    import org.testng.annotations.*; \n    import java.io.File;\n    import java.io.IOException;\n\n    public class TestIT {\n      private static final String WEBPAGE = \"http://www.google.com\";\n      private static final String TITLE = \"Google\";\n      private WebDriver driver;\n\n      @BeforeSuite\n      public void creatDriver(){\n        this.driver= new HtmlUnitDriver(true);\n      }\n\n      @Test\n      public void getLoginPageWithHTMLUNIT() throws IOException, InterruptedException {\n          driver.get(WEBPAGE);\n          System.out.println(\"TITLE IS ==>\\\"\"+driver.getTitle()+\"\\\"\");\n        Assert.assertEquals(driver.getTitle(), TITLE);\n      }\n\n      @AfterSuite\n      public void closeDriver(){\n        driver.close();\n      }\n    }\n    ```", "```\n    TITLE IS ==>\"Google\"\n    Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.31 sec\n    Results :\n    Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n\n    ```", "```\npublic void getLoginPageWithFirefox() throws IOException, InterruptedException {\n  FirefoxDriver driver = new FirefoxDriver();\n  driver.get(\"http://localhost:8080/login); \n FileUtils.copyFile(driver.getScreenshotAs(OutputType.FILE), new File(\"loginpage_firefox.png\"));\n  driver.close();\n}\n```", "```\n    localhost,8080,/login\n    localhost,9080,/blah\n    ```", "```\n    <project default=\"jmeter.tests\">\n    <property name=\"jmeter\" location=\"/var/lib/jenkins/jmeter\" />\n    <property name=\"target\" location=\"${basedir}/target\" />   \n    <echo message=\"Running... Expecting variables [jvarg,desc]\" />\n    <echo message=\"For help please read ${basedir}/README\"/>\n    <echo message=\"[DESCRIPTION] ${desc}\" />\n    <taskdef  name=\"jmeter\"  classname=\"org.programmerplanet.ant.taskdefs.jmeter.JMeterTask\" classpath=\"${jmeter}/extras/ant-jmeter-1.0.9.jar\" />\n          <target name=\"jmeter.init\">\n          <mkdir  dir=\"${basedir}/jmeter_results\"/>\n          <delete includeemptydirs=\"true\">\n          <fileset dir=\"${basedir}/jmeter_results\" includes=\"**/*\" />\n          </delete>\n        </target>\n        <target name=\"jmeter.tests\" depends=\"jmeter.init\" description=\"launch jmeter load tests\">\n        <echo message=\"[Running] jmeter tests...\" />\n    <jmeter jmeterhome=\"${jmeter}\" resultlog=\"${basedir}/jmeter_results/LoadTestResults.jtl\">\n        <testplans dir=\"${basedir}/plans\" includes=\"*.jmx\"/>\n        <jvmarg value=\"${jvarg}\" />\n        <property name=\"csv\" value=\"${basedir}/data/URLS.csv\" />\n        </jmeter>\n      </target>\n    </project>\n    ```", "```\n    jvarg=-Xmx512m\n    desc= This is the first iteration in a performance test environment – Driven by Jenkins\n    ```", "```\n    webservices.allowlogin=true\n    webservices.allow=.*\n    webservices.log-denied=true\n    ```", "```\n    2012-01-14 14:09:16,845 ERROR main \n    org.apache.coyote.http11.Http11BaseProtocol - Error starting endpoint\n    java.net.BindException: Address already in use:8080\n\n    ```", "```\n    <Connector port=\"39955\" maxHttpHeaderSize=\"8192\" URIEncoding=\"UTF-8\" maxThreads=\"150\" minSpareThreads=\"25\" maxSpareThreads=\"75\" enableLookups=\"false\" redirectPort=\"8443\" acceptCount=\"100\" connectionTimeout=\"20000\" disableUploadTimeout=\"true\" />\n    ```", "```\n    public class PingTest {\n      public String ping(String ignore){\n        return \"Insecure answer =>\"+ignore;\n      }\n      public String pong(String ignoreMeAsWell){\n        return youCantSeeMe();}\n      private String  youCantSeeMe(){\n        return \"PONG\";\n      }\n    }\n    ```", "```\nJAVA_OPTS=\"$JAVA_OPTS -Dsoapui.jxbrowser.disable=true\"\n```", "```\n    <project \n\n      xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n      <modelVersion>4.0.0</modelVersion>\n      <name>Ping regression suite</name>\n      <groupId>test.soapui</groupId>\n      <artifactId>test.soapui</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <packaging>jar</packaging>\n      <description>Sakai webservices test</description>\n    <pluginRepositories>\n      <pluginRepository>\n        <id>eviwarePluginRepository</id>\n        <url>http://www.eviware.com/repository/maven2/</url>\n      </pluginRepository>\n    </pluginRepositories>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>eviware</groupId>\n            <artifactId>maven-soapui-plugin</artifactId>\n            <version>4.0.1</version>\n            <executions>\n              <execution>\n                <id>ubyregression</id>\n                <goals>\n              <goal>test</goal>\n            </goals>\n            <phase>test</phase>\n          </execution>\n        </executions>\n        <configuration>\n    <projectFile>src/test/soapui/SakaiSoapTests-soapui-project.xml</projectFile>\n      <host>localhost:39955</host> <outputFolder>${project.build.directory}/surefire-reports</outputFolder>\n              <junitReport>true</junitReport>\n              <exportwAll>true</exportwAll>\n              <printReport>true</printReport>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </project>\n    ```", "```\n    mvn clean test\n\n    ```", "```\n<junitReport>true</junitReport>\n<exportwAll>true</exportwAll>\n<printReport>true</printReport>\n```"]