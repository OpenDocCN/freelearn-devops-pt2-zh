["```\n sudo docker images\n```", "```\nsudo docker run -i -t ubuntu /bin/bash\n```", "```\nadduser jenkins\n```", "```\nsu jenkins\n```", "```\napt-get update \napt-get install openssh-server \nmkdir /var/run/sshd \n```", "```\napt-get update\n```", "```\napt-get install default-jre\n```", "```\ncd /tmp \nwget https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.11/bin/apache-tomcat-8.5.11.tar.gz\n```", "```\nsu jenkins \nmkdir /home/jenkins/tomcat\n```", "```\ntar xzvf apache-tomcat-8*tar.gz \\\n-C /home/jenkins/tomcat --strip-components=1\n```", "```\ncd /tmp\n```", "```\nwget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-3.1.tgz\n```", "```\nmkdir /opt/jmeter\n```", "```\ntar xzvf apache-jmeter-3*.tgz \\\n-C /opt/jmeter --strip-components=1\n chown -R jenkins:jenkins /opt/jmeter/\n chmod -R 777 /opt/jmeter/\n```", "```\napt-get install curl\n```", "```\nsudo docker ps -a\n```", "```\nsudo docker commit <CONTAINER ID> <new name for the container>\n```", "```\nsudo docker images\n```", "```\nsudo apt-get update\n```", "```\nsudo apt-get install default-jre\n```", "```\nsudo update-alternatives --config java\n```", "```\ncd /tmp\n```", "```\nwget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-3.1.tgz\n```", "```\nmkdir /opt/jmeter\n```", "```\ntar xzvf apache-jmeter-3*.tgz \\\n-C /opt/jmeter --strip-components=1\n```", "```\ncd /opt/jmeter/bin \n./jmeter.sh\n```", "```\nnode('docker') {\n  stage('Poll') {\n    checkout scm\n  }\n  stage('Build & Unit test'){\n    sh 'mvn clean verify -DskipITs=true';\n    junit '**/target/surefire-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage('Static Code Analysis'){\n    sh 'mvn clean verify sonar:sonar -Dsonar.projectName=example-project\n    -Dsonar.projectKey=example-project\n    -Dsonar.projectVersion=$BUILD_NUMBER';\n  }\n  stage ('Integration Test'){\n    sh 'mvn clean verify -Dsurefire.skip=true';\n    junit '**/target/failsafe-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage ('Publish'){\n    def server = Artifactory.server 'Default Artifactory Server'\n    def uploadSpec = \"\"\"{\n      \"files\": [\n        {\n          \"pattern\": \"target/hello-0.0.1.war\",\n          \"target\": \"example-project/${BUILD_NUMBER}/\",\n          \"props\": \"Integration-Tested=Yes;Performance-Tested=No\"\n        }\n      ]\n    }\"\"\"\n    server.upload(uploadSpec)\n  }\n}\n```", "```\nstash includes: 'target/hello-0.0.1.war,src/pt/Hello_World_Test_Plan.jmx', name: 'binary'\n```", "```\nnode('docker_pt') {\n}\n```", "```\nsh '''cd /home/jenkins/tomcat/bin\n./startup.sh''';\n```", "```\nstage ('Start Tomcat'){\n    sh '''cd /home/jenkins/tomcat/bin\n    ./startup.sh''';\n}\n```", "```\nunstash 'binary'\nsh 'cp target/hello-0.0.1.war /home/jenkins/tomcat/webapps/';\n```", "```\nstage ('Deploy){\n    unstash 'binary'\n    sh 'cp target/hello-0.0.1.war /home/jenkins/tomcat/webapps/';\n}\n```", "```\nsh '''cd /opt/jmeter/bin/\n./jmeter.sh -n -t $WORKSPACE/src/pt/Hello_World_Test_Plan.jmx -l $WORKSPACE/test_report.jtl''';\n\nstep([$class: 'ArtifactArchiver', artifacts: '**/*.jtl'])\n```", "```\nstage ('Performance Testing'){\n    sh '''cd /opt/jmeter/bin/\n    ./jmeter.sh -n -t $WORKSPACE/src/pt/Hello_World_Test_Plan.jmx -l $WORKSPACE/test_report.jtl''';\n    step([$class: 'ArtifactArchiver', artifacts: '**/*.jtl'])\n}\n```", "```\nwithCredentials([usernameColonPassword(credentialsId: 'artifactory-account', variable: 'credentials')]) {\n    sh 'curl -u${credentials} -X PUT \"http://172.17.8.108:8081/artifactory/api/storage/example-project/${BUILD_NUMBER}/hello-0.0.1.war?properties=Performance-Tested=Yes\"';\n}\n```", "```\nstage ('Promote build in Artifactory'){\n    withCredentials([usernameColonPassword(credentialsId: 'artifactory-account', variable: 'credentials')]) {\n        sh 'curl -u${credentials} -X PUT \"http://172.17.8.108:8081/artifactory/api/storage/example-project/${BUILD_NUMBER}/hello-0.0.1.war?properties=Performance-Tested=Yes\"';\n    }\n}\n```", "```\nnode('docker_pt') {\n  stage ('Start Tomcat'){\n    sh '''cd /home/jenkins/tomcat/bin\n    ./startup.sh''';\n  }\n  stage ('Deploy '){\n    unstash 'binary'\n    sh 'cp target/hello-0.0.1.war /home/jenkins/tomcat/webapps/';\n  }\n  stage ('Performance Testing'){\n    sh '''cd /opt/jmeter/bin/\n    ./jmeter.sh -n -t $WORKSPACE/src/pt/Hello_World_Test_Plan.jmx -l\n    $WORKSPACE/test_report.jtl''';\n    step([$class: 'ArtifactArchiver', artifacts: '**/*.jtl'])\n  }\n  stage ('Promote build in Artifactory'){\n    withCredentials([usernameColonPassword(credentialsId:\n      'artifactory-account', variable: 'credentials')]) {\n        sh 'curl -u${credentials} -X PUT\n        \"http://172.17.8.108:8081/artifactory/api/storage/example-project/\n        ${BUILD_NUMBER}/hello-0.0.1.war?properties=Performance-Tested=Yes\"';\n      }\n  }\n}\n```", "```\nnode('docker') {\n  stage('Poll') {\n    checkout scm\n  }\n  stage('Build & Unit test'){\n    sh 'mvn clean verify -DskipITs=true';\n    junit '**/target/surefire-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage('Static Code Analysis'){\n    sh 'mvn clean verify sonar:sonar -Dsonar.projectName=example-project\n    -Dsonar.projectKey=example-project -Dsonar.projectVersion=$BUILD_NUMBER';\n  }\n  stage ('Integration Test'){\n    sh 'mvn clean verify -Dsurefire.skip=true';\n    junit '**/target/failsafe-reports/TEST-*.xml'\n    archive 'target/*.jar'\n  }\n  stage ('Publish'){\n    def server = Artifactory.server 'Default Artifactory Server'\n    def uploadSpec = \"\"\"{\n      \"files\": [\n        {\n          \"pattern\": \"target/hello-0.0.1.war\",\n          \"target\": \"example-project/${BUILD_NUMBER}/\",\n          \"props\": \"Integration-Tested=Yes;Performance-Tested=No\"\n        }\n      ]\n    }\"\"\"\n    server.upload(uploadSpec)\n  }\n  stash includes: 'target/hello-0.0.1.war,src/pt/Hello_World_Test_Plan.jmx',\n  name: 'binary'\n}\nnode('docker_pt') {\n  stage ('Start Tomcat'){\n    sh '''cd /home/jenkins/tomcat/bin\n    ./startup.sh''';\n  }\n  stage ('Deploy '){\n    unstash 'binary'\n    sh 'cp target/hello-0.0.1.war /home/jenkins/tomcat/webapps/';\n  }\n  stage ('Performance Testing'){\n    sh '''cd /opt/jmeter/bin/\n    ./jmeter.sh -n -t $WORKSPACE/src/pt/Hello_World_Test_Plan.jmx -l\n    $WORKSPACE/test_report.jtl''';\n    step([$class: 'ArtifactArchiver', artifacts: '**/*.jtl'])\n  }\n  stage ('Promote build in Artifactory'){\n    withCredentials([usernameColonPassword(credentialsId:\n      'artifactory-account', variable: 'credentials')]) {\n        sh 'curl -u${credentials} -X PUT\n        \"http://172.17.8.108:8081/artifactory/api/storage/example-project/\n        ${BUILD_NUMBER}/hello-0.0.1.war?properties=Performance-Tested=Yes\"';\n      }\n  }\n}\n```"]