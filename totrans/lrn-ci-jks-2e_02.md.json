["```\n sudo apt-get update\n```", "```\n sudo apt-get install default-jre \n```", "```\n update-java-alternatives -l\n```", "```\n java-1.8.0-openjdk-amd64  1081\n        /usr/lib/jvm/java-1.8.0-openjdk-amd64\n```", "```\n sudo nano /etc/environment \n```", "```\n        JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\" \n```", "```\n sudo source /etc/environment\n```", "```\n cd /tmp\n       wget https://archive.apache.org/dist/tomcat/tomcat-8/ \\\n        v8.5.16/bin/apache-tomcat-8.5.16.tar.gz\n```", "```\n sudo mkdir /opt/tomcat \n```", "```\n sudo tar xzvf apache-tomcat-8*tar.gz \\\n        -C /opt/tomcat --strip-components=1 \n```", "```\n sudo nano /etc/systemd/system/tomcat.service\n```", "```\n        [Unit] \n        Description=Apache Tomcat Web Application Container \n        After=network.target \n\n        [Service] \n        Type=forking \n\n        Environment=JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64                     \n        Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid \n        Environment=CATALINA_HOME=/opt/tomcat \n        Environment=CATALINA_BASE=/opt/tomcat \n        Environment='CATALINA_OPTS=-Xms512M -Xmx1024M\n        -server -XX:+UseParallelGC' \n        Environment='JAVA_OPTS=-Djava.awt.headless=true\n        -Djava.security.egd=file:/dev/./urandom' \n\n        ExecStart=/opt/tomcat/bin/startup.sh \n        ExecStop=/opt/tomcat/bin/shutdown.sh \n\n        RestartSec=10 \n        Restart=always \n\n        [Install] \n        WantedBy=multi-user.target \n```", "```\n sudo systemctl daemon-reload \n```", "```\n sudo systemctl start tomcat \n```", "```\n sudo systemctl status tomcat \n```", "```\n ● tomcat.service - Apache Tomcat Web Application Container \n          Loaded: loaded (/etc/systemd/system/tomcat.service; disabled;\n          vendor preset: enabled) \n          Active: active (running) since Mon 2017-07-31 21:27:39 UTC;\n          5s ago \n          Process: 6438 ExecStart=/opt/tomcat/bin/startup.sh (code=exited,\n          status=0/SUCCESS) \n         Main PID: 6448 (java) \n            Tasks: 44 \n           Memory: 132.2M \n              CPU: 2.013s \n           CGroup: /system.slice/tomcat.service \n                   └─6448 /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java\n       -Djava.util.logging.config.file=/opt/tomcat/conf/logging.properties\n       -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogMan \n```", "```\n sudo ufw enable \n```", "```\n sudo ufw allow 8080 \n```", "```\n sudo ufw enable \"OpenSSH\" \n```", "```\n sudo ufw status \n```", "```\n Status: active  \n        To                         Action      From \n        --                         ------      ---- \n        8080                       ALLOW       Anywhere \n        OpenSSH                    ALLOW       Anywhere \n        8080 (v6)                  ALLOW       Anywhere (v6) \n        OpenSSH (v6)               ALLOW       Anywhere (v6) \n```", "```\n sudo nano /opt/tomcat/conf/tomcat-users.xml \n```", "```\n        <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n        . . . \n        <tomcat-users  \n\n        xsi:schemaLocation=\"http://tomcat.apache.org/xml tomcat-users.xsd\" \n        version=\"1.0\"> \n        . . . \n          <!-- \n            <role rolename=\"tomcat\"/> \n            <role rolename=\"role1\"/> \n            <user username=\"tomcat\" password=\"<must-be-changed>\"\n             roles=\"tomcat\"/> \n            <user username=\"both\" password=\"<must-be-changed>\"\n             roles=\"tomcat,role1\"/> \n            <user username=\"role1\" password=\"<must-be-changed>\"\n             roles=\"role1\"/> \n          --> \n        </tomcat-users> \n```", "```\n        <role rolename=\"manager-gui\"/> \n        <role rolename=\"admin-gui\"/> \n        <user username=\"admin\" password=\"password\"\n         roles=\"manager-gui,admin-gui\"/>\n```", "```\n        <?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n        <tomcat-users  \n\n        xsi:schemaLocation=\"http://tomcat.apache.org/xml tomcat-users.xsd\" \n        version=\"1.0\"> \n          <role rolename=\"manager-gui\"/> \n          <role rolename=\"admin-gui\"/> \n          <user username=\"admin\" password=\"password\"\n           roles=\"manager-gui,admin-gui\"/> \n        </tomcat-users> \n```", "```\n        <Context antiResourceLocking=\"false\" privileged=\"true\" > \n          <!--<Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" \n          allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" />--> \n          <Manager sessionAttributeValueClassNameFilter=\"java\\.lang\\\n          .(?:Boolean|Integer|Long|Number|String)|org\\.apache\\.catalina\\\n          .filters\\.CsrfPreventionFilter\\$LruCache(?:\\$1)?|java\\.util\\\n          .(?:Linked)$ \n        </Context> \n```", "```\n sudo systemctl restart tomcat \n```", "```\n cd /tmp\n        wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war \n```", "```\n sudo mv jenkins.war /opt/tomcat/webapps/ \n```", "```\n sudo ls -l /opt/tomcat/webapps \n```", "```\n total 68984 \n        -rw-rw-r--  1 ubuntu ubuntu 70613578 Jul 19 22:37 jenkins.war \n        drwxr-x---  3 root   root       4096 Jul 31 21:09 ROOT \n        drwxr-x--- 14 root   root       4096 Jul 31 21:09 docs \n        drwxr-x---  6 root   root       4096 Jul 31 21:09 examples \n        drwxr-x---  5 root   root       4096 Jul 31 21:09 manager \n        drwxr-x---  5 root   root       4096 Jul 31 21:09 host-manager \n        drwxr-x--- 10 root   root       4096 Jul 31 22:52 jenkins \n```", "```\n cd /tmp \n wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war \n```", "```\n sudo mv jenkins.war ROOT.war \n```", "```\n sudo su - \n cd /opt/tomcat/webapps \n sudo rm -r * \n```", "```\n sudo mv /tmp/ROOT.war /opt/tomcat/webapps/ \n```", "```\n total 68964 \n        drwxr-x--- 10 root   root       4096 Jul 31 23:10 ROOT \n        -rw-rw-r--  1 ubuntu ubuntu 70613578 Jul 19 22:37 ROOT.war \n```", "```\n sudo systemctl stop tomcat \n```", "```\n sudo nano /opt/tomcat/conf/context.xml \n```", "```\n        <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n        <Context> \n          <WatchedResource>WEB-INF/web.xml</WatchedResource> \n          <WatchedResource>${catalina.base}/conf/web.xml</WatchedResource> \n        </Context>\n```", "```\n        <Environment name=\"JENKINS_HOME\" value=\"/var/jenkins_home\" \n        type=\"java.lang.String\"/> \n```", "```\n sudo systemctl start tomcat \n```", "```\n java -version \n```", "```\n java version \"1.8.0_121\" \n        Java(TM) SE Runtime Environment (build 1.8.0_121-b13) \n        Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode) \n```", "```\n where java \n```", "```\n C:\\Program Files\\Java\\jdk1.8.0_121\\bin\\java \n```", "```\n setx -m JAVA_HOME \"C:\\Program Files\\Java\\jdk1.8.121\" \n```", "```\n services.msc \n```", "```\n sudo apt-get update \n```", "```\n sudo apt-get install default-jre \n```", "```\n update-java-alternatives -l  \n```", "```\n java-1.8.0-openjdk-amd64 1081\n        /usr/lib/jvm/java-1.8.0-openjdk-amd64\n```", "```\n sudo nano /etc/environment \n```", "```\n        JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\" \n```", "```\n        sudo source /etc/environment\n```", "```\n wget --no-check-certificate -q -O \\\n        - https://pkg.jenkins.io/debian/jenkins-ci.org.key | \\\n sudo apt-key add - \n```", "```\n echo deb http://pkg.jenkins.io/debian binary/ | \\\n        sudo tee /etc/apt/sources.list.d/jenkins.list \n```", "```\n sudo apt-get update \n```", "```\n sudo apt-get install jenkins \n```", "```\n wget --no-check-certificate -q -O - \\\n        https://pkg.jenkins.io/debian-stable/jenkins-ci.org.key | \\\n        sudo apt-key add - \n```", "```\n echo deb http://pkg.jenkins.io/debian-stable binary/ | \\\n        sudo tee /etc/apt/sources.list.d/jenkins.list \n```", "```\n sudo apt-get update\n```", "```\n sudo apt-get install jenkins \n```", "```\n sudo systemctl start jenkins \n```", "```\n sudo systemctl stop jenkins \n```", "```\n sudo systemctl restart jenkins \n```", "```\n sudo systemctl status jenkins \n```", "```\n ● jenkins.service - LSB: Start Jenkins at boot time \n        Loaded: loaded (/etc/init.d/jenkins; bad; vendor preset: enabled) \n        Active: active (exited) since Wed 2017-07-19 22:34:39 UTC; 6min ago \n        Docs: man:systemd-sysv-generator(8) \n```", "```\n cd /tmp \n wget -O java_8.131.rpm \\\n        http://javadl.oracle.com/webapps/download/AutoDL? \\\n        BundleId=220304_d54c1d3a095b4ff2b6607d096fa80163 \n```", "```\n sudo rpm -ivh java_8.131.rpm \n```", "```\n sudo alternatives --config java \n```", "```\n There is 1 program that provides 'java'. \n        Selection    Command \n        ----------------------------------------------- \n        *+ 1           /usr/java/jre1.8.0_131/bin/java\n```", "```\n sudo sh \\\n        -c \"echo JAVA_HOME=/usr/java/jre1.8.0_131 >>\n        /etc/environment\" \n```", "```\n sudo wget -O /etc/yum.repos.d/jenkins.repo \\\n         http://pkg.jenkins-ci.org/redhat/jenkins.repo \n        sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n```", "```\n sudo yum install jenkins \n```", "```\n sudo wget -O /etc/yum.repos.d/jenkins.repo \\\n         http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo \n sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key \n```", "```\n sudo yum install jenkins\n```", "```\n sudo systemctl start jenkins \n```", "```\n sudo systemctl stop jenkins \n```", "```\n sudo systemctl restart jenkins \n```", "```\n sudo systemctl status jenkins  \n```", "```\n        ● jenkins.service - LSB: Jenkins Automation Server \n          Loaded: loaded (/etc/rc.d/init.d/jenkins; bad;\n          vendor preset: disabled) \n          Active: active (running) since Wed 2017-07-19 18:45:47 EDT;\n           2min 31s ago \n             Docs: man:systemd-sysv-generator(8) \n          Process: 1081 ExecStart=/etc/rc.d/init.d/jenkins start\n          (code=exited, status=0/SUCCESS) \n           CGroup: /system.slice/jenkins.service \n                   └─1706 /etc/alternatives/java\n           -Dcom.sun.akuma.Daemon=daemonized -Djava.awt.headless=true\n           -DJENKINS_HOME=/var/lib/j...\n```", "```\n sudo apt-get update\n```", "```\n sudo apt-get install nginx \n```", "```\n sudo ufw status \n```", "```\n Status: inactive \n```", "```\n sudo ufw enable  \n```", "```\n        Command may disrupt existing ssh connections.\n        Proceed with operation (y|n)? y \n        Firewall is active and enabled on system startup \n```", "```\n sudo ufw app list  \n```", "```\n        Available applications: \n          Nginx Full \n          Nginx HTTP \n          Nginx HTTPS \n          OpenSSH\n```", "```\n sudo ufw allow 'Nginx Full'  \n        Rules updated \n        Rules updated (v6) \n```", "```\n sudo ufw allow 'OpenSSH' \n```", "```\n sudo ufw status  \n```", "```\n        Status: active  \n        To                         Action      From \n        --                         ------      ---- \n        OpenSSH                    ALLOW       Anywhere \n        Nginx Full                 ALLOW       Anywhere \n        OpenSSH (v6)               ALLOW       Anywhere (v6) \n        Nginx Full (v6)            ALLOW       Anywhere (v6)\n```", "```\n systemctl status nginx  \n```", "```\n        ● nginx.service - A high performance web server and a reverse proxy\n        server \n           Loaded: loaded (/lib/systemd/system/nginx.service; enabled;\n           vendor preset: enabled) \n           Active: active (running) since Thu 2017-07-20 18:44:33 UTC;\n        45min ago \n         Main PID: 2619 (nginx) \n            Tasks: 2 \n           Memory: 5.1M \n              CPU: 13ms \n           CGroup: /system.slice/nginx.service \n                   ├─2619 nginx: master process /usr/sbin/nginx\n           -g daemon on;                master_process on \n                   └─2622 nginx: worker process\n```", "```\n ip route  \n```", "```\n        default via 10.0.2.2 dev enp0s3\n        10.0.2.0/24 dev enp0s3  proto kernel\n        scope link src 10.0.2.15\n        192.168.56.0/24 dev enp0s8  proto kernel  scope link\n        src 192.168.56.104 \n```", "```\n sudo systemctl stop nginx\n```", "```\n sudo systemctl start nginx \n```", "```\n sudo systemctl restart nginx \n```", "```\n sudo systemctl reload nginx \n```", "```\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n-keyout /etc/ssl/private/nginx-selfsigned.key -out \\\n/etc/ssl/certs/nginx-selfsigned.crt \n```", "```\nCountry Name (2 letter code) [AU]:DK \nState or Province Name (full name) [Some-State]:Midtjylland \nLocality Name (eg, city) []:Brande \nOrganization Name (eg, company) [Internet Widgits Pty Ltd]: Deviced.Inc \nOrganizational Unit Name (eg, section) []:DevOps \nCommon Name (e.g. server FQDN or YOUR name) []:<IP address of Nginx> \nEmail Address []:admin@organisation.com \n```", "```\nsudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048 \n```", "```\n sudo nano /etc/nginx/snippets/ssl-params.conf\n```", "```\n        # from https://cipherli.st/ \n        # and https://raymii.org/s/tutorials/\n          Strong_SSL_Security_On_nginx.html \n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; \n        ssl_prefer_server_ciphers on; \n        ssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\"; \n        ssl_ecdh_curve secp384r1; \n        ssl_session_cache shared:SSL:10m; \n        ssl_session_tickets off; \n        ssl_stapling on; \n        ssl_stapling_verify on; \n        resolver 8.8.8.8 8.8.4.4 valid=300s; \n        resolver_timeout 5s; \n        # disable HSTS header for now \n        #add_header Strict-Transport-Security \"max-age=63072000;\n         includeSubDomains; preload\"; \n        add_header X-Frame-Options DENY; \n        add_header X-Content-Type-Options nosniff; \n\n        ssl_dhparam /etc/ssl/certs/dhparam.pem; \n```", "```\n sudo cp /etc/nginx/sites-available/default \\\n        /etc/nginx/sites-available/default.backup\n```", "```\n sudo nano /etc/nginx/sites-available/default \n```", "```\n        server { \n            listen 80 default_server; \n            listen [::]:80 default_server; \n\n            # SSL configuration \n\n            # listen 443 ssl default_server; \n            # listen [::]:443 ssl default_server; \n\n            . . . \n\n            root /var/www/html; \n\n            . . . \n\n            index index.html index.htm index.nginx-debian.html; \n            server_name _; \n\n            . . . \n```", "```\n        server { \n            listen 80 default_server; \n            listen [::]:80 default_server; \n            server_name <nginx_server_ip or nginx domain name>; \n            return 301 https://$server_name$request_uri; \n        } \n\n            # SSL configuration \n\n            # listen 443 ssl default_server; \n            # listen [::]:443 ssl default_server; \n\n            . . .\n```", "```\n        server { \n            listen 80 default_server; \n            listen [::]:80 default_server; \n            server_name <nginx_server_ip or nginx domain name>; \n            return 301 https://$server_name$request_uri; \n        } \n\n        server { \n\n            # SSL configuration \n\n            listen 443 ssl http2 default_server; \n            listen [::]:443 ssl http2 default_server; \n\n            . . . \n```", "```\n        server { \n            listen 80 default_server; \n            listen [::]:80 default_server; \n            server_name <nginx_server_ip or nginx domain name>; \n            return 301 https://$server_name$request_uri; \n        } \n        server { \n\n            # SSL configuration \n\n            listen 443 ssl http2 default_server; \n            listen [::]:443 ssl http2 default_server; \n            ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt; \n            ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key; \n            include snippets/ssl-params.conf; \n\n            . . .\n```", "```\n        server { \n            # SSL configuration \n\n            . . . \n\n            server_name <nginx_server_ip or nginx domain name>; \n\n            . . . \n        } \n```", "```\n sudo nginx -t \n```", "```\n nginx: [warn] \"ssl_stapling\" ignored, issuer certificate not found \n        nginx: the configuration file /etc/nginx/nginx.conf syntax is ok \n        nginx: configuration file /etc/nginx/nginx.conf test is successful \n```", "```\n sudo systemctl restart nginx \n```", "```\n sudo nano /etc/default/jenkins\n```", "```\n        -httpListenAddress=<IP Address of your Jenkins>  \n```", "```\n        JENKINS_ARGS=\"--webroot=/var/cache/$NAME/war\n        --httpPort=$HTTP_PORT\n        --httpListenAddress=192.168.56.105\" \n```", "```\n sudo systemctl restart jenkins \n```", "```\n sudo systemctl status jenkins  \n```", "```\n        ● jenkins.service - LSB: Start Jenkins at boot time \n           Loaded: loaded (/etc/init.d/jenkins; bad;\n           vendor preset: enabled) \n           Active: active (exited) since Sat 2017-07-22 23:30:36 UTC;\n           18h ago \n             Docs: man:systemd-sysv-generator(8) \n```", "```\n sudo nano /etc/nginx/sites-available/default\n```", "```\n        location / { \n          # First attempt to serve request as file, then \n          # as directory, then fall back to displaying a 404\\. \n          # try_files $uri $uri/ =404; \n        } \n```", "```\n        location / { \n          # First attempt to serve request as file, then \n          # as directory, then fall back to displaying a 404\\. \n          #try_files $uri $uri/ =404; \n          include /etc/nginx/proxy_params; \n          proxy_pass http://<ip address of jenkins>:8080; \n          proxy_read_timeout  90s; \n          # Fix potential \"It appears that your reverse proxy set up\n is broken\" error. \n          proxy_redirect http://<ip address of jenkins>:8080\n https://your.ssl.domain.name; \n        } \n```", "```\n sudo nginx -t  \n```", "```\n        nginx: [warn] \"ssl_stapling\" ignored, issuer certificate not found \n        nginx: the configuration file /etc/nginx/nginx.conf syntax is ok \n        nginx: configuration file /etc/nginx/nginx.conf test is successful \n```", "```\n sudo systemctl restart nginx\n```", "```\n sudo ufw allow 8080 \n```", "```\n sudo ufw status  \n```", "```\n        Status: active  \n        To                         Action      From \n        --                         ------      ---- \n        OpenSSH                    ALLOW       Anywhere \n        Nginx Full                 ALLOW       Anywhere \n        8080                       ALLOW       Anywhere \n        OpenSSH (v6)               ALLOW       Anywhere (v6) \n        Nginx Full (v6)            ALLOW       Anywhere (v6) \n        8080 (v6)                  ALLOW       Anywhere (v6) \n```", "```\n sudo apt-get install apt-transport-https ca-certificates \n```", "```\n curl -fsSL https://yum.dockerproject.org/gpg | sudo apt-key add -\n```", "```\n apt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D\n```", "```\n        pub  4096R/2C52609D 2015-07-14 \n        Key fingerprint = 5811 8E89 F3A9 1289 7C07  0ADB F762 2157 2C52\n         609D \n        uid  Docker Release Tool (releasedocker) docker@docker.com \n```", "```\n sudo add-apt-repository \\\n       \"deb https://apt.dockerproject.org/repo/ubuntu-$(lsb_release \\\n       -cs) main\" \n```", "```\n sudo apt-get update \n```", "```\n sudo apt-get -y install docker-engine \n```", "```\n apt-cache madison docker-engine  \n```", "```\n        docker-engine | 1.16.0-0~trusty |\n        https://apt.dockerproject.org/repo ubuntu-trusty/main amd64\n        Packages docker-engine | 1.13.3-0~trusty |\n        https://apt.dockerproject.org/repo ubuntu-trusty/main amd64\n        Packages  \n        ...\n```", "```\n sudo apt-get -y install docker-engine=<VERSION_STRING>  \n        sudo apt-get -y install docker-engine=1.16.0-0~trusty \n```", "```\n sudo docker run hello-world  \n```", "```\n        Unable to find image 'hello-world:latest' locally \n        latest: Pulling from library/hello-world \n        b04784fba78d: Pull complete \n        Digest: sha256:\n          f3b3b28a45160805bb16542c9531888519430e9e6d6ffc09d72261b0d26ff74f \n        Status: Downloaded newer image for hello-world:latest \n\n        Hello from Docker! \n        This message shows that your installation appears to be working\n        correctly. \n        ... \n```", "```\n sudo dpkg -i /<path to package>/<docker package>.deb\n```", "```\n sudo docker run hello-world  \n```", "```\n        Hello from Docker! \n        This message shows that your installation appears to be working\n        correctly. \n```", "```\n docker run -d --name jenkins_dev -p 8080:8080 \\\n        -p 50000:50000 jenkins/jenkins:lts  \n```", "```\n        ...\n ...\n ... \n        d52829d9da9e0a1789a3117badc862039a0084677be6a771a959d8467b9cc267 \n```", "```\n sudo docker ps --format \"{{.ID}}: {{.Image}} {{.Names}}\"\n```", "```\n        d52829d9da9e: jenkins/jenkins:lts jenkins_dev \n```", "```\n sudo ip route  \n```", "```\n        default via 10.0.2.2 dev enp0s3 \n        10.0.2.0/24 dev enp0s3  proto kernel  scope link  src 10.0.2.15 \n        172.17.0.0/16 dev docker0  proto kernel  scope link  src 172.17.0.1 \n        192.168.56.0/24 dev enp0s8  proto kernel  scope link\n        src 192.168.56.107 \n```", "```\n sudo docker exec -it jenkins_dev \\\n        cat /var/jenkins_home/secrets/initialAdminPassword\n```", "```\n sudo docker exec -it jenkins_dev bash\n```", "```\n cat /var/jenkins_home/secrets/initialAdminPassword \\ \n```", "```\n 1538ededb4e94230aca12d10dd461e52 \n```", "```\n sudo docker run -d --name jenkins_prod -p 8080:8080\\\n        -p 50000:50000 -v jenkins-home-prod:/var/jenkins_home \\\n        jenkins/jenkins:lts \n```", "```\n sudo docker exec -it jenkins_prod ls -lrt /var/jenkins_home \n```", "```\n        total 72 \n        drwxr-xr-x  2 jenkins jenkins 4096 Jul 26 20:41 init.groovy.d \n        -rw-r--r--  1 jenkins jenkins  102 Jul 26 20:41\n         copy_reference_file.log \n        drwxr-xr-x 10 jenkins jenkins 4096 Jul 26 20:41 war \n        -rw-r--r--  1 jenkins jenkins    0 Jul 26 20:41\n         secret.key.not-so-secret \n        -rw-r--r--  1 jenkins jenkins   64 Jul 26 20:41 secret.key \n        drwxr-xr-x  2 jenkins jenkins 4096 Jul 26 20:41 plugins \n        drwxr-xr-x  2 jenkins jenkins 4096 Jul 26 20:41 jobs \n        drwxr-xr-x  2 jenkins jenkins 4096 Jul 26 20:41 nodes \n        -rw-r--r--  1 jenkins jenkins  159 Jul 26 20:41\n          hudson.model.UpdateCenter.xml \n        -rw-------  1 jenkins jenkins 1712 Jul 26 20:41 identity.key.enc \n        drwxr-xr-x  2 jenkins jenkins 4096 Jul 26 20:41 userContent \n        -rw-r--r--  1 jenkins jenkins  907 Jul 26 20:41 nodeMonitors.xml \n        drwxr-xr-x  3 jenkins jenkins 4096 Jul 26 20:41 logs \n        -rw-r--r--  1 jenkins jenkins    6 Jul 26 20:41\n          jenkins.install.UpgradeWizard.state \n        drwxr-xr-x  3 jenkins jenkins 4096 Jul 26 20:41 users \n        drwx------  4 jenkins jenkins 4096 Jul 26 20:41 secrets \n        -rw-r--r--  1 jenkins jenkins   94 Jul 26 20:41 jenkins.CLI.xml \n        -rw-r--r--  1 jenkins jenkins 1592 Jul 26 20:41 config.xml \n        drwxr-xr-x  2 jenkins jenkins 4096 Jul 26 20:41 updates \n```", "```\n sudo docker volume ls \n```", "```\n        DRIVER              VOLUME NAME \n\n        local               jenkins-home-prod \n```", "```\n sudo docker ps --format \"{{.ID}}: {{.Image}} {{.Names}}\"\n```", "```\n        5d612225f533: jenkins/jenkins:lts jenkins_prod \n```", "```\n sudo docker exec -it jenkins_prod \\\n        cat /var/jenkins_home/secrets/initialAdminPassword\n```", "```\n        7834556856f04925857723cc0d0523d7\n```", "```\n sudo docker exec -it jenkins_prod ls -lrt /var/jenkins_home/users \n```", "```\n        total 4 \n        drwxr-xr-x 2 jenkins jenkins 4096 Jul 26 21:38 developer \n```", "```\n sudo docker kill jenkins_prod\n        sudo docker rm jenkins_prod \n```", "```\n sudo docker ps -a --format \"{{.ID}}: {{.Image}} {{.Names}}\"\n```", "```\n        3511cd609b1b: hello-world eloquent_lalande \n```", "```\n sudo docker volume ls \n```", "```\n        DRIVER              VOLUME NAME \n\n        local               jenkins-home-prod \n```", "```\n sudo docker run -d --name jenkins_prod -p 8080:8080 \\\n        -p 50000:50000 -v jenkins-home-prod:/var/jenkins_home \\\n        jenkins/jenkins:lts \n```", "```\n sudo docker volume create --name jenkins-home-staging \n```", "```\n sudo docker volume create --name jenkins-home-development\n```", "```\n sudo docker volume ls \n```", "```\n        DRIVER              VOLUME NAME \n\n        local               jenkins-home-prod \n        local               jenkins-home-development \n        local               jenkins-home-staging\n```", "```\n sudo docker run --rm -it --user root \\\n        -v jenkins-home-prod:/var/jenkins_home \\\n        -v jenkins-home-staging:/var/jenkins_home_staging \\\n        jenkins/jenkins:lts bash -c \"cd /var/jenkins_home_staging \\\n        && cp -a /var/jenkins_home/* .\" \n```", "```\n sudo docker run --rm -it --user root \\\n        -v jenkins-home-prod:/var/jenkins_home \\\n        -v jenkins-home-development:/var/jenkins_home_development \\\n        jenkins/jenkins:lts bash -c \"cd /var/jenkins_home_development \\\n        && cp -a /var/jenkins_home/* .\" \n```", "```\n sudo docker run -d --name jenkins_staging \\\n        -v jenkins-home-staging:/var/jenkins_home -p 8081:8080 \\\n        -p 50001:50000 jenkins/jenkins:lts\n```", "```\n sudo docker run -d --name jenkins_development \\\n        -v jenkins-home-development:/var/jenkins_home -p 8082:8080 \\\n        -p 50002:50000 jenkins/jenkins:lts \n```"]