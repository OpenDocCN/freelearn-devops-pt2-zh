["```\n---\n- hosts: all\n  tasks: \n    - name: Install Apache \n      yum: \n        name: httpd \n        state: present \n      become: True\n    - name: Enable Apache \n    service: \n        name: httpd \n        state: started \n        enabled: True \n      become: True\n```", "```\nansible-playbook playbooks/setup_apache.yaml --syntax-check\n```", "```\nERROR! Syntax Error while loading YAML.\n  did not find expected '-' indicator\n\nThe error appears to have been in '/home/fale/Learning-Ansible-2.X-Third-Edition/Ch8/playbooks/setup_apache.yaml': line 10, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n    - name: Enable Apache\n    service:\n    ^ here\n```", "```\nfind . -type f | grep '.py$' | grep -v '__init__' | wc -l \n```", "```\ngrep -r 'supports_check_mode=True' | awk -F: '{print $1}' | sort | uniq | wc -l \n```", "```\ngrep -r 'supports_check_mode=True' | awk -F: '{print $1}' | sort | uniq \n```", "```\nansible-playbook --check -i ws01, playbooks/setup_apache.yaml\n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [Install Apache] ************************************************\nchanged: [ws01]\n\nTASK [Enable Apache] *************************************************\nchanged: [ws01]\n\nPLAY RECAP ***********************************************************\nws01                          : ok=3 changed=2 unreachable=0 failed=0\n```", "```\nTASK [Install Apache] ************************************************\nchanged: [ws01]\n```", "```\nTASK [Enable Apache] *************************************************\nchanged: [ws01]\n```", "```\n- hosts: all\n  tasks: \n    - name: Install Apache \n      yum: \n        name: httpd \n        state: present \n      become: True\n    - name: Enable Apache \n      service: \n        name: httpd \n        state: started \n        enabled: True \n      become: True\n    - name: Ensure Apache userdirs are properly configured\n      template:\n        src: ../templates/userdir.conf\n        dest: /etc/httpd/conf.d/userdir.conf\n      become: True\n```", "```\n#\n# UserDir: The name of the directory that is appended onto a user's home\n# directory if a ~user request is received.\n#\n# The path to the end user account 'public_html' directory must be\n# accessible to the webserver userid. This usually means that ~userid\n# must have permissions of 711, ~userid/public_html must have permissions\n# of 755, and documents contained therein must be world-readable.\n# Otherwise, the client will only receive a \"403 Forbidden\" message.\n#\n<IfModule mod_userdir.c>\n    #\n    # UserDir is disabled by default since it can confirm the presence\n    # of a username on the system (depending on home directory\n    # permissions).\n    #\n    UserDir enabled\n\n  ...\n\n```", "```\nansible-playbook -i ws01, playbooks/setup_and_config_apache.yaml --diff --check \n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [Install Apache] ************************************************\nok: [ws01]\n\nTASK [Enable Apache] *************************************************\nok: [ws01]\n\nTASK [Ensure Apache userdirs are properly configured] ****************\n--- before: /etc/httpd/conf.d/userdir.conf\n+++ after: /home/fale/.ansible/tmp/ansible-local-6756FTSbL0/tmpx9WVXs/userdir.conf\n@@ -14,7 +14,7 @@\n # of a username on the system (depending on home directory\n # permissions).\n #\n- UserDir disabled\n+ UserDir enabled\n\n #\n # To enable requests to /~user/ to serve the user's public_html\n\nchanged: [ws01]\n\nPLAY RECAP ***********************************************************\nws01                          : ok=4 changed=1 unreachable=0 failed=0 \n```", "```\n---\n- hosts: all\n  tasks: \n    - name: List files in /tmp \n      command: ls /tmp \n      register: list_files \n    - name: Check if file testfile.txt exists \n      assert: \n        that: \n          - \"'testfile.txt' in list_files.stdout_lines\" \n```", "```\nansible-playbook -i ws01, playbooks/assert_ls.yaml\n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [List files in /tmp] ********************************************\nchanged: [ws01]\n\nTASK [Check if file testfile.txt exists] *****************************\nfatal: [ws01]: FAILED! => {\n \"assertion\": \"'testfile.txt' in list_files.stdout_lines\", \n \"changed\": false, \n \"evaluated_to\": false, \n \"msg\": \"Assertion failed\"\n}\n to retry, use: --limit @/home/fale/Learning-Ansible-2.X-Third-Edition/Ch8/playbooks/assert_ls.retry\n\nPLAY RECAP ***********************************************************\nws01                          : ok=2 changed=1 unreachable=0 failed=1 \n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [List files in /tmp] ********************************************\nchanged: [ws01]\n\nTASK [Check if file testfile.txt exists] *****************************\nok: [ws01] => {\n \"changed\": false, \n \"msg\": \"All assertions passed\"\n}\n\nPLAY RECAP ***********************************************************\nws01                          : ok=3 changed=1 unreachable=0 failed=0\n```", "```\n- hosts: all\n  tasks: \n    - name: Ensure the file /tmp/ok exists \n      file: \n        name: /tmp/ok \n        state: touch \n      tags: \n        - file_present \n    - name: Ensure the file /tmp/ok does not exists \n      file: \n        name: /tmp/ok \n        state: absent \n      tags: \n        - file_absent \n```", "```\nansible-playbook -i ws01, playbooks/tags_example.yaml\n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [Ensure the file /tmp/ok exists] ********************************\nchanged: [ws01]\n\nTASK [Ensure the file /tmp/ok does not exists] ***********************\nchanged: [ws01]\n\nPLAY RECAP ***********************************************************\nws01                          : ok=3 changed=2 unreachable=0 failed=0 \n```", "```\nansible-playbook -i ws01, playbooks/tags_example.yaml -t file_present\n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [Ensure the file /tmp/ok exists] ********************************\nchanged: [ws01]\n\nPLAY RECAP ***********************************************************\nws01                          : ok=2 changed=1 unreachable=0 failed=0 \n```", "```\nansible-playbook -i ws01, playbooks/tags_example.yaml --skip-tags file_present \n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [Ensure the file /tmp/ok exists] ********************************\nchanged: [ws01]\n\nPLAY RECAP ***********************************************************\nws01                          : ok=2 changed=1 unreachable=0 failed=0 \n```", "```\n- name: Verify if Java8 is installed\n  command: rpm -q java-1.8.0-openjdk\n  args:\n    warn: False\n  register: java \n  ignore_errors: True \n  changed_when: java is failed \n\n- name: Ensure that Java11 is installed\n  yum:\n    name: java-11-openjdk\n    state: present\n  become: True\n  when: java is failed\n```", "```\n- name: Verify if Java8 is installed\n  command: rpm -q java-1.8.0-openjdk\n  args:\n    warn: False\n  register: java \n  ignore_errors: True \n  changed_when: java is failed \n```", "```\n- name: Ensure that Java11 is installed\n  yum:\n    name: java-11-openjdk\n    state: present\n  become: True\n  when: java is failed\n```", "```\nws01\n```", "```\n- hosts: ws01\n  roles: \n    - java \n```", "```\nansible-playbook playbooks/hosts/ws01.yaml \n```", "```\nPLAY [ws01] **********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01]\n\nTASK [java : Verify if Java8 is installed] ***************************\nfatal: [ws01]: FAILED! => {\"changed\": true, \"cmd\": [\"rpm\", \"-q\", \"java-1.8.0-openjdk\"], \"delta\": \"0:00:00.028358\", \"end\": \"2019-02-10 10:56:22.474350\", \"msg\": \"non-zero return code\", \"rc\": 1, \"start\": \"2019-02-10 10:56:22.445992\", \"stderr\": \"\", \"stderr_lines\": [], \"stdout\": \"package java-1.8.0-openjdk is not installed\", \"stdout_lines\": [\"package java-1.8.0-openjdk is not installed\"]}\n...ignoring\n\nTASK [java : Ensure that Java11 is installed] ************************\nchanged: [ws01]\n\nPLAY RECAP ***********************************************************\nws01 : ok=3 changed=2 unreachable=0 failed=0\n```", "```\n- hosts: all\n  tasks: \n    - name: Ensure the tag variable is properly set\n      fail: 'The version needs to be defined. To do so, please add: --extra-vars \"version=$[TAG/BRANCH]\"' \n      when: version is not defined \n    - name: Get last Project version \n      git: \n        repo: https://github.com/org/project.git \n        dest: \"/tmp\" \n        version: '{{ version }}' \n    - name: Maven clean install \n      shell: \"cd /tmp/project && mvn clean install\" \n```"]