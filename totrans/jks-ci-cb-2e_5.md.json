["```\nsudo apt-get install sloccount\n\n```", "```\n    mvn archetype:generate -DgroupId=nl.berg.packt.coverage -DartifactId=coverage -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0-SNAPSHOT \n\n    ```", "```\n    mvn clean cobertura:cobertura\n\n    ```", "```\n    -------------------------------------------------------\n    T E S T S\n    -------------------------------------------------------\n    Running nl.berg.packt.coverage.AppTest\n    Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time\n    elapsed: 0.036 sec\n\n    Results :\n    Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n\n    [INFO] [cobertura:cobertura {execution: default-cli}]\n    [INFO] Cobertura 1.9.4.1 - GNU GPL License (NO WARRANTY) –\n    Cobertura: Loaded information on 1 classes.\n    Report time: 107ms\n    [INFO] Cobertura Report generation was successful.\n\n    ```", "```\n    package nl.berg.packt.coverage;\n    import java.util.Random;\n    public class Dicey {\n      private Random generator;\n      public Dicey(){\n        this.generator = new Random();\n        throwDice();\n      }\n\n      private int throwDice() {\n        int value = generator.nextInt(6) + 1;\n        if (value > 3){\n          System.out.println(\"Dice > 3\");\n        }else{\n          System.out.println(\"Dice < 4\");\n        }\n        return value;\n      }\n    }\n    ```", "```\n    Public void testApp(){\n      new Dicey();\n      assertTrue( true );\n    }\n    ```", "```\n    mvn clean cobertura:cobertura\n\n    ```", "```\n    -------------------------------------------------------\n    T E S T S\n    -------------------------------------------------------\n    Running nl.berg.packt.coverage.AppTestDice < 4 Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec\n    ```", "```\n    <build>\n      <plugins>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>cobertura-maven-plugin</artifactId>\n            <version>2.6</version>\n            <configuration>\n            <formats>\n              <format>xml</format>\n              <format>html</format>\n            </formats>\n          </configuration>\n        </plugin>\n      </plugins>\n    </build>\n    ```", "```\n    mvn clean cobertura:cobertura\n\n    ```", "```\n    mvn archetype:generate -DgroupId=nl.berg.packt.pmd -DartifactId=pmd -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0-SNAPSHOT\n\n    ```", "```\n    package nl.berg.packt.pmd;\n    import java.util.Date;\n    public class PMDCandle {\n      private String MyIP = \"123.123.123.123\";\n      public void dontDontDoThisInYoourCode(){\n        System.out.println(\"Logging Framework please\"); \n        try {\n          int x =5;\n        }catch(Exception e){} String myString=null;\n        if (myString.contentEquals(\"NPE here\"));\n      }\n    }\n    ```", "```\n    mvn clean pmd:pmd\n\n    ```", "```\n    <reporting>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-jxr-plugin</artifactId>\n          <version>2.3</version>\n        </plugin>\n       <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-pmd-plugin</artifactId>\n      <version>3.2</version>\n      <configuration>\n      <targetJdk>1.6</targetJdk>\n      <format>xml</format>\n      <linkXref>true</linkXref>\n      <minimumTokens>100</minimumTokens>\n      <rulesets>\n        <ruleset>/rulesets/basic.xml</ruleset>\n        <ruleset>/rulesets/braces.xml</ruleset>\n        <ruleset>/rulesets/imports.xml</ruleset>\n        <ruleset>/rulesets/logging-java.xml</ruleset>\n        <ruleset>/rulesets/naming.xml</ruleset>\n        <ruleset>/rulesets/optimizations.xml</ruleset>\n        <ruleset>/rulesets/strings.xml</ruleset>\n        <ruleset>/rulesets/sunsecure.xml</ruleset>\n        <ruleset>/rulesets/unusedcode.xml</ruleset>\n      </rulesets>\n      </configuration>\n        </plugin>\n      </plugins>\n    </reporting>\n    ```", "```\n    mvn clean pmd:pmd\n\n    ```", "```\nunzip –l pmd-version.jar | grep rulesets\n\n```", "```\nString myString=null;\nif (myString.contentEquals(\"NPE here\"));\n```", "```\n\"NPE here\".contentEquals(myString)\n```", "```\nprivate String MyIP = \"123.123.123.123\";\n```", "```\n    mvn archetype:generate -DgroupId=nl.berg.packt.pmdrule -DartifactId=pmd_design -DarchetypeArtifactId=maven-archetype-quickstart -Dversion=1.0-SNAPSHOT\n\n    ```", "```\n    <reporting>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-jxr-plugin</artifactId>\n          <version>2.1</version>\n        </plugin>\n      <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-pmd-plugin</artifactId>\n      <version>2.6</version>\n      <configuration>\n      <targetJdk>1.6</targetJdk>\n      <format>xml</format>\n      <rulesets>\n        <ruleset>password_ruleset.xml</ruleset>\n      </rulesets>\n      </configuration>\n        </plugin>\n      </plugins>\n    </reporting>\n    ```", "```\n    <?xml version=\"1.0\"?>\n    <ruleset name=\"STUPID PASSWORDS ruleset\"\n\n      xsi:schemaLocation=\"http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd\"\n      xsi:noNamespaceSchemaLocation=\"http://pmd.sf.net/ruleset_xml_schema.xsd\">\n      <description>\n      Lets find stupid password examples\n      </description>\n    </ruleset>\n    ```", "```\n    public static void main( String[] args )\n    {\n      System.out.println( \"Hello World!\" );\n      String PASSWORD=\"secret\";\n    }\n    ```", "```\n    public class RuleTest {\n      static final String PASSWORD=\"secret\";\n    }\n    ```", "```\n    //VariableDeclaratorId[@Image='PASSWORD']\n    ```", "```\n    <rule  name=\"NO_PASSWORD\"\n      message=\"If we see a PASSWORD we should flag\"\n      class=\"net.sourceforge.pmd.rules.XPathRule\">\n      <description>\n      If we see a PASSWORD we should flag\n      </description>\n      <properties>\n        <property name=\"xpath\">\n        <value>\n    <![CDATA[\n    //VariableDeclaratorId[@Image='PASSWORD']\n\n    ]]>\n        </value>\n        </property>\n      </properties>\n      <priority>3</priority>\n      <example>\n    <![CDATA[\n    public class RuleTest {\n        static final String PASSWORD=\"secret\";\n    }\n    ]]>\n      </example>\n    </rule>\n    ```", "```\n<ruleset>password_ruleset.xml</ruleset>\n```", "```\n<rule ref=\"rulesets/imports.xml/DuplicateImports\"/>\n```", "```\n    mvn archetype:generate -DgroupId=nl.berg.packt.FindBugs_all - DartifactId=FindBugs_all -DarchetypeArtifactId=maven- archetype-quickstart -Dversion=1.0-SNAPSHOT\n\n    ```", "```\n    <build>\n    <plugins>\n    <plugin>\n    <groupId>org.codehaus.mojo</groupId>\n    <artifactId>FindBugs-maven-plugin</artifactId>\n    <version>3.0.0</version>\n    <configuration>\n    <FindBugsXmlOutput>true</FindBugsXmlOutput>\n    <FindBugsXmlWithMessages>true</FindBugsXmlWithMessages>\n    <onlyAnalyze>nl.berg.packt.FindBugs_all.candles.*</onlyAnal yze>\n    <effort>Max</effort>\n    </configuration>\n    </plugin>\n    </plugins>\n    </build>\n    ```", "```\n    package nl.berg.packt.FindBugs_all.candles;\n\n    public class FindBugsCandle {\n      public String answer=\"41\";\n      public boolean myBad(){\n        String guess= new String(\"41\");     if (guess==answer){ return true; }\n        return false;\n      }\n    }\n    ```", "```\n    <plugin>\n    <groupId>org.codehaus.mojo</groupId>\n    <artifactId>FindBugs-maven-plugin</artifactId>\n    <version>3.0.0</version>\n    <configuration>\n    <FindBugsXmlOutput>false</FindBugsXmlOutput>\n    <FindBugsXmlWithMessages>true</FindBugsXmlWithMessages>\n    <onlyAnalyze>nl.berg.packt.FindBugs_all.candles.*</onlyAnal yze>\n    <pluginList>http://downloads.sourceforge.net/project/fb- contrib/Current/fb-contrib-6.0.0.jar</pluginList>\n    <effort>Max</effort>\n    </configuration>\n    </plugin>\n    ```", "```\n    package nl.berg.packt.FindBugs_all.candles;\n\n    public class FindBugsFBCandle {\n      public String FBexample(){\n        String answer=\"This is the answer\";\n        return answer;\n      }\n    }\n    ```", "```\n<pluginList>http://downloads.sourceforge.net/project/fb- contrib/Current/fb-contrib-6.0.0.jar</pluginList>\n```", "```\nreturn \"This is the answer\";\n```", "```\n    <plugins>\n    <plugin>\n    <groupId>org.codehaus.mojo</groupId>\n    <artifactId>findBugs-maven-plugin</artifactId>\n    <version>3.0.0</version>\n    <configuration>\n    <FindBugsXmlOutput>true</FindBugsXmlOutput>\n    <FindBugsXmlWithMessages>true</FindBugsXmlWithMessages>\n    <effort>Max</effort>\n    </configuration>\n    </plugin>\n    ```", "```\n    package nl.berg.packt.FindBugs_all.candles;\n\n    public class FindBugsSecurityCandle {\n      private final String[] permissions={\"Read\", \"SEARCH\"};\n      private void infiniteLoop(int loops){\n        infiniteLoop(99);\n      }\n\n      public String[] exposure(){\n        return permissions;\n      }\n      public static void main(String[] args) { \n        String[] myPermissions = new FindBugsSecurityCandle().exposure();\n        myPermissions[0]=\"READ/WRITE\";\n        System.out.println(myPermissions[0]);\n      }\n    }\n    ```", "```\n<FindBugsXmlWithMessages>true</FindBugsXmlWithMessages>\n```", "```\nprivate void infiniteLoop(int loops){\n  infiniteLoop(99);\n}\n```", "```\n    classes (+28)\n    functions (+349)\n    ncss (+2404)\n    javadocs (+22)\n    javadoc lines (+80)\n    single line comments (+63)\n    multi-line comments (+215)\n```", "```\n    <project  \n      xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n      <modelVersion>4.0.0</modelVersion>\n      <groupId>nl.berg.packt.checkstyle</groupId>\n      <artifactId>checkstyle</artifactId>\n      <packaging>pom</packaging>\n      <version>1.0-SNAPSHOT</version>\n      <name>checkstyle</name>\n      <url>http://maven.apache.org</url>\n\n    <modules>\n    <module>api</module>\n    <module>help</module>\n    <module>impl</module>\n    <module>util</module>\n    <module>pack</module>\n    <module>tool</module>\n    <module>assembly</module>\n    <module>deploy</module>\n    <module>bundle</module>\n    </modules>\n    <build>\n    <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-checkstyle-plugin</artifactId>\n            <version>2.8</version>\n          </plugin>\n        </plugins>\n    </build>\n    <properties>\n    <project.build.sourceEncoding>UTF-8\n    </project.build.sourceEncoding>\n    </properties>\n    </project>\n    ```", "```\nJenkins_HOST/job/[Job-Name]/[Build-Number]/[Plugin-URL]Result/api/xml\n\n```", "```\nlocalhost:8080/job/ch5.quality.checkstyle.override/11/checkstyleResult/api/xml\n\n```", "```\n<checkStyleReporterResult>\n<newSuccessfulHighScore>true</newSuccessfulHighScore>\n<warningsDelta>38234</warningsDelta>\n<zeroWarningsHighScore>1026944</zeroWarningsHighScore>\n<zeroWarningsSinceBuild>0</zeroWarningsSinceBuild>\n<zeroWarningsSinceDate>0</zeroWarningsSinceDate>\n</checkStyleReporterResult>\n```", "```\n    #!/usr/bin/perl\n    $rand=int(rand(9)+1);\n\n    print <<MYXML;\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <checkstyle version=\"5.4\">\n    <file name=\"src/main/java/MAIN.java\">\n        <error line=\"$rand\" column=\"1\" severity=\"error\"  message=\"line=$rand\" source=\"MyCheck\"/>\n    </file>\n    </checkstyle>\n    MYXML\n    #Need this extra line for the print statement to work\n    ```", "```\n    //line 1\n    public class MAIN {\n    //line 3\n    public static void main(String[] args) {\n      System.out.println(\"Hello World\"); //line 5\n    }\n    //line 7\n    }\n    //line 9\n    ```", "```\n<checkstyle version=\"5.4\">\n<file name=\"src/main/java/MAIN.java\">\n    <error line=\"9\" column=\"1\" severity=\"error\" message=\"line=9\" source=\"MyCheck\"/>\n</file>\n```", "```\n    processFile <- function(file){\n      text <- readLines(file,encoding=\"UTF-8\")\n      if (length(text)> 500) print(file)\n      length(text)\n    }\n    javaFiles <- list.files(Sys.getenv('WORKSPACE'), recursive = TRUE, full.names = TRUE, pattern = \"\\\\.java$\")\n    propertiesFiles <- list.files(Sys.getenv('WORKSPACE'), recursive = TRUE, full.names = TRUE, pattern = \"\\\\.properties$\")\n    resultJava <- sapply(javaFiles, processFile)\n    resultProperties <- sapply(propertiesFiles,processFile)\n    warnings()\n    filename <-paste('Lengths_JAVA_',Sys.getenv('BUILD_NUMBER'),'.pdf',sep =\"\")\n    pdf(file=filename)\n    hist(resultJava,main=\"Frequency of length of JAVA files\")\n\n    filename <-paste('Lengths_Properties_',Sys.getenv('BUILD_NUMBER'),'.pdf',sep=\"\")\n    pdf(file=filename)\n    hist(resultProperties,main=\"Frequency of length of Property files\")\n    ```", "```\n    At revision 313948\n    no change for https://source.sakaiproject.org/svn/profile2/trunk since the previous build\n    [ch5.R.project.data] $ Rscript /tmp/hudson7641363251840585368.R\n    [1] \"/var/lib/jenkins/workspace/ch5.project.data/api/src/java/org/sakaiproject/profile2/logic/SakaiProxy.java\"\n    [1] \"/var/lib/jenkins/workspace/ch5.project.data/impl/src/java/org/sakaiproject/profile2/conversion/ProfileConverter.java\"\n    [1] \"/var/lib/jenkins/workspace/ch5.project.data/impl/src/java/org/sakaiproject/profile2/dao/impl/ProfileDaoImpl.java\"\n    14: In readLines(file, encoding = \"UTF-8\") :\n      incomplete final line found on '/var/lib/jenkins/workspace/ch5.project.data/tool/src/java/org/apache/wicket/markup/html/form/upload/MultiFileUploadField_ca_ES.properties'\n    Finished: SUCCESS\n    ```", "```\nprocessFile <- function(file){\n  text <- readLines(file,encoding=\"UTF-8\")\n  if (length(text)> 500) print(file)\n  length(text)\n}\n```", "```\njavaFiles <- list.files(Sys.getenv('WORKSPACE'), recursive = TRUE, full.names = TRUE, pattern = \"\\\\.java$\")\npropertiesFiles <- list.files(Sys.getenv('WORKSPACE'), recursive = TRUE, full.names = TRUE, pattern = \"\\\\.properties$\")\n```", "```\nresultJava <- sapply(javaFiles, processFile)\nresultProperties <- sapply(propertiesFiles,processFile)\n```", "```\n14: In readLines(file, encoding = \"UTF-8\") :\n  incomplete final line found on '/var/lib/jenkins/workspace/ch5.project.data/tool/src/java/org/apache/wicket/markup/html/form/upload/MultiFileUploadField_ca_ES.properties'\n```", "```\nfilename <-paste('Lengths_JAVA_',Sys.getenv('BUILD_NUMBER'),'.pdf',sep=\"\")\npdf(file=filename)\nhist(resultJava,main=\"Frequency of length of JAVA files\")\n```", "```\nlibrary(stringi)\nprocessFile <-function(file){\nstri_stats_latex(readLines(file,encoding=\"UTF-8\"))\n}\nresults<-processFile(file.choose())\npaste(\"Number of words in file:\", results[4])\n```"]