["```\ntest01.fale.io\n```", "```\n$ ansible-playbook -i test01.fale.io, webserver.yaml \n```", "```\n$ ansible-playbook -i hosts webserver.yaml \n```", "```\n[webserver] \nws01.fale.io \nws02.fale.io \n\n[database] \ndb01.fale.io \n```", "```\nVagrant.configure(\"2\") do |config|\n  config.vm.define \"ws01\" do |ws01|\n    ws01.vm.hostname = \"ws01.fale.io\"\n  end\n  config.vm.define \"ws02\" do |ws02|\n    ws02.vm.hostname = \"ws02.fale.io\"\n  end\n  config.vm.define \"db01\" do |db01|\n    db01.vm.hostname = \"db01.fale.io\"\n  end\n  config.vm.box = \"centos/7\"\nend\n```", "```\n$ ansible-playbook -i hosts firstrun.yaml \n```", "```\nPLAY [all] ***********************************************************\n\nTASK [Gathering Facts] ***********************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io]\nok: [db01.fale.io]\n\nTASK [Ensure ansible user exists] ************************************\nchanged: [ws02.fale.io]\nchanged: [db01.fale.io]\nchanged: [ws01.fale.io]\n...\n```", "```\n[webserver] \nws[01:02].fale.io \n\n[database] \ndb01.fale.io \n```", "```\n[webserver] \nws01.fale.io domainname=example1.fale.io \nws02.fale.io domainname=example2.fale.io \n\n[database] \ndb01.fale.io \n```", "```\n[webserver] \nws01.fale.io \nws02.fale.io \n\n[webserver:vars] \nhttps_enabled=True \n\n[database] \ndb01.fale.io \n```", "```\ndomainname=example1.fale.io \n```", "```\ndomainname=example2.fale.io \n```", "```\nhttps_enabled=True \n```", "```\nansible -i ec2.py all -m ping\n```", "```\n52.28.138.231 | SUCCESS => { \n    \"changed\": false, \n    \"ping\": \"pong\" \n} \n```", "```\nansible -i digital_ocean.py all -m ping \n```", "```\n188.166.150.79 | SUCCESS => { \n    \"changed\": false, \n    \"ping\": \"pong\" \n} \n46.101.77.55 | SUCCESS => { \n    \"changed\": false, \n    \"ping\": \"pong\" \n} \n```", "```\n    - name: Ensure HTTP can pass the firewall \n      firewalld: \n        service: http \n        state: enabled \n        permanent: True \n        immediate: True \n      become: True \n    - name: Ensure HTTPS can pass the firewall \n      firewalld: \n        service: https \n        state: enabled \n        permanent: True \n        immediate: True \n      become: True \n```", "```\n    - name: Ensure HTTP and HTTPS can pass the firewall \n      firewalld: \n        service: '{{ item }}' \n        state: enabled \n        permanent: True \n        immediate: True \n      become: True\n      with_items:\n        - http\n        - https\n```", "```\nansible-playbook -i hosts webserver.yaml\n```", "```\nPLAY [all] *********************************************************\n\nTASK [Gathering Facts] *********************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io]\n\nTASK [Ensure the HTTPd package is installed] ***********************\nok: [ws02.fale.io]\nok: [ws01.fale.io]\n\nTASK [Ensure the HTTPd service is enabled and running] *************\nok: [ws01.fale.io]\nok: [ws02.fale.io]\n\nTASK [Ensure HTTP and HTTPS can pass the firewall] *****************\nok: [ws01.fale.io] (item=http)\nok: [ws02.fale.io] (item=http)\nok: [ws01.fale.io] (item=https)\nok: [ws02.fale.io] (item=https)\n\nPLAY RECAP *********************************************************\nws01.fale.io                : ok=5 changed=0 unreachable=0 failed=0 \nws02.fale.io                : ok=5 changed=0 unreachable=0 failed=0\n```", "```\n\n- hosts: all \n  remote_user: ansible\n  vars: \n    users: \n      - alice \n      - bob \n    folders: \n      - mail \n      - public_html \n  tasks: \n    - name: Ensure the users exist \n      user: \n        name: '{{ item }}' \n      become: True \n      with_items: \n        - '{{ users }}' \n    ...\n```", "```\nansible-playbook -i hosts with_nested.yaml \n```", "```\nPLAY [all] *******************************************************\n\nTASK [Gathering Facts] *******************************************\nok: [db01.fale.io]\nok: [ws02.fale.io]\nok: [ws01.fale.io]\n\nTASK [Ensure the users exist] ************************************\nchanged: [db01.fale.io] => (item=alice)\nchanged: [ws02.fale.io] => (item=alice)\nchanged: [ws01.fale.io] => (item=alice)\nchanged: [db01.fale.io] => (item=bob)\nchanged: [ws02.fale.io] => (item=bob)\nchanged: [ws01.fale.io] => (item=bob)\n...\n```", "```\n--- \n- hosts: all \n  remote_user: ansible\n  tasks: \n    - name: Ensure the folder /tmp/iproute2 is present \n      file: \n        dest: '/tmp/iproute2' \n        state: directory \n      become: True \n    - name: Copy files that start with rt to the tmp folder \n      copy: \n        src: '{{ item }}' \n        dest: '/tmp/iproute2' \n        remote_src: True \n      become: True \n      with_fileglob: \n        - '/etc/iproute2/rt_*' \n```", "```\nansible-playbook -i hosts with_fileglobs.yaml \n```", "```\nPLAY [all] *****************************************************\n\nTASK [Gathering Facts] *****************************************\nok: [db01.fale.io]\nok: [ws02.fale.io]\nok: [ws01.fale.io]\n\nTASK [Ensure the folder /tmp/iproute2 is present] **************\nchanged: [ws02.fale.io]\nchanged: [ws01.fale.io]\nchanged: [db01.fale.io]\n\nTASK [Copy files that start with rt to the tmp folder] *********\nchanged: [ws01.fale.io] => (item=/etc/iproute2/rt_realms)\nchanged: [db01.fale.io] => (item=/etc/iproute2/rt_realms)\nchanged: [ws02.fale.io] => (item=/etc/iproute2/rt_realms)\nchanged: [ws01.fale.io] => (item=/etc/iproute2/rt_protos)\n...\n```", "```\n--- \n- hosts: all \n  remote_user: ansible \n  tasks: \n  - name: Create the folders /tmp/dirXY with XY from 1 to 10 \n    file: \n      dest: '/tmp/dir{{ item }}' \n      state: directory \n    with_sequence: start=1 end=10 \n    become: True \n```", "```\nansible-playbook -i hosts with_sequence.yaml \n```", "```\nPLAY [all] *****************************************************\n\nTASK [Gathering Facts] *****************************************\nok: [ws02.fale.io]\nok: [ws01.fale.io]\nok: [db01.fale.io]\n\nTASK [Create the folders /tmp/dirXY with XY from 1 to 10] ******\nchanged: [ws01.fale.io] => (item=1)\nchanged: [db01.fale.io] => (item=1)\nchanged: [ws02.fale.io] => (item=1)\nchanged: [ws01.fale.io] => (item=2)\nchanged: [db01.fale.io] => (item=2)\nchanged: [ws02.fale.io] => (item=2)\nchanged: [ws01.fale.io] => (item=3)\n...\n```"]