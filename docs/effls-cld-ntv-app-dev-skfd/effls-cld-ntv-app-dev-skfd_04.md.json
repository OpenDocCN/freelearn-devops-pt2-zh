["```\n<dependency>\n\u00a0\u00a0 <groupId>org.springframework.boot</groupId>\n\u00a0\u00a0 <artifactId>spring-boot-starter-data-jdbc</artifactId>\n</dependency>\n<dependency>\n\u00a0\u00a0 <groupId>org.springframework.boot</groupId>\n\u00a0\u00a0 <artifactId>spring-boot-starter-web</artifactId>\n</dependency> \n<dependency>\n\u00a0\u00a0 <groupId>com.h2database</groupId>\n\u00a0\u00a0 <artifactId>h2</artifactId>\n\u00a0\u00a0 <scope>runtime</scope>\n</dependency>\n<plugin>\n\u00a0\u00a0 <groupId>com.google.cloud.tools</groupId>\n\u00a0\u00a0 <artifactId>jib-maven-plugin</artifactId>\n\u00a0\u00a0 <version>2.8.0</version>\n\u00a0\u00a0 <configuration>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<from>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <image>openjdk:16-jdk-alpine</image>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</from>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<to>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <image>docker.io/hiashish/skaffold-introduction \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</image>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</to>\n\u00a0\u00a0 </configuration>\n</plugin>\n```", "```\nplugins {\u00a0\u00a0\n\u00a0\u00a0id 'com.google.cloud.tools.jib' version '2.8.0'\n} \n```", "```\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n    import org.springframework.web.bind.annotation.GetMapping;\n    import org.springframework.web.bind.annotation.RequestParam;\n    import org.springframework.web.bind.annotation.RestController;\n    import java.util.List;\n    @RestController\n    public class StateController {\n    \u00a0\u00a0\u00a0\u00a0private final StateService stateService;\n    \u00a0\u00a0\u00a0\u00a0private static final Logger LOGGER =\u00a0\u00a0\u00a0\u00a0LoggerFactory.getLogger(Controller.class);\n    \u00a0\u00a0\u00a0\u00a0public StateController(StateService stateService) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.stateService = stateService;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0@GetMapping(\"/states\")\n    \u00a0\u00a0\u00a0\u00a0private List<State> getAllStates() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LOGGER.info(\"Getting all state\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return stateService.findAll();\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0@GetMapping(value = \"/state\")\n    \u00a0\u00a0\u00a0\u00a0private String getSpecificState(@\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0RequestParam(required = false, name = \"name\", \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0defaultValue = \"Maharashtra\") String name) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return stateService.findByName(name);\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```\n    public record State(String name, String capital) {}\n    ```", "```\n    import java.util.List;\n    public interface StateRepository {\n    \u00a0\u00a0\u00a0\u00a0List<State> findAll();\n    \u00a0\u00a0\u00a0\u00a0String findByName(String name);\n    }\n    import org.springframework.jdbc.core.JdbcTemplate;\n    import org.springframework.jdbc.core.RowMapper;\n    import org.springframework.stereotype.Service;\n    import java.util.List;\n    @Service\n    public class StateService implements StateRepository{\n    \u00a0\u00a0\u00a0\u00a0private final JdbcTemplate;\n    \u00a0\u00a0\u00a0\u00a0public StateService(JdbcTemplate jdbcTemplate) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.jdbcTemplate = jdbcTemplate;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0private final RowMapper<State>\u00a0\u00a0rowMapper = (rs,\u00a0\u00a0\u00a0\u00a0rowNum) -> new State(rs.getString(\"name\"),\n    \u00a0\u00a0\u00a0\u00a0rs.getString(\"capital\"));\n    \u00a0\u00a0\u00a0\u00a0@Override\n    \u00a0\u00a0\u00a0\u00a0public List<State> findAll() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0String findAllStates = \"\"\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0select * from States\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return jdbcTemplate.query(findAllStates,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rowMapper);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0@Override\n    \u00a0\u00a0\u00a0\u00a0public String findByName(String name) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0String findByName = \"\"\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0select capital from States where name\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= ?;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return jdbcTemplate.queryForObject(findByName,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0String.class, name);\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```\n    INSERT INTO States VALUES ('Andra Pradesh','Hyderabad');\n    INSERT INTO States VALUES ('Arunachal Pradesh','Itangar');\n    INSERT INTO States VALUES ('Assam','Dispur');\n    INSERT INTO States VALUES ('Bihar','Patna');\n    INSERT INTO States VALUES ('Chhattisgarh','Raipur');\n    INSERT INTO States VALUES ('Goa','Panaji');\n    INSERT INTO States VALUES ('Gujarat','Gandhinagar');\n    INSERT INTO States VALUES ('Haryana','Chandigarh');\n    INSERT INTO States VALUES ('Himachal Pradesh','Shimla');\n    INSERT INTO States VALUES ('Jharkhand','Ranchi');\n    INSERT INTO States VALUES ('Karnataka','Bengaluru');\n    INSERT INTO States VALUES ('Kerala','Thiruvananthapuram');\n    INSERT INTO States VALUES ('Madhya Pradesh','Bhopal');\n    INSERT INTO States VALUES ('Maharashtra','Mumbai');\n    INSERT INTO States VALUES ('Manipur','Imphal');\n    INSERT INTO States VALUES ('Meghalaya','Shillong');\n    INSERT INTO States VALUES ('Mizoram','Aizawl');\n    INSERT INTO States VALUES ('Nagaland','Kohima');\n    INSERT INTO States VALUES ('Orissa','Bhubaneshwar');\n    INSERT INTO States VALUES ('Rajasthan','Jaipur');\n    INSERT INTO States VALUES ('Sikkim','Gangtok');\n    INSERT INTO States VALUES ('Tamil Nadu','Chennai');\n    INSERT INTO States VALUES ('Telangana','Hyderabad');\n    INSERT INTO States VALUES ('Tripura','Agartala');\n    INSERT INTO States VALUES ('Uttarakhand','Dehradun');\n    INSERT INTO States VALUES ('Uttar Pradesh','Lucknow');\n    INSERT INTO States VALUES ('West Bengal','Kolkata');\n    INSERT INTO States VALUES ('Punjab','Chandigarh');\n    ```", "```\n    DROP TABLE States IF EXISTS;\n    CREATE TABLE States(name VARCHAR(255), capital VARCHAR(255));\n    ```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0app: skaffold-introduction\n\u00a0\u00a0name: skaffold-introduction\nspec:\n\u00a0\u00a0replicas: 1\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0matchLabels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: skaffold-introduction\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: skaffold-introduction\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- image: docker.io/hiashish/skaffold-introduction\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: skaffold-introduction\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0app: skaffold-introduction\n\u00a0\u00a0name: skaffold-introduction\nspec:\n\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0- port: 8080\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protocol: TCP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 8080\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0app: skaffold-introduction\n\u00a0\u00a0type: LoadBalancer\n```", "```\napiVersion: skaffold/v2beta20\nkind: Config\nmetadata:\n\u00a0\u00a0name: indian-states\nbuild:\n\u00a0\u00a0artifacts:\n\u00a0\u00a0\u00a0\u00a0- image: docker.io/hiashish/skaffold-introduction\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0jib: {}\ndeploy:\n\u00a0\u00a0kubectl:\n\u00a0\u00a0\u00a0\u00a0manifests:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- k8s/mydeployment.yaml\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- k8s/myservice.yaml\n```", "```\nCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n```", "```\nDeploy Failed. Could not connect to cluster docker-desktop due to \"https://kubernetes.docker.internal:6443/version?timeout=32s\": dial tcp 127.0.0.1:6443: connect: connection refused. Check your connection for the cluster.\n```", "```\n$ skaffold dev\nListing files to watch...\n- docker.io/hiashish/skaffold-introduction\nGenerating tags...\n- docker.io/hiashish/skaffold-introduction -> docker.io/hiashish/skaffold-introduction:22f18cc-dirty\nChecking cache...\n- docker.io/hiashish/skaffold-introduction: Not found. Building\nStarting build...\nFound [docker-desktop] context, using local docker daemon.\nBuilding [docker.io/hiashish/skaffold-introduction]...\n[INFO] --- jib-maven-plugin:2.8.0:dockerBuild (default-cli) @ skaffold-introduction ---\n[INFO] Containerizing application to Docker daemon as hiashish/skaffold-introduction:22f18cc-dirty...\n[WARNING] Base image 'openjdk:16-jdk-alpine' does not use a specific image digest - build may not be reproducible\n[INFO] Building dependencies layer...\n[INFO] Building resources layer...\n[INFO] Building classes layer...\n[INFO] The base image requires auth. Trying again for openjdk:16-jdk-alpine...\n[INFO] Using credentials from Docker config (/Users/ashish/.docker/config.json) for openjdk:16-jdk-alpine\n[INFO] Using base image with digest: sha256:49d822f4fa4deb 5f9d0201ffeec9f4d113bcb4e7e49bd6bc063d3ba93aacbcae\n[INFO] Container entrypoint set to [java, -cp, /app/resources:/app/classes:/app/libs/*, com.example.indianstates.IndianStatesApplication]\n[INFO] Loading to Docker daemon...\n[INFO] Built image to Docker daemon as hiashish/skaffold-introduction:22f18cc-dirty\n[INFO] BUILD SUCCESS\n```", "```\n\u00a0\u00a0 $kubectl config current-context\n\u00a0\u00a0 docker-desktop\n```", "```\nStarting test...\nTags used in deployment:\n- docker.io/hiashish/skaffold-introduction -> docker.io/hiashish/skaffold-introduction:adb6df1b0757245bd08f790e93ed5f8cc621a8f7e500e3c5ad18505a8b677139\nStarting deploy...\n- deployment.apps/skaffold-introduction created\n- service/skaffold-introduction created\nWaiting for deployments to stabilize...\n- deployment/skaffold-introduction is ready.\nDeployments stabilized in 3.771 seconds\nPress Ctrl+C to exit\nWatching for changes...\n[skaffold-introduction]\u00a0\u00a0:: Spring Boot ::\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(v2.4.4)\n[skaffold-introduction] 2021-03-25 21:17:49.048\u00a0\u00a0INFO 1 --- [\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main] c.e.i.IndianStatesApplication\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: Starting IndianStatesApplication using Java 16-ea on skaffold-introduction-85bbfddbc9-bfxnx with PID 1 (/app/classes started by root in /)\n[skaffold-introduction] 2021-03-25 21:17:55.895\u00a0\u00a0INFO 1 --- [\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main] o.s.b.w.embedded.tomcat.TomcatWebServer\u00a0\u00a0: Tomcat started on port(s): 8080 (http) with context path ''\n[skaffold-introduction] 2021-03-25 21:17:55.936\u00a0\u00a0INFO 1 --- [\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main] c.e.i.IndianStatesApplication\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: Started IndianStatesApplication in 8.315 seconds (JVM running for 9.579)\n```", "```\n$ curl localhost:30368/states\n[{\"name\":\"Andra Pradesh\",\"capital\":\"Hyderabad\"},{\"name\":\"Arunachal Pradesh\",\"capital\":\"Itangar\"},{\"name\":\"Assam\",\"capital\":\"Dispur\"},{\"name\":\"Bihar\",\"capital\":\"Patna\"},{\"name\":\"Chhattisgarh\",\"capital\":\"Raipur\"},{\"name\":\"Goa\",\"capital\":\"Panaji\"},{\"name\":\"Gujarat\",\"capital\":\"Gandhinagar\"},{\"name\":\"Haryana\",\"capital\":\"Chandigarh\"},{\"name\":\"Himachal Pradesh\",\"capital\":\"Shimla\"},{\"name\":\"Jharkhand\",\"capital\":\"Ranchi\"},{\"name\":\"Karnataka\",\"capital\":\"Bengaluru\"},{\"name\":\"Kerala\",\"capital\":\"Thiruvananthapuram\"},{\"name\":\"Madhya Pradesh\",\"capital\":\"Bhopal\"},{\"name\":\"Maharashtra\",\"capital\":\"Mumbai\"},{\"name\":\"Manipur\",\"capital\":\"Imphal\"},{\"name\":\"Meghalaya\",\"capital\":\"Shillong\"},{\"name\":\"Mizoram\",\"capital\":\"Aizawl\"},{\"name\":\"Nagaland\",\"capital\":\"Kohima\"},{\"name\":\"Orissa\",\"capital\":\"Bhubaneshwar\"},{\"name\":\"Rajasthan\",\"capital\":\"Jaipur\"},{\"name\":\"Sikkim\",\"capital\":\"Gangtok\"},{\"name\":\"Tamil Nadu\",\"capital\":\"Chennai\"},{\"name\":\"Telangana\",\"capital\":\"Hyderabad\"},{\"name\":\"Tripura\",\"capital\":\"Agartala\"},{\"name\":\"Uttarakhand\",\"capital\":\"Dehradun\"},{\"name\":\"Uttar Pradesh\",\"capital\":\"Lucknow\"},{\"name\":\"West Bengal\",\"capital\":\"Kolkata\"},{\"name\":\"Punjab\",\"capital\":\"Chandigarh\"}]\n```", "```\n$ curl -X GET \"localhost:30368/state?name=Karnataka\"\nBengaluru\n```"]