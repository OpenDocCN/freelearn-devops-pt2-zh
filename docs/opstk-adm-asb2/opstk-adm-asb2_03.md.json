["```\n**$ source openrc**\n**$ openstack user create --password-prompt <username>**\n\n```", "```\n**$ openstack --os-cloud=<cloud name> user create --password-prompt \n  <username>**\n\n```", "```\n**$ openstack --os-cloud=<cloud name> project create \n  --description=\"<project description>\" <project name>** \n\n```", "```\n**$ openstack role add --user=<username> --project=<project name> <role name>**\n\n```", "```\nbase.yml             # master playbook for user creation \ngroup_vars/ \n  util_container     # assign variable values for this host group \nhosts                # static host inventory file \nroles/ \n  create-users-env   # user/project creation role \n   tasks/ \n     main.yml        # tasks file for this role \n   vars/ \n     main.yml        # variables associated with this role \n\n```", "```\n--- \n\n- name: Install random password generator package \n apt: name={{item}} state=present \n with_items: \n  - apg \n\n- name: Random generate passwords \n command: apg -n {{ pass_cnt }} -M NCL -q \n register: passwdss \n\n- name: Create users \n os_user: \n  cloud: \"{{CLOUD_NAME}}\" \n  state: present \n  name: \"{{ item.0 }}\" \n  password: \"{{ item.1 }}\" \n  domain: default \n with_together: \n  - \"{{userid}}\" \n  - \"{{passwdss.stdout_lines}}\" \n\n```", "```\n- name: Install random password generator package \n apt: name={{item}} state=present \n with_items: \n  - apg \n\n```", "```\n- name: Random generate passwords \n command: apg -n {{ pass_cnt }} -M NCL -q \n register: passwdss \n\n```", "```\n- name: Create users \n os_user: \n  cloud: \"{{CLOUD_NAME}}\" \n  state: present \n  name: \"{{ item.0 }}\" \n  password: \"{{ item.1 }}\" \n  domain: default \n with_together: \n  - \"{{userid}}\" \n  - \"{{passwdss.stdout_lines}}\" \n\n```", "```\n{{ item.0 }}  # variable placeholder used to set the usernames from the list  \n                defined in the userid variable \n\n{{ item.1 }}  # variable placeholder used to read in the output from the apg \n                command found within the passwdss variable registered earlier \n\n```", "```\n- name: Create user environments \n os_project: \n  cloud: \"{{CLOUD_NAME}}\" \n  state: present \n  name: \"{{ item }}\" \n  description: \"{{ item }}\" \n  domain_id: default \n  enabled: True \n with_items: \"{{tenantid}}\" \n\n- name: Assign user to specified role in designated environment \n os_user_role: \n  cloud: \"{{CLOUD_NAME}}\" \n  user: \"{{ item.0 }}\" \n  role: \"{{ urole }}\" \n  project: \"{{ item.1 }}\" \n with_together:  \n  - \"{{userid}}\" \n  - \"{{tenantid}}\" \n\n```", "```\n- name: User password assignment \n debug: msg=\"User {{ item.0 }} was added to {{ item.2 }} project, with the assigned password of {{ item.1 }}\" \n with_together: \n  - userid \n  - passwdss.stdout_lines \n  - tenantid \n\n```", "```\n--- \npass_cnt: 10 \nuserid: [ 'mrkt-dev01', 'mrkt-dev02', 'mrkt-dev03', 'mrkt-dev04', 'mrkt-dev05', 'mrkt-dev06', 'mrkt-dev07', 'mrkt-dev08', 'mrkt-dev09', 'mrkt-dev10' ] \ntenantid: [ 'MRKT-Proj01', 'MRKT-Proj02', 'MRKT-Proj03', 'MRKT-Proj04', 'MRKT-Proj05', 'MRKT-Proj06', 'MRKT-Proj07', 'MRKT-Proj08', 'MRKT-Proj09', 'MRKT-Proj10' ] \nurole: _member_ \n\n```", "```\npass_cnt  # with the value of 10, we would be creating 10 random passwords \n            with apg \n\nuserid    # the value is a comma delimited list of users to loop through \n            when executing the user-create Keystone command \n\ntenanted  # the value is a comma delimited list of tenant names to loop \n            through when executing the tenant-create Keystone command \n\nurole     # with the value of _member_, the user would be assigned the \n            member role to the tenant created \n\n```", "```\n--- \n# This playbook used to demo OpenStack Juno user, role and project features.  \n\n- hosts: util_container \n remote_user: root \n become: true \n roles: \ncreate-users-env \n\n```", "```\nhosts       # the host or host group to execute the playbook against \n\nremote_user # the user to use when executing the playbook on the \n              remote host(s) \nbecome      # will tell Ansible to become the above user on the \n              remote host(s) \n roles      # provide a list of roles to execute as part of \n              this playbook \n\n```", "```\n**$ lxc-ls -fancy**\n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n[util_container] \n172.29.236.199 \n\n```", "```\n# Here are variables related globally to the util_container host group \n\nCLOUD_NAME: default \n\n```", "```\n--- \n\n- name: Install random password generator package \n apt: name={{item}} state=present \n with_items: \n  - apg \n\n- name: Random generate passwords \n command: apg -n {{ pass_cnt }} -M NCL -q \n register: passwdss \n\n- name: Create users \n os_user: \n  cloud: \"{{CLOUD_NAME}}\" \n  state: present \n  name: \"{{ item.0 }}\" \n  password: \"{{ item.1 }}\" \n  domain: default \n with_together: \n  - \"{{userid}}\" \n  - \"{{passwdss.stdout_lines}}\" \n\n- name: Create user environments \n os_project: \n  cloud: \"{{CLOUD_NAME}}\" \n  state: present \n  name: \"{{ item }}\" \n  description: \"{{ item }}\" \n  domain_id: default \n  enabled: True \n with_items: \"{{tenantid}}\" \n\n- name: Assign user to specified role in designated environment \n os_user_role: \n  cloud: \"{{CLOUD_NAME}}\" \n  user: \"{{ item.0 }}\" \n  role: \"{{ urole }}\" \n  project: \"{{ item.1 }}\" \n with_together:  \n  - \"{{userid}}\" \n  - \"{{tenantid}}\" \n\n- name: User password assignment \n debug: msg=\"User {{ item.0 }} was added to {{ item.2 }} tenant, with the assigned password of {{ item.1 }}\" \n with_together: \n  - userid \n  - passwdss.stdout_lines \n  - tenantid \n\n```", "```\n--- \npass_cnt: 10 \nuserid: [ 'mrkt-dev01', 'mrkt-dev02', 'mrkt-dev03', 'mrkt-dev04', 'mrkt-dev05', 'mrkt-dev06', 'mrkt-dev07', 'mrkt-dev08', 'mrkt-dev09', 'mrkt-dev10' ] \ntenantid: [ 'MRKT-Proj01', 'MRKT-Proj02', 'MRKT-Proj03', 'MRKT-Proj04', 'MRKT-Proj05', 'MRKT-Proj06', 'MRKT-Proj07', 'MRKT-Proj08', 'MRKT-Proj09', 'MRKT-Proj10' ] \nurole: _member_ \n\n```", "```\n--- \n# This playbook used to demo OpenStack Juno user, role and project features.  \n\n- hosts: util_container \n remote_user: root \n become: true \n roles: \ncreate-users-env \n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n[util_container] \n172.29.236.199 \n\n```", "```\n# Here are variables related globally to the util_container host group \n\nCLOUD_NAME: default \n\n```", "```\n**$ cd os-admin-with-ansible-v2**\n**$ ansible-playbook -i hosts base.yml**\n\n```"]