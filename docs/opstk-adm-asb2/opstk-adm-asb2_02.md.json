["```\n    group_vars/ \n      group1           # here we assign variables to particular groups\n      group2           # \"\"\n    host_vars/\n      hostname1        # if systems need specific variables, put them here\n      hostname2        # \"\"\n\n    library/           # if any custom modules, put them here (optional)\n    filter_plugins/    # if any custom filter plugins, put them here \n                            (optional)\n\n    site.yml           # master playbook\n    webservers.yml        # playbook for webserver tier\n    dbservers.yml      # playbook for dbserver tier\n\n    roles/\n      common/          # this hierarchy represents a \"role\"\n        tasks/         #\n          main.yml     # <-- tasks file can include smaller files if \n                             warranted\n        handlers/      #\n          main.yml     # <-- handlers file\n        templates/     # <-- files for use with the template resource\n          ntp.conf.j2  # <------- templates end in .j2\n        files/         #\n          bar.txt      # <-- files for use with the copy resource\n          foo.sh       # <-- script files for use with the script resource\n        vars/          #\n          main.yml     # <-- variables associated with this role\n        defaults/      #\n          main.yml     # <-- default lower priority variables for this role\n        meta/          #\n          main.yml     # <-- role dependencies\n\n```", "```\n--- \n# Sample playbooks structure/syntax. \n\n- hosts: dbservers \n remote_user: root \n become: true \n roles: \n  - mysql-install \n\n```", "```\n--- \n# Sample simple playbooks structure/syntax  \n\n- name: Install MySQL Playbook \n hosts: dbservers \n remote_user: root \n become: true \n tasks: \n  - name: Install MySQL \n   apt: name={{item}} state=present \n   with_items: \n    - libselinux-python \n    - mysql \n    - mysql-server \n    - MySQL-python \n\n  - name: Copying my.cnf configuration file \n   template: src=cust_my.cnf dest=/etc/my.cnf mode=0755 \n\n  - name: Prep MySQL db \n   command: chdir=/usr/bin mysql_install_db \n\n  - name: Enable MySQL to be started at boot \n   service: name=mysqld enabled=yes state=restarted \n\n  - name: Prep MySQL db \n   command: chdir=/usr/bin mysqladmin -u root password 'passwd' \n\n```", "```\n--- \n- name: Install MySQL \n apt: name=\"{{ item }}\" state=present \n with_items: \n  - libselinux-python \n  - mysql \n  - mysql-server \n  - MySQL-python \n\n- name: Copying my.cnf configuration file \n template: src=cust_my.cnf dest=/etc/my.cnf mode=0755 \n\n- name: Prep MySQL db \n command: chdir=/usr/bin mysql_install_db \n\n- name: Enable MySQL to be started at boot \n service: name=mysqld enabled=yes state=restarted \n\n- name: Prep MySQL db \n command: chdir=/usr/bin mysqladmin -u root password 'passwd' \n\n```", "```\n    ---\n    - name: Install MySQL\n     apt: name=\"{{ item }}\" state=present\n     with_items:\n      - libselinux-python\n      - mysql\n      - mysql-server\n      - MySQL-python\n\n    - name: Copying my.cnf configuration file\n     template: src=cust_my.cnf dest=/etc/my.cnf mode=0755\n\n    - name: Prep MySQL db\n     command: chdir=/usr/bin mysql_install_db\n\n    - name: Enable MySQL to be started at boot\n     service: name=mysqld enabled=yes state=restarted\n    ...\n\n```", "```\n**$ pip uninstall -y ansible**\n**$ sed -i 's/^export ANSIBLE_GIT_RELEASE.*/export \n  ANSIBLE_GIT_RELEASE=${ANSIBLE_GIT_RELEASE:-\"v2.1.1.0-1\"}/' /opt/\n  openstack-ansible/scripts/bootstrap-ansible.sh**\n**$ cd /opt/openstack-ansible**\n**$ ./scripts/bootstrap-ansible.sh**\n\n```", "```\n    # Ansible managed: \n      /etc/ansible/roles/openstack_openrc/templates/clouds.yaml.j2 modified \n       on 2016-06-16 14:00:03 by root on 082108-allinone02\n    clouds:\n     default:\n      auth:\n       auth_url: http://172.29.238.2:5000/v3\n       project_name: admin\n       tenant_name: admin\n       username: admin   \n       password: passwd\n       user_domain_name: Default\n       project_domain_name: Default\n      region_name: RegionOne\n      interface: internal\n      identity_api_version: \"3\"\n\n```", "```\n- name: Copying my.cnf configuration file \n template: src=cust_my.cnf dest={{ CONFIG_LOC }} mode=0755 \n\n```", "```\n**$ ansible-playbook base.yml --extra-vars \"CONFIG_LOC=/etc/my.cnf\"**\n\n```", "```\n--- \n# Sample simple playbooks structure/syntax  \n\n- name: Install MySQL Playbook \n hosts: dbservers \n... \n vars: \n  CONFIG_LOC: /etc/my.cnf \n... \n\n```", "```\n--- \nCONFIG_LOC: /etc/my.cnf \n\n```", "```\n- name: Check Keystone process \n shell: ps -ef | grep keystone \n register: keystone_check \n\n```", "```\n**$ ansible dbservers -m setup**\n\n```", "```\nathena.example.com \n\n[ocean] \naegaeon.example.com \nceto.example.com \n\n[air] \naeolus.example.com \nzeus.example.com \napollo.example.com \n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n```", "```\n**$ cd playbooks/inventory**\n**$ ./dynamic_inventory.py**\n\n```", "```\n... \n},  \n  \"compute_all\": { \n    \"hosts\": [ \n      \"compute1_rsyslog_container-19482f86\",  \n      \"compute1\",  \n      \"compute2_rsyslog_container-dee00ea5\",  \n      \"compute2\" \n    ] \n  },  \n  \"utility_container\": { \n    \"hosts\": [ \n      \"infra1_utility_container-c5589031\" \n    ] \n  },  \n  \"nova_spice_console\": { \n    \"hosts\": [ \n      \"infra1_nova_spice_console_container-dd12200f\" \n    ],  \n    \"children\": [] \n  }, \n... \n\n```", "```\n**$ ansible-playbook -i inventory/dynamic_inventory.py playbooks/base.yml -l  \n  utility_container**\n\n```", "```\n---\n# Sample simple playbooks structure/syntax  \n\n- name: Install MySQL Playbook \n hosts: dbservers \n tasks: \n  - block: \n   - apt: name={{item}} state=present \n    with_items: \n     - libselinux-python \n     - mysql \n     - mysql-server \n     - MySQL-python \n\n   - template: src=cust_my.cnf dest=/etc/my.cnf mode=0755 \n\n   - command: chdir=/usr/bin mysql_install_db \n\n   - service: name=mysqld enabled=yes state=restarted \n\n   - command: chdir=/usr/bin mysqladmin -u root password 'passwd' \n\n  when: ansible_distribution == 'Ubuntu' \n  remote_user: root \n  become: true \n\n```", "```\n--- \n# Sample simple playbooks structure/syntax  \n\n- name: Install MySQL Playbook \n hosts: dbservers \n strategy: free \n tasks: \n ... \n\n```"]