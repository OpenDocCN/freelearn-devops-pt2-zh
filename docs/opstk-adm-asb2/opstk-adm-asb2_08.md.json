["```\n**$ openstack endpoint list**\n\n```", "```\n     **$ openstack user create \n            --project <project reserved for services> \n            --password <user password> <user name>**\n\n    ```", "```\n    **$ openstack user create --project service \n             --password passwd glance**\n\n    ```", "```\n    **$ openstack role add --user <user name> \n             --project <project reserved for services> <role>**\n\n    ```", "```\n    **openstack role add --user glance \n           --project service admin**\n\n    ```", "```\n**$ openstack service create --name <service name> \n  --description \"<service description>\" <service type>**\n\n```", "```\n**openstack service create --name glance \n--description \"Glance Image Service\" image**\n\n```", "```\n**$ openstack endpoint create --region <region name> \n  <service name> <service type> <endpoint url>**\n\n```", "```\n**$ openstack endpoint create --region alpha glance \n  internal \n  http://127.0.0.1:9292**\n**$ openstack endpoint create --region alpha glance \n  public \n  http://127.0.0.1:9292**\n\n```", "```\n**$ openstack endpoint list --service identity**\n\n```", "```\n**# Add public Keystone endpoint**\n**$ openstack endpoint create --region <region name> \n  keystone public <endpoint url>**\n**# Add an additional admin Keystone endpoint**\n**$ openstack endpoint create --region <region name> \n  keystone admin <endpoint url>**\n**# Disable the original public Keystone endpoint \n  with the local IP address \n  configured (URL will have a non-routable address)**\n**$ openstack endpoint set --disable <endpoint-id>**\n**# Disable the original admin Keystone endpoint with \n  the local IP address configured \n  (URL will have a non-routable address)**\n**$ openstack endpoint set --disable <endpoint-id>**\n\n```", "```\n**$ ansible <host> -m <module> -a <module arguments>**\n\n```", "```\nhost = glance_container  \nmodule = shell  \nadhoc command = sed -i 's+^auth_url = <current IP>:35357+auth_url = http://<alpha region IP>:35357+' /etc/glance/glance-api.conf \n\n```", "```\n**$ ansible glance_container -m shell -a \"sed -i \n's+^auth_url = http://172.30.238.2:35357+auth_url =  \n http://166.78.18.131:35357+' /etc/glance/glance-api.conf\"**\n\n```", "```\n**$ ansible nova_scheduler_container -m service -a \n   \"name=nova-scheduler state=restarted\"\u00a0**\n\n```", "```\n--- \n\n- name: Create users \n os_user: \n  cloud: \"{{CLOUD_NAME}}\" \n  state: present \n  name: \"{{ item.0 }}\" \n  password: \"{{ item.1 }}\" \n  default_project: \"{{ servicesproject }}\" \n  domain: default \n with_together: \n  - \"{{userid}}\" \n  - \"{{passwdss}}\" \n\n- name: Assign user to specified role in designated environment \n os_user_role: \n  cloud: \"{{CLOUD_NAME}}\" \n  user: \"{{ item.0 }}\" \n  role: \"{{ urole }}\" \n  project: \"{{ servicesproject }}\" \n with_together:  \n  - \"{{userid}}\" \n\n- name: Register the new services on the Admin region \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     service create --name \"{{ item.0 }}\" --description \"{{ item.1 }}\" \"{{ servicetype }}\" \n with_together: \n  - \"{{userid}}\" \n  - \"{{descrip}}\" \n\n```", "```\n--- \n\n- name: Register the region service endpoints on the Admin region \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     service endpoint create --region \"{{ item.1 }}\" \"{{ item.0 }}\" \"{{ item.2 }}\" \"{{ item.3 }}\" \n with_together: \n  - \"{{endpointname}}\" \n  - \"{{regionname}}\" \n  - \"{{endpointtype}}\" \n  - \"{{endpointurl}}\" \n\n```", "```\n--- \nuserid: [ 'glance', 'nova', 'neutron', 'heat' ] \npasswdss: [ 'passwd', 'passwd', 'passwd', 'passwd' ] \ndescrip: [ 'Glance Image Service', 'Nova Compute Service', 'Neutron Network Service', 'Heat Orchestration Service' ] \nservicetype: [ 'image', 'compute', 'network', 'orchestration' ] \n\nservicesproject: service \nurole: admin \n\n```", "```\n--- \nendpointname: [ 'glance', 'nova', 'neutron', 'heat' ]  \nregionname: alpha \nendpointtype: internal \nendpointurl: [ 'http://<alpha region IP>:9292', 'http://<alpha region IP>:8774/v2.1/%\\(tenant_id\\)s', 'http://<alpha region IP>:9696', 'http://<alpha region IP>:8004/v1/%\\(tenant_id\\)s' ] \n\n```", "```\nuserid          # name of the user to create \n\npasswdss        # passwords for the users being created \n\ndescript        # description for the service being registered \n\nservicetype     # type of service being registered \n\nservicesproject # name of the project where the services user accounts are associated \n\nurole           # name of the role to associate with the user \n\nendpointname    # service name of the endpoint being registered \n\nregionname      # name of the region \n\nendpointtype    # the type of endpoint being registered \n\nendpointurl     # the url of the endpoint \n\n```", "```\nconfig-admin.yml \n  config-admin-region \n\nregister-endpoints.yml \n  register-endpoints \n\n```", "```\n## Glance \nansible glance_container -m shell -a \"sed -i 's+^auth_url = http://172.30.238.2:35357+auth_url = http://<admin region IP>:35357+' /etc/glance/glance-api.conf\" \nansible glance_container -m shell -a \"sed -i 's+^auth_url = http://172.30.238.2:35357+auth_url = http://<admin region IP>:35357+' /etc/glance/glance-registry.conf\" \nansible glance_container -m shell -a \"sed -i 's+^auth_url = http://172.30.238.2:5000/v3+auth_url = http://<admin region IP>:5000/v3+' /etc/glance/glance-cache.conf\" \n\nansible glance_container -m shell -a \"sed -i 's+^auth_uri = http://172.30.238.2:5000+auth_uri = http://<admin region IP>:5000+' /etc/glance/glance-api.conf\" \nansible glance_container -m shell -a \"sed -i 's+^auth_uri = http://172.30.238.2:5000+auth_uri = http://<admin region IP>:5000+' /etc/glance/glance-registry.conf\" \n\nansible glance_container -m shell -a \"service glance-api restart\" \nansible glance_container -m shell -a \"service glance-registry restart\"  \n\n```", "```\n--- \n\n- name: Create users \n os_user: \n  cloud: \"{{CLOUD_NAME}}\" \n  state: present \n  name: \"{{ item.0 }}\" \n  password: \"{{ item.1 }}\" \n  default_project: \"{{ servicesproject }}\" \n  domain: default \n with_together: \n  - \"{{userid}}\" \n  - \"{{passwdss}}\" \n\n- name: Assign user to specified role in designated environment \n os_user_role: \n  cloud: \"{{CLOUD_NAME}}\" \n  user: \"{{ item.0 }}\" \n  role: \"{{ urole }}\" \n  project: \"{{ servicesproject }}\" \n with_together:  \n  - \"{{userid}}\" \n\n- name: Register the new services on the Admin region \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     service create --name \"{{ item.0 }}\" --description \"{{ item.1 }}\" \"{{ servicetype }}\" \n with_together: \n  - \"{{userid}}\" \n  - \"{{descrip}}\" \n\n```", "```\n--- \n\n- name: Register the region service endpoints on the Admin region \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     service endpoint create --region \"{{ item.1 }}\" \"{{ item.0 }}\" \"{{ item.2 }}\" \"{{ item.3 }}\" \n with_together: \n  - \"{{endpointname}}\" \n  - \"{{regionname}}\" \n  - \"{{endpointtype}}\" \n  - \"{{endpointurl}}\" \n\n```", "```\n# variables for config-admin-region \n\n--- \nuserid: [ 'glance', 'nova', 'neutron', 'heat' ] \npasswdss: [ 'passwd', 'passwd', 'passwd', 'passwd' ] \ndescrip: [ 'Glance Image Service', 'Nova Compute Service', 'Neutron Network Service', 'Heat Orchestration Service' ] \nservicetype: [ 'image', 'compute', 'network', 'orchestration' ] \n\nservicesproject: service \nurole: admin \n\n# variables for register-endpoints \n\n--- \nendpointname: [ 'glance', 'nova', 'neutron', 'heat' ]  \nregionname: alpha \nendpointtype: internal \nendpointurl: [ 'http://<alpha region IP>:9292', 'http://<alpha region IP>:8774/v2.1/%\\(tenant_id\\)s', 'http://<alpha region IP>:9696', 'http://<alpha region IP>:8004/v1/%\\(tenant_id\\)s' ] \n\n```", "```\n       --- \n       # This playbook used to demo OpenStack Juno user, role and project \n       features.  \n\n      - hosts: util_container \n      remote_user: root \n      become: true \n      roles: \n         - config-admin-region \n\n```", "```\n       --- \n       # This playbook used to demo OpenStack Juno user, role and project \n       features.  \n\n       - hosts: util_container \n        remote_user: root \n        become: true \n        roles: \n         - register-endpoints \n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n[util_container] \n172.29.236.224 \n\n```", "```\n**$ ansible-playbook -i hosts config-admin.yml**\n**$ ansible-playbook -i hosts register-endpoints.yml** \n\n```"]