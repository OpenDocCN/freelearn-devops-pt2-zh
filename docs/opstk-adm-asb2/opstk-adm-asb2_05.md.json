["```\n**$ nova backup <instance><backup name><backup-type><rotation>**\n**$ nova backup testinst bck-testinst weekly 5**\n\n```", "```\n**$ openstack server image create \n  --name=<snapshot name> <instance>**\n**$ openstack server image create \n  --name=snp-testinst testinst** \n\n```", "```\n**$ source openrc** \n**$ nova backup <instance> <backup name> \n  <backup-type><rotation>**\n\n```", "```\n**$ nova --os-username=<OS_USERNAME> --os-password=\n  <OS_PASSWORD> --os-tenant-\n  name=<OS_TENANT_NAME> --os-auth-url=<OS_AUTH_URL> \n  backup <instance><backup name>\n  <backup-type><rotation>**\n\n```", "```\n**$ source openrc**\n**$ openstack server list**\n**$ nova backup vm-with-vol-my_instance-v35vvbw67u7s \n  bck-vm-with-vol-my_instance-v35vvbw67u7s weekly 3**\n\n```", "```\n**$ source openrc**\n**$ openstack server image create \n  --name=<snapshot name> <instance>**\n\n```", "```\n**$ openstack --os-cloud=default server image create \n  --name=<snapshot name> <instance>**\n\n```", "```\n**$ source openrc**\n**$ openstack server list**\n**$ openstack server image create --name=snap-vm-\n  with-vol-my_instance-v35vvbw67u7s \n  vm-with-vol-my_instance-v35vvbw67u7s**\n\n```", "```\n**$ nova rebuild <instance> <image name>**\n**$ nova rebuild vm-with-vol-my_instance-v35vvbw67u7s \n  snap-vm-with-vol-my_instance-v35vvbw67u7s**\n\n```", "```\n--- \n\n- name: Retrieve tenantID \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     project list | awk '/ \"{{tenantname}}\" / { print $2 }' \n register: tenantid \n\n```", "```\n- name: Retrieve instance id from tenant \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     server list --all-projects --project \"{{ tenantid.stdout }}\" | awk 'NR > 3 { print $2 }' \n register: instid \n\n```", "```\n- name: Create instance snapshot \n command: openstack --os-cloud=\"{{ CLOUD_NAME }}\"  \n      server image create --name=\"{{ tenantname }}\"-snap-\"{{ item }}\" \"{{ item }}\"  \n with_items: \"{{instid.stdout_lines}}\" \n register: command_result \n failed_when: \"'_info' not in command_result.stderr\" \n\n```", "```\n- name: Confirm instance snapshot(s) \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     image list --format value --column Name \n register: snapchk \n\n- name: Image list output \n debug: msg=\"{{ item }}\" \n with_items: \"{{snapchk.stdout_lines}}\" \n\n```", "```\n--- \ntenantname: MRKT-Proj01 \n\n```", "```\n--- \n# This playbook used to demo OpenStack Newton user, role, image and volume features.  \n\n- hosts: util_container \n remote_user: root \n become: true \n roles: \n  - create-snapshot \n\n```", "```\nhosts       # the host or host group to execute the playbook against \n\nremote_user # the user to use when executing the playbook on the remote host(s) \n\nbecome      # will tell Ansible to become the above user on the remote host(s) \n\nroles       # provide a list of roles to execute as part of this playbook \n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n[util_container] \n172.29.236.199 \n\n```", "```\n# Here are variables related globally to the util_container host group \n\nCLOUD_NAME: default \n\n```", "```\n--- \n\n- name: Retrieve tenantID \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     project list | awk '/ \"{{tenantname}}\" / { print $2 }' \n register: tenantid \n\n- name: Retrieve instance id from tenant \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     server list --all-projects --project \"{{ tenantid.stdout }}\" | awk 'NR > 3 { print $2 }' \n register: instid \n\n- name: Create instance snapshot \n command: openstack --os-cloud=\"{{ CLOUD_NAME }}\"  \n      server image create --name=\"{{ tenantname }}\"-snap-\"{{ item }}\" \"{{ item }}\"  \n with_items: \"{{instid.stdout_lines}}\" \n register: command_result \n failed_when: \"'_info' not in command_result.stderr\" \n\n```", "```\n--- \ntenantname: MRKT-Proj01 \n\n```", "```\n--- \n# This playbook used to demo OpenStack Newton user, role, image and volume features.  \n\n- hosts: util_container \n remote_user: root \n become: true \n roles: \n  - create-snapshot \n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n[util_container] \n172.29.236.199 \n\n```", "```\n# Here are variables related globally to the util_container host group \n\nCLOUD_NAME: default \n\n```", "```\n**$ cd os-admin-with-ansible-v2**\n**$ ansible-playbook -i hosts snapshot-tenant.yml**\n\n```"]