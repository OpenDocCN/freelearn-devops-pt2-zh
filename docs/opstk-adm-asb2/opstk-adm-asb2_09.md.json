["```\nUSE keystone; \nSELECT local_user.user_id, local_user.name as username, role.name as role, project.name as tenant from local_user  \nINNER JOIN assignment ON  \nlocal_user.user_id=assignment.actor_id INNER JOIN  \nrole ON assignment.role_id=role.id INNER JOIN \nproject ON assignment.target_id=project.id \nORDER BY tenant; \n\n```", "```\nUser       # contains the raw user information such as ID, name, \n             password and etc. \nAssignment # contains the role assignment for all users \nRole       # is the list of roles created/available \nProject    # contains the list of projects/tenants created/available \n\n```", "```\nUSE nova; \nSELECT SUM(instances.vcpus) as vCPU, SUM(instances.memory_mb) as memory_MB, SUM(instances.root_gb) as disk_GB, keystone.project.name as tenant from instances \nINNER JOIN keystone.project ON \ninstances.project_id=keystone.project.id  \nWHERE instances.vm_state='active' GROUP BY tenant; \n\n```", "```\nnova \nInstances # contains the raw information about instances created \n\nkeystone \nProject   # contains the list of projects/tenants created/available \n\n```", "```\nUSE neutron; \nSELECT networks.id, networks.name, subnets.name as subnet, subnets.cidr, networks.status, keystone.project.name as tenant from networks \nINNER JOIN keystone.project ON networks.project_id COLLATE utf8_unicode_ci = keystone.project.id  \nINNER JOIN subnets ON networks.id=subnets.network_id \nORDER BY tenant; \n\n```", "```\nneutron \nNetworks # contains the raw information about networks created \nSubnets  # contains the subnet details associated with the networks \n\nkeystone \nProject  # contains the list of projects/tenants created/available \n\n```", "```\nUSE cinder; \nSELECT volumes.id, volumes.display_name as volume_name, volumes.size as size_GB, volume_types.name as volume_type, keystone.project.name as tenant from volumes \nINNER JOIN keystone.project ON volumes.project_id=keystone.project.id  \nINNER JOIN volume_types ON volumes.volume_type_id=volume_types.id \nWHERE volumes.status='available' \nORDER BY tenant; \n\nSELECT SUM(volumes.size) as volume_usage_GB, keystone.project.name as tenant from volumes \nINNER JOIN keystone.project ON volumes.project_id=keystone.project.id \nWHERE volumes.status='available' \nGROUP BY tenant; \n\nSELECT volume_types.name as volume_type, SUM(volumes.size) as volume_usage_GB from volumes \nINNER JOIN volume_types ON volumes.volume_type_id=volume_types.id \nWHERE volumes.status='available' \nGROUP BY volume_type; \n\n```", "```\nUSE keystone; \nSELECT count(*) as total_users from user WHERE user.enabled=1; \nSELECT count(*) as total_projects from project WHERE project.enabled=1; \nUSE cinder; \nSELECT count(*) as total_volumes, SUM(volumes.size) as total_volume_usage_GB from volumes \nWHERE volumes.status='available'; \nUSE neutron; \nSELECT count(*) as total_networks from networks WHERE networks.status='ACTIVE'; \nUSE nova; \nSELECT SUM(instances.vcpus) as total_vCPU, SUM(instances.memory_mb) as total_memory_MB, SUM(instances.root_gb) as total_disk_GB from instances \nWHERE instances.vm_state='active'; \n\n```", "```\n--- \n name: Create working directory \n file: path=\"{{ REPORT_DIR }}\" state=directory \n ignore_errors: yes \n\n name: Copy the cloud_report script \n copy: src=cloud_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+------------------------------------+\"; echo \"| {{ COMPANY }} Cloud Report     |\"; echo \"| Created at {{ lookup('pipe', 'date +%Y-%m-%d%t%X') }} |\"; echo \"+------------------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute cloud report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/cloud_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path=\"{{ REPORT_DIR }}\" state=directory \n ignore_errors: yes \n\n name: Retrieve projectIDs \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     project list | awk 'NR > 3 { print $2 }' \nregister: tenantid \n\n name: Add report header \n shell: ( echo \"+------------------------------------+\"; echo \"| Project Usage Report        |\"; echo \"| Created at {{ lookup('pipe', 'date +%Y-%m-%d%t%X') }} |\"; echo \"+------------------------------------+\"; echo \" \"; ) >> {{ REPORT_DIR }}/os_usage_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Record project usage \n shell: ( echo \"Project - {{ item }}\" && openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     usage show --start {{ RPTSTART }} --end {{ RPTEND }} --project {{ item }} && echo \" \" ) >> {{ REPORT_DIR }}/os_usage_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n with_items: \"{{ tenantid.stdout_lines }}\" \n\n name: Retrieve project usage report file \n fetch: src={{ REPORT_DIR }}/os_usage_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log dest={{ REPORT_DEST }} flat=yes \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n\n name: Copy the user_report script \n copy: src=user_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+------------------------+\"; echo \"| Cloud User Report   |\"; echo \"+------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute user report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/user_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n\n name: Copy the tenant_report script \n copy: src=project_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+-------------------------+\"; echo \"| Cloud Project Report   |\"; echo \"+-------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute tenant report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/project_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n\n name: Copy the network_report script \n copy: src=network_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+-------------------------+\"; echo \"| Cloud Network Report  |\"; echo \"+-------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute network report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/network_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n\n name: Copy the volume_report script \n copy: src=volume_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+--------------------------+\"; echo \"| Cloud Volume Report   |\"; echo \"+--------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute volume report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/volume_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n name: Retrieve completed cloud report file \n fetch: src={{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log dest={{ REPORT_DEST }} flat=yes \n\n```", "```\nutil_container \n\n# Here are variables related globally to the util_container host group \n\nCLOUD_NAME: default \n\nREPORT_DIR: /usr/share/os-report \nREPORT_DEST: /usr/share/ \nRPTSTART: 2016-10-01 \nRPTEND: 2016-11-01 \n\ngalera_container \n\n# Here are variables related globally to the galera_container host group \n\nMYSQLPASS: passwd \nCOMPANY: Rackspace RPC \nREPORT_DIR: /usr/share/os-report \nREPORT_DEST: /usr/share/ \n\n```", "```\nREPORT_DIR  # the directory where the report is \n              stored temporarily remotely \nREPORT_DEST # the directory where the report is saved locally \n\nRPTSTART    # the start date when collecting cloud usage \n\nRPTEND      # the end date when collecting cloud usage \n\nMYSQLPASS   # the password for the root database user \n\nCOMPANY     # the company name to show up in the report header \n\n```", "```\n--- \n# This playbook used to run a cloud resource inventory report.  \n\n hosts: galera_container \n remote_user: root \n become: true \n roles: \n  - cloud-inventory \n\n hosts: util_container \n remote_user: root \n become: true \n roles: \n  - cloud-usage \n\n hosts: galera_container \n remote_user: root \n become: true \n roles: \n  - user-inventory \n  - project-inventory \n  - network-inventory \n  - volume-inventory \n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n[util_container] \n172.29.236.85 \n\n[galera_container] \n172.29.236.72 \n\n```", "```\n--- \n name: Create working directory \n file: path=\"{{ REPORT_DIR }}\" state=directory \n ignore_errors: yes \n\n name: Copy the cloud_report script \n copy: src=cloud_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+------------------------------------+\"; echo \"| {{ COMPANY }} Cloud Report     |\"; echo \"| Created at {{ lookup('pipe', 'date +%Y-%m-%d%t%X') }} |\"; echo \"+------------------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute cloud report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/cloud_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path=\"{{ REPORT_DIR }}\" state=directory \n ignore_errors: yes \n\n name: Retrieve projectIDs \n shell: openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     project list | awk 'NR > 3 { print $2 }' \n register: tenantid \n\n name: Add report header \n shell: ( echo \"+------------------------------------+\"; echo \"| Project Usage Report        |\"; echo \"| Created at {{ lookup('pipe', 'date +%Y-%m-%d%t%X') }} |\"; echo \"+------------------------------------+\"; echo \" \"; ) >> {{ REPORT_DIR }}/os_usage_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Record project usage \n shell: ( echo \"Project - {{ item }}\" && openstack --os-cloud=\"{{ CLOUD_NAME }}\" \n     usage show --start {{ RPTSTART }} --end {{ RPTEND }} --project {{ item }} && echo \" \" ) >> {{ REPORT_DIR }}/os_usage_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n with_items: \"{{ tenantid.stdout_lines }}\" \n\n name: Retrieve project usage report file \n fetch: src={{ REPORT_DIR }}/os_usage_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log dest={{ REPORT_DEST }} flat=yes \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n\n name: Copy the user_report script \n copy: src=user_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+------------------------+\"; echo \"| Cloud User Report   |\"; echo \"+------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute user report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/user_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n\n name: Copy the tenant_report script \n copy: src=project_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+-------------------------+\"; echo \"| Cloud Project Report   |\"; echo \"+-------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute tenant report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/project_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n\n name: Copy the network_report script \n copy: src=network_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+-------------------------+\"; echo \"| Cloud Network Report  |\"; echo \"+-------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute network report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/network_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n```", "```\n--- \n name: Create working directory \n file: path={{ REPORT_DIR }} state=directory \n ignore_errors: yes \n name: Copy the volume_report script \n copy: src=volume_report.sql dest=/usr/share mode=0755 \n\n name: Add report header \n shell: ( echo \"+--------------------------+\"; echo \"| Cloud Volume Report   |\"; echo \"+--------------------------+\"; ) >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log  \n\n name: Execute volume report \n shell: chdir=/usr/bin mysql -u root --password={{ MYSQLPASS }} --table < /usr/share/volume_report.sql >> {{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log \n\n name: Retrieve completed cloud report file \n fetch: src={{ REPORT_DIR }}/os_report_{{ lookup('pipe', 'date +%Y%m%d') }}.log dest={{ REPORT_DEST }} flat=yes \n\n```", "```\n# Here are variables related globally to the util_container host group \n\nCLOUD_NAME: default \n\nREPORT_DIR: /usr/share/os-report \nREPORT_DEST: /usr/share/ \nRPTSTART: 2016-10-01 \nRPTEND: 2016-11-01 \n\n```", "```\n# Here are variables related globally to the galera_container host group \n\nMYSQLPASS: passwd \nCOMPANY: Rackspace RPC \nREPORT_DIR: /usr/share/os-report \nREPORT_DEST: /usr/share/ \n\n```", "```\n--- \n# This playbook used to run a cloud resource inventory report.  \n\n hosts: galera_container \n remote_user: root \n become: true \n roles: \n  - cloud-inventory \n\n hosts: util_container \n remote_user: root \n become: true \n roles: \n  - cloud-usage \n\n hosts: galera_container \n remote_user: root \n become: true \n roles: \n  - user-inventory \n  - project-inventory \n  - network-inventory \n  - volume-inventory \n\n```", "```\n[localhost] \nlocalhost ansible_connection=local \n\n[util_container] \n172.29.236.85 \n\n[galera_container] \n172.29.236.72 \n\n```", "```\n**$ cd os-admin-with-ansible-v2/cloud-inventory**\n**$ ansible-playbook -i hosts inventory.yml**\n\n```"]