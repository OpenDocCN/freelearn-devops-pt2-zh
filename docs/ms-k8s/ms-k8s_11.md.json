["```\n> kubectl --context=federation-cluster create -f configmap.yaml  \n```", "```\n> kubectl --context=cluster-1 get configmap configmap.yaml  \n```", "```\n> kubectl --context=federation-cluster delete configmap      \n```", "```\n> kubectl --context=cluster-1 delete configmap\n> kubectl --context=cluster-2 delete configmap\n> kubectl --context=cluster-3 delete configmap \n```", "```\n> kubectl --context=federation-cluster get events  \n```", "```\n--runtime-config=api/all=true  \n```", "```\napiVersion: autoscaling/v1 \nkind: HorizontalPodAutoscaler \nmetadata: \n  name: cool-app \n  namespace: default \nspec: \n  scaleTargetRef: \n    apiVersion: apps/v1beta1 \n    kind: Deployment \n    name: cool-app \n  minReplicas: 6 \n  maxReplicas: 16 \n  targetCPUUtilizationPercentage: 80 \n```", "```\n> kubectl --context=federation-cluster create federated-hpa.yaml  \n```", "```\n> kubectl --context=federation-cluster create -f ingress.yaml  \n```", "```\n> kubectl --context=cluster-1 get ingress myingress\nNAME        HOSTS     ADDRESS           PORTS     AGE\ningress      *         157.231.15.33    80, 443   1m  \n```", "```\n> kubectl --context=federation-cluster create -f namespace.yaml\n> kubectl --context=cluster-1 get namespaces namespace\n> kubectl --context=federation-cluster create -f namespace.yaml  \n```", "```\ntype FederatedReplicaSetPreferences struct { \n  Rebalance bool \n  Clusters map[string]ClusterReplicaSetPreferences \n} \n```", "```\ntype ClusterReplicaSetPreferences struct { \n  MinReplicas int64 \n  MaxReplicas *int64 \n  Weight int64 \n} \n```", "```\netcd \nfederation-apiserver \nfederation-controller-manager \n```", "```\n> curl -L https://github.com/kubernetes/kubernetes/releases/download/v1.5.3/kubernetes.tar.gz | tar xvzf -\n> cd kubernetes  \n```", "```\n> export FEDERATION_OUTPUT_ROOT=\"${PWD}/output/federation\"\n> mkdir -p \"${FEDERATION_OUTPUT_ROOT}\"  \n```", "```\n> federation/deploy/deploy.sh init \n```", "```\n> federation/deploy/deploy.sh deploy_federation  \n```", "```\n> kubectl get deployments --namespace=federation  \n```", "```\nNAME                        DESIRED CURRENT UP-TO-DATE      \nfederation-controller-manager   1         1         1 federation-apiserver 1         1         1 \n```", "```\n> kubectl create secret generic cluster-1 --namespace=federation \n--from-file=/cluster-1/kubeconfig  \n```", "```\napiVersion: federation/v1beta1 \nkind: Cluster \nmetadata: \n  name: cluster1 \nspec: \n  serverAddressByClientCIDRs: \n  - clientCIDR: <client-cidr> \n    serverAddress: <apiserver-address> \n  secretRef: \n    name: <secret-name> \n```", "```\n> kubectl create -f /cluster-1/cluster.yaml --context=federation-cluster  \n```", "```\n> kubectl get clusters --context=federation-cluster\nNAME       STATUS    VERSION   AGE\ncluster-1   Ready               1m \n```", "```\n--federations=${FEDERATION_NAME}=${DNS_DOMAIN_NAME}    \n```", "```\napiVersion: v1 \nkind: ConfigMap \nmetadata: \n  name: kube-dns \n  namespace: kube-system \ndata: \n  federations: <federation-name>=<federation-domain-name> \n```", "```\nfederation/deploy/deploy.sh destroy_federation \n```", "```\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/${RELEASE-VERSION}/kubernetes-client-linux-amd64.tar.gztar -xzvf kubernetes-client-linux-amd64.tar.gz\n    sudo cp kubernetes/client/bin/kubefed /usr/local/bin\n    sudo chmod +x /usr/local/bin/kubefed\n    sudo cp kubernetes/client/bin/kubectl /usr/local/bin\n    sudo chmod +x /usr/local/bin/kubectl\n\n```", "```\ncurl -LO https://storage.cloud.google.com/kubernetes-federation-release/release/${RELEASE-VERSION}/federation-client-linux-amd64.tar.gztar -xzvf federation-client-linux-amd64.tar.gz\n    sudo cp federation/client/bin/kubefed /usr/local/binsudo chmod +x /usr/local/bin/kubefed\n```", "```\nhttps://kubernetes.io/docs/tasks/tools/install-kubectl/\n```", "```\n> kubectl config get-contexts  \n```", "```\nCURRENT   NAME      CLUSTER   AUTHINFO  NAMESPACE\ncluster-1 cluster-1  cluster-1  \n```", "```\n> kubefed init federation --host-cluster-context=cluster-1 --dns-provider coredns --dns-zone-name=\"kubernetes-ftw.com\"  \n```", "```\n> kubectl create namespace default --context=federation  \n```", "```\n> kubectl config use-context federation \n```", "```\nkubefed join cluster-2 --host-cluster-context=cluster-1 \n```", "```\nkubefed join cluster-3 --host-cluster-context=cluster-1 --cluster-context=cluster-3  \n```", "```\nkubefed join cluster-4 --host-cluster-context=cluster-1 --secret-name=4secret  \n```", "```\nkubefed unjoin cluster-2 --host-cluster-context=cluster-1  \n```", "```\n> kubectl delete ns federation-system  \n```", "```\nDeleteOptions.orphanDependents=false \n```", "```\n> kubectl --context=federation-cluster create -f nginx.yaml \n```", "```\n> kubectl --context=cluster-2 get services nginx\nNAME      CLUSTER-IP     EXTERNAL-IP      PORT(S)   AGE\nnginx     10.63.250.98   104.199.136.89   80/TCP    9m \n```", "```\n> kubectl --context=federation-cluster describe services nginx\nName:                   nginx\nNamespace:              default\nLabels:                 run=nginx\nSelector:               run=nginx\nType:                   LoadBalancer\nIP: \nLoadBalancer Ingress:   105.127.286.190, 122.251.157.43, 114.196.14.218, 114.199.176.99, ...\nPort:                   http    80/TCP\nEndpoints:              <none>\nSession Affinity:       None\nNo events.  \n```", "```\nrun=nginx \n```", "```\nfor C in cluster-1 \n    cluster-2 \n    cluster-3 \n    cluster-4 \n              cluster-5\n    do\n      kubectl --context=$C run nginx --image=nginx:1.11.1-alpine --port=80\n    done\n\n```", "```\n> gcloud dns managed-zones describe example-dot-com \ncreationTime: '2017-03-08T18:18:39.229Z'\ndescription: Example domain for Kubernetes Cluster Federation\ndnsName: example.com.\nid: '7228832181334259121'\nkind: dns#managedZone\nname: example-dot-com\nnameServers:\n- ns-cloud-a1.googledomains.com.\n- ns-cloud-a2.googledomains.com.\n- ns-cloud-a3.googledomains.com.\n- ns-cloud-a4.googledomains.com.\n```", "```\n> gcloud dns record-sets list --zone example-dot-com  \n```", "```\n> aws route53 list-hosted-zones  \n```", "```\n> aws route53 list-resource-record-sets --hosted-zone-id K9PBY0X1QTOVBX  \n```", "```\n> dig @ns-cloud-e1.googledomains.com ... \n```", "```\neu.nginx.example.com        CNAME nginx.the-namespace.the-federation.svc.europe-west1.example.com.\nus.nginx.example.com        CNAME nginx.the-namespace.the-federation.svc.us-central1.example.com.\nnginx.example.com           CNAME nginx.the-namespace.the-federation.svc.example.com.  \n```", "```\n   Kubectl logs federation-controller-manager --namespace federation\n```"]