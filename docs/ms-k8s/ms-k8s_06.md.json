["```\nMisc commands: help, config, and version \n```", "```\n~/.minikube > k config view \napiVersion: v1 \nclusters: \n- cluster: \n    certificate-authority: /Users/gigi.sayfan/.minikube/ca.crt \n    server: https://192.168.99.100:8443 \n  name: minikube \ncontexts: \n- context: \n    cluster: minikube \n    user: minikube \n  name: minikube \ncurrent-context: minikube \nkind: Config \npreferences: {} \nusers: \n- name: minikube \n  user: \n    client-certificate: /Users/gigi.sayfan/.minikube/client.crt \n    client-key: /Users/gigi.sayfan/.minikube/client.key \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: \"\"\n  labels:\n    name: \"\"\n  namespace: \"\"\n  annotations: []\n  generateName: \"\"\nspec:\n     ...  \n```", "```\n\"spec\": {\n  \"containers\": [\n  ],\n  \"restartPolicy\": \"\",\n  \"volumes\": [\n  ]\n}  \n```", "```\n        {\n          \"name\": \"\",\n          \"image\": \"\",\n          \"command\": [\n            \"\"\n          ],\n          \"args\": [\n            \"\"\n          ],\n          \"env\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"imagePullPolicy\": \"\",\n          \"ports\": [\n            {\n              \"containerPort\": 0,\n              \"name\": \"\",\n              \"protocol\": \"\"\n            }\n          ],\n          \"resources\": {\n            \"cpu\": \"\"\n            \"memory\": \"\"\n          }\n        }\n```", "```\nFROM busybox\nCMD ash -c \"echo 'Started...'; while true ; do sleep 10 ; done\"  \n```", "```\ndocker build . -t g1g1/hue-learn:v3.0\ndocker build . -t g1g1/hue-learn:v4.0\ndocker push g1g1/hue-learn:v3.0\ndocker push g1g1/hue-learn:v4.0  \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hue-learner\n  labels:\n    app: hue \n    runtime-environment: production\n    tier: internal-service \n  annotations:\n    version: \"3.0\"\n```", "```\nspec:\n  containers:\n  - name: hue-learner\n    image: g1g1/hue-learn:v3.0  \n```", "```\nresources:\n  requests:\n    cpu: 200m\n    memory: 256Mi \n```", "```\nenv:\n- name: DISCOVER_QUEUE\n  value: dns\n- name: DISCOVER_STORE\n  value: dns \n```", "```\napiVersion: apps/v1 (use apps/v1beta2 before 1.9)\n kind: Deployment\n metadata:\n name: hue-learn\n labels:\n app: hue\n spec:\n replicas: 3\n selector:\n matchLabels:\n app: hue\n template:\n metadata:\n labels:\n app: hue\n spec:\n <same spec as in the pod template>\n```", "```\n> kubectl create -f .\\deployment.yaml\ndeployment \"hue-learn\" created\n> kubectl get deployment hue-learn\nNAME        DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nhue-learn   3          3           3             3        4m\n\n> kubectl get pods | grep hue-learn\nNAME                        READY     STATUS    RESTARTS   AGE\nhue-learn-237202748-d770r   1/1       Running   0          2m\nhue-learn-237202748-fwv2t   1/1       Running   0          2m\nhue-learn-237202748-tpr4s   1/1       Running   0          2m  \n```", "```\n> kubectl get pods -o json | jq .items[0].spec.containers[0].image\n\"3.0\"  \n```", "```\n> kubectl apply -f hue-learn-deployment.yaml\ndeployment \"hue-learn\" updated\n> kubectl get pods -o json | jq .items[0].spec.containers[0].image\n\"4.0\"  \n```", "```\ndocker push g1g1/hue-reminders:v2.2  \n```", "```\napiVersion: apps/v1a1\nkind: Deployment\nmetadata:\n name: hue-reminders\nspec:\n replicas: 2 \n template:\n metadata:\n name: hue-reminders\n labels:\n app: hue-reminders\n spec: \n containers:\n - name: hue-reminders\n image: g1g1/hue-reminders:v2.2 \n ports:\n - containerPort: 80 \n```", "```\n> kubectl create -f hue-reminders-deployment.yaml\n> kubectl get pods\nNAME                           READY   STATUS    RESTARTS   AGE\nhue-learn-56886758d8-h7vm7      1/1    Running       0      49m\nhue-learn-56886758d8-lqptj      1/1    Running       0      49m\nhue-learn-56886758d8-zwkqt      1/1    Running       0      49m\nhue-reminders-75c88cdfcf-5xqtp  1/1    Running       0      50s\nhue-reminders-75c88cdfcf-r6jsx  1/1    Running       0      50s \n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n name: hue-reminders\n labels:\n app: hue-reminders \nspec:\n ports:\n - port: 80\n protocol: TCP\n selector:\n app: hue-reminders\n```", "```\n> kubectl create -f hue-reminders-service.yaml\nservice \"hue-reminders\" created\n> kubectl describe svc hue-reminders\nName:              hue-reminders\nNamespace:         default\nLabels:            app=hue-reminders\nAnnotations:       <none>\nSelector:          app=hue-reminders\nType:              ClusterIP\nIP:                10.108.163.209\nPort:              <unset>  80/TCP\nTargetPort:        80/TCP\nEndpoints:         172.17.0.4:80,172.17.0.6:80\nSession Affinity:  None\nEvents:            <none>  \n```", "```\n> kubectl exec hue-learn-56886758d8-fjzdd -- printenv | grep HUE_REMINDERS_SERVICE\n\nHUE_REMINDERS_SERVICE_PORT=80\nHUE_REMINDERS_SERVICE_HOST=10.108.163.209  \n```", "```\n<service name>.<namespace>.svc.cluster.local\n> kubectl exec hue-learn-56886758d8-fjzdd -- nslookup hue-reminders\nServer:    10.96.0.10\nAddress 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local \nName:      hue-reminders\nAddress 1: 10.108.163.209 hue-reminders.default.svc.cluster.local  \n```", "```\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 80\n    protocol: TCP\n    name: http\n - port: 443\n   protocol: TCP\n   name: https\n selector:\n   app: hue-reminders\n```", "```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n name: test\nspec:\n rules:\n - host: foo.bar.com\n http:\n paths:\n - path: /foo\n backend:\n serviceName: fooSvc\n servicePort: 80\n - host: bar.baz.com\n http:\n paths:\n - path: /bar\n backend:\n serviceName: barSvc\n servicePort: 80\n```", "```\nhttp { \n  server { \n    listen 80; \n    server_name foo.bar.com; \n\n    location /foo { \n      proxy_pass http://fooSvc; \n    } \n  } \n  server { \n    listen 80; \n    server_name bar.baz.com; \n\n    location /bar { \n      proxy_pass http://barSvc; \n    } \n  } \n} \n```", "```\nkind: Namespace \n apiVersion: v1\n metadata:\n     name: restricted\n     labels:\n       name: restricted\n\n> kubectl create -f restricted-namespace.yaml\nnamespace \"restricted\" created  \n```", "```\n> kubectl config set-context restricted --namespace=restricted --cluster=minikube --user=minikube\nContext \"restricted\" set.\n\n> kubectl config use-context restricted\nSwitched to context \"restricted\". \n```", "```\n> kubectl config view\napiVersion: v1\nclusters:\n- cluster:\n certificate-authority: /Users/gigi.sayfan/.minikube/ca.crt\n server: https://192.168.99.100:8443\n name: minikube\ncontexts:\n- context:\n cluster: minikube\n user: minikube\n name: minikube\n- context:\n cluster: minikube\n namespace: restricted\n user: minikube\n name: restricted\ncurrent-context: restricted\nkind: Config\npreferences: {}\nusers:\n- name: minikube\n user:\n client-certificate: /Users/gigi.sayfan/.minikube/client.crt\n client-key: /Users/gigi.sayfan/.minikube/client.key\n```", "```\n> kubectl create -f hue-finance-deployment.yaml\ndeployment \"hue-finance\" created\n\n> kubectl get pods\nNAME                           READY     STATUS    RESTARTS   AGE\nhue-finance-7d4b84cc8d-gcjnz   1/1       Running   0          6s\nhue-finance-7d4b84cc8d-tqvr9   1/1       Running   0          6s\nhue-finance-7d4b84cc8d-zthdr   1/1       Running   0          6s  \n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: factorial5\nspec:\n  template:\n    metadata:\n      name: factorial5\n    spec:\n      containers:\n      - name: factorial5\n        image: python:3.6\n        command: [\"python\", \n                  \"-c\", \n                  \"import math; print(math.factorial(5))\"]\n      restartPolicy: Never      \n```", "```\n> kubectl create -f .\\job.yaml\njob \"factorial5\" created\n\n> kubectl get jobs\nNAME         DESIRED   SUCCESSFUL   AGE\nfactorial5   1         1            25s  \n```", "```\n> kubectl get pods --show-all\nNAME                           READY     STATUS      RESTARTS   AGE\nfactorial5-ntp22               0/1       Completed   0          2m\nhue-finance-7d4b84cc8d-gcjnz   1/1       Running     0          9m\nhue-finance-7d4b84cc8d-tqvr9   1/1       Running     0          8m\nhue-finance-7d4b84cc8d-zthdr   1/1       Running     0          9m  \n```", "```\n> kubectl logs factorial5-ntp22\n120  \n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n name: sleep20\nspec:\n completions: 3\n parallelism: 6 \n template:\n metadata:\n name: sleep20\n spec:\n containers:\n - name: sleep20\n image: python:3.6\n command: [\"python\", \n \"-c\", \n \"import time; print('started...'); \n time.sleep(20); print('done.')\"]\n restartPolicy: Never \n\n> Kubectl get pods \nNAME              READY  STATUS   RESTARTS  AGE\nsleep20-1t8sd      1/1   Running    0       10s\nsleep20-sdjb4      1/1   Running    0       10s\nsleep20-wv4jc      1/1   Running    0       10s\n```", "```\n> kubectl delete jobs/factroial5\njob \"factorial5\" deleted\n> kubectl delete jobs/sleep20\njob \"sleep20\" deleted  \n```", "```\napiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n name: stretch\nspec:\n schedule: \"*/1 * * * *\"\n jobTemplate:\n spec:\n template:\n metadata:\n labels:\n name: stretch \n spec:\n containers:\n - name: stretch\n image: python\n args:\n - python\n - -c\n - from datetime import datetime; print('[{}] Stretch'.format(datetime.now()))\n restartPolicy: OnFailure\n```", "```\n> kubectl get pods\nNAME                       READY     STATUS              RESTARTS   AGE\nstretch-1482165720-qm5bj   0/1       ImagePullBackOff    0          1m\nstretch-1482165780-bkqjd   0/1       ContainerCreating   0          6s  \n```", "```\n> kubectl get jobs\nNAME                 DESIRED   SUCCESSFUL   AGE\nstretch-1482165300   1         1            11m\nstretch-1482165360   1         1            10m\nstretch-1482165420   1         1            9m\nstretch-1482165480   1         1            8m \n```", "```\n> Kubectl get pods --show-all\nNAME                       READY     STATUS      RESTARTS   AGE\nstretch-1482165300-g5ps6   0/1       Completed   0          15m\nstretch-1482165360-cln08   0/1       Completed   0          14m\nstretch-1482165420-n8nzd   0/1       Completed   0          13m\nstretch-1482165480-0jq31   0/1       Completed   0          12m  \n```", "```\n> kubectl logs stretch-1482165300-g5ps6\n[2016-12-19 16:35:15.325283] Stretch \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n labels:\n app: hue-music\n name: hue-music\nspec:\n containers:\n image: the_g1g1/hue-music\n livenessProbe:\n httpGet:\n path: /pulse\n port: 8888\n httpHeaders:\n - name: X-Custom-Header\n value: ItsAlive\n initialDelaySeconds: 30\n timeoutSeconds: 1\n name: hue-music\n```", "```\nreadinessProbe:\n exec:\n command: \n - /usr/local/bin/checker\n - --full-check\n - --data-service=hue-multimedia-service\n initialDelaySeconds: 60\n timeoutSeconds: 5\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n name: hue-fitness\nspec:\n containers: \n name: hue-fitness\n Image: hue-fitness:v4.4\n InitContainers:\n name: install\n Image: busybox\n command: /support/safe_init\n volumeMounts:\n - name: workdir\n mountPath: /workdir   \n```", "```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n name: hue-collect-proxy\n labels:\n tier: stats\n app: hue-collect-proxy\nspec:\n template:\n metadata:\n labels:\n hue-collect-proxy\n spec:\n hostPID: true\n hostIPC: true\n hostNetwork: true\n containers:\n image: the_g1g1/hue-collect-proxy\n name: hue-collect-proxy\n```"]