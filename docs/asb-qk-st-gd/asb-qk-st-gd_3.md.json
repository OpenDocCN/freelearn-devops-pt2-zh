["```\nansible localhost -m ping\n```", "```\nansible localhost -a \"echo 'Hello automated World'\"\n```", "```\nansible 192.168.10.10 -a \"uname -a\" -u setup\n```", "```\nansible 192.168.10.10 -a \"apt update\" -u setup --become\n```", "```\nansible 192.168.10.10 -m apt -a \"update_cache=yes\" -u setup --become\n```", "```\nansible 192.168.10.10 -a \"whoami\" -u setup --become --become-user user1\nansible 192.168.10.10 -a \"whoami\" -u setup -e \"ansible_user=user1 become=true\"\n```", "```\n[servers]\n192.168.10.10\n192.168.10.11\n192.168.10.12\n```", "```\nansible servers -m copy -a \"src=/home/user/file.txt dest=/home/setup/file.txt\" -u setup\n```", "```\nansible servers -m service -a \"name=httpd state=restarted\" -u setup \u2013become -f 1\n```", "```\nsudo nano /etc/ansible/ansible.cfg\ninventory = /home/user1/ansible/hosts\n```", "```\nansible -m ping -i ~/ansible/hosts\n```", "```\n[webserver]\n192.168.10.10\n192.168.10.12\n\n[mysqldb]\n192.168.10.10\n192.168.10.20\n\n[fileserver]\n192.168.10.11\n192.168.10.20\n```", "```\n[servers]\nnode0.lab.edu\nnode1.lab.edu\nnode2.lab.edu\nnode3.lab.edu\nnode4.lab.edu\n```", "```\n[servers]\nNode[0:4].lab.edu\n```", "```\nnode0.lab.edu\n\n[lab1servers]\nnode1.lab.edu\nnode2.lab.edu\n\n[lab2servers]\nnode3.lab.edu\n```", "```\nall:\n   hosts:\n        node0.lab.edu\n   children:\n        lab1servers:\n            hosts:\n                 node1.lab.edu\n                 node2.lab.edu\n        lab2server:\n            hosts:\n                 node3.lab.edu\n```", "```\nansibleserv ansible_connection: local fileserver\nansible_host: 192.168.10.10 ansible_port:22\nnode1.lab.edu ansible user: setup \nansible_ssh_private_key:/home/user/node1.key\nnode2.lab.edu ansible_become: yes\nansible_become_user: user1\n```", "```\n[labserver]\nnode0.lab.edu\nnode1.lab.edu\n\n[labserver:vars]\nansible_connection=ssh\nansible_port=22\n```", "```\n[webservers]\nnode0.lab.edu\nnode1.lab.edu\n\n[fileserver]\nnode2.lab.edu\nnode3.lab.edu\n\n[server:children]\nwebservers\nfileserver\n```", "```\n[servers:vars]\nansible_user=setup\nansible_private_ssh_key=/home/user/ansible.key\n```", "```\n/etc/ansible/group_vars/webserver\n/etc/ansible/group_vars/fileserver\n```", "```\n---\nansible_user=setup\nansible_private_ssh_key=/home/user/ansible.key\n```", "```\nnano ./playbook/apt_cache.yml\n```", "```\n---\n- name: playbook to update Debian Linux package cache\n  hosts: servers\n  tasks:\n  - name: use apt to update its cache\n    become: yes\n    apt:\n       update_cache: yes\n```", "```\nansible-playbook playbooks/apt-cache.yml\n```", "```\n---\n- hosts: servers\n  gather_facts: False\n  tasks:\n  - apt:\n        update_cache: yes\n    become: yes\n```", "```\n---\n- name: playbook to update Debian Linux package cache\n  hosts: servers\n  remote_user: setup\n  become: yes\n  tasks:\n```", "```\n---\n- name: playbook to update Debian Linux package cache\n  hosts: servers\n  tasks:\n  - name: use apt to update its cache\n    apt:\n       update_cache: yes\n    become: yes\n    become_user: setup\n```", "```\ntasks:\n   - name: use apt to update its cache\n      apt: update_cache=yes\n```", "```\ntasks:\n   - name: use apt to update its cache\n      apt:\n         update_cache: yes\n     ignore_errors: True\n```", "```\n  tasks:\n  - name: use apt to update its cache\n    apt:\n        update_cache: yes\n    become: yes\n    notify: pkg_installable\n\n handlers:\n  - name: pkg_installable\n    apt:\n        name: htop\n        state: latest\n    become: yes\n```", "```\n  tasks:\n  - name: use apt to update all apps for Debian family\n    apt:\n        name: \"*\"\n        state: latest\n        update_cache: yes\n    become: yes\n    when: ansible_os_family == \"Debian\"\n\n  - name: use yum to update all apps for Red Hat family\n    yum:\n        name: '*'\n        state: latest\n    become: yes\n    when: ansible_os_family == \"Red Hat\"\n```", "```\n  tasks:\n  - name: use apt to install multiple apps\n    apt:\n        name: '{{ app }}'\n        state: latest\n        update_cache: yes\n    vars:\n        app:\n        - htop\n        - mc\n        - nload\n    become: yes\n```", "```\n  tasks:\n  - name: use apt to install multiple apps\n    apt:\n        name: '{{ item }}'\n        state: latest\n        update_cache: yes\n    loop:\n        - htop\n        - mc\n        - nload\n    become: yes\n```"]