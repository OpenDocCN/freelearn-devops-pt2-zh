- en: Ansible Coding for Configuration Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible配置管理的编码
- en: 'The main way in which you''ll learn Ansible coding is by writing your own Ansible
    playbooks, either for fun or to solve your own infrastructure challenges. However,
    at a certain point, things may start to get complicated. Your code might be working,
    but how do you know if it is really doing the task in the right way? Is it efficient?
    How scalable will it be? Using meaningful names makes it easier to understand
    your code. Issues may also arise to do with script organization: it is easy to
    end up with a folder filled with several scripts, even if they have nothing to
    do with each other.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 学习Ansible编码的主要方法是编写自己的Ansible playbook，无论是为了乐趣还是解决自己的基础设施挑战。然而，在某个时候，事情可能开始变得复杂。您的代码可能有效，但是如何知道它是否真的以正确的方式执行任务？它是否有效？它将有多可扩展？使用有意义的名称使您更容易理解您的代码。还可能出现与脚本组织有关的问题：即使它们彼此无关，也很容易出现一个文件夹中充满了几个脚本的情况。
- en: In this chapter, we're going to talk about the standards and best practices
    for writing Ansible playbooks. We are aiming to improve our playbooks by speeding
    up tasks, improving security, providing accommodation for built-in infrastructure
    redundancy systems, optimizing their tasks, and reducing code repetition to produce
    smaller playbooks with the same functionality. Finally, we are going to introduce
    Ansible roles, which are the ultimate task optimization tool in Ansible.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论编写Ansible playbook的标准和最佳实践。我们的目标是通过加快任务、提高安全性、为内置基础设施冗余系统提供住宿、优化任务以及减少代码重复来改进我们的playbook，以生成具有相同功能的更小的playbook。最后，我们将介绍Ansible角色，这是Ansible中的终极任务优化工具。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Standards for writing playbooks in Ansible
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写Ansible playbook的标准
- en: Best practices when coding YAML playbooks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写YAML playbook的最佳实践
- en: Optimizing Ansible tasks and playbooks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化Ansible任务和playbook
- en: Ansible roles
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible角色
- en: Examples with Ansible roles
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ansible角色的示例
- en: Ansible configuration management coding standards
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible配置管理编码标准
- en: In this section, we are going to list several rules and methods to help with
    writing nice and clean playbooks in conformity with the Ansible norm. This is
    not a strict instruction to follow, but instead a representation of how Ansible
    developers and maintainers think it should be used. Following these norms does
    not just allow easier usage of playbooks, it also helps make it standard and understandable
    by the community members, therefore enabling better team collaboration.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将列出几条规则和方法，以帮助编写符合Ansible规范的漂亮和干净的playbook。这不是严格的指令，而是Ansible开发人员和维护人员认为应该使用的表示。遵循这些规范不仅可以更轻松地使用playbook，还可以帮助使其标准化，并且可以被社区成员理解，从而实现更好的团队协作。
- en: These standards are based on the experience of Ansible users and maintainers.
    Any individual user may use Ansible differently, in a way that would require a
    different set of rules.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些标准基于Ansible用户和维护者的经验。任何个人用户可能以需要不同的规则使用Ansible。
- en: Playbook and task naming
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Playbook和任务命名
- en: 'When making a playbook, using the `name:` field is optional. If you write a
    playbook with no name, it will work perfectly fine. The following is an example
    of a playbook that does not have a name:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 制作playbook时，使用`name:`字段是可选的。如果您编写一个没有名称的playbook，它将完全正常工作。以下是一个没有名称的playbook的示例：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This playbook may have an output that looks as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这个playbook可能有以下输出：
- en: '![](assets/e3e7ca33-b2dc-4a90-9d71-d8f5cf229152.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e3e7ca33-b2dc-4a90-9d71-d8f5cf229152.png)'
- en: 'The playbook has done what we have asked it to do, but the fact that it doesn''t
    have a name may present a problem if we have many tasks in one playbook because
    we won''t be able to monitor the status of each job as easily. Following Ansible''s
    standards, writing a playbook that has a better description of each of its tasks can
    help a lot. The benefits of having a clear description of tasks helps with personal
    or team task monitoring, providing a better explanation of its pipelines for co-workers
    and community users. An example of a more descriptive playbook might look as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: playbook已经按我们的要求执行了，但是如果我们在一个playbook中有很多任务，它没有名称可能会带来问题，因为我们将无法轻松监视每个作业的状态。遵循Ansible的标准，编写一个对其每个任务有更好描述的playbook可以帮助很多。具有清晰任务描述的好处有助于个人或团队任务监控，为同事和社区用户提供更好的管道解释。一个更具描述性的playbook示例可能如下所示：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This way, we get a more descriptive output:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们可以得到更具描述性的输出：
- en: '![](assets/e354fd3c-8cbc-4e76-a9c1-9d1ea4e1f642.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e354fd3c-8cbc-4e76-a9c1-9d1ea4e1f642.png)'
- en: It is up to you to decide what to write and which aspects of the tasks are described,
    as long as it makes sense to the user, either yourself, your team, or the community.
    We recommend simply phrased sentences that explain the tasks briefly.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由您决定要编写什么以及任务的哪些方面被描述，只要对用户（包括您自己、您的团队或社区）有意义。我们建议使用简单的措辞来简要解释任务。
- en: YAML syntax usage for playbooks
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于playbook的YAML语法使用
- en: 'Since playbooks are written in YAML, you have a bit of wiggle room regarding
    what the code looks like when introducing task arguments. Again, although Ansible
    will accept the code and the task will be executed, it is easy to end up with
    long lines of code for an averagely complicated task. This is what a one-line
    Ansible task looks like:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 由于playbook是用YAML编写的，因此在引入任务参数时，您对代码的外观有一些余地。同样，尽管Ansible将接受代码并执行任务，但很容易出现代码行过长的情况，即使是一个平均复杂的任务。这是一个单行Ansible任务的样子：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Instead of this, we can follow a neat and more organized YAML structure, by
    adding white spaces in front of each task argument. The playbook should look as
    follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 与此相反，我们可以遵循一个整洁和更有组织的YAML结构，通过在每个任务参数前添加空格。Playbook应该如下所示：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'However, some tasks or commands may have long strings, either the absolute
    path of a file or a long piece of text to be used for a task. Ansible does offer
    a way of organizing tasks with long strings using the `>` character to write a
    single-line string in multiple lines without carrying the returns:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一些任务或命令可能有很长的字符串，无论是文件的绝对路径还是用于任务的长文本。Ansible确实提供了一种使用`>`字符来组织具有长字符串的任务的方法，以便将单行字符串写成多行而不带回车。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Ansible offers an option to check the syntax of a playbook to see whether it
    is conforming with YAML syntax. To use this, add the `--syntax-check` option to
    the Ansible command.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible提供了一个选项来检查playbook的语法，以查看它是否符合YAML语法。要使用这个选项，将`--syntax-check`选项添加到Ansible命令中。
- en: The become feature
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: become功能
- en: 'Many tasks need to be executed by a specific user, either to access restricted
    resources or to enable user-specific services. Although there are some Shell or
    Powershell commands that allow this, they may produce very long and complicated commands.
    The Ansible `become` or `become_user` feature allows for easier tasks that are
    personalized for each specific user. This feature is considered as a standard
    for Ansible configuration management coding owing to the level of task optimization
    that is offered by Ansible to simplify complicated commands, making this feature
    not just playbook-personalized but also task specific. The following is an example
    of a playbook that uses this feature:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 许多任务需要由特定用户执行，无论是访问受限资源还是启用特定用户服务。虽然有一些Shell或Powershell命令可以实现这一点，但它们可能会产生非常长和复杂的命令。Ansible的`become`或`become_user`功能允许更容易为每个特定用户定制的任务。这个功能被认为是Ansible配置管理编码的标准，因为它提供了简化复杂命令的任务优化水平，使这个功能不仅仅是playbook个性化，还是任务特定的。以下是使用此功能的playbook示例：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Group organization
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组织
- en: Host group organization makes it possible to organize hosts in groups based
    on role, geographical location, or data center location. In a parent and child
    structure, it is possible to set parent group variables and make the child group
    inherit them. To override parent group variables, individual hosts or child groups
    can have their own unique custom variables. This practice is more of an Ansible
    inventory management feature than for playbook coding, yet it is very important
    for multi-architecture configuration management.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 主机组织使得可以根据角色、地理位置或数据中心位置将主机组织成组。在父子结构中，可以设置父组变量并使子组继承它们。要覆盖父组变量，个别主机或子组可以有自己的独特自定义变量。这种做法更多的是Ansible库存管理功能，而不是playbook编码，但对于多架构配置管理非常重要。
- en: As described in previous chapters, host variables can either be defined within
    the inventory or the playbook itself. But it is easier to manage when organized
    within the inventory files as `group_vars` and `hosts_vars`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如前几章所述，主机变量可以在库存文件或playbook本身中定义。但是，当组织在库存文件中作为`group_vars`和`hosts_vars`时，更容易管理。
- en: 'The following example for an inventory file shows how parent and child group
    variables can be defined:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个库存文件的示例，展示了如何定义父组和子组变量：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This is not the only structure that can be used to define groups. The inventory
    file can only hold the structure of the groups, and then each group can have their
    own inventory file that holds their variables. The same rule applies where a child
    variable overrides a parent variable.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是唯一可以用来定义组的结构。库存文件只能保存组的结构，然后每个组可以有自己的库存文件来保存它们的变量。相同的规则适用于子变量覆盖父变量。
- en: Using handlers
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用处理程序
- en: Ansible recommends using handlers for task pipelining, as handlers are programmed
    tasks that are executed when they are notified. Handlers will be fired for tasks
    which report a changed state. They are often used for service management following
    a configuration change. This ensures fluid configuration management as whenever
    changes happen in the host, the services involved should be restarted to apply
    the change.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible建议使用处理程序进行任务流水线处理，因为处理程序是在被通知时执行的编程任务。处理程序将为报告更改状态的任务触发。它们通常用于在配置更改后进行服务管理。这确保了流畅的配置管理，因为每当主机发生变化时，涉及的服务都应该重新启动以应用更改。
- en: 'Ansible also has a feature to enable the mass flushing of handlers in playbooks.
    This feature allows you to control when the changes can be applied by controlling
    the execution of all handlers in a task. Using `meta`, task handlers can be flushed
    from any position in the playbook:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible还具有一项功能，可以在playbook中启用处理程序的大规模刷新。这个功能允许您通过控制任务中所有处理程序的执行来控制何时可以应用更改。使用`meta`，任务处理程序可以从playbook中的任何位置刷新：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Password usage in playbooks
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: playbook中的密码使用
- en: Many tasks require you to input a password to access a database or to use a
    CLI or access a third-party Terminal. It is never advisable to write passwords
    or other sensitive information openly on a playbook. There are multiple ways to
    protect this information. The two most common examples are to store them in another
    protected playbook or to use Ansible Vault.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 许多任务需要您输入密码来访问数据库或使用CLI或访问第三方终端。在playbook上公开写入密码或其他敏感信息是不可取的。有多种方法可以保护这些信息。最常见的两个例子是将它们存储在另一个受保护的playbook中，或者使用Ansible
    Vault。
- en: In this section, we will mainly cover storing passwords and sensitive variables
    in other, more protected files. Ansible Vault will be covered thoroughly in a
    later chapter.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将主要介绍将密码和敏感变量存储在其他更受保护的文件中。Ansible Vault将在后面的章节中进行全面介绍。
- en: 'The idea is to create a playbook that contains several sensitive variables
    and store it in a secure location with restricted permissions. Then, the playbook
    calls for its variable using the `include` option at the play level (where the
    tasks are located):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是创建一个包含多个敏感变量的playbook，并将其存储在受限制的权限下的安全位置。然后，playbook在play级别（任务所在的位置）使用`include`选项调用其变量：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '---'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '####################################'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '####################################'
- en: '#'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '#'
- en: This playbook with a goal to achieve number of tasks in a pipeline
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这个playbook的目标是在管道中实现多个任务
- en: to configure several Linux hosts for collaborative projects. It starts by
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置多个Linux主机进行协作项目。它首先
- en: setting up the needed tools and services, then configure them to a
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置所需的工具和服务，然后将它们配置为
- en: standard, then prepared the shared space, and assign the users and groups.
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标准，然后准备共享空间，并分配用户和组。
- en: '#'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '#'
- en: 'Author: ***** ***** email: *********@****'
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '作者: ***** ***** 电子邮件: *********@****'
- en: '#'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '#'
- en: '####################################'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '####################################'
- en: '- name: Hosts provisioning playbook'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 主机配置playbook'
- en: 'hosts: linuxservers'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '主机: linuxservers'
- en: 'become: yes'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '成为: 是的'
- en: 'remote_user: setup'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 'remote_user: setup'
- en: 'gather_facts: false'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 'gather_facts: false'
- en: 'tasks:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '任务:'
- en: '- name: Install Midnight commander'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 安装午夜指挥官'
- en: This is a terminal based file manager does not require a GUI interface
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这是一个基于终端的文件管理器，不需要GUI界面
- en: 'apt:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 'apt:'
- en: 'name: mc'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: mc'
- en: …
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '- name: Execute a Windows Write Filter enabling command and identify if it
    made change'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 执行Windows写过滤器启用命令并确定是否进行了更改'
- en: 'win_shell: ewfm.exe -conf enable'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 'win_shell: ewfm.exe -conf enable'
- en: 'register: output'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 'register: output'
- en: 'changed_when: "output.stdout == ''Awaiting for next boot to apply the change.''"'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed_when: "output.stdout == ''等待下次启动应用更改。''"'
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '---- name: Install python development package on Linux hosts'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '---- 名称: 在Linux主机上安装python开发包'
- en: 'hosts: linuxservers'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '主机: linuxservers'
- en: 'become: yes'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '成为: 是的'
- en: 'remote_user: setup'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 'remote_user: setup'
- en: 'gather_facts: true'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 'gather_facts: true'
- en: 'tasks:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '任务:'
- en: '- name: install python development on Debian systems'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 在Debian系统上安装python开发'
- en: 'apt:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 'apt:'
- en: 'name: python-dev'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: python-dev'
- en: 'when: ansible_os_family == "Debian"'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '当: ansible_os_family == "Debian"'
- en: '- name: install python development on Red Hat systems'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 在Red Hat系统上安装python开发'
- en: 'yum:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 'yum:'
- en: 'name: python-devel'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: python-devel'
- en: 'when: ansible_os_family == "RedHat"'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '当: ansible_os_family == "RedHat"'
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '---'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Copy users config files to their project directory'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 将用户配置文件复制到其项目目录'
- en: 'hosts: linuxservers'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '主机: linuxservers'
- en: 'become: yes'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '成为: 是的'
- en: 'remote_user: setup'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 'remote_user: setup'
- en: 'gather_facts: true'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 'gather_facts: true'
- en: 'tasks:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '任务:'
- en: '- name: Copy user config files'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 复制用户配置文件'
- en: 'copy:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '复制:'
- en: 'src: ''{{ item.src }}'''
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 'src: ''{{ item.src }}'''
- en: 'dest: ''{{ item.dest }}'''
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: ''{{ item.dest }}'''
- en: 'mode: ''{{ item.mode | default("0744") }}'''
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '模式: ''{{ item.mode | default("0744") }}'''
- en: 'owner: ''{{ item.owner | default("nobody") }}'''
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 'owner: ''{{ item.owner | default("nobody") }}'''
- en: 'when_items:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 'when_items:'
- en: '- { src: "/media/share/config/user1.conf",'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '- { src: "/media/share/config/user1.conf",'
- en: 'dest: "/usr/local/projetsfolder/user1",'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: "/usr/local/projetsfolder/user1",'
- en: 'mode: "0774", owner: "user1" }}'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '模式: "0774", owner: "user1" }}'
- en: '- { src: "/media/share/config/user2.conf",'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '- { src: "/media/share/config/user2.conf",'
- en: 'dest: "/usr/local/projetsfolder/user2",'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: "/usr/local/projetsfolder/user2",'
- en: 'mode: "0700", owner: "user2" }}'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '模式: "0700", owner: "user2" }}'
- en: '- { src: "/media/share/samples/users.conf",'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '- { src: "/media/share/samples/users.conf",'
- en: 'dest: "/usr/local/projetsfolder/", mode: "0777" }}'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: "/usr/local/projetsfolder/", mode: "0777" }}'
- en: '[PRE13]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'db.conf.j2:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 'db.conf.j2:'
- en: mysql_db_hosts = '{{ db_serv_hostname }}'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: mysql_db_hosts = '{{ db_serv_hostname }}'
- en: mysql_db_name = '{{ db_name }}'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: mysql_db_name = '{{ db_name }}'
- en: mysql_db_user = '{{ db_username }}'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: mysql_db_user = '{{ db_username }}'
- en: mysql_db_pass = '{{ db_password }}'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: mysql_db_pass = '{{ db_password }}'
- en: '[PRE14]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '---'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Copy Database configuration file'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 复制数据库配置文件'
- en: 'hosts: linux    servers'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '主机: linux    servers'
- en: 'become: yes'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '成为: 是的'
- en: 'remote_user: setup'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 'remote_user: setup'
- en: 'gather_facts: true'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 'gather_facts: true'
- en: 'tasks:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '任务:'
- en: '- name: Import variable from an other YAML'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 从另一个YAML导入变量'
- en: 'include_vars: /home/admin/variables/database2.yml'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 'include_vars: /home/admin/variables/database2.yml'
- en: '- name: Copy db config file'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 复制db配置文件'
- en: 'template:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '模板:'
- en: 'src: /home/admin/template/db.conf.j2'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 'src: /home/admin/template/db.conf.j2'
- en: 'dest: /etc/mysql/db.conf'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: /etc/mysql/db.conf'
- en: 'owner: bin'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 'owner: bin'
- en: 'group: wheel'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '组: wheel'
- en: 'mode: 0600'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '模式: 0600'
- en: '[PRE15]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'tasks:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '任务:'
- en: '- name: create a new file'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 创建一个新文件'
- en: 'file:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '文件:'
- en: 'path: /usr/local/projects/vars.txt'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '路径: /usr/local/projects/vars.txt'
- en: 'state: present'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 现有'
- en: '- name: removing line to a file'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 从文件中删除行'
- en: 'lineinfile:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 'lineinfile:'
- en: 'path: /usr/local/projects/conf.txt'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '路径: /usr/local/projects/conf.txt'
- en: 'line: "adminuser = user0"'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '行: "adminuser = user0"'
- en: 'state: absent'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 不存在'
- en: '[PRE16]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'tasks:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '任务:'
- en: '- name: Copy a tool archive to remote host'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 将工具存档复制到远程主机'
- en: 'copy:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '复制:'
- en: 'src: /media/nfshsare/Tools/tool1.tar.gz'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 'src: /media/nfshsare/Tools/tool1.tar.gz'
- en: 'dest: /usr/local/tools/'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: /usr/local/tools/'
- en: 'mode: 0755'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '模式: 0755'
- en: '[PRE17]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'tasks/main.yml:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '任务/main.yml:'
- en: '---'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: check if NTP is installed'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 检查NTP是否已安装'
- en: 'stat:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 'stat:'
- en: 'path: /etc/init.d/ntpd'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '路径: /etc/init.d/ntpd'
- en: 'register: tool_status'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 'register: tool_status'
- en: '- include_tasks: debian.yml'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '- 包括任务: debian.yml'
- en: 'when: tool_status.stat.exists'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '当: tool_status.stat.exists'
- en: '- name: Copy the NTP config to remote host'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 将NTP配置复制到远程主机'
- en: 'template:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '模板:'
- en: 'src: /template/ntp.conf.j2'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 'src: /template/ntp.conf.j2'
- en: 'dest: /etc/ntpd/ntpd.conf'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: /etc/ntpd/ntpd.conf'
- en: 'mode: 0400'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '模式: 0400'
- en: 'notify:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '通知:'
- en: '- Restart ntp'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '- 重新启动ntp'
- en: 'tasks/debian.yml:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks/debian.yml:'
- en: '---'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Copy a NTP config to remote host'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 将NTP配置复制到远程主机'
- en: 'apt:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 'apt:'
- en: 'name: ntp'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: ntp'
- en: 'state: latest'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 最新'
- en: '[PRE18]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'handlers/main.yml:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 'handlers/main.yml:'
- en: '---'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Restart ntp'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 重新启动ntp'
- en: 'service:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '服务:'
- en: 'name: ntp'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: ntp'
- en: 'state: restarted'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 重新启动'
- en: '[PRE19]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'vars/main.yml:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars/main.yml:'
- en: '---'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'ntpserv1: 0.uk.pool.ntp.org'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 'ntpserv1: 0.uk.pool.ntp.org'
- en: 'ntpserv2: 1.uk.pool.ntp.org'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 'ntpserv2: 1.uk.pool.ntp.org'
- en: '[PRE20]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'template/ntp.conf.j2:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 'template/ntp.conf.j2:'
- en: driftfile /var/lib/ntp/ntp.drift
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: driftfile /var/lib/ntp/ntp.drift
- en: filegen loopstats file loopstats type day enable
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: filegen loopstats file loopstats type day enable
- en: filegen peerstats file peerstats type day enable
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: filegen peerstats file peerstats type day enable
- en: filegen clockstats file clockstats type day enable
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: filegen clockstats file clockstats type day enable
- en: loop {{ ntpserv1 }}
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 循环{{ ntpserv1 }}
- en: loop {{ ntpserv2 }}
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 循环{{ ntpserv2 }}
- en: pool ntp.ubuntu.com
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 池ntp.ubuntu.com
- en: restrict -4 default kod notrap nomodify nopeer noquery limited
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 限制-4默认kod notrap nomodify nopeer noquery limited
- en: restrict -6 default kod notrap nomodify nopeer noquery limited
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 限制-6默认kod notrap nomodify nopeer noquery limited
- en: restrict 127.0.0.1
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 限制127.0.0.1
- en: restrict ::1
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 限制::1
- en: restrict source notrap nomodify noquery
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 限制源notrap nomodify noquery
- en: '[PRE21]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: cd ~/Roles/
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: cd ~/Roles/
- en: ansible-galaxy init samba.lab.edu
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: ansible-galaxy init samba.lab.edu
- en: '[PRE28]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '- samba.lab.edu was created successfully'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '- 成功创建samba.lab.edu'
- en: '[PRE29]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: samba.lab.edu
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: samba.lab.edu
- en: └── README.md
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: └── README.md
- en: ├── defaults
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: ├── 默认值
- en: │ └── main.yml
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: │ └── main.yml
- en: ├── files
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: ├── 文件
- en: │
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: │
- en: ├── handlers
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: ├── 处理程序
- en: │ └── main.yml
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: │ └── main.yml
- en: ├── meta
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: ├── 元
- en: │ └── main.yml
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: │ └── main.yml
- en: ├── tasks
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: ├── 任务
- en: │ └── main.yml
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: │ └── main.yml
- en: ├── templates
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: ├── 模板
- en: │
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: │
- en: ├── tests
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: ├── 测试
- en: │ ├── inventory
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: │ ├── 库存
- en: │ └── test.yml
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: │ └── test.yml
- en: └── vars
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: └── 变量
- en: └── main.yml
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: └── main.yml
- en: '[PRE30]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'template/smb.conf.j2:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 'template/smb.conf.j2:'
- en: '#========= Global Settings ========='
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '#========= 全局设置 ========='
- en: 'Samba server configuration:'
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Samba服务器配置:'
- en: '[global]'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '[全局]'
- en: 'workgroup = {{ wrk_grp | upper }} ## upper convert any input to uppercase.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '工作组 = {{ wrk_grp | upper }} ## upper convert any input to uppercase.'
- en: server string = Samba Server %v
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器字符串 = Samba服务器%v
- en: netbios name = {{ os_name }}
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: netbios名称 = {{ os_name }}
- en: security = user
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 安全 = 用户
- en: map to guest = bad user
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 映射到访客=坏用户
- en: dns proxy = no
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: dns代理 = 否
- en: '#========= Share Definitions ========='
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '#=========共享定义========='
- en: 'Samba shared folder:'
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Samba共享文件夹:'
- en: '[{{ smb_share_name }}]'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[{{ smb_share_name }}]'
- en: path = {{ smb_share_path }}
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 路径 = {{ smb_share_path }}
- en: valid users = @{{ smb_grp }}
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 有效用户 = @{{ smb_grp }}
- en: guest ok = no
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 访客ok = 否
- en: read only = no
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 只读 = 否
- en: browsable =yes
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 可浏览 = 是
- en: writable = yes
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 可写 = 是
- en: force user = nobody
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 强制用户 = 无
- en: create mask = {{ add_mod }}
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 创建掩码 = {{ add_mod }}
- en: directory mask = {{ dir_mod }}
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 目录掩码 = {{ dir_mod }}
- en: '[PRE31]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'files/Fileserver_rules.txt:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '文件/Fileserver_rules.txt:'
- en: This shared drive is to be used by designated teams.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 此共享驱动器供指定团队使用。
- en: Any distractive usage will cause a follow up on the incident.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 任何分散的使用都将导致事件的后续跟进。
- en: Please do not change any of your team members folders or delete anything you
    are not assigned to manage.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要更改任何团队成员的文件夹或删除任何未分配给您管理的内容。
- en: For any inquiries please contact admin@edu.lab
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如有任何疑问，请联系admin@edu.lab
- en: '[PRE32]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: meta/main.yml
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: meta/main.yml
- en: '---'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'dependencies: []'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '依赖关系: []'
- en: 'galaxy_info:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 'galaxy_info:'
- en: 'author: medalibi'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '作者: medalibi'
- en: 'description: "Samba server setup and configuration on Linux OS (Debian/Red
    Hat)"'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '描述: "Linux OS（Debian/Red Hat）上的Samba服务器设置和配置"'
- en: 'license: "license (GPLv3, BSD)"'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '许可证: "许可证（GPLv3，BSD）"'
- en: 'min_ansible_version: 2.5'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 'min_ansible_version: 2.5'
- en: 'platforms:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '平台:'
- en: '- name: Debian'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: Debian'
- en: 'versions:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '版本:'
- en: '- 8'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '- 8'
- en: '- 9'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '- 9'
- en: '- name: Ubuntu'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: Ubuntu'
- en: 'versions:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '版本:'
- en: '- 14.04'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '- 14.04'
- en: '- 16.04'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '- 16.04'
- en: '- 18.04'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '- 18.04'
- en: '- name: EL'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: EL'
- en: 'versions:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '版本:'
- en: '- 6'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '- 6'
- en: '- 7'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '- 7'
- en: 'galaxy_tags:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 'galaxy_tags:'
- en: '- system'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '- 系统'
- en: '- networking'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '- 网络'
- en: '- fileserver'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '- 文件服务器'
- en: '- windows'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '- 窗户'
- en: '[PRE33]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: vars/main.yml
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: vars/main.yml
- en: '---'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'debian_smb_pkgs:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 'debian_smb_pkgs:'
- en: '- samba'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba'
- en: '- samba-client'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba-client'
- en: '- samba-common'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba-common'
- en: '- python-glade2'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '- python-glade2'
- en: '- system-config-samba'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '- system-config-samba'
- en: 'redhat_smb_pkgs:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 'redhat_smb_pkgs:'
- en: '- samba'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '- 桑巴'
- en: '- samba-client'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba-client'
- en: '- samba-common'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba-common'
- en: '- cifs-utils'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '- cifs-utils'
- en: 'smb_selinux_pkg:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 'smb_selinux_pkg:'
- en: '- libsemanage-python'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '- libsemanage-python'
- en: 'smb_selinux_bln:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 'smb_selinux_bln:'
- en: '- samba_enable_home_dirs'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba_enable_home_dirs'
- en: '- samba_export_all_rw'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba_export_all_rw'
- en: 'samba_config_path: /etc/samba/smb.conf'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 'samba_config_path: /etc/samba/smb.conf'
- en: 'debian_smb_services:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 'debian_smb_services:'
- en: '- smbd'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '- smbd'
- en: '- nmbd'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '- nmbd'
- en: 'redhat_smb_services:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 'redhat_smb_services:'
- en: '- smb'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '- smb'
- en: '- nmb'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '- nmb'
- en: '[PRE34]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'defaults/main.yml:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 'defaults/main.yml:'
- en: '---'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'wrk_grp: WORKGROUP'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 'wrk_grp: 工作组'
- en: 'os_name: debian'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 'os_name: debian'
- en: 'smb_share_name: SharedWorkspace'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 'smb_share_name: 共享工作空间'
- en: 'smb_share_path: /usr/local/share'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 'smb_share_path: /usr/local/share'
- en: 'add_mod: 0700'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 'add_mod: 0700'
- en: 'dir_mod: 0700'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 'dir_mod: 0700'
- en: 'smb_grp: smbgrp'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 'smb_grp: smbgrp'
- en: 'smb_user: ''shareduser1'''
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 'smb_user: ''shareduser1'''
- en: 'smb_pass: ''5h@redP@55w0rd'''
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 'smb_pass: ''5h@redP@55w0rd'''
- en: '[PRE35]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'tasks/Debian_OS.yml:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks/Debian_OS.yml:'
- en: '---'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Install Samba packages on Debian family Linux'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 在Debian家族Linux上安装Samba软件包'
- en: 'apt:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 'apt:'
- en: 'name: "{{ item }}"'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: latest'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 最新'
- en: 'update_cache: yes'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 'update_cache: 是'
- en: 'with_items: "{{ debian_smb_pkgs }}"'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ debian_smb_pkgs }}"'
- en: 'tasks/RedHat_OS.yml:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks/RedHat_OS.yml:'
- en: '---'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Install Samba packages on Red Hat family Linux'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 在Red Hat家族Linux上安装Samba软件包'
- en: 'yum:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 'yum:'
- en: 'name: "{{ item }}"'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: latest'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 最新'
- en: 'update_cache: yes'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 'update_cache: 是'
- en: 'with_items: "{{ redhat_smb_pkgs }}"'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ redhat_smb_pkgs }}"'
- en: '- name: Install SELinux packages for Red Hat'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 为Red Hat安装SELinux软件包'
- en: 'yum:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 'yum:'
- en: 'name: "{{ item }}"'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: present'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 现有'
- en: 'with_items: "{{ smb_selinux_pkg }}"'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ smb_selinux_pkg }}"'
- en: '- name: Configure Red Hat SELinux Boolean'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 配置Red Hat SELinux布尔值'
- en: 'seboolean:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 'seboolean:'
- en: 'name: "{{ item }}"'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: true'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 真'
- en: 'persistent: true'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 'persistent: true'
- en: 'with_items: "{{ smb_selinux_bln }}"'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ smb_selinux_bln }}"'
- en: '[PRE36]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'tasks/main.yml:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks/main.yml:'
- en: '---'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Setup Samba based on host OS'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 根据主机操作系统设置Samba'
- en: 'include_tasks: "{{ ansible_os_family }}_OS.yml"'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 'include_tasks: "{{ ansible_os_family }}_OS.yml"'
- en: '- name: Create the Samba share access group'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 创建Samba共享访问组'
- en: 'group:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '组:'
- en: 'name: "{{ smb_grp }}"'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ smb_grp }}"'
- en: 'state: present'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 现有'
- en: '- name: Create the Samba access user'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 创建Samba访问用户'
- en: 'user:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '用户:'
- en: 'name: "{{ smb_user }}"'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ smb_user }}"'
- en: 'groups: "{{ smb_grp }}"'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '组: "{{ smb_grp }}"'
- en: 'append: yes'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '追加: 是'
- en: '- name: Define the user password within Samba'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 在Samba中定义用户密码'
- en: 'shell: "(echo {{ smb_pass }}; echo {{ smb_pass }}) |'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 'shell: "(echo {{ smb_pass }}; echo {{ smb_pass }}) |'
- en: smbpasswd -s -a {{ smb_user }}"
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: smbpasswd -s -a {{ smb_user }}"
- en: '- name: Check that the shared directory exist'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 检查共享目录是否存在'
- en: 'stat:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 'stat:'
- en: 'path: "{{ smb_share_path }}"'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '路径: "{{ smb_share_path }}"'
- en: 'register: share_dir'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 'register: share_dir'
- en: '- name: Make sure the shared directory is present'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 确保共享目录存在'
- en: 'file:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '文件:'
- en: 'state: directory'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 目录'
- en: 'path: "{{ smb_share_path }}"'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '路径: "{{ smb_share_path }}"'
- en: 'owner: "{{ smb_user }}"'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '所有者: "{{ smb_user }}"'
- en: 'group: "{{ smb_grp }}"'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '组: "{{ smb_grp }}"'
- en: 'mode: ''0777'''
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '模式: ''0777'''
- en: 'recurse: yes'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '递归: 是'
- en: 'when: share_dir.stat.exists == False'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '当: share_dir.stat.exists == False'
- en: '- name: Deploy the Samba configuration file'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 部署Samba配置文件'
- en: 'template:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '模板:'
- en: 'dest: "{{ samba_config_path }}"'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: "{{ samba_config_path }}"'
- en: 'src: smb.conf.j2'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 'src: smb.conf.j2'
- en: 'validate: ''testparm -s %s'''
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 'validate: ''testparm -s %s'''
- en: 'backup: yes'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '备份: 是'
- en: 'notify:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '通知:'
- en: '- Restart Samba'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '- 重新启动Samba'
- en: '- name: Enable and start Samba services on Debian family'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 在Debian家族上启用和启动Samba服务'
- en: 'service:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '服务:'
- en: 'name: "{{ item }}"'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: started'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 已启动'
- en: 'enabled: true'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '已启用: 是'
- en: 'with_items: "{{ debian_smb_services }}"'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ debian_smb_services }}"'
- en: 'when: ansible_os_family == ''Debian'''
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '当: ansible_os_family == ''Debian'''
- en: '- name: Enable and start Samba services on RedHat family'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 在RedHat家族上启用和启动Samba服务'
- en: 'service:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '服务:'
- en: 'name: "{{ item }}"'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: started'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 已启动'
- en: 'enabled: true'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '已启用: 是'
- en: 'with_items: "{{ redhat_smb_services }}"'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ redhat_smb_services }}"'
- en: 'when: ansible_os_family == ''RedHat'''
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 'when: ansible_os_family == ''RedHat'''
- en: '[PRE37]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '/handlers/main.yml:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '/handlers/main.yml:'
- en: '---'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Restart Samba'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称: 重新启动Samba'
- en: 'service:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '服务:'
- en: 'name: "{{ item }}"'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: restarted'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 重新启动'
- en: 'with_items: "{{ debian_smb_services }}"'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ debian_smb_services }}"'
- en: 'when: ansible_os_family == ''Debian'''
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '当: ansible_os_family == ''Debian'''
- en: '- name: Restart Samba'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '- 重新启动Samba'
- en: 'service:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '服务:'
- en: 'name: "{{ item }}"'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '名称: "{{ item }}"'
- en: 'state: restarted'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '状态: 重新启动'
- en: 'with_items: "{{ redhat_smb_services }}"  when: ansible_os_family == ''RedHat'''
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 'with_items: "{{ redhat_smb_services }}"  when: ansible_os_family == ''RedHat'''
- en: '[PRE38]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'tests/inventory:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: tests/inventory：
- en: '[linuxserver]'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '[linuxserver]'
- en: node0
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 节点0
- en: node1
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 节点1
- en: node2
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 节点2
- en: '[PRE39]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'tests/test,yml:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: tests/test,yml：
- en: '- hosts: linuxserver'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '- 主机：linuxserver'
- en: 'remote_user: setup'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 远程用户：设置
- en: 'become: yes'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 变得：是
- en: 'roles:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '角色:'
- en: '- samba.lab.edu'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '- samba.lab.edu'
- en: '[PRE40]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: ansible-playbook tests/test.yml -i tests/inventory
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: ansible-playbook tests/test.yml -i tests/inventory
- en: '```'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: The `README.md` file can contain some information about the variable of the
    role to help its users personalize it to their own setup.When building mass roles,
    the best way to test them is to use containers with different base systems.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '`README.md`文件可以包含有关角色变量的一些信息，以帮助用户将其个性化到自己的设置中。在构建大量角色时，测试它们的最佳方法是使用具有不同基本系统的容器。'
- en: Summary
  id: totrans-440
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have listed several handy techniques to optimize configuration
    management coding when using Ansible and other automation tools. We have introduced
    Ansible roles, including how to make them and how to use them. In [Chapter 7](4804bfab-3dde-4977-8928-81ae5d80a764.xhtml),
    *Ansible Galaxy and Community Roles*, we are going to explore community roles
    on Ansible Galaxy. We will download and use the highest-rated ones and show how
    we can add a role on Ansible Galaxy ourselves.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们列出了在使用Ansible和其他自动化工具时优化配置管理编码的几种方便的技术。我们介绍了Ansible角色，包括如何制作它们以及如何使用它们。在[第7章](4804bfab-3dde-4977-8928-81ae5d80a764.xhtml)
    *Ansible Galaxy和社区角色*中，我们将探讨Ansible Galaxy上的社区角色。我们将下载并使用评分最高的角色，并展示如何在Ansible
    Galaxy上添加一个角色。
- en: References
  id: totrans-442
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'Ansible documentation: [https://docs.ansible.com/ansible/latest](https://docs.ansible.com/ansible/latest)'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible文档：[https://docs.ansible.com/ansible/latest](https://docs.ansible.com/ansible/latest)
