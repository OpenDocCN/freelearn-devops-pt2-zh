["```\nsudo rpm -i epel-release-latest-7.noarch.rpm\n```", "```\nsudo subsription-manager repos --enable rhel-7-server-ansible-2.5-rpms\n```", "```\nsudo yum update\n```", "```\nsudo yum install ansible\n```", "```\nsudo dnf -y update\n```", "```\nsudo dnf -y install ansible\n```", "```\nsudo rpm -Uvh ansible-2.5.5-1.el7.ans.noarch.rpm\n```", "```\ngit clone https://github.com/ansible/ansible.git\ncd ansible\n```", "```\nmake rpm\nsudo rpm -Uvh rpm-build/ansible-*.noarch.rpm\n```", "```\nsudo apt-get install -y software-properties-common\n```", "```\ndeb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\n```", "```\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367\n```", "```\nsudo apt update\n```", "```\nsudo apt install -y ansible\n```", "```\nsudo apt-add-repository ppa:ansible/ansible\n```", "```\nsudo apt update\n```", "```\nsudo apt install ansible\n```", "```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```", "```\nbrew install ansible\n```", "```\nsudo yum install -y python-pip\n```", "```\nsudo apt install -y python-pip\n```", "```\nsudo easy_install pip\n```", "```\nbrew install python-pip\n```", "```\nsudo pip install ansible\n```", "```\nsudo pip install git+https://github.com/ansible/ansible.git@devel\n```", "```\nwget -c https://releases.ansible.com/ansible/ansible-2.6.0rc3.tar.gz\n```", "```\ntar -xzvf  ./ansible-2.6.0rc3.tar.gz\n```", "```\nsudo yum install -y git\n```", "```\nsudo apt install -y git\n```", "```\nbrew install git\n```", "```\ngit clone https://github.com/ansible/ansible.git --recursive\n```", "```\ncd ./ansible*\n```", "```\nsudo easy_install pip\n```", "```\nsudo pip install -r ./requirements.txt\n```", "```\nsource ./hacking/env-setup\n```", "```\ngit pull --rebase\ngit submodule update --init --recursive\n```", "```\necho \"export ANSIBLE_HOSTS=/etc/ansible/hosts\" >> ~/.bashrc\necho \"source ~/ansible/hacking/env-setup\" >> ~/.bashrc\n```", "```\nFROM alpine:3.7\n\nRUN echo \"#### Setting up the environment for the build dependencies ####\" && \\\nset -x && apk --update add --virtual build-dependencies \\\n    gcc musl-dev libffi-dev openssl-dev python-dev\n\nRUN echo \"#### Update the OS package index and tools ####\" && \\\n    apk update && apk upgrade\n\nRUN echo \"#### Setting up the build dependecies ####\" && \\\n   apk add --no-cache bash curl tar openssh-client \\\n    sshpass git python py-boto py-dateutil py-httplib2 \\\n    py-jinja2 py-paramiko py-pip py-yaml ca-certificates \n\nRUN echo \"#### Installing Python PyPI ####\" && \\\n    pip install pip==9.0.3 && \\\n    pip install python-keyczar docker-py\n\nRUN echo \"#### Installing Ansible latest release and cleaning up ####\" && \\\n    pip install ansible \u2013upgrade \\\n    apk del build-dependencies && \\\n    rm -rf /var/cache/apk/*\n\nRUN echo \"#### Initializing Ansible inventory with the localhost ####\" && \\\n    mkdir -p /etc/ansible/library /etc/ansible/roles /etc/ansible/lib /etc/ansible/ && \\\n    echo \"localhost\" >> /etc/ansible/hosts\n\nENV HOME                      /home/ansible\nENV PATH                      /etc/ansible/bin:$PATH\nENV PYTHONPATH                /etc/ansible/lib\nENV ANSIBLE_ROLES_PATH        /etc/ansible/roles\nENV ANSIBLE_LIBRARY           /etc/ansible/library\nENV ANSIBLE_SSH_PIPELINING                True\nENV ANSIBLE_GATHERING                     smart\nENV ANSIBLE_HOST_KEY_CHECKING             false\nENV ANSIBLE_RETRY_FILES_ENABLED           false \n\nRUN adduser -h $HOME ansible -D \\\n   && chown -R ansible:ansible $HOME\n\nRUN echo \"ansible ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n    && chmod 0440 /etc/sudoers\n\nWORKDIR $HOME\nUSER ansible\n\nENTRYPOINT [\"ansible\"]       \n```", "```\ndocker build -t dockerhub-user/ansible .\n```", "```\ndocker run --rm -it -v ~:/home/ansible dockerhub-user/ansible --version\n```", "```\ndocker run --rm -it -v ~:/home/ansible \\\n -v ~/.ssh/id_rsa:/ansible/.ssh/id_rsa \\\n -v ~/.ssh/id_rsa.pub:/ansible/.ssh/id_rsa.pub \\\n dockerhub-user/ansible -m ping 192.168.1.10\n```", "```\n#!/bin/bash\n -v ~/.ssh/id_rsa:/ansible/.ssh/id_rsa \\\n -v ~/.ssh/id_rsa.pub:/ansible/.ssh/id_rsa.pub \\\n -v /var/log/ansible/ansible.log \\\n dockerhub-user/ansible \"$@\"\n```", "```\nAnsibleplaybook play tasks.yml -i inventory/hosts\n```", "```\nsudo nano /etc/ansible/ansible.cfg\n```", "```\ninventory = /etc/ansible/hosts\n```", "```\nroles_path = /etc/ansible/roles\n```", "```\nlog_path = /var/log/ansible.log\n```", "```\nretry_files_enabled = False\n```", "```\nhost_key_checking = False\n```", "```\nforks = 10\n```", "```\nsudo_user = install\nask_sudo_pass = True\n```", "```\nremote_port = 22\n```", "```\nnocolor = 0\n```", "```\npipelining = True  \n```", "```\nscp_if_ssh = smart\ntransfer_method = smart\n```", "```\nconnect_timeout = 30\n```", "```\nconnect_retry_timeout = 15\n```", "```\nwarn = bright purple\nerror = red\ndebug = dark gray\nok = green\nchanged = yellow\nskip = cyan\n```", "```\nssh-keygen -t rsa\n```", "```\nssh-copyid user@host1\n```", "```\nsudo yum install -y expect-devel\n```", "```\nsudo apt install -y expect\n```", "```\nbrew install expect\n```", "```\n#!/usr/bin/expect -f\nset login \"install\"\nset addr [lindex $argv 0]\nset pw [lindex $argv 1]\nspawn ssh-copy-id $login@$addr\nexpect \"*yes/no*\" {\n send \"yes\\r\"\n expect \"*?assword*\" { send \"$pw\\r\" }\n } \"*?asswor*\" { send \"$pw\\r\" }\ninteract\n```", "```\n#!/bin/bash\npassword=`cat /root/installpassword.txt`\nfor j in 10 11 12 13 14 15 16 17 18 19 20\ndo\n ./expectscript 192.168.1.$j $password\ndone\n```", "```\nansible all -m copy -a \"src=~ /.ssh/id_rsa.pub dest=/tmp/id_rsa.pub\" --ask-pass -c install\nansible all -m shell -a \"cat /tmp/id_rsa.pub >> /home/install/.ssh/authorized_keys\" --ask-pass -c install\n```", "```\n$link = \"https://raw.githubusercontent.com/jborean93/ansible-windows/master/scripts/Upgrade-PowerShell.ps1\"\n$script = \"$env:temp\\Upgrade-PowerShell.ps1\"\n$username = \"Admin\"\n$password = \"secure_password\"\n\n(New-Object -TypeName System.Net.WebClient).DownloadFile($link, $script)\nSet-ExecutionPolicy -ExecutionPolicy Unrestricted -Force\n\n&$script -Version 5.1 -Username $username -Password $password -Verbose\n\nSet-ExecutionPolicy -ExecutionPolicy Restricted -Force\n\n$reg_winlogon_path = \"HKLM:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\"\nSet-ItemProperty -Path $reg_winlogon_path -Name AutoAdminLogon -Value 0\nRemove-ItemProperty -Path $reg_winlogon_path -Name DefaultUserName -ErrorAction SilentlyContinue\nRemove-ItemProperty -Path $reg_winlogon_path -Name DefaultPassword -ErrorAction SilentlyContinue\n```", "```\n$link = \"https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1\"\n$script = \"$env:temp\\ConfigureRemotingForAnsible.ps1\"\n\n(New-Object -TypeName System.Net.WebClient).DownloadFile($link, $script)\n\npowershell.exe -ExecutionPolicy ByPass -File $script\n```"]