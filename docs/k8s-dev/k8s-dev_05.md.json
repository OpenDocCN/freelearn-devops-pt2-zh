["```\nkubectl get deploy\nNAME   DESIRED CURRENT UP-TO-DATE AVAILABLE AGE\nnodejs 1       1       1          1         8h\n```", "```\nkubectl get rs\nNAME              DESIRED CURRENT READY AGE\nnodejs-6b9b87d48b 1       1       1     8h\n```", "```\nkubectl get pod\nNAME                    READY STATUS  RESTARTS AGE\nnodejs-6b9b87d48b-ddhjf 1/1   Running 0        8h\n```", "```\nkubectl describe deploy nodejs\n```", "```\nkubectl describe rs nodejskubectl describe deploy nodejs \n```", "```\nkubectl describe pod nodejs\n```", "```\n kubectl get pod nodejs-6b9b87d48b-lcgvd -o yaml\n```", "```\napiVersion: apps/v1beta1\nkind: Deployment\nmetadata:\n name: flask\n labels:\n run: flask\nspec:\n template:\n metadata:\n labels:\n app: flask\n spec:\n containers:\n - name: flask\n image: quay.io/kubernetes-for-developers/flask:0.3.0\n imagePullPolicy: Always\n ports:\n - containerPort: 5000\n envFrom:\n - configMapRef:\n name: flask-config\n volumeMounts:\n - name: config\n mountPath: /etc/flask-config\n readOnly: true\n livenessProbe:\n httpGet:\n path: /alive\n port: 5000\n initialDelaySeconds: 1\n periodSeconds: 5\n readinessProbe:\n httpGet:\n path: /ready\n port: 5000\n initialDelaySeconds: 5\n periodSeconds: 5\n volumes:\n - name: config\n configMap:\n name: flask-config\n```", "```\n@app.route('/alive')\ndef alive():\n return \"Yes\"\n```", "```\n@app.route('/ready')\ndef ready():\n if redis_store.ping():\n return \"Yes\"\n else:\n flask.abort(500)\n```", "```\ngit clone https://github.com/kubernetes-for-developers/kfd-flask\n\ncd kfd-flask\n\ngit checkout 0.3.0\n\nkubectl apply -f deploy/\n```", "```\nkubectl describe deployment flask\n```", "```\nkubectl log deployment/flask\n```", "```\n * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\n * Restarting with stat\n * Debugger is active!\n * Debugger PIN: 177-760-948\n172.17.0.1 - - [21/Dec/2017 14:57:50] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:57:53] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:57:55] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:57:58] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:00] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:03] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:05] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:08] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:10] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:13] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:15] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:18] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:20] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:23] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:25] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:28] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:30] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:33] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:35] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:38] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:40] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:43] \"GET /ready HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:45] \"GET /alive HTTP/1.1\" 200 -\n172.17.0.1 - - [21/Dec/2017 14:58:48] \"GET /ready HTTP/1.1\" 200 -\n...\n```", "```\nlivenessProbe:\n  httpGet:\n  path: /probes/alive\n  port: 3000\n  initialDelaySeconds: 1\n  periodSeconds: 5 readinessProbe:   httpGet:\n  path: /probes/ready\n  port: 3000\n  initialDelaySeconds: 5\n  periodSeconds: 5\n```", "```\nvar express = require('express');\nvar router = express.Router();\nvar util = require('util');\nvar db = require('../db');\n\n/* GET liveness probe response. */\nrouter.get('/alive', function(req, res, next) {\n res.send('yes');\n});\n\n/* GET readiness probe response. */\nrouter.get('/ready', async function(req, res, next) {\n try {\n let pingval = await db.ping()\n if (pingval) {\n res.send('yes');\n } else {\n res.status(500).json({ error: \"redis.ping was false\" })\n }\n } catch (error) {\n res.status(500).json({ error: error.toString() })\n }\n});\n\nmodule.exports = router;\n```", "```\nGET /probes/alive 200 1.379 ms - 3\nThu, 21 Dec 2017 17:43:51 GMT express:router dispatching GET /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router query : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router expressInit : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router logger : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router jsonParser : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router urlencodedParser : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router cookieParser : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router serveStatic : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router router : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router dispatching GET /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router trim prefix (/probes) from url /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router router /probes : /probes/ready\nThu, 21 Dec 2017 17:43:51 GMT express:router dispatching GET /ready\nGET /probes/ready 200 1.239 ms - 3\nThu, 21 Dec 2017 17:43:54 GMT express:router dispatching GET /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router query : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router expressInit : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router logger : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router jsonParser : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router urlencodedParser : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router cookieParser : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router serveStatic : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router router : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router dispatching GET /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router trim prefix (/probes) from url /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router router /probes : /probes/alive\nThu, 21 Dec 2017 17:43:54 GMT express:router dispatching GET /alive\nGET /probes/alive 200 1.361 ms - 3\n```", "```\nkubectl delete deployment redis-master\n```", "```\nkubectl get pods\nNAME                         READY STATUS      RESTARTS AGE\nnodejs-65498dfb6f-5v7nc      0/1   Running     0        8h\nredis-master-b6b8774f9-sjl4w 0/1   Terminating 0        10h\n```", "```\nkubectl describe deploy nodejs\n```", "```\nkubectl describe pod nodejs\n```", "```\nspec:\n template:\n metadata:\n labels:\n app: flask\n spec:\n containers:\n - name: flask\n image: quay.io/kubernetes-for-developers/flask:0.2.0\n ports:\n - containerPort: 5000\n envFrom:\n - configMapRef:\n name: flask-config\n volumeMounts:\n - name: config\n mountPath: /etc/flask-config\n readOnly: true\n volumes:\n - name: config\n configMap:\n name: flask-config\n initContainers:\n      - name: init-myservice\n image: busybox\n command: ['sh', '-c', 'until nslookup redis-master; do echo waiting for redis; sleep 2; done;']\n```", "```\nNAME                  READY STATUS   RESTARTS AGE\nflask-f48f89687-8p8nj 0/1   Init:0/1 0        8h\n```", "```\nkubectl describe deploy/flask\n```", "```\nkubectl run tempinteractive -it --rm --restart=Never --image=busybox -- /bin/sh\n```", "```\nimport signal\nimport sys\n\ndef sigterm_handler(_signo, _stack_frame):\n    sys.exit(0)\n\nsignal.signal(signal.SIGTERM, sigterm_handler)\n```", "```\n/**\n * SIGTERM handler to terminate (semi) gracefully\n */\nprocess.on(process.SIGTERM, function() {\n    console.log('Received SIGTERM signal, now shutting down...');\n    process.exit(0);\n})\n```"]