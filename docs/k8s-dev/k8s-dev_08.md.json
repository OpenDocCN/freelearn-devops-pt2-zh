["```\nhelm template prometheus -n monitor --namespace monitoring\n```", "```\napiVersion: extensions/v1beta1 kind: DaemonSet metadata:\n  labels:\n  app: prometheus\n  chart: prometheus-4.6.17\n  component: \"node-exporter\"\n  heritage: Tiller\n  release: monitor\n  name: monitor-prometheus-node-exporter spec:\n  updateStrategy:\n  type: OnDelete   template:\n  metadata:\n  labels:\n  app: prometheus\n  component: \"node-exporter\"\n  release: monitor\n  spec:\n  serviceAccountName: \"default\"\n  containers:\n - name: prometheus-node-exporter\n  image: \"prom/node-exporter:v0.15.0\"\n  imagePullPolicy: \"IfNotPresent\"\n  args:\n - --path.procfs=/host/proc\n - --path.sysfs=/host/sys\n  ports:\n - name: metrics\n  containerPort: 9100\n  hostPort: 9100\n  resources:\n {}  volumeMounts:\n - name: proc\n  mountPath: /host/proc\n  readOnly: true\n - name: sys\n  mountPath: /host/sys\n  readOnly: true\n  hostNetwork: true\n  hostPID: true\n  volumes:\n - name: proc\n  hostPath:\n  path: /proc\n - name: sys\n  hostPath:\n  path: /sys\n```", "```\nminikube start --memory 5120\n```", "```\nminikube addons list\n```", "```\n- addon-manager: enabled\n- coredns: enabled\n- dashboard: enabled\n- default-storageclass: enabled\n- efk: disabled\n- freshpod: disabled\n- heapster: disabled\n- ingress: disabled\n- kube-dns: disabled\n- registry: disabled\n- registry-creds: disabled\n- storage-provisioner: enabled\n```", "```\n minikube addons enable efk\n```", "```\nefk was successfully enabled\n```", "```\nkubectl get all --all-namespaces\n```", "```\nNAMESPACE NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE\nkube-system deploy/coredns 1 1 1 1 5h\nkube-system deploy/kubernetes-dashboard 1 1 1 1 5h\n```", "```\nNAMESPACE NAME DESIRED CURRENT READY AGE\nkube-system rs/coredns-599474b9f4 1 1 1 5h\nkube-system rs/kubernetes-dashboard-77d8b98585 1 1 1 5h\n```", "```\nNAMESPACE NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE\nkube-system deploy/coredns 1 1 1 1 5h\nkube-system deploy/kubernetes-dashboard 1 1 1 1 5h\n```", "```\nNAMESPACE NAME DESIRED CURRENT READY AGE\nkube-system rs/coredns-599474b9f4 1 1 1 5h\nkube-system rs/kubernetes-dashboard-77d8b98585 1 1 1 5h\n```", "```\nNAMESPACE NAME READY STATUS RESTARTS AGE\nkube-system po/coredns-599474b9f4-6fp8z 1/1 Running 0 5h\nkube-system po/elasticsearch-logging-4zbpd 0/1 PodInitializing 0 3s\nkube-system po/fluentd-es-hcngp 1/1 Running 0 3s\nkube-system po/kibana-logging-stlzf 1/1 Running 0 3s\nkube-system po/kube-addon-manager-minikube 1/1 Running 0 5h\nkube-system po/kubernetes-dashboard-77d8b98585-qvwlv 1/1 Running 0 5h\nkube-system po/storage-provisioner 1/1 Running 0 5h\n```", "```\nNAMESPACE NAME DESIRED CURRENT READY AGE\nkube-system rc/elasticsearch-logging 1 1 0 3s\nkube-system rc/fluentd-es 1 1 1 3s\nkube-system rc/kibana-logging 1 1 1 3s\n```", "```\nNAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\ndefault svc/kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 5h\nkube-system svc/elasticsearch-logging ClusterIP 10.109.100.36 <none> 9200/TCP 3s\nkube-system svc/kibana-logging NodePort 10.99.88.146 <none> 5601:30003/TCP 3s\nkube-system svc/kube-dns ClusterIP 10.96.0.10 <none> 53/UDP,53/TCP,9153/TCP 5h\nkube-system svc/kubernetes-dashboard NodePort 10.98.230.226 <none> 80:30000/TCP 5h\n```", "```\nminikube service list\n```", "```\n|-------------|-----------------------|----------------------------|\n| NAMESPACE   | NAME                  | URL                        |\n|-------------|-----------------------|----------------------------|\n| default     | kubernetes            | No node port               |\n| kube-system | elasticsearch-logging | No node port               |\n| kube-system | kibana-logging        | http://192.168.64.32:30003 |\n| kube-system | kube-dns              | No node port               |\n| kube-system | kubernetes-dashboard  | http://192.168.64.32:30000 |\n|-------------|-----------------------|----------------------------|\n```", "```\nminikube service kibana-logging -n kube-system\n```", "```\ngit clone https://github.com/kubernetes-for-developers/kfd-flask -b 0.5.0\n```", "```\nkubectl apply -f kfd-flask/deploy/\n```", "```\nkubectl scale deploy/flask --replicas=3\n```", "```\nlog:error\n```", "```\nlog:/*error*/\n```", "```\nkubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-kubernetes/master/all-in-one/jaeger-all-in-one-template.yml\n```", "```\ndeployment \"jaeger-deployment\" created\nservice \"jaeger-query\" created\nservice \"jaeger-collector\" created\nservice \"jaeger-agent\" created\nservice \"zipkin\" created\n```", "```\nminikube service jaeger-query\n```", "```\ngit clone https://github.com/kubernetes-for-developers/kfd-flask -b 0.6.0\n```", "```\n - name: jaeger-agent\n   image: jaegertracing/jaeger-agent\n   ports:\n   - containerPort: 5775\n     protocol: UDP\n   - containerPort: 5778\n   - containerPort: 6831\n     protocol: UDP\n   - containerPort: 6832\n     protocol: UDP\n   command:\n   - \"/go/bin/agent-linux\"\n   - \"--collector.host-port=jaeger-collector:14267\"\n```", "```\nimport opentracing\nfrom jaeger_client import Config\nfrom flask_opentracing import FlaskTracer\n\n# defaults to reporting via UDP, port 6831, to localhost\ndef initialize_tracer():\n    config = Config(\n        config={\n            'sampler': {\n                'type': 'const',\n                'param': 1\n            },\n            'logging': True\n        },\n        service_name='flask-service'\n    )\n    # also sets opentracing.tracer\n    return config.initialize_tracer() \n\n```", "```\napp = Flask(__name__)flask_tracer = FlaskTracer(initialize_tracer, True, app, [\"url_rule\"])\n```", "```\n@app.route('/ready')\ndef ready():\n  parent_span = flask_tracer.get_span()\n  with opentracing.tracer.start_span('redis-ping', child_of=parent_span) as span:\n    result = redis_store.ping()\n    span.set_tag(\"redis-ping\", result)\n  if result:\n    return \"Yes\"\n  else:\n    abort(500)\n```", "```\n@app.route('/remote')\ndef pull_requests():\n    parent_span = flask_tracer.get_span()\n    github_url = \"https://api.github.com/repos/opentracing/opentracing-python/pulls\"\n\n    with opentracing.tracer.start_span('github-api', child_of=parent_span) as span:\n        span.set_tag(\"http.url\",github_url)\n        r = requests.get(github_url)\n        span.set_tag(\"http.status_code\", r.status_code)\n\n    with opentracing.tracer.start_span('parse-json', child_of=parent_span) as span:\n        json = r.json()\n        span.set_tag(\"pull_requests\", len(json))\n        pull_request_titles = map(lambda item: item['title'], json)\n    return 'PRs: ' + ', '.join(pull_request_titles)\n```", "```\nkubectl delete deploy/flask\ndocker build -t quay.io/kubernetes-for-developers/flask:0.6.0 .\ndocker push quay.io/kubernetes-for-developers/flask\nkubectl apply -f deploy/\n```", "```\nkubectl get pods \n```", "```\nNAME                              READY STATUS RESTARTS AGE\nflask-76f8c9767-56z4f             0/2   Init:0/1 0 6s\njaeger-deployment-559c8b9b8-jrq6c 1/1   Running 0 5d\nredis-master-75c798658b-cxnmp     1/1   Running 0 5d\n```", "```\nNAME                              READY STATUS RESTARTS AGE\nflask-76f8c9767-56z4f             2/2   Running 0 1m\njaeger-deployment-559c8b9b8-jrq6c 1/1   Running 0 5d\nredis-master-75c798658b-cxnmp     1/1   Running 0 5d\n```", "```\nminikube service list\n```", "```\n\n|-------------|----------------------|----------------------------|\n| NAMESPACE   | NAME                 | URL                        |\n|-------------|----------------------|----------------------------|\n| default     | flask-service        | http://192.168.64.33:30676 |\n| default     | jaeger-agent         | No node port               |\n| default     | jaeger-collector     | No node port               |\n| default     | jaeger-query         | http://192.168.64.33:30854 |\n| default     | kubernetes           | No node port               |\n| default     | redis-service        | No node port               |\n| default     | zipkin               | No node port               |\n| kube-system | kube-dns             | No node port               |\n| kube-system | kubernetes-dashboard | http://192.168.64.33:30000 |\n| kube-system | tiller-deploy        | No node port               |\n|-------------|----------------------|----------------------------|\n```", "```\nminikube service flask-service\n```", "```\nminikube service jaeger-query\n```"]