["```\nkubectl logs deployment/flask\n```", "```\nkubectl logs deployment/flask -f\n```", "```\nkubectl logs deployment/flask --timestamps\n```", "```\n2017-09-16T03:54:20.851827407Z  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\n2017-09-16T03:54:20.852424207Z  * Restarting with stat\n2017-09-16T03:54:21.163624707Z  * Debugger is active!\n2017-09-16T03:54:21.165358607Z  * Debugger PIN: 996-805-904\n```", "```\nkubectl run -i -t alpine-interactive --image=alpine -- sh\n```", "```\nSession ended, resume using 'kubectl attach alpine-interactive-1535083360-4nxj8 -c alpine-interactive -i -t' command when the pod is running\n```", "```\nkubectl delete deployment alpine-interactive\n```", "```\nkubectl run -i -t python-interactive --image=quay.io/kubernetes-for-developers/flask:latest --command -- /bin/sh \n```", "```\nIf you don't see a command prompt, try pressing enter.\n/ #\n```", "```\ncd /opt/exampleapp\n/opt/exampleapp # python3\nPython 3.6.1 (default, May 2 2017, 15:16:41)\n[GCC 6.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import os\n>>> os.environ\nenviron({'KUBERNETES_PORT': 'tcp://10.0.0.1:443', 'KUBERNETES_SERVICE_PORT': '443', 'HOSTNAME': 'python-interactive-666665880-hwvvp', 'SHLVL': '1', 'OLDPWD': '/', 'HOME': '/root', 'TERM': 'xterm', 'KUBERNETES_PORT_443_TCP_ADDR': '10.0.0.1', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'KUBERNETES_PORT_443_TCP_PORT': '443', 'KUBERNETES_PORT_443_TCP_PROTO': 'tcp', 'KUBERNETES_PORT_443_TCP': 'tcp://10.0.0.1:443', 'KUBERNETES_SERVICE_PORT_HTTPS': '443', 'PWD': '/opt/exampleapp', 'KUBERNETES_SERVICE_HOST': '10.0.0.1'})\n>>> import flask\n>>> help(flask.app)\nHelp on module flask.app in flask:\nNAME\n flask.app\nDESCRIPTION\n flask.app\n ~~~~~~~~~\nThis module implements the central WSGI application object.\n:copyright: (c) 2015 by Armin Ronacher.\n :license: BSD, see LICENSE for more details.\nCLASSES\n flask.helpers._PackageBoundObject(builtins.object)\n Flask\nclass Flask(flask.helpers._PackageBoundObject)\n | The flask object implements a WSGI application and acts as the central\n | object. It is passed the name of the module or package of the\n | application. Once it is created it will act as a central registry for\n | the view functions, the URL rules, template configuration and much more.\n |\n | The name of the package is used to resolve resources from inside the\n | package or the folder the module is contained in depending on if the\n | package parameter resolves to an actual python package (a folder with\n>>> exit()\n/opt/exampleapp #\n```", "```\nSession ended, resume using 'kubectl attach python-interactive-666665880-hwvvp -c python-interactive -i -t' command when the pod is running\n```", "```\nkubectl delete deployment python-interactive\ndeployment \"python-interactive\" deleted\n```", "```\nUnable to use a TTY - container flask did not allocate one\n```", "```\nkubectl run nodejs --image=quay.io/kubernetes-for-developers/nodejs:latest \u2014-port=3000\n```", "```\nkubectl attach deployment/express -i -t\n```", "```\nUnable to use a TTY - container flask did not allocate one\nIf you don't see a command prompt, try pressing enter.\n```", "```\nkubectl get pods\nNAME                   READY STATUS  RESTARTS AGE\nflask-1908233635-d6stj 1/1   Running 0        1m\n```", "```\nkubectl exec flask-1908233635-d6stj -it -- /bin/sh # ps aux\nPID USER TIME COMMAND\n 1 root 0:00 python3 /opt/exampleapp/exampleapp.py\n 12 root 0:00 /bin/sh\n 17 root 0:00 ps aux\n```", "```\napp=flask\n```", "```\napp=flask,tier in (front-end)\n```", "```\nkubectl get pods -l app=flask\n```", "```\nkubectl describe deployment flask\n```", "```\nName: flask\nNamespace: default\nCreationTimestamp: Sat, 16 Sep 2017 08:31:00 -0700\nLabels: pod-template-hash=866287979\n run=flask\nAnnotations: deployment.kubernetes.io/revision=1\nkubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"apps/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"run\":\"flask\"},\"name\":\"flask\",\"namespace\":\"default\"},\"spec\":{\"t...\nSelector: app=flask\nReplicas: 1 desired | 1 updated | 1 total | 1 available | 0 unavailable\nStrategyType: RollingUpdate\nMinReadySeconds: 0\nRollingUpdateStrategy: 25% max unavailable, 25% max surge\nPod Template:\n Labels: app=flask\n Containers:\n flask:\n Image: quay.io/kubernetes-for-developers/flask:latest\n Port: 5000/TCP\n Environment: <none>\n Mounts: <none>\n Volumes: <none>\nConditions:\n Type Status Reason\n ---- ------ ------\n Available True MinimumReplicasAvailable\n Progressing True NewReplicaSetAvailable\nOldReplicaSets: <none>\nNewReplicaSet: flask-866287979 (1/1 replicas created)\nEvents:\n FirstSeen LastSeen Count From SubObjectPath Type Reason Message\n --------- -------- ----- ---- ------------- -------- ------ -------\n 2d 2d 1 deployment-controller Normal ScalingReplicaSet Scaled up replica set flask-866287979 to 1\n```", "```\nkubectl get deployment -l run=flask\n```", "```\nNAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nflask     1         1         1            1           2d\n```", "```\nkubectl get pods -l app=flask\n```", "```\nNAME                    READY     STATUS    RESTARTS   AGE\nflask-866287979-bqg5w   1/1       Running   0          2d\n```", "```\nkubectl label pods your-pod-name enable=true\n```", "```\nkubectl get pods -L run,pod-template-hash\n```", "```\nNAME READY STATUS RESTARTS AGE RUN POD-TEMPLATE-HASH\nflask-1908233635-d6stj 1/1 Running 1 20h flask 1908233635\n```", "```\nkubectl run flask --image=quay.io/kubernetes-for-developers/flask:latest\n```", "```\nkubectl expose deploy flask --port 5000\nservice \"flask\" exposed\n```", "```\nkubectl get service flask\n```", "```\n\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nflask ClusterIP 10.0.0.168 <none> 5000/TCP 20h\n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n name: service\nspec:\n selector:\n run: flask\n ports:\n - protocol: TCP\n port: 80\n    targetPort: 5000\n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n name: some-remote-service\nspec:\n ports:\n - protocol: TCP\n port: 1976\n targetPort: 1976\n```", "```\nkind: Endpoints\napiVersion: v1\nmetadata:\n name: some-remote-service\nsubsets:\n - addresses:\n - ip: 1.2.3.4\n ports:\n - port: 1976\n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n name: another-remote-service\n namespace: default\nspec:\n type: ExternalName\n externalName: my.rest.api.example.com\n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n name: flask-service\nspec:\n ClusterIP: None\n selector:\n app: flask\n```", "```\nkubectl get services\n```", "```\nNAME            CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nflask           10.0.0.61    <none>        80/TCP    2d\nkubernetes      10.0.0.1     <none>        443/TCP   5d\n```", "```\nenv\n```", "```\nKUBERNETES_PORT=tcp://10.0.0.1:443\nKUBERNETES_SERVICE_PORT=443\nKUBERNETES_PORT_443_TCP_ADDR=10.0.0.1\nKUBERNETES_PORT_443_TCP_PORT=443\nKUBERNETES_PORT_443_TCP_PROTO=tcp\nKUBERNETES_PORT_443_TCP=tcp://10.0.0.1:443\nKUBERNETES_SERVICE_PORT_HTTPS=443\nKUBERNETES_SERVICE_HOST=10.0.0.1\nFLASK_SERVICE_PORT_80_TCP_ADDR=10.0.0.61\nFLASK_SERVICE_PORT_80_TCP_PORT=80\nFLASK_SERVICE_PORT_80_TCP_PROTO=tcp\nFLASK_SERVICE_PORT_80_TCP=tcp://10.0.0.61:80\nFLASK_SERVICE_SERVICE_HOST=10.0.0.61\nFLASK_SERVICE_SERVICE_PORT=80\nFLASK_SERVICE_PORT=tcp://10.0.0.61:80\n```", "```\nkubectl exec flask-1908233635-d6stj -it -- /bin/sh\n```", "```\n/ # nslookup flask\nnslookup: can't resolve '(null)': Name does not resolve\nName: flask\nAddress 1: 10.0.0.168 flask.default.svc.cluster.local\n```", "```\nkubectl delete service flask\n```", "```\nkubectl expose deploy flask --port 5000 --type=NodePort\n```", "```\nkubectl get service flask -o yaml\n\napiVersion: v1\nkind: Service\nmetadata:\n creationTimestamp: 2017-10-14T18:19:07Z\n labels:\n run: flask\n name: flask\n namespace: default\n resourceVersion: \"19788\"\n selfLink: /api/v1/namespaces/default/services/flask\n uid: 2afdd3aa-b10c-11e7-b586-080027768e7d\nspec:\n clusterIP: 10.0.0.39\n externalTrafficPolicy: Cluster\n ports:\n - nodePort: 31501\n port: 5000\n protocol: TCP\n targetPort: 5000\n selector:\n run: flask\n sessionAffinity: None\n type: NodePort\nstatus:\n loadBalancer: {}\n```", "```\nminikube service flask --url\n```", "```\nhttp://192.168.64.100:31505\n```", "```\nminikube service flask\n```", "```\nOpening kubernetes service default/flask in default browser...\n```", "```\nminikube service list\n```", "```\n|-------------|----------------------|-----------------------------|\n| NAMESPACE   |       NAME           |           URL               |\n|-------------|----------------------|-----------------------------|\n| default     | flask                | http://192.168.99.100:31501 |\n| default     | kubernetes           | No node port                |\n| kube-system | kube-dns             | No node port                |\n| kube-system | kubernetes-dashboard | http://192.168.99.100:30000 |\n|-------------|----------------------|-----------------------------|\n```", "```\nkubectl run redis --image=docker.io/redis:alpine\n```", "```\nkubectl get pods\n```", "```\nNAME                     READY     STATUS    RESTARTS   AGE\nflask-1908233635-d6stj   1/1       Running   1          1d\nredis-438047616-3c9kt    1/1       Running   0          21s\n```", "```\nkubectl exec -it redis-438047616-3c9kt -- /bin/sh\n```", "```\n/data # ps aux\nPID   USER     TIME   COMMAND\n    1 redis      0:22 redis-server\n   24 root       0:00 /bin/sh\n   32 root       0:00 ps aux\n/data # which redis-server\n/usr/local/bin/redis-server\n/data # /usr/local/bin/redis-server --version\nRedis server v=4.0.2 sha=00000000:0 malloc=jemalloc-4.0.3 bits=64\nbuild=7f502971648182f2\n/data # exit\n```", "```\nkubectl expose deploy redis --port=6379 --type=NodePort\n```", "```\nservice \"redis\" exposed\n```", "```\nkubectl get services\n```", "```\nNAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)          AGE\nflask        NodePort    10.0.0.39    <none>        5000:31501/TCP   3h\nkubernetes   ClusterIP   10.0.0.1     <none>        443/TCP          1d\nredis        NodePort    10.0.0.119   <none>        6379:30336/TCP   15s\n```", "```\nminikube ip\n```", "```\n**192.168.99.100** \n```", "```\nredis-cli -h 192.168.99.100 -p 30336\n```", "```\n192.168.99.100:30336>\n192.168.99.100:30336> ping\nPONG  \n```", "```\nkubectl get pods\n```", "```\nNAME                     READY     STATUS    RESTARTS   AGE\nflask-1908233635-d6stj   1/1       Running   1          2d\nredis-438047616-3c9kt    1/1       Running   0          1d\n```", "```\nkubectl exec flask-1908233635-d6stj -it -- sh \n```", "```\n/ # nslookup redis.default\nnslookup: can't resolve '(null)': Name does not resolve\nName:      redis.default\nAddress 1: 10.0.0.119 redis.default.svc.cluster.local\n```", "```\n# cd /opt/exampleapp/\n/opt/exampleapp # pip3 install redis\nCollecting redis\n  Downloading redis-2.10.6-py2.py3-none-any.whl (64kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 71kB 803kB/s\nInstalling collected packages: redis\nSuccessfully installed redis-2.10.6\n```", "```\n/opt/exampleapp # python3\nPython 3.6.1 (default, May  2 2017, 15:16:41)\n[GCC 6.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import redis\n>>> redis_db = redis.StrictRedis(host=\"redis.default\", port=6379, db=0)\n>>> redis_db.ping()\nTrue\n>>> redis_db.set(\"hello\", \"world\")\nTrue\n>>> redis_db.get(\"hello\")\nb'world'\n```", "```\nFlask==0.12.2\nredis\n```", "```\ndocker build .\nSending build context to Docker daemon  162.8kB\nStep 1/9 : FROM alpine\n\u2026\nRemoving intermediate container d3ee8e22a095\nSuccessfully built 63635b37136a\n```", "```\ndocker tag <image_id> <container_repository>/<group_name>/<container_name>:<tag>\n```", "```\ndocker tag 63635b37136a quay.io/kubernetes-for-developers/flask:0.1.1 \n```", "```\ndocker push quay.io/kubernetes-for-developers/flask:0.1.1\n```", "```\nThe push refers to a repository [quay.io/kubernetes-for-developers/flask]\n34f306a8fb12: Pushed\n801c9c3c42e7: Pushed\ne94771c57351: Pushed\n9c99a7f27402: Pushed\n993056b64287: Pushed\n439786010e37: Pushed\n5bef08742407: Layer already exists\n0.1.1: digest: sha256:dc734fc37d927c6074b32de73cd19eb2a279c3932a06235d0a91eb66153110ff size: 5824\n```", "```\nkubectl get deploy flask -o yaml --export > flask_deployment.yaml\n```", "```\n- image: quay.io/kubernetes-for-developers/flask:latest\n```", "```\n- image: quay.io/kubernetes-for-developers/flask:0.1.1\n```", "```\nkubectl replace -f flask_deployment.yaml\ndeployment \"flask\" replaced\n```", "```\nkubectl get pods\n```", "```\nNAME                     READY     STATUS              RESTARTS   AGE\nflask-1082750864-nf99q   0/1       ContainerCreating   0          27s\nflask-1908233635-d6stj   1/1       Terminating         1          2d\nredis-438047616-3c9kt    1/1       Running             0          1d\n```", "```\nkubectl get pods\n```", "```\nNAME                     READY     STATUS    RESTARTS   AGE\nflask-1082750864-nf99q   1/1       Running   0          1m\nredis-438047616-3c9kt    1/1       Running   0          1d\n```", "```\nkubectl exec flask-1082750864-nf99q -it -- python3\n```", "```\nPython 3.6.1 (default, Oct  2 2017, 20:46:59)\n[GCC 6.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import redis\n>>> redis_db = redis.StrictRedis(host=\"redis.default\", port=6379, db=0)\n>>> redis_db.ping()\nTrue\n>>> redis_db.get('hello')\nb'world'\n>>> exit()\n```", "```\n strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1 **type: RollingUpdate** \n```", "```\nkubectl rollout status deployment/flask\n```", "```\ndeployment \"flask\" successfully rolled out\n```", "```\nkubectl rollout history deployment/flask\n```", "```\ndeployments \"flask\"\nREVISION  CHANGE-CAUSE\n1         <none>\n2         <none>\n```", "```\nkubectl annotate deployment flask kubernetes.io/change-cause='deploying image 0.1.1'\n```", "```\ndeployment \"flask\" annotated\n```", "```\nkubectl rollout history deployment/flask\n```", "```\ndeployments \"flask\"\nREVISION  CHANGE-CAUSE\n1         <none>\n2         deploying image 0.1.1\n```", "```\nkubectl rollout history deployment flask --revision=2\n```", "```\ndeployments \"flask\" with revision #2\nPod Template:\n  Labels:  pod-template-hash=1082750864\n  run=flask\n  Annotations:  kubernetes.io/change-cause=deploying image 0.1.1\n  Containers:\n   flask:\n    Image:  quay.io/kubernetes-for-developers/flask:0.1.1\n    Port:  <none>\n   Environment:  <none>\n    Mounts:  <none>\n  Volumes:  <none>\n```", "```\nkubectl rollout undo deployment/flask\n```", "```\nkubectl rollout status deployment/flask -w\n```", "```\nWaiting for rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"flask\" successfully rolled out\n```", "```\nkubectl rollout history deployment/flask\n```", "```\ndeployments \"flask\"\nREVISION  CHANGE-CAUSE\n2         <none>\n3         <none>\n```", "```\n# delete the deployment entirely\nkubectl delete deployment flask\ndeployment \"flask\" deleted\n```", "```\n# create a new deployment with the run command\nkubectl run flask --image=quay.io/kubernetes-for-developers/flask:latest\ndeployment \"flask\" created\n```", "```\n# add the initial annotation for change-cause\nkubectl annotate deployment/flask kubernetes.io/change-cause='initial deployment'\ndeployment \"flask\" annotated\n```", "```\n# update the container version with kubectl set\nkubectl set image deployment/flask flask=quay.io/kubernetes-for-developers/flask:0.1.1\ndeployment \"flask\" image updated\n```", "```\nkubectl rollout history deployment/flask\n```", "```\ndeployments \"flask\"\nREVISION  CHANGE-CAUSE\n1         initial deployment\n2         kubectl set image deployment/flask flask=quay.io/kubernetes-for-developers/flask:0.1.1\n```"]