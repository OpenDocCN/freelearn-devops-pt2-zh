["```\nkubectl create configmap --help\n```", "```\nkubectl create configmap <map-name> <data-source>\n```", "```\nminikube start\n```", "```\n    kubectl create namespace configmap-test\n    ```", "```\n    namespace/configmap-test created\n    ```", "```\n    kubectl create configmap singlevalue-map --from-literal=partner-url=https://www.auppost.com.au --namespace configmap-test \n    ```", "```\n    configmap/singlevalue-map created\n    ```", "```\n    kubectl get configmaps --namespace configmap-test\n    ```", "```\n    NAME                 DATA     AGE\n    singlevalue-map      1        111s\n    ```", "```\n    kubectl get configmap singlevalue-map -o yaml --namespace configmap-test\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: configmap-env-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: configmap-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: k8s.gcr.io/busybox\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command: [ \"/bin/sh\", \"-c\", \"env\" ]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0envFrom:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- configMapRef:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: singlevalue-map\n    ```", "```\n    kubectl create -f configmap-as-env.yaml --namespace configmap-test\n    ```", "```\n    pod/configmap-env-pod created\n    ```", "```\n    kubectl logs -f configmap-env-pod --namespace configmap-test\n    ```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: configmap-multi-env-pod\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0-\u00a0name: configmap-container\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: k8s.gcr.io/busybox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command: [ \"/bin/sh\", \"-c\", \"echo $(partner-server-location)\"         ]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: partner-server-location\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0valueFrom:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0configMapKeyRef:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: singlevalue-map\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0key: partner-url\n```", "```\n    partner-url=https://www.fedex.com\n    partner-key=1234\n    ```", "```\n    kubectl create configmap full-file-map --from-file=./application.properties --namespace configmap-test\n    ```", "```\n    configmap/full-file-map created\n    ```", "```\n    kubectl get configmaps --namespace configmap-test\n    ```", "```\n    NAME               DATA      AGE\n    full-file-map      1         109m\n    singlevalue-map    1         127m\n    ```", "```\n    kubectl get configmap full-file-map -o yaml --namespace configmap-test\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: configmap-test-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: configmap-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: k8s.gcr.io/busybox\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command: [ \"/bin/sh\", \"-c\", \"ls /etc/appconfig/\" ]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: config-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /etc/appconfig\n    \u00a0\u00a0volumes:\n    \u00a0\u00a0\u00a0\u00a0- name: config-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0configMap:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Provide the name of the ConfigMap containing the           files you want\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# to add to the container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: full-file-map\n    \u00a0\u00a0restartPolicy: Never\n    ```", "```\n    kubectl create -f mount-configmap-as-volume.yaml --namespace configmap-test\n    ```", "```\n    pod/configmap-test-pod created\n    ```", "```\n    kubectl logs -f configmap-test-pod --namespace configmap-test\n    ```", "```\n    application.properties\n    ```", "```\n    ls\n    ```", "```\n    fileone.txt     filetwo.txt\n    ```", "```\n    kubectl create configmap map-from-folder --from-file=./ -n configmap-test\n    ```", "```\n    configmap/map-from-folder created\n    ```", "```\n    kubectl describe configmap map-from-folder -n configmap-test\n    ```", "```\nkubectl create secret --help\n```", "```\n    kubectl create secret generic test-secret --from-literal=password=secretvalue --namespace configmap-test\n    ```", "```\n    secret/test-secret created\n    ```", "```\n    kubectl describe secret test-secret --namespace configmap-test\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: secret-env-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: secret-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: k8s.gcr.io/busybox\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command: [ \"/bin/sh\", \"-c\", \"env\" ]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0envFrom:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- secretRef:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: test-secret\n    ```", "```\n    kubectl create -f mount-secret-as-env.yaml --namespace=configmap-test\n    ```", "```\n    pod/secret-env-pod created\n    ```", "```\n    kubectl logs -f secret-env-pod --namespace=configmap-test\n    ```", "```\n    ssh-keygen -f ~/test_rsa -t rsa -b 4096 -C \"test@example.com\"\n    ```", "```\n    kubectl create secret generic test-key-secret --from-file=private-key=/Users/faisalmassod/test_rsa --namespace=configmap-test\n    ```", "```\n    secret/test-key-secret created\n    ```", "```\n    kubectl describe secret test-key-secret --namespace=configmap-test\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: secret-test-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: secret-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: k8s.gcr.io/busybox\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command: [ \"/bin/sh\", \"-c\", \"ls /etc/appconfig/; cat         /etc/appconfig/private-key\" ]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: secret-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /etc/appconfig\n    \u00a0\u00a0volumes:\n    \u00a0\u00a0\u00a0\u00a0- name: secret-volume\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0secret:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# Provide the name of the Secret containing the files           you want\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# to add to the container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0secretName: test-key-secret\n    ```", "```\n    kubectl create -f mount-secret-as-volume.yaml --namespace=configmap-test\n    ```", "```\n    pod/secret-test-pod created\n    ```", "```\n    kubectl logs -f secret-test-pod --namespace=configmap-test\n    ```", "```\n    kubectl delete pod secret-test-pod --namespace=configmap-test\n    ```", "```\n    pod \"secret-test-pod\" deleted\n    ```", "```\n    openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj \"/CN=kube.example.com\"\n    ```", "```\n    kubectl create secret tls test-tls --key=\"tls.key\" --cert=\"tls.crt\" --namespace=configmap-test\n    ```", "```\n    secret/test-tls created\n    ```", "```\n    kubectl get secrets --namespace configmap-test\n    ```", "```\n    kubectl describe secrets test-tls --namespace configmap-test\n    ```", "```\n    kubectl create secret docker-registry test-docker-registry-secret --docker-username=test --docker-password=testpassword --docker-email=example@a.com --namespace configmap-test\n    ```", "```\n    secret/test-docker-registry-secret created\n    ```", "```\n    kubectl get secrets test-docker-registry-secret --namespace configmap-test\n    ```", "```\n    kubectl describe secrets test-docker-registry-secret --namespace configmap-test\n    ```", "```\n    external-system-location=https://testvendor.example.com\n    external-system-basic-auth-username=user123\n    ```", "```\n    external-system-basic-auth-password=password123\n    ```", "```\n    external-system-location=https://vendor.example.com\n    external-system-basic-auth-username=activityapplicationuser\n    ```", "```\n    external-system-basic-auth-password=A#4b*(1=B88%tFr3\n    ```"]