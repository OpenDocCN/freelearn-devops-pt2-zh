["```\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: pod-name\nspec:\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: container1-name\n\u00a0\u00a0\u00a0\u00a0image: container1-image\n\u00a0\u00a0- name: container2-name\n\u00a0\u00a0\u00a0\u00a0image: container2-image\n```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: first-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0- name: my-first-container\n    \u00a0\u00a0\u00a0\u00a0image: nginx\n    ```", "```\n    kubectl create -f single-container-pod.yaml\n    ```", "```\n    pod/first-pod created\n    ```", "```\n    kubectl get pods\n    ```", "```\n    NAME         READY       STATUS       RESTARTS      AGE\n    first-pod    1/1         Running      0             5m44s\n    ```", "```\n    kubectl describe pod first-pod\n    ```", "```\nName: first-pod\n```", "```\nNamespace: default\n```", "```\nkubectl create namespaces <namespace-name>\n```", "```\n    kubectl get namespaces\n    ```", "```\n    NAME               STATUS       AGE\n    default            Active       16d\n    kube-node-lease    Active       16d\n    kube-public        Active       16d\n    kube-system        Active       16d\n    ```", "```\n    kubectl --namespace kube-public create -f single-container-pod.yaml\n    ```", "```\n    pod/first-pod created\n    ```", "```\n    kubectl --namespace kube-public get pods\n    ```", "```\n    NAME            READY       STATUS      RESTARTS     AGE\n    first-pod       1/1         Running     0            8s\n    ```", "```\n    kubectl get namespaces\n    ```", "```\n    NAME               STATUS       AGE\n    default            Active       16d\n    kube-node-lease    Active       16d\n    kube-public        Active       16d\n    kube-system        Active       16d\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: first-pod-with-namespace\n    \u00a0\u00a0namespace: kube-public\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0- name: my-first-container\n    \u00a0\u00a0\u00a0\u00a0image: nginx\n    ```", "```\n    kubectl create -f single-container-pod-with-namespace.yaml\n    ```", "```\n    pod/first-pod-with-namespace created\n    ```", "```\n    kubectl --namespace kube-public get pods\n    ```", "```\n    NAME                     READY     STATUS      RESTARTS   AGE\n    first-pod                 1/1      Running     0          5m2s\n    first-pod-with-namespace  1/1      Running     0          46s\n    ```", "```\n    kubectl get namespaces\n    ```", "```\n    NAME               STATUS       AGE\n    default            Active       16d\n    kube-node-lease    Active       16d\n    kube-public        Active       16d\n    kube-system        Active       16d\n    ```", "```\n    kubectl config set-context $(kubectl config current-context) --namespace kube-public\n    ```", "```\n    Context \"minikube\" modified.\n    ```", "```\n    kubectl get pods\n    ```", "```\n    NAME                     READY     STATUS      RESTARTS   AGE\n    first-pod                 1/1      Running     0          48m\n    first-pod-with-namespace  1/1      Running     0          44m\n    ```", "```\n    kubectl config set-context $(kubectl config current-context) --namespace default\n    ```", "```\n    Context \"minikube\" modified.\n    ```", "```\nNode: minikube/10.0.2.15\n```", "```\nkubectl get nodes\n```", "```\nNAME         STATUS      ROLES       AGE         VERSION\nminikube     Ready       <none>      16d         v1.14.3\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n\u00a0\u00a0name: firstpod\nspec:\n\u00a0\u00a0nodeName: my-favorite-node # run this pod on a specific node\n\u00a0\u00a0containers:\n\u00a0\u00a0- name: my-first-pod\n\u00a0\u00a0\u00a0\u00a0image: nginx\n```", "```\nStatus: Running\n```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: command-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0- name: container-with-command\n    \u00a0\u00a0\u00a0\u00a0image: ubuntu\n    \u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0- /bin/bash\n    \u00a0\u00a0\u00a0\u00a0- -ec\n    \u00a0\u00a0\u00a0\u00a0- while :; do echo '.'; sleep 5; done\n    ```", "```\n    kubectl create -f pod-with-container-command.yaml\n    ```", "```\n    pod/command-pod created\n    ```", "```\n    /bin/bash -ec \"while :; do echo '.'; sleep 5; done\"\n    ```", "```\n    kubectl logs command-pod -f\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: port-exposed-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: container-with-exposed-port\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: nginx\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 80\n    ```", "```\n    kubectl create -f pod-with-exposed-port.yaml\n    ```", "```\n    pod/port-exposed-pod created\n    ```", "```\n    sudo kubectl port-forward pod/port-exposed-pod 80\n    ```", "```\n    Forwarding from 127.0.0.1:80 -> 80\n    Forwarding from [::1] -> 80\n    ```", "```\n    curl 127.0.0.1\n    ```", "```\n    kubectl logs port-exposed-pod\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: resource-requirements-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: container-with-resource-requirements\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: nginx\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0limits:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"128M\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: \"1\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"64M\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: \"0.5\"\n    ```", "```\n    kubectl create -f pod-with-resource-requirements.yaml\n    ```", "```\n    pod/resource-requirements-pod created\n    ```", "```\n    kubectl describe pod resource-requirements-pod\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: huge-resource-requirements-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: container-with-huge-resource-requirements\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: nginx\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0limits:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"128G\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: \"1000\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: \"64G\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: \"500\"\n    ```", "```\n    kubectl create -f pod-with-huge-resource-requirements.yaml\n    ```", "```\n    pod/huge-resource-requirements-pod created\n    ```", "```\n    kubectl get pod huge-resource-requirements-pod\n    ```", "```\n    kubectl describe pod huge-resource-requirements-pod\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: multi-container-pod\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: first-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: nginx\n    \u00a0\u00a0\u00a0\u00a0- name: second-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: ubuntu\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /bin/bash\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- -ec\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- while :; do echo '.'; sleep 5; done\n    ```", "```\n    kubectl create -f multiple-container-pod.yaml\n    ```", "```\n    pod/multi-container-pod created\n    ```", "```\n    kubectl describe pod multi-container-pod\n    ```", "```\nkubectl logs <pod-name> <container-name>\n```", "```\nkubectl logs multi-container-pod second-container -f\n```", "```\nkubectl get pod\n```", "```\nNAME         READY       STATUS        RESTARTS      AGE\nfirst-pod    1/1         Running       0             5m44s\n```", "```\nlivenessProbe:\n\u00a0\u00a0exec:\n\u00a0\u00a0\u00a0\u00a0command:\n\u00a0\u00a0\u00a0\u00a0- cat\n\u00a0\u00a0\u00a0\u00a0- /tmp/health\n\u00a0\u00a0initialDelaySeconds:\n\u00a0\u00a0periodSeconds: 15\n\u00a0\u00a0failureThreshold: 3\nreadinessProbe:\n\u00a0\u00a0exec:\n\u00a0\u00a0\u00a0\u00a0command:\n\u00a0\u00a0\u00a0\u00a0- cat\n\u00a0\u00a0\u00a0\u00a0- /tmp/health\n\u00a0\u00a0initialDelaySeconds:\n\u00a0\u00a0periodSeconds: 15\n```", "```\nlivenessProbe:\n\u00a0\u00a0httpGet:\n\u00a0\u00a0\u00a0\u00a0path: /health-check\n\u00a0\u00a0\u00a0\u00a0port: 8080\n\u00a0\u00a0initialDelaySeconds: 10\n\u00a0\u00a0periodSeconds: 20\nreadinessProbe:\n\u00a0\u00a0httpGet:\n\u00a0\u00a0\u00a0\u00a0path: /health-check\n\u00a0\u00a0\u00a0\u00a0port: 8080\n\u00a0\u00a0initialDelaySeconds: 5\n\u00a0\u00a0periodSeconds: 10\n```", "```\nlivenessProbe:\n\u00a0\u00a0tcpSocket:\n\u00a0\u00a0\u00a0\u00a0port: 8080\n\u00a0\u00a0initialDelaySeconds: 10\n\u00a0\u00a0periodSeconds: 20\nreadinessProbe:\n\u00a0\u00a0tcpSocket:\n\u00a0\u00a0\u00a0\u00a0port:8080\n\u00a0\u00a0initialDelaySeconds: 5\n\u00a0\u00a0periodSeconds: 10\n```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: liveness-probe\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: ubuntu-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: ubuntu\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /bin/bash\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- -ec\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- touch /tmp/live; sleep 30; rm /tmp/live; sleep 600\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0livenessProbe:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cat\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /tmp/live\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initialDelaySeconds: 5\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0periodSeconds: 5\n    ```", "```\n    /bin/bash -ec \"touch /tmp/live; sleep 30; rm /tmp/live; sleep 600\"\n    ```", "```\n    cat /tmp/live\n    ```", "```\n    kubectl create -f liveness-probe.yaml\n    ```", "```\n    kubectl describe pod liveness-probe\n    ```", "```\n    kubectl describe pod liveness-probe\n    ```", "```\n    kubectl get pod liveness-probe\n    ```", "```\n    NAME             READY     STATUS      RESTARTS    AGE\n    liveness-probe   1/1       Running     1           89s\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: liveness-probe-never-restart\n    spec:\n    \u00a0\u00a0restartPolicy: Never\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: ubuntu-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: ubuntu\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /bin/bash\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- -ec\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- touch /tmp/ready; sleep 30; rm /tmp/ready; sleep 600\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0livenessProbe:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cat\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /tmp/ready\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initialDelaySeconds: 5\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0periodSeconds: 5\n    ```", "```\n    kubectl create -f liveness-probe-with-restart-policy.yaml\n    ```", "```\n    pod/liveness-probe-never-restart created\n    ```", "```\n    kubectl describe pod liveness-probe-never-restart\n    ```", "```\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    \u00a0\u00a0name: readiness-probe\n    spec:\n    \u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0- name: ubuntu-container\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: ubuntu\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /bin/bash\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- -ec\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sleep 30; touch /tmp/ready; sleep 600\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0readinessProbe:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cat\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /tmp/ready\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0initialDelaySeconds: 10\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0periodSeconds: 5\n    ```", "```\n    /bin/bash -ec \"sleep 30; touch /tmp/ready; sleep 600\"\n    ```", "```\n    cat /tmp/ready\n    ```", "```\n    kubectl create -f readiness-probe.yaml\n    ```", "```\n    pod/readiness-probe created\n    ```", "```\n    kubectl get pod readiness-probe\n    ```", "```\n    NAME              READY       STATUS       RESTARTS       AGE\n    readiness-probe   0/1         Running      0              8s\n    ```", "```\n    kubectl describe pod readiness-probe\n    ```", "```\n    kubectl get pod readiness-probe\n    ```", "```\n    NAME              READY    STATUS      RESTARTS     AGE\n    readiness-probe   1/1      Running     0            66s\n    ```", "```\nimage: packtworkshops/the-kubernetes-workshop:custom-application-for-    pods-chapter\n```"]