["```\ndocker --version\n```", "```\nDocker version 18.09.7, build 2d0083d\n```", "```\ndocker run -d nginx\n```", "```\ndocker ps\n```", "```\ndocker inspect --format '{{.NetworkSettings.IPAddress}}' <Container ID or NAME>\n```", "```\n172.17.0.2\n```", "```\ncurl <container IP>:80\n```", "```\ndocker run -p 8080:80 -d nginx\n```", "```\n39bf70d02dcc5f038f62c276ada1675c25a06dd5fb772c5caa19f02edbb0622a\n```", "```\ncurl localhost:8080\n```", "```\ndocker run hello-world\n```", "```\ndocker ps -a\n```", "```\ndocker run hello-world\ndocker ps -a\n```", "```\ndocker images\n```", "```\n    FROM alpine:3.10\n    COPY k8s-for-beginners /\n    CMD [\"/k8s-for-beginners\"]\n    ```", "```\n    package main\n    import (\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fmt\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"log\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"net/http\"\n    )\n    func main() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0http.HandleFunc(\"/\", handler)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0log.Fatal(http.ListenAndServe(\"0.0.0.0:8080\", nil))\n    }\n    func handler(w http.ResponseWriter, r *http.Request) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0log.Printf(\"Ping from %s\", r.RemoteAddr)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Fprintln(w, \"Hello Kubernetes Beginners!\")\n    }\n    ```", "```\n    CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o k8s-for-beginners\n    ```", "```\n    ls\n    ```", "```\n    Dockerfile k8s-for-beginners  main.go\n    ```", "```\n    docker build -t k8s-for-beginners:v0.0.1 .\n    ```", "```\n    docker images\n    ```", "```\n    docker rm -f $(docker ps -aq)\n    ```", "```\n    43c01e2055cf\n    286bc0c92b3a\n    39bf70d02dcc\n    96c374000f6f\n    ```", "```\n    docker run -p 8080:8080 -d k8s-for-beginners:v0.0.1\n    ```", "```\n    9869e9b4ab1f3d5f7b2451a7086644c1cd7393ac9d78b6b4c1bef6d423fd25ac\n    ```", "```\n    curl localhost:8080\n    ```", "```\n    Hello Kubernetes Beginners!\n    ```", "```\n    docker logs <container ID>\n    ```", "```\n    2019/11/18  05:19:41 Ping from 172.17.0.1:41416\n    ```", "```\n    docker login\n    ```", "```\n    docker push k8s-for-beginners:v0.0.1\n    ```", "```\n    docker tag k8s-for-beginners:v0.0.1 <your_DockerHub_username>/k8s-for-beginners:v0.0.1\n    ```", "```\n    docker images\n    ```", "```\n    docker push <your_username>/k8s-for-beginners:v0.0.1\n    ```", "```\ndocker inspect --format '{{.State.Pid}}' <container ID>\n```", "```\n5897\n```", "```\nps -ef | grep k8s-for-beginners\n```", "```\nls -l /proc/<PID>/ns\n```", "```\ndocker run -h k8s-for-beginners -d packtworkshops/the-kubernetes-workshop:k8s-for-beginners\n```", "```\ndf6a15a8e2481ec3e46dedf7850cb1fbef6efafcacc3c8a048752da24ad793dc\n```", "```\ndocker exec -it <container ID> sh\nhostname\n```", "```\nk8s-for-beginners\n```", "```\ndocker exec -it <container ID> sh\nps\n```", "```\n    docker rm -f $(docker ps -aq)\n    ```", "```\n    43c01e2055cf\n    286bc0c92b3a\n    39bf70d02dcc\n    96c374000f6f\n    ```", "```\n    docker run -d packtworkshops/the-kubernetes-workshop:k8s-for-beginners\n    ```", "```\n    33003ddffdf4d85c5f77f2cae2528cb2035d37f0a7b7b46947206ca104bbbaa5\n    ```", "```\n    docker ps\n    ```", "```\n    docker run -it --net container:<container ID> nicolaka/netshoot\n    ```", "```\n    curl localhost:8080\n    ```", "```\n    Hello Kubernetes Beginners!\n    ```", "```\n    docker ps\n    ```", "```\n    docker inspect --format '{{.State.Pid}}' <container ID>\n    ```", "```\n    7311\n    ```", "```\n    ls -l /proc/<PID>/ns/net\n    ```", "```\n    lrwxrwxrwx 1 root root 0 Nov 19 08:11 /proc/7311/ns/net -> 'net:[4026532247]'\n    ```", "```\n    docker inspect --format '{{.State.Pid}}' <container ID>\n    ```", "```\n    8143\n    ```", "```\n    ls -l /proc/<PID>/ns/net\n    ```", "```\n    lrwxrwxrwx 1 root root 0 Nov 19 09:15 /proc/8143/ns/net -> 'net:[4026532247]'\n    ```", "```\n    docker rm -f $(docker ps -aq)\n    ```", "```\n    61d0fa62bc49\n    33003ddffdf4\n    ```", "```\n    docker run --net host -d packtworkshops/the-kubernetes-workshop:k8s-for-beginners\n    ```", "```\n    8bf56ca0c3dc69f09487be759f051574f291c77717b0f8bb5e1760c8e20aebd0\n    ```", "```\n    docker ps\n    ```", "```\n    docker inspect --format '{{.State.Pid}}' <container ID>\n    ```", "```\n    8380\n    ```", "```\n    ls -l /proc/<PID>/ns/net\n    ```", "```\n    lrwxrwxrwx 1 root root 0 Nov 19 09:20 /proc/8380/ns/net -> 'net:[4026531993]'\n    ```", "```\n    ls -l /proc/1/ns/net\n    ```", "```\n    lrwxrwxrwx 1 root root 0 Nov 19 09:20 /proc/1/ns/net -> 'net:[4026531993]'\n    ```", "```\nfind /sys/fs/cgroup/* -name docker -type d\n```", "```\ndocker rm -f $(docker ps -aq)\n```", "```\n61d0fa62bc49\n```", "```\ndocker ps\n```", "```\nCONTAINER ID     IMAGE       COMMAND          CREATED          STATUS\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PORTS          NAMES\n```", "```\nfind /sys/fs/cgroup/memory/docker/* -type d\n```", "```\nroot@ubuntu: ~# find /sys/fs/cgroup/memory/docker/* -type d\n```", "```\ndocker run -d packtworkshops/the-kubernetes-workshop:k8s-for-beginners \n```", "```\n8fe77332244b2ebecbda27a4496268264218c4e59614d59b5849a22b12941e1\n```", "```\nfind /sys/fs/cgroup/memory/docker/* -type d\n```", "```\n/sys/fs/cgroup/memory/docker/8fe77332244b2ebecbda27a4496268264218c4e59614d59b5849a22b12941e1\n```", "```\nls /sys/fs/cgroup/memory/docker/8fe77332244b2ebecbd8a2704496268264218c4e59614d59b5849022b12941e1\n```", "```\ncat /sys/fs/cgroup/memory/docker/8fe77332244b2ebecbd8a2704496268264218c4e59614d59b5849022b12941e1/memory.limit_in_bytes\n```", "```\n9223372036854771712\n```", "```\npackage main\nimport (\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fmt\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"strings\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"time\"\n)\nfunc main() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var longStrs []string\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0times := 50\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for i := 1; i <= times; i++ {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Printf(\"===============%d===============\\n\", i)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// each time we build a long string to consume 1MB                     (1000000 * 1byte) RAM\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0longStrs = append(longStrs, buildString(1000000,                     byte(i)))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// hold the application to exit in 1 hour\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0time.Sleep(3600 * time.Second)\n}\n// buildString build a long string with a length of `n`.\nfunc buildString(n int, b byte) string {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var builder strings.Builder\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0builder.Grow(n)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for i := 0; i < n; i++ {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0builder.WriteByte(b)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return builder.String()\n}\n```", "```\ndocker info > /dev/null\n```", "```\nWARNING: No swap limit support\n```", "```\n    GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\"\n    ```", "```\ndocker run --name memconsumer -d --memory=100m --memory-swap=100m packtworkshops/the-kubernetes-workshop:memconsumer\n```", "```\nWARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.\n366bd13714cadb099c7ef6056e3b72853735473938b2e633a5cdbf9e94273143\n```", "```\ndocker ps\n```", "```\ncat /sys/fs/cgroup/memory/docker/366bd13714cadb099c7ef6056e3b7285373547e9e8b2e633a5cdbf9e94273143/memory.limit_in_bytes\n```", "```\n104857600\n```", "```\ndocker rm -f $(docker ps -aq)\n```", "```\n366bd13714ca\n```", "```\ndocker run --name memconsumer -d --memory=20m --memory-swap=20m packtworkshops/the-kubernetes-workshop:memconsumer\n```", "```\n298541bc46855a749f9f8944860a73f3f4f2799ebda7969a5eada60e3809539bab\n```", "```\ndocker ps\n```", "```\nCONTAINER ID     IMAGE       COMMAND      CREATED        STATUS\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PORTS          NAMES\n```", "```\ndocker ps -a\n```", "```\ndocker logs memconsumer\n```", "```\ndocker run -d packtworkshops/the-kubernetes-workshop:k8s-for-beginners\n```", "```\nc7ee681ff8f73fa58cf0b37bc5ce08306913f27c5733c725f7fe97717025625d\n```", "```\nps -aef --forest | grep containerd -A 1\n```", "```\nroot@ubuntu:~# curl localhost: 8080\nHello, you're visitor #1.\nroot@ubuntu:~# curl localhost: 8080\nHello, you're visitor #2.\nroot@ubuntu:~# curl localhost: 8080\nHello, you're visitor #3.\n```", "```\n    docker run --name db -d redis\n    ```", "```\nroot@ubuntu:~# curl localhost: 8080\nHello, you're visitor #1.\nroot@ubuntu:~# curl localhost: 8080\nHello, you're visitor #2.\nroot@ubuntu:~# curl localhost: 8080\nHello, you're visitor #3.\n```", "```\nroot@ubuntu:~# curl localhost: 8080\nHello, you're visitor #4.\n```"]