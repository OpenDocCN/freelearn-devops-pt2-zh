["```\n28\u00a0if r.Method == \"GET\" { \n29\u00a0\u00a0\u00a0\u00a0\u00a0val, err := client.Get(\"num\").Result() \n30\u00a0\u00a0\u00a0\u00a0\u00a0if err == redis.Nil { \n31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Println(\"num does not exist\") \n32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0err := client.Set(\"num\", \"0\", 0).Err() \n33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if err != nil { \n34\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0panic(err) \n35\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n36\u00a0\u00a0\u00a0\u00a0\u00a0} else if err != nil { \n37\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0w.WriteHeader(500) \n38\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0panic(err) \n39\u00a0\u00a0\u00a0\u00a0\u00a0} else { \n40\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Println(\"num\", val) \n41\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0num, err := strconv.Atoi(val) \n42\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if err != nil { \n43\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0w.WriteHeader(500) \n44\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Println(err) \n45\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else { \n46\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0num++ \n47\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0err := client.Set(\"num\", strconv.Itoa(num), 0).Err() \n48\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if err != nil { \n49\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0panic(err) \n50\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n51\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Fprintf(w, \"{number: %d}\", num) \n52\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n53\u00a0} \n```", "```\n38\u00a0fmt.Println(\"Starting HTTP server\") \n39\u00a0http.HandleFunc(\"/get-number\", func(w http.ResponseWriter, r \u00a0\u00a0\u00a0\u00a0\u00a0*http.Request) { \n40\u00a0\u00a0\u00a0\u00a0\u00a0if r.Method == \"GET\" { \n41\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tx, err := db.Begin() \n42\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if err != nil { \n43\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0panic(err) \n44\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n45\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_, err = tx.Exec(t1) \n46\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if err != nil { \n47\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tx.Rollback() \n48\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Println(err) \n49\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n50\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0err = tx.Commit() \n51\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if err != nil { \n52\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Println(err) \n53\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n54\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0row := db.QueryRow(t2, 1) \n55\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0switch err := row.Scan(&num); err { \n56\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case sql.ErrNoRows: \n57\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Println(\"No rows were returned!\") \n58\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case nil: \n59\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Fprintf(w, \"{number: %d}\\n\", num) \n60\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default: \n61\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0panic(err) \n62\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n63\u00a0\u00a0\u00a0\u00a0\u00a0} else { \n64\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0w.WriteHeader(400) \n65\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Fprint(w, \"{\\\"error\\\": \\\"Only GET HTTP method is                supported.\\\"}\") \n66\u00a0\u00a0\u00a0\u00a0\u00a0} \n67\u00a0}\n```", "```\n    curl -O https://raw.githubusercontent.com/PacktWorkshops/Kubernetes-Workshop/master/Chapter12/Exercise12.02/main.tf\n    ```", "```\n    terraform init\n    terraform apply\n    ```", "```\n    curl -O https://raw.githubusercontent.com/PacktWorkshops/Kubernetes-Workshop/master/Chapter14/Exercise14.01/with_mysql.yaml\n    ```", "```\n    44\u00a0apiVersion: apps/v1 \n    45\u00a0kind: StatefulSet \n    46\u00a0metadata: \n    47\u00a0\u00a0\u00a0name: mysql \n    48\u00a0spec: \n    49\u00a0\u00a0\u00a0selector: \n    50\u00a0\u00a0\u00a0\u00a0matchLabels: \n    51\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql \n    52\u00a0\u00a0\u00a0serviceName: mysql \n    53\u00a0\u00a0\u00a0replicas: 1 \n    54\u00a0\u00a0\u00a0template: \n    55\u00a0\u00a0\u00a0\u00a0\u00a0metadata: \n    56\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels: \n    57\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql \n    58\u00a0\u00a0\u00a0\u00a0\u00a0spec: \n    ```", "```\n    kubectl apply -f with_mysql.yaml\n    ```", "```\n    kubectl proxy\n    ```", "```\n    Starting to serve on 127.0.0.1:8001\n    ```", "```\n    curl localhost:8001/api/v1/namespaces/default/services/kubernetes-test-ha-application-with-mysql:/proxy/get-number\n    ```", "```\n    {number: 1}\n    ```", "```\n    kubectl delete pod mysql-0\n    ```", "```\n    pod \"mysql-0\" deleted\n    ```", "```\n    curl localhost:8001/api/v1/namespaces/default/services/kubernetes-test-ha-application-with-mysql:/proxy/get-number\n    ```", "```\n    {number: 2}\n    ```", "```\n    kubectl get pv\n    ```", "```\n    kubectl delete -f with_mysql.yaml\n    ```", "```\n    kubectl get pv\n    ```", "```\n    kubectl delete pvc data-mysql-0\n    ```", "```\n    persistentvolumeclaim \"data-mysql-0\" deleted\n    ```", "```\n    kubectl get pv\n    ```", "```\n    No resources found in default namespace.\n    ```", "```\n    terraform destroy\n    ```", "```\nhelm create chart-dev\n```", "```\nCreating chart-dev\n```", "```\ntree .\n```", "```\n1\u00a0\u00a0# Default values for chart-dev.\n2\u00a0\u00a0# This is a YAML-formatted file.\n3\u00a0\u00a0# Declare variables to be passed into your templates.\n4\u00a0\u00a0\n5\u00a0\u00a0replicaCount: 1\n6\u00a0\u00a0\n7\u00a0\u00a0image:\n8\u00a0\u00a0\u00a0\u00a0repository: nginx\n9\u00a0\u00a0\u00a0\u00a0pullPolicy: IfNotPresent\n10\u00a0\u00a0\u00a0# Overrides the image tag whose default is the chart appVersion.\n11\u00a0\u00a0\u00a0tag: \"\"\n12\u00a0\n13\u00a0imagePullSecrets: []\n14\u00a0nameOverride: \"\"\n15\u00a0fullnameOverride: \"\"\n```", "```\nappVersion: 1.16.0\n```", "```\n30\u00a0\u00a0containers:\n31\u00a0\u00a0\u00a0\u00a0- name: {{ .Chart.Name }}\n32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0securityContext:\n33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{- toYaml .Values.securityContext | nindent 12 }}\n34\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: \"{{ .Values.image.repository }}:{{ .Values.image.tag |           default .Chart.AppVersion }}\"\n35\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0imagePullPolicy: {{ .Values.image.pullPolicy }}\n```", "```\nhelm install [NAME] [CHART] [flags]\n```", "```\nhelm install --generate-name -f values.yaml .\n```", "```\nexport POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=chart-dev,app.kubernetes.io/instance=chart-1589678730\" -o jsonpath=\"{.items[0].metadata.name}\")\n```", "```\nkubectl --namespace default port-forward $POD_NAME 8080:80\n```", "```\nForwarding from 127.0.0.1:8080 ->80\nForwarding from [::1]:8080 -> 80\n```", "```\nhelm ls\n```", "```\nhelm uninstall chart-1589678730\n```", "```\nrelease \"chart-1589678730\" uninstalled\n```", "```\n    cd ..\n    ```", "```\n    helm create redis-based-counter && cd redis-based-counter\n    ```", "```\n    Creating redis-based-counter\n    ```", "```\n    rm templates/NOTES.txt; \\\n    rm templates/*.yaml; \\\n    rm -r templates/tests/; \\\n    cd templates\n    ```", "```\n    curl -O https://raw.githubusercontent.com/PacktWorkshops/Kubernetes-Workshop/master/Chapter14/Exercise14.03/templates/redis-deployment.yaml; \\\n    curl -O https://raw.githubusercontent.com/PacktWorkshops/Kubernetes-Workshop/master/Chapter14/Exercise14.03/templates/deployment.yaml;\\\n    curl -O https://raw.githubusercontent.com/PacktWorkshops/Kubernetes-Workshop/master/Chapter14/Exercise14.03/templates/redis-service.yaml; \\\n    curl -O https://raw.githubusercontent.com/PacktWorkshops/Kubernetes-Workshop/master/Chapter14/Exercise14.03/templates/service.yaml\n    ```", "```\n    tree .\n    ```", "```\n    deployment:\n    \u00a0\u00a0replicas: 3\n    redis:\n    \u00a0\u00a0version: 3\n    ```", "```\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n    \u00a0\u00a0name: kubernetes-test-ha-application-with-redis-deployment\n    \u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0app: kubernetes-test-ha-application-with-redis\n    spec:\n    \u00a0\u00a0replicas: {{ .Values.deployment.replicas }}\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0matchLabels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: kubernetes-test-ha-application-with-redis\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: kubernetes-test-ha-application-with-redis\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: kubernetes-test-ha-application-with-redis\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: packtworkshops/the-kubernetes-workshop:demo-app-            with-redis\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0imagePullPolicy: Always\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 8080\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: REDIS_SVC_ADDR\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"redis.default:6379\"\n    ```", "```\n    apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2\n    kind: Deployment\n    metadata:\n    \u00a0\u00a0name: redis\n    \u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0app: redis\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0matchLabels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: redis\n    \u00a0\u00a0replicas: 1\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: redis\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: master\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: redis:{{ .Values.redis.version }}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cpu: 100m\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0memory: 100Mi\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 6379\n    ```", "```\n    helm install --generate-name -f values.yaml .\n    ```", "```\n    kubectl get deployment\n    ```"]