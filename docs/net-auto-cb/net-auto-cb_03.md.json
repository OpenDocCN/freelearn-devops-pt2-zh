["```\n$ cat hosts\n\n[pe]\nmxpe01 Ansible_host=172.20.1.3\nmxpe02 Ansible_host=172.20.1.4\n\n[p]\nmxp01 Ansible_host=172.20.1.2\nmxp02 Ansible_host=172.20.1.6\n\n[junos]\nmxpe[01:02]\nmxp[01:02]\n\n[core:children]\npe\np\n```", "```\n$ cat Ansible.cfg\n\n [defaults]\n inventory=hosts\n retry_files_enabled=False\n gathering=explicit\n host_key_checking=False\n```", "```\n$ Ansible-inventory --list\n\n \"all\": {\n \"children\": [\n \"core\",\n \"junos\",\n \"ungrouped\"\n ]\n },\n \"core\": {\n \"children\": [\n \"p\",\n \"pe\"\n ]\n },\n \"junos\": {\n \"hosts\": [\n \"mxp01\",\n \"mxp02\",\n \"mxpe01\",\n \"mxpe02\"\n ]\n },\n \"p\": {\n \"hosts\": [\n \"mxp01\",\n \"mxp02\"\n ]\n },\n \"pe\": {\n \"hosts\": [\n \"mxpe01\",\n \"mxpe02\"\n ]\n }\n```", "```\n$ SSH-keygen -t rsa -b 2048 -f Ansible_SSH_key\n\nGenerating public/private rsa key pair.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in Ansible_SSH_key.\nYour public key has been saved in Ansible_SSH_key.pub.\nThe key fingerprint is:\nSHA256:aCqgMYKAWIkv3nVz/q9cYp+2n3doD9jpgw/jeWWcVWI Ansible@centos7.localdomain\n```", "```\n$ cat Ansible_SSH_key.pub\n SSH-rsa SSH-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0/wvdC5ycAanRorlfMYDMAv5OTcYAALlE2bdboajsQPQNEw1Li3N0J50OJBWXX+FFQuF7JKpM32vNQjQN7BgyaBWQGxv+Nj0ViVP+8X8Wuif0m6bFxBYSaPbIbGogDjPu4qU90Iv48NGOZpcPLqZthtuN7yZKPshX/0YJtXd2quUsVhzVpJnncXZMb4DZQeOin7+JVRRrDz6KP6meIylf35mhG3CV5VqpoMjYTzkDiHwIrFWVMydd4C77RQu27N2HozUtZgJy9KD8qIJYVdP6skzvp49IdInwhjOA+CugFQuhYhHSoQxRxpws5RZlvrN7/0h0Ahc3OwHaUWD+P7lz Ansible@centos7.localdomain\n```", "```\n[edit system login]\nAnsible@mxpe01# show\nuser admin {\n uid 2001;\n class super-user;\n authentication {\n SSH-rsa \" SSH-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0/wvdC5ycAanRorlfMYDMAv5OTcYAALlE2bdboajsQPQNEw1Li3N0J50OJBWXX+FFQuF7JKpM32vNQjQN7BgyaBWQGxv+Nj0ViVP+8X8Wuif0m6bFxBYSaPbIbGogDjPu4qU90Iv48NGOZpcPLqZthtuN7yZKPshX/0YJtXd2quUsVhzVpJnncXZMb4DZQeOin7+JVRRrDz6KP6meIylf35mhG3CV5VqpoMjYTzkDiHwIrFWVMydd4C77RQu27N2HozUtZgJy9KD8qIJYVdP6skzvp49IdInwhjOA+CugFQuhYhHSoQxRxpws5RZlvrN7/0h0Ahc3OwHaUWD+P7lz Ansible@centos7.localdomain\"; ## SECRET-DATA\n }\n}\n```", "```\n$ ls -la | grep Ansible_SSH_key\n -rw------- 1 Ansible Ansible 1679 Dec 31 23:41 Ansible_SSH_key\n -rw-r--r-- 1 Ansible Ansible 409 Dec 31 23:41 Ansible_SSH_key.pub\n```", "```\n$ Ansible all -m ping -u admin --private-key Ansible_SSH_key -c network_cli\n\nmxp02 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\nmxpe02 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\nmxpe01 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\nmxp01 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\n```", "```\n$ cat group_vars/junos.yml\n\nAnsible_user: admin\n Ansible_SSH_private_key_file: Ansible_SSH_key\n```", "```\n$ Ansible all -m ping -c network_cli\n\nmxp02 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\nmxpe02 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\nmxpe01 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\nmxp01 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\u2003\n```", "```\n$ cat pb_jnpr_net_build.yml\n\n- name: Build Juniper SP Network\n hosts: junos\n tasks:\n - name: \"Enable NETCONF\"\n junos_netconf:\n netconf_port: 830\n state: present\n vars:\n Ansible_connection: network_cli\n tags: netconf\n```", "```\n$ cat group_vars/junos.yml\n\nAnsible_network_os: junos\nAnsible_connection: netconf\n```", "```\nadmin@mxpe01# show system services\nSSH;\nnetconf {\n SSH {\n port 830;\n }\n}\n```", "```\n$ cat group_vars/all.yml\ntmp_dir: ./tmp\nconfig_dir: ./configs\nglobal:\n dns:\n - 172.20.1.1\n - 172.20.1.15\n root_pwd: $1$ciI4raxU$XfCVzABJKdALim0aWVMql0\n users:\n -   role: super-user\n SSH_key: Ansible_SSH_key.pub\n username: admin\n -   hash: $1$mR940Z9C$ipX9sLKTRDeljQXvWFfJm1\n passwd: 14161C180506262E757A60\n role: super-user\n username: Ansible\n```", "```\n$ cat pb_jnpr_basic_config.yml\n---\n- name: Configure Juniper Devices\n hosts: junos\n tasks:\n - name: \"Conifgure Basic System config\"\n junos_system:\n hostname: \"{{ inventory_hostname }}\"\n name_servers: \"{{ global.dns }}\"\n state: present\n - name: \"Configure Users\"\n junos_user:\n name: \"{{ item.username }}\"\n role: \"{{ item.role }}\"\n SSHkey: \"{{ lookup ('file', item.SSH_key) }}\"\n state: present\n with_items: \"{{ global.users | selectattr('SSH_key','defined') | list }}\"\n```", "```\n$ Ansible@mxpe01# show system\nhost-name mxpe01;\n}\nname-server {\n 172.20.1.1;\n 172.20.1.15;\n}\nlogin {\n user admin {\n uid 2001;\n class super-user;\n authentication {\n SSH-rsa \"SSH-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0/wvdC5ycAanRorlfMYDMAv5OTcYAALlE2bdboajsQPQNEw1Li3N0J50OJBWXX+FFQuF7JKpM32vNQjQN7BgyaBWQGxv+Nj0ViVP+8X8Wuif0m6bFxBYSaPbIbGogDjPu4qU90Iv48NGOZpcPLqZthtuN7yZKPshX/0YJtXd2quUsVhzVpJnncXZMb4DZQeOin7+JVRRrDz6KP6meIylf35mhG3CV5VqpoMjYTzkDiHwIrFWVMydd4C77RQu27N2HozUtZgJy9KD8qIJYVdP6skzvp49IdInwhjOA+CugFQuhYhHSoQxRxpws5RZlvrN7/0h0Ahc3OwHaUWD+P7lz Ansible@centos7.localdomain\"; ## SECRET-DATA\n }\n }\n```", "```\n$ tree roles/\n roles/\n \u2514\u2500\u2500 build_router_config\n \u251c\u2500\u2500 tasks\n \u2514\u2500\u2500 templates\n```", "```\n$ cat roles/build_router_config/tasks/build_config_dir.yml\n\n---\n- name: Create Config Directory\n file: path={{config_dir}} state=directory\n run_once: yes\n\n- name: Create Temp Directory per Node\n file: path={{tmp_dir}}/{{inventory_hostname}} state=directory\n\n- name: SET FACT >> Build Directory\n set_fact:\n build_dir: \"{{tmp_dir}}/{{inventory_hostname}}\"\n```", "```\n$ cat roles/build_router_config/templates/junos/mgmt.j2\n\nsystem {\n host-name {{inventory_hostname}};\n no-redirects;\n{%  if global.dns is defined %}\n name-server {\n{%      for dns_server in global.dns %}\n {{dns_server}};\n{%      endfor %}\n }\n{%  endif %}\n root-authentication {\n encrypted-password \"{{ global.root_pwd}}\"; ## SECRET-DATA\n }\n login {\n{%      for user in global.users if user.hash is defined %}\n user {{ user.username }} {\n class super-user;\n authentication {\n encrypted-password \"{{user.hash}}\"; ## SECRET-DATA\n }\n }\n{%      endfor %}\n{%      for user in global.users if user.SSH_key is defined %}\n user {{ user.username }} {\n class {{ user.role }};\n authentication {\n SSH-rsa \"{{lookup('file',user.SSH_key)}}\"; ## SECRET-DATA\n }\n }\n{%      endfor %}\n }\n}\n```", "```\n$ cat roles/build_router_config/tasks/build_device_config.yml\n\n---\n- name: \"System Configuration\"\n template:\n src: \"{{Ansible_network_os}}/mgmt.j2\"\n dest: \"{{build_dir}}/00_mgmt.cfg\"\n tags: mgmt\n```", "```\n$ cat roles/build_router_config/tasks/main.yml\n\n---\n- name: Build Required Directories\n import_tasks: build_config_dir.yml\n\n- name: Build Device Configuration\n import_tasks: build_device_config.yml\n\n- name: \"Remove Old Assembled Config\"\n file:\n path: \"{{config_dir}}/{{ inventory_hostname }}.cfg\"\n state: absent\n\n- name: Build Final Device Configuration\n assemble:\n src: \"{{ build_dir }}\"\n dest: \"{{config_dir}}/{{ inventory_hostname }}.cfg\"\n\n- name: Remove Build Directory\n file: path={{ tmp_dir }} state=absent\n run_once: yes\n```", "```\n$ cat pb_jnpr_net_build.yml\n\n- name: Build Device Configuration\n import_role:\n name: build_router_config\n vars:\n Ansible_connection: local\n tags: build\n```", "```\n$ tree configs/\n configs/\n \u251c\u2500\u2500 mxp01.cfg\n \u251c\u2500\u2500 mxp02.cfg\n \u251c\u2500\u2500 mxpe01.cfg\n \u2514\u2500\u2500 mxpe02.cfg\n```", "```\n$ cat configs/mxpe01.cfg\nsystem {\n host-name mxpe01;\n no-redirects;\n name-server {\n 172.20.1.1;\n 172.20.1.15;\n }\n root-authentication {\n encrypted-password \"$1$ciI4raxU$XfCVzABJKdALim0aWVMql0\"; ## SECRET-DATA\n }\n login {\n user Ansible {\n class super-user;\n authentication {\n encrypted-password \"$1$mR940Z9C$ipX9sLKTRDeljQXvWFfJm1\"; ##\nSECRET-DATA\n }\n }\n user admin {\n class super-user;\n authentication {\n SSH-rsa \"SSH-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0/wvdC5ycAanRorlfMYDMAv5OTcYAALlE2bdboajsQPQNEw1Li3N0J50OJBWXX+FFQuF7JKpM32vNQjQN7BgyaBWQGxv+Nj0ViVP+8X8Wuif0m6bFxBYSaPbIbGogDjPu4qU90Iv48NGOZpcPLqZthtuN7yZKPshX/0YJtXd2quUsVhzVpJnncXZMb4DZQeOin7+JVRRrDz6KP6meIylf35mhG3CV5VqpoMjYTzkDiHwIrFWVMydd4C77RQu27N2HozUtZgJy9KD8qIJYVdP6skzvp49IdInwhjOA+CugFQuhYhHSoQxRxpws5RZlvrN7/0h0Ahc3OwHaUWD+P7lz Ansible@centos7.localdomain\"; ## SECRET-DATA\n }\n }\n }\n}\n```", "```\np2p_ip:\n mxp01:\n - {port: ge-0/0/0, ip: 10.1.1.2 , peer: mxpe01, pport: ge-0/0/0, peer_ip: 10.1.1.3}\n - {port: ge-0/0/1, ip: 10.1.1.4 , peer: mxpe02, pport: ge-0/0/0, peer_ip: 10.1.1.5}\n - {port: ge-0/0/3, ip: 10.1.1.0 , peer: mxp02, pport: ge-0/0/3, peer_ip: 10.1.1.1}\n mxp02:\n <-- Output Trimmed for brevity ------>\n mxpe01:\n <-- Output Trimmed for brevity ------>\n mxpe02:\n <-- Output Trimmed for brevity ------>\n xrpe03:\n <-- Output Trimmed for brevity ------>\nlo_ip:\n mxp01: 10.100.1.254/32\n mxp02: 10.100.1.253/32\n mxpe01: 10.100.1.1/32\n mxpe02: 10.100.1.2/32\n xrpe03: 10.100.1.3/32\n```", "```\n- name: \"Configure the Physical Interfaces\"\n junos_interface:\n name: \"{{ item.port }}\"\n enabled: true\n description: \"peer:{{item.peer}} remote_port:{{item.pport }}\"\n mtu: \"{{ global.mtu | default(1500) }}\"\n with_items: \"{{p2p_ip[inventory_hostname]}}\"\n tags: intf\n\n- name: \"Configure IP Addresses\"\n junos_l3_interface:\n name: \"{{ item.port }}\"\n ipv4: \"{{ item.ip }}/{{ global.p2p_prefix }}\"\n state: present\n with_items: \"{{ p2p_ip[inventory_hostname] }}\"\n tags: intf\n```", "```\nAnsible@mxpe01# show interfaces\nge-0/0/0 {\n description \"peer:mxp01 remote_port:ge-0/0/0\";\n mtu 1500;\n unit 0 {\n family inet {\n address 10.1.1.3/31;\n }\n }\n}\nge-0/0/1 {\n description \"peer:mxp02 remote_port:ge-0/0/0\";\n mtu 1500;\n unit 0 {\n family inet {\n address 10.1.1.9/31;\n }\n }\n}\n```", "```\n$ cat roles/build_router_config/templates/junos/intf.j2\n\ninterfaces {\n{% for intf in p2p_ip[inventory_hostname] | sort(attribute='port') %}\n {{ intf.port.split('.')[0] }} {\n description \"peer:{{intf.peer}} -- peer_port: {{intf.pport}}\"\n unit 0 {\n family inet {\n address {{intf.ip}}/{{global.p2p_prefix}};\n }\n family mpls;\n }\n }\n {% endif %}\n {% endfor %}\n lo0 {\n unit 0 {\n family inet {\n address {{lo_ip[inventory_hostname]}};\n }\n }\n }\n```", "```\n$ cat roles/build_router_config/tasks/build_device_config.yml\n\n<-- Output Trimmed for brevity ------>\n\n- name: \"Interface Configuration\"\n template:\n src: \"{{Ansible_network_os}}/intf.j2\"\n dest: \"{{build_dir}}/01_intf.cfg\"\n tags: intf\n```", "```\ninterfaces {\n ge-0/0/0 {\n description \"peer:mxpe01 -- peer_port: ge-0/0/1\"\n unit 0 {\n family inet {\n address 10.1.1.8/31;\n }\n family mpls;\n }\n }\n ge-0/0/1 {\n description \"peer:mxpe02 -- peer_port: ge-0/0/1\"\n unit 0 {\n family inet {\n address 10.1.1.10/31;\n }\n family mpls;\n }\n }\n<--   Output Trimmed for brevity ------>\n\n lo0 {\n unit 0 {\n family inet {\n address 10.100.1.253/32;\n }\n }\n }\n```", "```\n$ cat roles/build_router_config/templates/junos/ospf.j2\n\n protocols {\n ospf {\n area {{global.ospf_area}} {\n{%          for intf in p2p_ip[inventory_hostname]|sort(attribute='port') %}\n interface {{ intf.port }} {\n interface-type p2p;\n metric {{intf.cost | default(100)}};\n }\n{%          endfor %}\n interface lo0.0 {\n passive;\n }\n }\n }\n}\n```", "```\n$ cat roles/build_router_config/tasks/build_device_config.yml\n\n<-- Output Trimmed for brevity ------>\n\n- name: \"OSPF Configuration\"\n template:\n src: \"{{Ansible_network_os}}/ospf.j2\"\n dest: \"{{config_dir}}/{{ inventory_hostname }}/02_ospf.cfg\"\n```", "```\n$ cat configs/mxpe01.cfg\n\n <--   Output Trimmed for brevity ------>\n\nprotocols {\n ospf {\n area 0 {\n interface ge-0/0/0 {\n interface-type p2p;\n metric 100;\n }\n interface ge-0/0/1 {\n interface-type p2p;\n metric 100;\n }\n interface lo0.0 {\n passive;\n }\n }\n }\n}\n```", "```\n$ cat roles/build_router_config/templates/junos/mpls.j2\n\n protocols {\n ldp {\n{%      for intf in p2p_ip[inventory_hostname]|sort(attribute='port') %}\n interface {{intf.port}}.{{intf.vlan|default('0')}};\n{%      endfor %}\n interface lo0.0;\n }\n rsvp {\n{%      for intf in p2p_ip[inventory_hostname]|sort(attribute='port') %}\n interface {{intf.port}}.{{intf.vlan|default('0')}};\n{%      endfor %}\n }\n mpls {\n{%      for intf in p2p_ip[inventory_hostname]|sort(attribute='port') %}\n interface {{intf.port}}.{{intf.vlan|default('0')}};\n{%      endfor %}\n }\n}\n```", "```\n$ cat roles/build_router_config/tasks/build_device_config.yml\n\n<-- Output Trimmed for brevity ------>\n\n- name: \"MPLS Configuration\"\n template:\n src: \"{{Ansible_network_os}}/mpls.j2\"\n dest: \"{{config_dir}}/{{ inventory_hostname }}/03_mpls.cfg\"\n```", "```\nprotocols {\n    ldp {\n        interface ge-0/0/0.0;\n        interface ge-0/0/1.0;\n        interface lo0.0;\n    }\n    rsvp {\n        interface ge-0/0/0.0;\n        interface ge-0/0/1.0;\n    }\n    mpls {\n        interface ge-0/0/0.0;\n        interface ge-0/0/1.0;\n    }\n}\n```", "```\nbgp_topo:\n  rr: mxp01\n  af:\n  - inet\n  - inet-vpn\n```", "```\n$ cat host_vars/mxpe01/bgp.yml\n\nbgp_asn: 65400\n\nbgp_peers:\n - local_as: 65400\n peer: 10.100.1.254\n remote_as: 65400\n```", "```\n$ cat roles/build_router_config/templates/junos/bgp.j2\n\n protocols {\n{%  if bgp_peers is defined %}\n bgp {\n group Core {\n type internal;\n local-address {{ lo_ip[inventory_hostname] | ipaddr('address')}};\n{%          if bgp_topo.rr == inventory_hostname %}\n cluster {{ lo_ip[inventory_hostname].split('/')[0] }};\n{%          endif %}\n{%          for af in bgp_topo.af %}\n{%          if af == 'inet' %}\n family inet {\n unicast;\n }\n{%          endif %}\n{%          if af == 'inet-vpn' %}\n family inet-vpn {\n unicast;\n }\n{%          endif %}\n<--   Output Trimmed for brevity ------>\n{%          endfor %}\n{%          for p in bgp_peers %}\n neighbor {{ p.peer}};\n{%          endfor %}\n }\n }\n{%  endif %}\n}\n```", "```\n$ cat roles/build_router_config/tasks/build_device_config.yml\n\n<-- Output Trimmed for brevity ------>\n\n- name: \"BGP Configuration\"\n template:\n src: \"{{Ansible_network_os}}/bgp.j2\"\n dest: \"{{config_dir}}/{{ inventory_hostname }}/04_bgp.cfg\"\n```", "```\nprotocols {\n bgp {\n group Core {\n type internal;\n local-address 10.100.1.254;\n cluster 10.100.1.254;\n family inet {\n unicast;\n }\n family inet-vpn {\n unicast;\n }\n neighbor 10.100.1.1;\n neighbor 10.100.1.2;\n neighbor 10.100.1.3;\n }\n }\n}\n```", "```\n$ cat pb_jnpr_net_build.yml\n\n<-- Output Trimmed for brevity ------>\n\n- name: \"Deploy Configuration\"\n junos_config:\n src: \"{{config_dir}}/{{ inventory_hostname }}.cfg\"\n```", "```\n$ Ansible-playbook pb_jnpr_net_build.yml -l mxpe01 --check \u2013diff\n```", "```\n$ cat pb_jnpr_net_build.yml\n\n<-- Output Trimmed for brevity ------>\n\n- name: \"Rollback config\"\n junos_config:\n rollback: \"{{ rollback | default('1') | int }}\"\n tags: rollback, never\n```", "```\n$ Ansible-playbook pb_jnpr_net_build.yml --tags rollback -l mxpe01\n```", "```\n$ Ansible-playbook pb_jnpr_net_build.yml --tags rollback -l mxpe01 \u2013e rollback=2\n```", "```\n---\nl3vpns:\n vpna:\n state: present\n rt: \"target:{{bgp_asn}}:10\"\n rd: \"1:10\"\n sites:\n - node: mxpe01\n port: ge-0/0/3.10\n ip: 172.10.1.1/24\n - node: mxpe02\n port: ge-0/0/3.10\n ip: 172.10.2.1/24\n vpnb:\n state: present\n rt: \"target:{{bgp_asn}}:20\"\n rd: \"1:20\"\n sites:\n - node: mxpe01\n port: ge-0/0/3.20\n ip: 172.20.1.1/24\n - node: mxpe02\n port: ge-0/0/3.20\n ip: 172.20.2.1/24\n```", "```\n---\n- name: \"Deploy L3VPNs on Juniper Devices\"\n hosts: pe\n vars_files:\n - \"l3vpn.yml\"\n tasks:\n - name: \"Set VPN Interfaces\"\n set_fact:\n l3vpn_intfs: \"{{ l3vpn_intfs|default([]) +\n l3vpns[item.key].sites |\n selectattr('node','equalto',inventory_hostname) | list}}\"\n with_dict: \"{{l3vpns}}\"\n delegate_to: localhost\n\n - name: \"Configure Interfaces for L3VPN Sites\"\n junos_config:\n lines:\n - set interfaces {{ item.port.split('.')[0]}} vlan-tagging\n - set interfaces {{ item.port}} vlan-id {{ item.port.split('.')[1] }}\n loop: \"{{ l3vpn_intfs }}\"\n```", "```\n- name: \"Configure IP address for L3VPN Interfaces\"\n junos_l3_interface:\n name: \"{{ item.port.split('.')[0]}}\"\n ipv4: \"{{ item.ip }}\"\n unit: \"{{ item.port.split('.')[1] }}\"\n loop: \"{{l3vpn_intfs}}\"\n tags: intf_ip\n```", "```\n- name: \"Configure L3VPNs\"\n junos_vrf:\n name: \"{{ item.key }}\"\n rd: \"{{item.value.rd}}\"\n target: \"{{ item.value.rt }}\"\n interfaces: \"{{ l3vpns[item.key].sites |\n map(attribute='port') | list }}\"\n state: \"{{ item.value.state }}\"\n with_dict: \"{{l3vpns}}\"\n when: inventory_hostname in (l3vpns[item.key].sites | map(attribute='node') | list)\n tags: l3vpn\n```", "```\nok: [mxpe01 -> localhost] => {\n \"l3vpn_intfs\": [\n {\n \"ip\": \"172.10.1.1/24\",\n \"node\": \"mxpe01\",\n \"port\": \"ge-0/0/3.10\"\n },\n {\n \"ip\": \"172.20.1.1/24\",\n \"node\": \"mxpe01\",\n \"port\": \"ge-0/0/3.20\"\n }\n ]\n}\n```", "```\n\nAnsible@mxpe01> show configuration routing-instances\nvpna {\n instance-type vrf;\n interface ge-0/0/3.10;\n route-distinguisher 1:10;\n vrf-target target:65400:10;\n vrf-table-label;\n}\nvpnb {\n instance-type vrf;\n interface ge-0/0/3.20;\n route-distinguisher 1:20;\n vrf-target target:65400:20;\n vrf-table-label;\n}\n```", "```\n$ cat pb_jnpr_facts.yml\n\n---\n- name: Collect and Validate Juniper Facts\n hosts: junos\n tasks:\n - name: Collect Juniper Facts\n junos_facts:\n```", "```\n - name: Create Facts Folder\n file: path=device_facts state=directory\n run_once: yes\n\n - name: Create Basic Device Facts Report\n blockinfile:\n path: \"device_facts/{{ inventory_hostname }}.txt\"\n block: |\n device_name: {{ Ansible_net_hostname }}\n model: {{ Ansible_net_system }} {{ Ansible_net_model }}\n os_version: {{ Ansible_net_version }}\n serial_number: {{ Ansible_net_serialnum }}\n create: yes\n```", "```\n - name: Validate all Core Interface are Operational\n assert:\n that:\n - Ansible_net_interfaces[item.port]['oper-status'] == 'up'\n fail_msg: \"Interface {{item.port}} is not Operational \"\n loop: \"{{ p2p_ip[inventory_hostname] }}\"\n```", "```\n\"Ansible_net_serialnum\": \"VM5D112EFB39\",\n\"Ansible_net_system\": \"junos\",\n\"Ansible_net_version\": \"17.1R1.8\",\n\"Ansible_network_os\": \"junos\",\n```", "```\n$ tree device_facts/\n\ndevice_facts/\n \u251c\u2500\u2500 mxp01.txt\n \u251c\u2500\u2500 mxp02.txt\n \u251c\u2500\u2500 mxpe01.txt\n \u2514\u2500\u2500 mxpe02.txt\n\n $ cat device_facts/mxp01.txt\n\ndevice_name: mxp01\n model: junos vmx\n os_version: 14.1R4.8\n serial_number: VM5701F131C6\n```", "```\n---\n- name: \"Validate Core Reachability\"\n hosts: junos\n tasks:\n - name: \"Ping Across All Loopback Interfaces\"\n junos_ping:\n dest: \"{{ item.value.split('/')[0] }}\"\n interface: lo0.0\n size: 512\n with_dict: \"{{lo_ip}}\"\n vars:\n Ansible_connection: network_cli\n register: ping_rst\n ignore_errors: yes\n```", "```\n - name: Create Ping Report\n blockinfile:\n block: |\n Node | Destination | Packet Loss | Delay |\n -----| ------------| ------------| ------|\n {% for node in play_hosts %}\n {% for result in hostvars[node].ping_rst.results %}\n {% if result.rtt is defined %}\n {{ node }} | {{ result.item.value }} | {{ result.packet_loss }} | {{ result.rtt.avg }}\n {% else %}\n {{ node }} | {{ result.item.value }} | {{ result.packet_loss }} | 'N/A'\n {% endif %}\n {% endfor %}\n {% endfor %}\n path: ./ping_report.md\n create: yes\n run_once: yes\n```", "```\n$ cat ping_report.md\n\n# BEGIN ANSIBLE MANAGED BLOCK\n Node | Destination | Packet Loss | Delay |\n -----| ------------| ------------| ------|\n mxpe01 | 10.100.1.254/32 | 0% | 3.75\n mxpe01 | 10.100.1.253/32 | 0% | 2.09\n mxpe01 | 10.100.1.1/32 | 0% | 0.27\n mxpe01 | 10.100.1.2/32 | 0% | 4.72\n mxpe01 | 10.100.1.3/32 | 100% | 'N/A'\n # END ANSIBLE MANAGED BLOCK\n```", "```\n$ pip3 install jxmlease\n```", "```\n---\n- name: \"Get OSPF Status\"\n hosts: junos\n tasks:\n - name: \"Get OSPF Neighbours Data\"\n junos_command:\n commands: show ospf neighbor\n display: xml\n register: ospf_output\n\n - name: \"Extract OSPF Neighbour Data\"\n set_fact:\n ospf_peers: \"{{ ospf_output.output[0]['rpc-reply']\\\n ['ospf-neighbor-information']['ospf-neighbor'] }}\"\n```", "```\n - name: \"Validate All OSPF Peers are in Full State\"\n assert:\n that: item['ospf-neighbor-state'] == 'Full'\n fail_msg: \"Peer on Interface {{item['interface-name']}} is Down\"\n success_msg: \"Peer on Interface {{item['interface-name']}} is UP\"\n loop: \"{{ospf_peers}}\"\n```", "```\n \"msg\": [\n {\n \"rpc-reply\": {\n \"ospf-neighbor-information\": {\n \"ospf-neighbor\": [\n {\n \"activity-timer\": \"34\",\n \"interface-name\": \"ge-0/0/0.0\",\n \"neighbor-address\": \"10.1.1.2\",\n \"neighbor-id\": \"10.100.1.254\",\n \"neighbor-priority\": \"128\",\n \"ospf-neighbor-state\": \"Full\"\n },\n {\n \"activity-timer\": \"37\",\n \"interface-name\": \"ge-0/0/1.0\",\n \"neighbor-address\": \"10.1.1.8\",\n \"neighbor-id\": \"10.100.1.253\",\n \"neighbor-priority\": \"128\",\n \"ospf-neighbor-state\": \"Full\"\n }\n ]\n }\n }\n }\n ]\n```", "```\n$ cat pb_collect_output.yml\n\n---\n- name: Collect Network Logs\n hosts: junos\n vars:\n log_folder: \"logs\"\n op_cmds:\n - show ospf neighbor\n tasks:\n - name: \"P1T1: Build Directories to Store Data\"\n block:\n - name: \"Create folder to store Device config\"\n file:\n path: \"{{ log_folder }}\"\n state: directory\n run_once: yes\n delegate_to: localhost\n\n - name: \"P1T2: Get Running configs from Devices\"\n junos_command:\n commands: \"{{ item }}\"\n loop: \"{{ op_cmds }}\"\n register: logs_output\n\n - name: \"P1T3: Save Running Config per Device\"\n copy:\n content: \"{{ item.stdout[0] }}\"\n dest: \"{{ log_folder }}/{{inventory_hostname}}_{{ item.item | regex_replace(' ','_') }}.txt\"\n loop: \"{{ logs_output.results }}\"\n delegate_to: localhost\n```", "```\n$ tree logs\n logs\n \u251c\u2500\u2500 mxp01_show_ospf_neighbor.txt\n \u251c\u2500\u2500 mxp02_show_ospf_neighbor.txt\n \u251c\u2500\u2500 mxpe01_show_ospf_neighbor.txt\n \u2514\u2500\u2500 mxpe02_show_ospf_neighbor.txt\n```", "```\n\n $ cat logs/mxpe01_show_ospf_neighbor.txt\n\nAddress Interface State ID Pri Dead\n 10.1.1.2 ge-0/0/0.0 Full 10.100.1.254 128 35\n 10.1.1.8 ge-0/0/1.0 Full 10.100.1.253 128 37\n```", "```\n$ pip3 install junos-eznc\n```", "```\n$ Ansible-galaxy install Juniper.junos\n```", "```\n$ cat pb_jnpr_pyez_table.yml\n\n---\n- name: Validate BGP State using PyEZ Tables\n hosts: junos\n roles:\n - Juniper.junos\n tasks:\n - name: Retrieve BGP Neighbor Information Using PyEZ Table\n Juniper_junos_table:\n file: \"bgp.yml\"\n register: jnpr_pyez_bgp\n```", "```\n - name: Validate all BGP Peers are operational\n assert:\n that:\n - item.peer in jnpr_pyez_bgp.resource | map(attribute='peer_id') | list\n fail_msg: \" BGP Peer {{ item.peer }} is Not Operational\"\n loop: \"{{ bgp_peers }}\"\n```", "```\n$ tree ~/.Ansible/roles/Juniper.junos/library/\n\n/home/Ansible/.Ansible/roles/Juniper.junos/library/\n \u251c\u2500\u2500 Juniper_junos_command.py\n \u251c\u2500\u2500 Juniper_junos_config.py\n \u251c\u2500\u2500 Juniper_junos_facts.py\n \u251c\u2500\u2500 Juniper_junos_jsnapy.py\n \u251c\u2500\u2500 Juniper_junos_ping.py\n \u251c\u2500\u2500 Juniper_junos_pmtud.py\n \u251c\u2500\u2500 Juniper_junos_rpc.py\n \u251c\u2500\u2500 Juniper_junos_software.py\n \u251c\u2500\u2500 Juniper_junos_srx_cluster.py\n \u251c\u2500\u2500 Juniper_junos_system.py\n \u2514\u2500\u2500 Juniper_junos_table.py\n```", "```\nok: [mxpe01] => {\n \"jnpr_pyez_bgp\": {\n \"changed\": false,\n \"failed\": false,\n \"msg\": \"Successfully retrieved 1 items from bgpTable.\",\n \"resource\": [\n {\n \"local_address\": \"10.100.1.1+179\",\n \"local_as\": \"65400\",\n \"local_id\": \"10.100.1.1\",\n \"peer_as\": \"65400\",\n \"peer_id\": \"10.100.1.254\",\n \"route_received\": [\n \"0\",\n \"2\",\n \"1\",\n \"1\"\n ]\n }\n ],\n }\n}\n```"]