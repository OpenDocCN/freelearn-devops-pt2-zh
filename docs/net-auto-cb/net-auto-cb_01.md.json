["```\n# Install python3\n$sudo apt-get install python3\n\n# validate python is installed \n$python3 --version\nPython 3.6.9\n```", "```\n# Install python\n$sudo yum install pytho3\n\n# validate python is installed \n$python3 --version\nPython 3.6.8\n```", "```\n# We need to use ansible repository to install the latest version of Ansible\n$ sudo apt-add-repository ppa:ansible/ansible\n\n# Update the repo cache to use the new repo added\n$ sudo apt-get update\n\n# We install Ansible\n$ sudo apt-get install ansible\n```", "```\n# We need to use latest epel repository to get the latest ansible \n$ sudo yum install epel-release\n\n# We install Ansible\n$ sudo yum install ansible\n```", "```\n$ ansible --version\nansible 2.9\n config file = /etc/ansible/ansible.cfg\n configured module search path = [u'/home/vagrant/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n ansible python module location = /usr/lib/python2.7/site-packages/ansible\n executable location = /usr/bin/ansible\n python version = 2.7.5 (default, Aug 7 2019, 00:51:29) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]\n```", "```\n$ ansible -m ping localhost\n\nlocalhost | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\n```", "```\n# Ubuntu\n$ sudo apt-get install python3\n\n# CentOS\nsudo yum install python3\n```", "```\n# Ubuntu\n$ sudo apt-get install python3-pip\n\n# CentOS\n$ sudo yum install python3-pip\n```", "```\n# Ubuntu and CentOS\n# This will install ansible for the current user ONLY\n$ pip3 install ansible==2.9 --user\n\n# We Can install ansible on the System Level\n$ sudo pip3 install ansible==2.9\n```", "```\n$$ ansible --version\nansible 2.9\n config file = None\n configured module search path = ['/home/vagrant/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\n ansible python module location = /home/vagrant/.local/lib/python3.6/site-packages/ansible\n executable location = /home/vagrant/.local/bin/ansible\n python version = 3.6.8 (default, Aug 7 2019, 17:28:10) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]\n```", "```\n$ mkdir ch1_ansible\n$ cd ch1_ansible\n```", "```\n$ touch hosts\n```", "```\n$ cat hosts\n\n[cisco]\ncsr1 ansible_host=172.10.1.2\ncsr2 ansible_host=172.10.1.3\n\n[juniper]\nmx1 ansible_host=172.20.1.2\nmx2 ansible_host=172.20.1.3\n\n[core]\nmx1\nmx2\n\n[edge]\ncsr[1:2]\n\n[network:children]\ncore\nedge\n```", "```\n$ cd ch1_ansible $ mkdir group_vars host_vars\n```", "```\n$ touch group_vars/cisco.yml group_vars/juniper.yml\n```", "```\n$ touch host_vars/csr1.yml host_vars/mx1.yml\n```", "```\n$echo 'hostname: core-mx1' >> host_vars/mx1.yml\n$echo 'hostname: core-mx2' >> host_vars/mx2.yml\n$echo 'hostname: edge-csr1' >> host_vars/csr1.yml\n$echo 'hostname: edge-csr2' >> host_vars/csr2.yml\n$echo 'os: ios' >> group_vars/cisco.yml\n$echo 'os: junos' >> group_vars/juniper.yml\n```", "```\n$  cat playbook.yml\n\n---\n - name: Initial Playbook\n hosts: all\n gather_facts: no\n tasks:\n - name: Display Hostname\n debug:\n msg: \"Router name is {{ hostname }}\"\n - name: Display OS\n debug:\n msg: \"{{ hostname }} is running {{ os }}\"\n```", "```\n$ ansible-playbook -i hosts playbook.yml\n```", "```\n---\n - name: Using conditionals\n hosts: all\n gather_facts: no\n tasks:\n - name: Run for Edge nodes Only\n debug:\n msg: \"Router name is {{ hostname }}\"\n when: \"'edge' in group_names\"\n\n - name: Run for Only MX1 node\n debug:\n msg: \"{{ hostname }} is running {{ os }}\"\n when:\n - inventory_hostname == 'mx1'\n```", "```\n$ ansible-playbook -i hosts ansible_cond.yml\n```", "```\nsnmp_servers:\n - 10.1.1.1\n - 10.2.1.1\n```", "```\nusers:\n admin: admin123\n oper: oper123\n```", "```\n---\n - name: Ansible Loop over a List\n hosts: cisco\n gather_facts: no\n tasks:\n - name: Loop over SNMP Servers\n debug:\n msg: \"Router {{ hostname }} with snmp server {{ item }}\"\n loop: \"{{ snmp_servers}}\"\n\n - name: Ansible Loop over a Dictionary\n hosts: juniper\n gather_facts: no\n tasks:\n - name: Loop over Username and Passowrds\n debug:\n msg: \"Router {{ hostname }} with user {{ item.key }} password {{ item.value }}\"\n with_dict: \"{{ users}}\"\n```", "```\n$ ansible-playbook ansible_loops.yml -i hosts\n```", "```\n$ echo 'strong_password' > decrypt_passwd\n```", "```\n$ ansible-vault create --vault-id=decrypt_passwd secrets\n```", "```\nospf_password: ospf_P@ssw0rD\nbgp_password: BGP_p@ssw0rd\n```", "```\n---\n - name: Using Ansible vault\n hosts: all\n gather_facts: no\n vars_files:\n - secrets\n tasks:\n - name: Output OSPF passowrd\n debug:\n msg: \"Router {{ hostname }} ospf Password {{ ospf_password }}\"\n when: inventory_hostname == 'csr1'\n\n - name: Output BGP passowrd\n debug:\n msg: \"Router {{ hostname }} BGP Password {{ bgp_password }}\"\n when: inventory_hostname == 'mx1'\n```", "```\n$ ansible-playbook --vault-id=decrypt_passwd ansible_vault.yml -i hosts\n```", "```\n$ cat secrets\n$ANSIBLE_VAULT;1.1;AES256\n61383264326363373336383839643834386661343630393965656135666336383763343938313963\n3538376230613534323833356237663532666363626462640a663839396230646634353839626461\n31336461386361616261336534663137326265363261626536663564623764663861623735633865\n3033356536393631320a643561623635363830653236633833383531366166326566623139633838\n32633335616663623761313630613134636635663865363563366564313365376431333461623232\n34633838333836363865313238363966303466373065356561353638363731616135386164373263\n666530653334643133383239633237653034\n```", "```\n### Running the Ansible playbook without --vault-id \n$ansible-playbook ansible_vault.yml -i hosts\nERROR! Attempting to decrypt but no vault secrets found\n```", "```\n### Running the Ansible playbook with --ask-vault-pass\n$ansible-playbook ansible_vault.yml -i hosts --ask-vault-pass\nVault password:\n```", "```\n$ cat group_vars/network.yml\n\n---\nntp_servers:\n - 172.20.1.1\n - 172.20.2.1\n```", "```\n$ cat templates/ios_basic.j2\nhostname {{ hostname }}\n!\n{% for server in ntp_servers %}\nntp {{ server }}\n{% endfor %}\n!\n```", "```\n$ cat templates/junos_basic.j2\nset system host-name {{ hostname }}\n{% for server in ntp_servers %}\nset system ntp server {{ server }}\n{% endfor %}\n```", "```\n---\n - name: Generate Cisco config from Jinja2\n hosts: localhost\n gather_facts: no\n tasks:\n - name: Create Configs Directory\n file: path=configs state=directory\n\n - name: Generate Cisco config from Jinja2\n hosts: cisco\n gather_facts: no\n tasks:\n - name: Generate Cisco Basic Config\n template:\n src: \"templates/ios_basic.j2\"\n dest: \"configs/{{inventory_hostname}}.cfg\"\n delegate_to: localhost\n\n - name: Generate Juniper config from Jinja2\n hosts: juniper\n gather_facts: no\n tasks:\n - name: Generate Juniper Basic Config\n template:\n src: \"templates/junos_basic.j2\"\n dest: \"configs/{{inventory_hostname}}.cfg\"\n delegate_to: localhost\n```", "```\n$ ansible-playbook -i hosts ansible_jinja2.yml\n```", "```\n$ cat configs/csr1.cfg\nhostname edge-csr1\n!\nntp 172.20.1.1\nntp 172.20.2.1\n!\n```", "```\n$ cat configs/mx1.cfg\nset system host-name core-mx1\nset system ntp server 172.20.1.1\nset system ntp server 172.20.2.1\n```", "```\n# On ubuntu\n$ sudo apt-get install python3-pip\n\n# On CentOS\n$ sudo yum install python3-pip\n\n$ pip3 install netaddr\n```", "```\n---\n - name: Ansible Filters\n hosts: csr1\n vars:\n interfaces:\n - { port: FastEthernet0/0, prefix: 10.1.1.0/24 }\n - { port: FastEthernet1/0, prefix: 10.1.2.0/24 }\n tasks:\n - name: Generate Interface Config\n blockinfile:\n block: |\n hostname {{ hostname | upper }}\n {% for intf in interfaces %}\n !\n interface {{ intf.port }}\n ip address {{intf.prefix | ipv4(1) | ipv4('address') }} {{intf.prefix | ipv4('netmask') }}\n !\n {% endfor %}\n dest: \"configs/csr1_interfaces.cfg\"\n create: yes\n delegate_to: localhost\n```", "```\n$ cat configs/csr1_interfaces.cfg\n# BEGIN ANSIBLE MANAGED BLOCK\nhostname EDGE-CSR1\n!\ninterface FastEthernet0/0\n ip address 10.1.1.1 255.255.255.0\n!\n!\ninterface FastEthernet1/0\n ip address 10.1.2.1 255.255.255.0\n!\n# END ANSIBLE MANAGED BLOCK\n```", "```\n---\n - name: Using Ansible Tags\n hosts: cisco\n gather_facts: no\n tasks:\n - name: Print OSPF\n debug:\n msg: \"Router {{ hostname }} will Run OSPF\"\n tags: [ospf, routing]\n\n - name: Print BGP\n debug:\n msg: \"Router {{ hostname }} will Run BGP\"\n tags:\n - bgp\n - routing\n\n - name: Print NTP\n debug:\n msg: \"Router {{ hostname }} will run NTP\"\n tags: ntp\n```", "```\n$ ansible-playbook ansible_tags.yml -i hosts --tags routing\n```", "```\n$ ansible-playbook ansible_tags.yml -i hosts --tags ospf\n\n$ ansible-playbook ansible_tags.yml -i hosts --tags routing\n```", "```\n[defaults]\ninventory=hosts\nvault_password_file=decryption_password\ngathering=explicit\n```", "```\n$ mkdir roles\n$ cd roles\n$ ansible-galaxy init basic_config\n```", "```\n$ cat roles/basic_config/vars/main.yml\n\n---\nconfig_dir: basic_config\n```", "```\n$ cat roles/basic_config/tasks/main.yml\n\n---\n - name: Create Configs Directory\n file:\n path: \"{{ config_dir }}\"\n state: directory\n run_once: yes\n\n - name: Generate Cisco Basic Config\n template:\n src: \"{{os}}.j2\"\n dest: \"{{config_dir}}/{{inventory_hostname}}.cfg\"\n```", "```\n$ tree roles/basic_config/templates/\n\nroles/basic_config/templates/\n\u251c\u2500\u2500 ios.j2\n\u2514\u2500\u2500 junos.j2\n\n$ cat roles/basic_config/templates/ios.j2\nhostname {{ hostname }}\n!\n{% for server in ntp_servers %}\nntp {{ server }}\n{% endfor %}\n```", "```\n$ cat pb_ansible_role.yml\n---\n - name: Build Basic Config Using Roles\n hosts: all\n connection: local\n roles:\n - basic_config\n```", "```\n$ tree roles/\nroles/\n\u2514\u2500\u2500 basic_config\n \u251c\u2500\u2500 defaults\n \u2502   \u2514\u2500\u2500 main.yml\n \u251c\u2500\u2500 files\n \u251c\u2500\u2500 handlers\n \u2502   \u2514\u2500\u2500 main.yml\n \u251c\u2500\u2500 meta\n \u2502   \u2514\u2500\u2500 main.yml\n \u251c\u2500\u2500 README.md\n \u251c\u2500\u2500 tasks\n \u2502   \u2514\u2500\u2500 main.yml\n \u251c\u2500\u2500 templates\n \u251c\u2500\u2500 tests\n \u2502   \u251c\u2500\u2500 inventory\n \u2502   \u2514\u2500\u2500 test.yml\n \u2514\u2500\u2500 vars\n \u2514\u2500\u2500 main.yml\n```", "```\n$ tree basic_config/\nbasic_config/\n\u251c\u2500\u2500 csr1.cfg\n\u251c\u2500\u2500 csr2.cfg\n\u251c\u2500\u2500 mx1.cfg\n\u2514\u2500\u2500 mx2.cfg    \n```"]