["```\n$ cat hosts\n[ltm]\nltm01 Ansible_host=172.20.1.34\n```", "```\n$ cat Ansible.cfg\n[defaults]\ninventory=hosts\nretry_files_enabled=False\ngathering=explicit\nhost_key_checking=False\n```", "```\nconn_parameters:\n user: admin\n password: admin\n server: \"{{ Ansible_host }}\"\n server_port: 443\n validate_certs: no\nadmin_passwd: NewP@sswd\nusers:\n - name: Ansible\n passwd: Ansible123\n role: all:admin\n state: present\n```", "```\n- name: Onboarding a New LTM\n hosts: ltm01\n connection: local\n tasks:\n - name: \"P1T1: Create new Users\"\n bigip_user:\n username_credential: \"{{ item.name }}\"\n password_credential: \"{{ item.passwd }}\"\n partition_access: \"{{ item.role }}\"\n state: \"{{ item.state | default('present')}}\"\n provider: \"{{ conn_parameters }}\"\n loop: \"{{ users }}\"\n```", "```\n - name: \"P1T1: Update admin Password\"\n bigip_user:\n username_credential: admin\n password_credential: \"{{ admin_passwd }}\"\n state: present\n provider: \"{{ conn_parameters }}\"\n```", "```\n$ cat group_vars/all.yml\nconn_parameters:\n user: Ansible\n password: Ansible123\n server: \"{{ Ansible_host }}\"\n server_port: 443\n validate_certs: no\n< -- Output Omitted for brevity -->\u2003\n```", "```\n$ cat group_vars/all.yml\n< -- Output Omitted for brevity -->\ndomain: lab.net\nnms_servers:\n - 172.20.1.250\n```", "```\n$ cat tasks/f5_system.yml\n---\n- name: \"Setup BIG-IP Hostname\"\n bigip_hostname:\n hostname: \"{{ inventory_hostname }}.{{ domain }}\"\n provider: \"{{ conn_parameters }}\"\n- name: \"Setup BIG-IP DNS Servers\"\n bigip_device_dns:\n ip_version: '4'\n name_servers: \"{{ nms_servers }}\"\n provider: \"{{ conn_parameters }}\"\n- name: \"Setup BIG-IP NTP Servers\"\n bigip_device_ntp:\n ntp_servers: \"{{ nms_servers }}\"\n provider: \"{{ conn_parameters }}\"\n```", "```\n$ cat pb_f5_onboard.yml\n< -- Output Omitted for brevity -->\n- name: \"P1T3: Configure System Parameters\"\n import_tasks: \"tasks/f5_system.yml\"\n tags: system\n```", "```\n$ cat host_vars/ltm01.yml\n----\nphy_interfaces:\n - 1.1\n - 1.2\ntrunks:\n - name: po1\n members: \"{{ phy_interfaces }}\"\n```", "```\n$ cat tasks/f5_interfaces.yml\n---\n- name: Create a Port channel on BIG-IP\n bigip_trunk:\n name: \"{{ item.name}}\"\n interfaces: \"{{ item.members }}\"\n link_selection_policy: maximum-bandwidth\n frame_distribution_hash: destination-mac\n lacp_enabled: no\n provider: \"{{ conn_parameters }}\"\n state: present\n loop: \"{{ trunks }}\"\n```", "```\n$ cat pb_f5_onboard.yml\n< -- Output omitted for brevity -->\n- name: \"P1T4: Configure Interfaces\"\n import_tasks: \"tasks/f5_interfaces.yml\"\n tags: intfs\n```", "```\n$ cat host_vars/ltm01.yml\n< -- Output Omitted for brevity -->\nvlans:\n - vlan: 100\n description: Extrnal VLAN (Internet)\n ip: 10.1.100.254/24\n tagged_intf: po1\n - vlan: 10\n description: Server VLAN10 (Internal)\n ip: 10.1.10.254/24\n tagged_intf: po1\n```", "```\n$ cat tasks/f5_interfaces.yml\n< -- Output Omitted for brevity -->\n- name: Create VLANs on BIG-IP\n bigip_vlan:\n tagged_interfaces: \"{{ item.tagged_intf }}\"\n name: \"VL{{item.vlan}}\"\n description: \"{{ item.description }}\"\n tag: \"{{item.vlan}}\"\n provider: \"{{ conn_parameters }}\"\n state: present\n loop: \"{{ vlans }}\"\n```", "```\n$ cat tasks/f5_interfaces.yml\n< -- Output Omitted for brevity -->\n- name: Provision IP addresses on BIG-IP\n bigip_selfip:\n address: \"{{ item.ip | ipv4('address') }}\"\n name: \"VL{{ item.vlan }}_IP\"\n netmask: \"{{ item.ip | ipv4('netmask') }}\"\n vlan: \"VL{{ item.vlan }}\"\n provider: \"{{ conn_parameters }}\"\n state: present\n loop: \"{{ vlans }}\"\n```", "```\n$ cat host_vars/ltm01.yml\n< -- Output Omitted for brevity -->\nroutes:\n - dst: 0.0.0.0/0\n gw: 10.1.100.1\n name: default_route\n```", "```\n$ cat pb_f5_onboard.yml\n< -- Output Omitted for brevity -->\n- name: \"P1T5: Setup External Routing\"\n bigip_static_route:\n destination: \"{{ item.dst.split('/')[0] }}\"\n netmask: \"{{item.dst | ipv4('prefix')}}\"\n gateway_address: \"{{ item.gw }}\"\n name: \"{{ item.name }}\"\n provider: \"{{ conn_parameters }}\"\n loop: \"{{ routes }}\"\n tags: routing\n```", "```\n---\nvip: 10.1.100.100\nvip_port: 443\nendpoint: dev.internet.net\npool_name: dev_web_app\npool_members:\n - ip: 10.1.10.10\n name: \"dev01.internal.net\"\n port: 443\n - ip: 10.1.10.11\n name: \"dev01\\. internal.net\"\n port: 443\n```", "```\n---\n- name: Deploying a New App on BIG-IP\n hosts: ltm01\n connection: local\n vars_file: web_app.yml\n tasks:\n - name: \"Create Nodes on BIG-IP\"\n bigip_node:\n address: \"{{ item.ip }}\"\n name: \"{{ item.name }}\"\n provider: \"{{ conn_parameters }}\"\n state: present\n loop: \"{{ pool_members }}\"\n```", "```\n- name: Create New LB Pool\n bigip_pool:\n name: \"POOL_{{ website }}_{{ vip_port }}\"\n lb_method: round-robin\n state: present\n provider: \"{{ conn_parameters }}\"\n```", "```\n- name: Add Members to the Pool\n bigip_pool_member:\n pool: \"POOL_{{ website }}_{{ vip_port }}\"\n host: \"{{ item.ip }}\"\n name: \"{{ item.name }}\"\n port: \"{{ item.port }}\"\n description: \"Web Server for {{ website }}\"\n provider: \"{{ conn_parameters }}\"\n loop: \"{{ pool_members }}\"\n```", "```\n- name: Create Virtual Server\n bigip_virtual_server:\n name: \"{{ website }}_{{ vip_port }}_VS\"\n destination: \"{{ vip }}\"\n port: \"{{ vip_port}}\"\n pool: \"POOL_{{ website }}_{{ vip_port }}\"\n description: \"VIP for {{ website }}\"\n profiles:\n - http\n - name: clientssl\n context: client-side\n - name: serverssl\n context: server-side\n state: present\n provider: \"{{ conn_parameters }}\"\n```", "```\n---\n- name: Validating BIG-IP Health\n hosts: ltm01\n connection: local\n tasks:\n - name: Collect Device Facts from BIG-IP\n bigip_device_facts:\n gather_subset:\n - interfaces\n provider: \"{{ conn_parameters }}\"\n register: bigip_facts\n```", "```\n - name: Set Device Links\n set_fact:\n net_intfs: \"{{ net_intfs | default([]) +\n bigip_facts.interfaces | selectattr('name','equalto',item|string) | list }}\"\n loop: \"{{ phy_interfaces }}\"\n```", "```\n - name: Validate All Interface are operational\n assert:\n that:\n - item.enabled == 'yes'\n fail_msg: \" Interface {{ item.name }} is Down\"\n loop: \"{{net_intfs}}\"\n```", "```\n\"bigip_facts\": {\n< -- Output Omitted for brevity -->\n \"interfaces\": [\n {\n \"active_media_type\": \"10000T-FD\",\n \"bundle\": \"not-supported\",\n \"bundle_speed\": \"not-supported\",\n \"enabled\": \"yes\",\n \"flow_control\": \"tx-rx\",\n \"full_path\": \"1.1\",\n \"if_index\": 48,\n \"lldp_admin\": \"txonly\",\n \"mac_address\": \"00:50:00:00:01:01\",\n \"media_sfp\": \"auto\",\n \"mtu\": 1500,\n \"name\": \"1.1\",\n < -- Output Omitted for brevity -->\n }\n```", "```\n---\n- name: Validating BIG-IP App Health\n hosts: ltm01\n connection: local\n vars_files: web_app.yml\n tasks:\n - name: Collect Virtual-Servers Facts from BIG-IP\n bigip_device_facts:\n gather_subset:\n - virtual-servers\n provider: \"{{ conn_parameters }}\"\n register: bigip_app_facts\n```", "```\n    - name: Create Virtual Server Name Fact\n set_fact:\n vs_name: \"{{ website }}_{{ vip_port }}_VS\" - name: Create App Virtual Servers\n set_fact:\n app_vs: \"{{ app_vs | default([]) +\n bigip_app_facts.virtual_servers | selectattr('name','equalto',vs_name) | list }}\"\n```", "```\n    - name: Validate Virtual Address Status\n assert:\n that:\n - item.enabled == 'yes'\n - item.destination_address == vip\n - item.destination_port == vip_port\n fail_msg: \" {{ item.name }} is No Setup Correctly\"\n loop: \"{{app_vs}}\"\n```"]