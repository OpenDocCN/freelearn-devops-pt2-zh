["```\n$ git clone [https://github.com/netbox-community/netbox-docker.git](https://github.com/netbox-community/netbox-docker.git) netbox_src\n```", "```\n$ cd netbox_src\n$ /usr/local/bin/docker-compose pull\n```", "```\n$ cat docker-compose.yml\n \u00df--- Output Omitted for brevity -->\n nginx:\n command: nginx -c /etc/netbox-nginx/nginx.conf\n image: nginx:1.17-alpine\n depends_on:\n - netbox\n ports:\n - 80:8080  >>  # This will make NGINX listen on port 80 on the host machine\n```", "```\n$ /usr/local/bin/docker-compose up -d \n```", "```\ngit clone git@github.com:PacktPublishing/Network-Automation-Cookbook.git\n```", "```\n$ cat hosts\n< --- Output omitted for bevitry --- > \n[netbox]\nnetbox  ansible_host=172.20.100.111\n```", "```\n$ ansible-playbook pb_deploy_netbox.yml\n```", "```\n$ sudo pip3 install pynetbox\n```", "```\n$ cat hosts\n[dc1]\ndc1-spine01     ansible_host=172.20.1.41\ndc1-spine02     ansible_host=172.20.1.42dc1-leaf01      ansible_host=172.20.1.35\ndc1-leaf02      ansible_host=172.20.1.3\n\n[dc2]\ndc2-spine01     ansible_host=172.20.2.41dc2-spine02     ansible_host=172.20.2.42dc2-leaf01      ansible_host=172.20.2.35\ndc2-leaf02      ansible\nhost=172.20.2.36\n\n[leaf]\ndc[1:2]-leaf0[1:2]\n\n[spine]\ndc[1:2]-spine0[1:2]\n```", "```\n---\nnetbox_url: http://172.20.100.111\nnetbox_token: 08be88e25b23ca40a9338d66518bd57de69d4305\n```", "```\nsites:\n - name: DC1\n description: \"Main Data Center in Sydney\"\n location: Sydney\n - name: DC2\n description: \"Main Data Center in KSA\"\n location: Riyadh\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml\n---\n- name: Create NetBox Sites\n netbox_site:\n netbox_token: \"{{ netbox_token }}\"\n netbox_url: \"{{ netbox_url }}\"\n data:\n name: \"{{ item.name | lower }}\"\n description: \"{{ item.description | default(omit) }}\"\n physical_address: \"{{ item.location | default(omit) }}\"\n state: \"{{ netbox_state }}\"\n loop: \"{{ sites }}\"\n run_once: yes\n tags: netbox_sites\n```", "```\n$ cat roles/build_netbox_db/defaults/main.yml\n---\nnetbox_state: present\n```", "```\n$ cat pb_build_netbox_db.yml\n---\n- name: Populate NetBox DataBase\n hosts: all\n gather_facts: no\n vars:\n ansible_connection: local\n tasks:\n - import_role:\n name: build_netbox_db\n```", "```\n$ cat group_vars/all.yml\n\n < --- Output Omitted for brevity --- >\n\n devices:\n - role: Leaf_Switch\n type: 7020SR\n vendor: Arista\n color: 'f44336'  # red\n - role: Spine_Switch\n type: 7050CX3\n ru: 2\n vendor: Arista\n color: '2196f3'  # blue\n```", "```\n$ cat group_vars/leaf.yml\n\n---\ndevice_model: 7020SR\ndevice_role: Leaf_Switch\nvendor: Arista\n$ cat group_vars/spine.yml\n---\ndevice_model: 7050CX3\ndevice_role: Spine_Switch\nvendor: Arista\n```", "```\n$ cat roles/build_netbox_db/tasks/create_device_vendors.yml\n\n- name: NetBox Device  // Get Existing Vendors\n uri: url: \"{{ netbox_url }}/api/dcim/manufacturers/?name={{ device }}\" method: GET headers: Authorization: \"Token {{ netbox_token }}\" Accept: 'application/json' return_content: yes body_format: json status_code: [200, 201] register: netbox_vendors run_once: yes tags: device_vendors - name: NetBox Device  // Create Device Vendors\n uri: url: \"{{ netbox_url }}/api/dcim/manufacturers/\" method: POST headers: Authorization: \"Token {{ netbox_token }}\" Accept: 'application/json' return_content: yes body_format: json body: name: \"{{ device }}\" slug: \"{{ device | lower }}\" status_code: [200, 201] when: - netbox_vendors.json.count == 0 - netbox_state == 'present' run_once: yes tags: device_vendors\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml < --- Output Omitted for brevity --- > - name: Create NetBox Device Vendors\n include_tasks: create_device_vendors.yml loop: \"{{ devices | map(attribute='vendor') | list | unique}}\" loop_control: loop_var: device run_once: yes tags: device_vendors\n```", "```\n$ cat roles/build_netbox_db/tasks/create_device_types.yml - name: NetBox Device  // Get Existing Device Types\n uri: url: \"{{ netbox_url }}/api/dcim/device-types/?model={{ device.type }}\" method: GET headers: Authorization: \"Token {{ netbox_token }}\" Accept: 'application/json' return_content: yes body_format: json status_code: [200, 201] register: netbox_device_types run_once: yes tags: device_types - name: NetBox Device  // Create New Device Types\n uri: url: \"{{ netbox_url }}/api/dcim/device-types/\" method: POST headers: Authorization: \"Token {{ netbox_token }}\" Accept: 'application/json' return_content: yes body_format: json body: model: \"{{ device.type }}\" manufacturer: { name: \"{{ device.vendor }}\"} slug: \"{{ device.type | regex_replace('-','_') | lower  }}\" u_height: \"{{ device.ru | default(1) }}\" status_code: [200, 201] when: - netbox_device_types.json.count == 0 - netbox_state != 'absent' register: netbox_device_types run_once: yes tags: device_types\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml\n< --- Output Omitted for brevity --- >\n- name: Create NetBox Device Types\n include_tasks: create_device_types.yml\n loop: \"{{ devices }}\"\n loop_control:\n loop_var: device\n run_once: yes\n tags: device_types\n```", "```\n$ cat roles/build_netbox_db/tasks/create_device_roles.yml - name: NetBox Device  // Get Existing Device Roles\n uri: url: \"{{ netbox_url }}/api/dcim/device-roles/?name={{ device.role}}\" method: GET headers: Authorization: \"Token {{ netbox_token }}\" Accept: 'application/json' return_content: yes body_format: json status_code: [200, 201] register: netbox_device_role tags: device_roles - name: NetBox Device  // Create New Device Roles\n uri: url: \"{{ netbox_url }}/api/dcim/device-roles/\" method: POST headers: Authorization: \"Token {{ netbox_token }}\" Accept: 'application/json' return_content: yes body_format: json body: name: \"{{ device.role }}\" slug: \"{{ device.role | lower }}\" color: \"{{ device.color }}\" status_code: [200, 201] when: - netbox_device_role.json.count == 0 - netbox_state != 'absent' register: netbox_device_role tags: device_roles\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml < --- Output Omitted for brevity --- > - name: Create NetBox Device Roles\n include_tasks: create_device_roles.yml loop: \"{{ devices }}\" loop_control: loop_var: device run_once: yes tags: device_roles\n```", "```\n---\n- name: Provision NetBox Devices\n netbox_device:\n data:\n name: \"{{ inventory_hostname }}\"\n device_role: \"{{ device_role }}\"\n device_type: \"{{ device_model }}\"\n status: Active\n site: \"{{ inventory_hostname.split('-')[0] }}\"\n netbox_token: \"{{ netbox_token }}\"\n netbox_url: \"{{ netbox_url }}\"\n state: \"{{ netbox_state }}\"\n register: netbox_device\n tags: netbox_devices\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml < --- Output Omitted for brevity --- > - name: Create NetBox Device\n include_tasks: create_device.yml tags: netbox_devices\n```", "```\np2p_ip:\n  dc1-leaf01:\n    - {port: Ethernet8, ip: 172.10.1.1/31, peer: dc1-spine01, pport: Ethernet1,\npeer_ip: 172.10.1.0/31}\n    - {port: Ethernet9, ip: 172.10.1.5/31, peer: dc1-spine02, pport: Ethernet1,\npeer_ip: 172.10.1.4/31}\n< --- Output Omitted for brevity --- >\n  dc2-leaf01:\n    - {port: Ethernet8, ip: 172.11.1.1/31, peer: dc2-spine01, pport: Ethernet1, peer_ip: 172.11.1.0/31}\n    - {port: Ethernet9, ip: 172.11.1.5/31, peer: dc2-spine02, pport: Ethernet1, peer_ip: 172.11.1.4/31}\n```", "```\n$ cat roles/build_netbox_db/tasks/create_device_intf.yml --- - name: Create Fabric Interfaces on Devices\n netbox_interface: netbox_token: \"{{ netbox_token }}\" netbox_url: \"{{ netbox_url }}\" data: device: \"{{ inventory_hostname }}\" name: \"{{ item.port }}\" description: \"{{ item.type | default('CORE') }} | {{ item.peer }}| {{\nitem.pport }}\" enabled: true mode: Access state: \"{{ netbox_state }}\" loop: \"{{ p2p_ip[inventory_hostname] }}\" when: p2p_ip is defined tags: netbox_intfs\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml\n< --- Output Omitted for brevity --- >\n- name: Create NetBox Device Interfaces  include_tasks: create_device_intf.yml\n tags: netbox_intfs\n```", "```\n$ cat roles/build_netbox_db/tasks/create_device_intf.yml\n---\n- name: Create Fabric IPs\n netbox_ip_address:\n netbox_token: \"{{ netbox_token }}\"\n netbox_url: \"{{ netbox_url }}\"\n data:\n address: \"{{ item.ip }}\"\n interface:\n name: \"{{ item.port }}\"\n device: \"{{ inventory_hostname }}\"\n state: \"{{ netbox_state }}\"\n loop: \"{{ p2p_ip[inventory_hostname] }}\"\n tags: netbox_ip\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml < --- Output Omitted for brevity --- - name: Create NetBox Device Interfaces IP Address\n include_tasks: create_device_intf_ip.yml tags: netbox_ip\n```", "```\n$ cat group_vars/all.yml\n\n < --- Output Omitted for brevity --- >\n subnets:\n -   prefix: 172.10.1.0/24\n role: p2p_subnet\n site: dc1\n -   prefix: 172.11.1.0/24\n role: p2p_subnet\n site: dc2\n -   prefix: 10.100.1.0/24\n role: loopback_subnet\n site: dc1\n -   prefix: 10.100.2.0/24\n role: loopback_subnet\n site: dc2\n -   prefix: 172.20.1.0/24\n role: oob_mgmt_subnet\n site: dc1\n -   prefix: 172.20.2.0/24\n role: oob_mgmt_subnet\n site: dc2\n```", "```\n$ cat roles/build_netbox_db/tasks/main.yml < --- Output Omitted for brevity --- > - name: Create IP Prefixes\n netbox_prefix: netbox_token: \"{{ netbox_token }}\" netbox_url: \"{{ netbox_url }}\" data: prefix: \"{{ item.prefix }}\" site: \"{{ item.site | default(omit) }}\" status: Active state: \"{{ netbox_state }}\" loop: \"{{ subnets }}\" loop_control: label: \"{{ item.prefix }}\" run_once: yes tags: netbox_prefix\n```", "```\n$ cat netbox_dynamic_inventory/netbox_inventory_source.yml --- plugin: netbox api_endpoint: http://172.20.100.111 token: 08be88e25b23ca40a9338d66518bd57de69d4305 group_by:\n - device_roles - sites\n```", "```\n$ cat netbox_dynamic_inventory/pb_create_report.yml\n\n--- - name: Create Report from Netbox Data\n hosts: all gather_facts: no connection: local tasks: - name: Build Report blockinfile: block: | netbox_data: {% for node in play_hosts %} - { node: {{ node }} , type: {{ hostvars[node].device_types[0] }} , mgmt_ip: {{ hostvars[node].ansible_host }} } {% endfor %} path: ./netbox_report.yaml create: yes delegate_to: localhost run_once: yes\n```", "```\n$ ansible-inventory --list -i netbox_inventory_source.yml\n```", "```\n{\n \"_meta\": { \"hostvars\": { \"dc1-leaf01\": { \"ansible_host\": \"172.20.1.35\", \"device_roles\": [ \"Leaf_Switch\" ], \"device_types\": [ \"7020SR\" ], \"manufacturers\": [ \"Arista\" ], \"primary_ip4\": \"172.20.1.35\", \"sites\": [ \"dc1\" ] },\n```", "```\n    \"all\": {\n        \"children\": [\n            \"device_roles_Leaf_Switch\",\n            \"device_roles_Spine_Switch\",\n            \"sites_dc1\",\n            \"sites_dc2\",\n            \"ungrouped\"\n        ]\n    },\n    \"device_roles_Leaf_Switch\": {\n        \"hosts\": [\n            \"dc1-leaf01\",\n            \"dc1-leaf02\",\n            \"dc2-leaf01\",\n            \"dc2-leaf02\"\n        ]\n    },\n```", "```\n$ ansible-playbook pb_create_report.yml -i netbox_inventory_source.yml\n$ cat netbox_report.yml\n# BEGIN ANSIBLE MANAGED BLOCK\nnetbox_data:\n - { node: dc1-leaf01 , type: 7020SR , mgmt_ip: 172.20.1.35 }\n - { node: dc1-leaf02 , type: 7020SR , mgmt_ip: 172.20.1.36 }\n - { node: dc2-leaf01 , type: 7020SR , mgmt_ip: 172.20.2.35 }\n - { node: dc2-leaf02 , type: 7020SR , mgmt_ip: 172.20.2.36 }\n - { node: dc1-spine01 , type: 7050CX3 , mgmt_ip: 172.20.1.41 }\n - { node: dc1-spine02 , type: 7050CX3 , mgmt_ip: 172.20.1.42 }\n - { node: dc2-spine01 , type: 7050CX3 , mgmt_ip: 172.20.2.41 }\n - { node: dc2-spine02 , type: 7050CX3 , mgmt_ip: 172.20.2.42 }\n# END ANSIBLE MANAGED BLOCK\n```", "```\n$ cat netbox_data.yml\n---\nnetbox_url: http://172.20.100.111\nnetbox_token: 08be88e25b23ca40a9338d66518bd57de69d4305\n```", "```\n$ cat pb_build_config.yml --- - name: Create Report from Netbox Data\n hosts: all gather_facts: no connection: local tasks: - name: Read netbox Data include_vars: netbox_data.yml run_once: yes\n```", "```\n - name: Get Data from Netbox\n uri:\n url: \"{{ netbox_url }}/api/dcim/interfaces/?device={{ inventory_hostname\n}}\"\n method: GET\n headers:\n Authorization: \"Token {{ netbox_token }}\"\n Accept: 'application/json'\n return_content: yes\n body_format: json\n status_code: [200, 201]\n register: netbox_interfaces\n delegate_to: localhost\n run_once: yes\n```", "```\n - name: Push Config\n eos_config:\n lines:\n - description {{ port.description }}\n parent: interface {{ port.name }}\n loop: \"{{ netbox_interfaces.json.results }}\"\n loop_control:\n loop_var: port\n vars:\n ansible_connection: network_cli\n ansible_network_os: eos\n```", "```\n$ ansible-playbook pb_build_config.yml -i netbox_inventory_source.yml\n```", "```\nok: [dc1-spine01] => {\n \"netbox_interfaces\": {\n \"api_version\": \"2.6\",\n \"changed\": false,\n \"connection\": \"close\",\n \"json\": {\n \"results\": [\n {\n \"description\": \"CORE | dc1-leaf01| Ethernet8\",\n \"device\": {\n \"display_name\": \"dc1-spine01\",\n \"id\": 44,\n \"name\": \"dc1-spine01\",\n \"url\": \"http://172.20.100.111/api/dcim/devices/44/\"\n },\n \"enabled\": true,\n <-- Output Omitted for Brevity -->     \n                    \"name\": \"Ethernet1\",\n<-- Output Omitted for Brevity -->     \n                },\n```"]