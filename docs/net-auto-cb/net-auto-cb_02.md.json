["```\n$ cat hosts\n [access]\n access01 Ansible_host=172.20.1.18\n access02 Ansible_host=172.20.1.19\n\n[core]\n core01 Ansible_host=172.20.1.20\n core02 Ansible_host=172.20.1.21\n\n[wan]\n wan01 Ansible_host=172.20.1.22\n wan02 Ansible_host=172.20.1.23\n\n[lan:children]\n access\n core\n\n[network:children]\n lan\n wan\n```", "```\n$ cat Ansible.cfg\n\n[defaults]\n inventory=hosts\n retry_files_enabled=False\n gathering=explicit\n```", "```\n$cat network.yml\nAnsible_network_os: ios\nAnsible_connection: network_cli\nAnsible_user: lab\nAnsible_password: lab123\nAnsible_become: yes\nAnsible_become_password: admin123\nAnsible_become_method: enable\n```", "```\n!\n hostname <device_hostname>\n !\n ip domain name <domain_name>\n !\n username lab secret 5 <password_for_lab_user>.\n !\n enable secret 5 <enable_password>.\n !\n line vty 0 4\n login local\n transport input SSH\n !\n```", "```\n(config)#crypto key generate rsa\n Choose the size of the key modulus in the range of 360 to 4096 for your\n General Purpose Keys. Choosing a key modulus greater than 512 may take\n a few minutes.\nHow many bits in the modulus [512]: 2048\n % Generating 2048 bit RSA keys, keys will be non-exportable...\n [OK] (elapsed time was 0 seconds)\n```", "```\n$ cat Ansible.cfg\n[defaults]\n host_key_checking=False\n```", "```\nwan01#show ip SSH\nSSH Disabled - version 2.0\n%Please create RSA keys to enable SSH (and of atleast 768 bits for SSH v2).\nAuthentication methods:publickey,keyboard-interactive,password\nAuthentication Publickey Algorithms:x509v3-SSH-rsa,SSH-rsa\nHostkey Algorithms:x509v3-SSH-rsa,SSH-rsa\nEncryption Algorithms:aes128-ctr,aes192-ctr,aes256-ctr\nMAC Algorithms:hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-sha1-96\nKEX Algorithms:diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1\nAuthentication timeout: 120 secs; Authentication retries: 3\nMinimum expected Diffie Hellman key size : 2048 bits\nIOS Keys in SECSH format(SSH-rsa, base64 encoded): NONE\n```", "```\n$SSH lab@172.20.1.18\nThe authenticity of host '172.20.1.18 (172.20.1.18)' can't be established.\nRSA key fingerprint is SHA256:KnWOalnENZfPokYYdIG3Ogm9HDnXIwjh/it3cqdiRRQ.\nRSA key fingerprint is MD5:af:18:4b:4e:84:19:a6:8d:82:17:51:d5:ee:eb:16:8d.\nAre you sure you want to continue connecting (yes/no)?\n```", "```\n- name: \"Play2: Record Keys in Known Hosts file\"\n hosts: localhost\n vars:\n - hosts_file: \"~/.SSH/known_hosts\"\ntasks:\n - name: create know hosts file\n file:\n path: \"{{ hosts_file }}\"\n state: file\n changed_when: false\n```", "```\n- name: \"Play2: Record Keys in Known Hosts file\"\n hosts: localhost\n vars:\n - hosts_file: \"~/.SSH/known_hosts\"\n tasks:\n - name: create know hosts file\n file:\n path: \"{{ hosts_file }}\"\n state: file\n changed_when: false\n - name: Populate the known_hosts file\n blockinfile:\n block: |\n {% for host in groups['all'] if  hostvars[host].SSH_keys.stdout != '' \n%}\n {{ hostvars[host].SSH_keys.stdout}}\n {% endfor %}\n path: \"{{ hosts_file }}\"\n create: yes\n```", "```\n$ SSH-keyscan 172.20.1.22\n\n# 172.20.1.22:22 SSH-2.0-Cisco-1.25\n 172.20.1.22 SSH-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTwrH4phzRnW/RsC8eXMh/accIErRfkgffDWBGSdEX0r9EwAa6p2uFMWj8dq6kvrREuhqpgFyMoWmpgdx5Cr+10kEonr8So5yHhOhqG1SJO9RyzAb93H0P0ro5DXFK8A/Ww+m++avyZ9dShuWGxKj9CDM6dxFLg9ZU/9vlzkwtyKF/+mdWNGoSiCbcBg7LrOgZ7Id7oxnhEhkrVIa+IxxGa5Pwc73eR45Uf7QyYZXPC0RTOm6aH2f9+8oj+vQMsAzXmeudpRgAu151qUH3nEG9HIgUxwhvmi4MaTC+psmsGg2x26PKTOeX9eLs4RHquVS3nySwv4arqVzDqWf6aruJ\n```", "```\n$ cat group_vars/network.yml\n<-- Output Trimmed for brevity ------>\nname_servers:\n - 172.20.1.250\n - 172.20.1.251\nntp_server: 172.20.1.17\n```", "```\n$ cat pb_build_network.yml\n ---\n- name: \"PLAY 1: Configure All Lan Switches\"\n hosts: lan\n tags: lan\n tasks:\n - name: \"Configure Hostname and Domain Name\"\n ios_system:\n hostname: \"{{ inventory_hostname }}\"\n domain_name: \"{{ domain_name }}\"\n lookup_enabled: no\n name_servers: \"{{ name_servers }}\"\n - name: \"Configure NTP\"\n ios_ntp:\n server: \"{{ ntp_server }}\"\n logging: true\n state: present\n```", "```\n!\n ip name-server 172.20.1.250 172.20.1.251\n no ip domain lookup\n ip domain name lab.net\n !\n ntp logging\n ntp server 172.20.1.17\n !\n```", "```\n$ cat group_vars/network.yml\n<-- Output Trimmed for brevity ------>\nintf_duplex: full\nintf_mtu: 1500\n```", "```\n$ cat group_vars/lan.yaml\n\ninterfaces:\n core01:\n - name: Ethernet0/1\n description: access01_e0/1\n mode: trunk\n - name: Ethernet0/2\n description: access02_e0/1\n mode: trunk\n - name: Ethernet0/3\n description: core01_e0/3\n mode: trunk\n <--   Output Trimmed for brevity ------>\n access01:\n - name: Ethernet0/1\n description: core01_e0/1\n mode: trunk\n - name: Ethernet0/2\n description: core02_e0/1\n mode: trunk\n - name: Ethernet0/3\n description: Data_vlan\n mode: access\n vlan: 10\n```", "```\n - name: \"P1T3: Configure Interfaces\"\n ios_interface:\n name: \"{{ item.name }}\"\n description: \"{{ item.description }}\"\n duplex: \"{{ intf_duplex }}\"\n mtu: \"{{ intf_mtu }}\"\n state: up\n loop: \"{{ interfaces[inventory_hostname] }}\"\n register: ios_intf\n```", "```\n$ cat group_vars/lan.yaml\n\nvlans:\n - name: Data\n vlan_id: 10\n - name: Voice\n vlan_id: 20\n - name: Web\n vlan_id: 100\n```", "```\n - name: \"P1T4: Create L2 VLANs\"\n ios_vlan:\n vlan_id: \"{{ item.vlan_id }}\"\n name: \"{{ item.name  }}\"\n loop: \"{{ vlans }}\"\n tags: vlan\n```", "```\naccess01#sh vlan\nVLAN Name                             Status    Ports\n---- -------------------------------- --------- -------------------------------\n1    default                          active    Et1/0, Et1/1, Et1/2, Et1/3\n10   Data                             active    Et0/3\n20   Voice                            active\n100  Web                              active\n```", "```\ncore_vlans:\n - name: l3_core_vlan\n vlan_id: 200\n interface: Ethernet0/3\n```", "```\n - name: \"Configure L2 Trunks\"\n ios_l2_interface:\n name: \"{{ item.name }}\"\n mode: \"{{ item.mode }}\"\n trunk_allowed_vlans: \"{{ vlans | map(attribute='vlan_id') | join(',') }}\"\n state: present\n loop: \"{{ interfaces[inventory_hostname] |\nselectattr('mode','equalto','trunk') | list }}\"\n - name: \"Enable dot1q Trunks\"\n ios_config:\n lines:\n - switchport trunk encapsulation dot1q\n parents: interface {{item.name}}\n loop: \"{{ interfaces[inventory_hostname] |\nselectattr('mode','equalto','trunk') | list }}\"\n tags: dot1q\n```", "```\n - name: \"Configure Access Ports\"\n ios_l2_interface:\n name: \"{{ item.name }}\"\n mode: \"{{ item.mode}}\"\n access_vlan: \"{{ item.vlan }}\"\n state: present\n loop: \"{{ interfaces[inventory_hostname] |\nselectattr('mode','equalto','access') | list }}\"\n```", "```\n!\ninterface Ethernet0/3   >> Access Port\n description Data_vlan\n switchport access vlan 10\n switchport mode access\n\n !\ninterface Ethernet0/1    >> Trunk Port\n description core01_e0/1\n switchport trunk encapsulation dot1q\n switchport trunk allowed vlan 10,20,100\n switchport mode trunk\n```", "```\n$ cat group_vars/core.yml\n<-- Output Trimmed for brevity ------>\nsvi_interfaces:\n - name: Vlan10\n ipv4: 10.1.10.0/24\n vrrp: yes\n ospf: passive\n -  name: Vlan20\n ipv4: 10.1.20.0/24\n vrrp: yes\n ospf: passive\n -  name: Vlan100\n ipv4: 10.1.100.0/24\n vrrp: yes\n ospf: passive\n```", "```\n$ cat host_vars/core01.yml\n hst_svi_id: 1\n hst_vrrp_priority: 100\n$ cat host_vars/core02.yml\n hst_svi_id: 2\n hst_vrrp_priority: 50\n```", "```\n- name: \"PLAY 2: Configure Core Switches\"\n hosts: core\n tags: l3_core\n tasks:\n<-- Output Trimmed for brevity ------>\n - name: \"Create L3 VLAN Interfaces\"\n ios_l3_interface:\n name: \"{{item.name }}\"\n ipv4: \"{{item.ipv4 | ipv4(hst_svi_id)}}\"\n loop: \"{{svi_interfaces}}\"\n tags: l3_svi\n - name: \"Enable the VLAN Interfaces\"\n ios_interface:\n name: \"{{ item.name }}\"\n state: up\n loop: \"{{ svi_interfaces }}\"\n```", "```\n - name: \"Create VRRP Configs\"\n ios_config:\n parents: interface {{ item.name }}\n lines:\n - vrrp {{item.name.split('Vlan')[1]}} priority {{ hst_vrrp_priority }}\n - vrrp {{item.name.split('Vlan')[1]}} ip {{item.ipv4 | ipv4(254)|ipaddr('address')}}\n loop: \"{{svi_interfaces | selectattr('vrrp','equalto',true) | list }}\"\n```", "```\nCore01\n ========\n !\n interface Vlan10\n ip address 10.1.10.1 255.255.255.0\n vrrp 10 ip 10.1.10.254\n !\nCore02\n =======\n !\n interface Vlan10\n ip address 10.1.10.2 255.255.255.0\n vrrp 10 ip 10.1.10.254\n vrrp 10 priority 50\n```", "```\ncore_l3_links:\n core01:\n - name: Ethernet1/0\n description: wan01_Gi2\n ipv4: 10.3.1.0/30\n ospf: yes\n ospf_metric: 100\n peer: wan01\n core02:\n - name: Ethernet1/0\n description: wan02_Gi2\n ipv4: 10.3.1.4/30\n ospf: yes\n ospf_metric: 200\n peer: wan02\n```", "```\n- name: \"PLAY 2: Configure Core Switches\"\n hosts: core\n tags: l3_core\n tasks:\n< -------- Snippet -------- >\n - name: \"P2T9: Configure OSPF On Interfaces\"\n ios_config:\n parents: interface {{ item.name }}\n lines:\n - ip ospf {{ ospf_process }} area {{ ospf_area }}\n - ip ospf network point-to-point\n - ip ospf cost {{item.ospf_metric | default(ospf_metric)}}\n loop: \"{{ (svi_interfaces + core_l3_links[inventory_hostname]) | selectattr('ospf') | list }}\"\n - name: \"P2T10: Configure OSPF Passive Interfaces\"\n ios_config:\n parents: router ospf {{ ospf_process }}\n lines: passive-interface {{item.name}}\n loop: \"{{ (svi_interfaces + core_l3_links[inventory_hostname]) | selectattr('ospf','equalto','passive') | list }}\"\n```", "```\n---\n- name: \"PLAY 1: Collect Device Facts\"\n hosts: core,wan\n tasks:\n - name: \"P1T1: Gather Device Facts\"\n ios_facts:\n register: device_facts\n - debug: var=device_facts\n```", "```\nok: [core01 -> localhost] => {\n \"Ansible_facts\": {\n \"net_all_ipv4_addresses\": [\n \"172.20.1.20\",\n< ---------- Snippet ------------ >\n \"10.1.100.1\"\n ],\n \"net_hostname\": \"core01\",\n \"net_interfaces\": {\n < ---------- Snippet ------------ >\n \"Vlan10\": {\n \"bandwidth\": 1000000,\n \"description\": null,\n \"duplex\": null,\n \"ipv4\": [\n {\n \"address\": \"10.1.10.1\",\n \"subnet\": \"24\"\n }\n ],\n \"lineprotocol\": \"up\",\n \"macaddress\": \"aabb.cc80.e000\",\n \"mediatype\": null,\n \"mtu\": 1500,\n \"operstatus\": \"up\",\n \"type\": \"Ethernet SVI\"\n },\n\n },\n \"net_iostype\": \"IOS\",\n \"net_serialnum\": \"67109088\",\n \"net_system\": \"ios\",\n \"net_version\": \"15.1\",\n }\n < ------------ Snippet ------------ >\n }\n```", "```\n- name: \"P1T2: Write Device Facts\"\n blockinfile:\n path: ./facts.yml\n create: yes\n block: |\n device_facts:\n {% for host in play_hosts %}\n {% set node = hostvars[host] %}\n {{ node.Ansible_net_hostname }}:\n serial_number: {{ node.Ansible_net_serialnum }}\n ios_version: {{ node.Ansible_net_version }}\n {% endfor %}\n all_loopbacks:\n {% for host in play_hosts %}\n {% set node = hostvars[host] %}\n {% if node.Ansible_net_interfaces is defined %}\n {% if node.Ansible_net_interfaces.Loopback0 is defined %}\n - {{ node.Ansible_net_interfaces.Loopback0.ipv4[0].address }}\n {% endif %}\n {% endif %}\n {% endfor %}\n run_once: yes\n delegate_to: localhost\n```", "```\ndevice_facts:\n wan01:\n serial_number: 90L4XVVPL7V\n ios_version: 16.06.01\n wan02:\n serial_number: 9UOFOO7FH19\n ios_version: 16.06.01\n core01:\n serial_number: 67109088\n ios_version: 15.1\n core02:\n serial_number: 67109104\n ios_version: 15.1\nall_loopbacks:\n - 10.100.1.3\n - 10.100.1.4\n - 10.100.1.1\n - 10.100.1.2\n```", "```\n---\n - name: \"PLay 1: Validate Network Reachability\"\n hosts: core,wan\n vars:\n host_id: 10\n packet_count: 10\n tasks:\n - name: \"Get all SVI Prefixes\"\n set_fact:\n all_svi_prefixes: \"{{ svi_interfaces | selectattr('vrrp') |\n map(attribute='ipv4') | list }}\"\n run_once: yes\n delegate_to: localhost\n tags: svi\n```", "```\n - name: \"Ping Hosts in all VLANs\"\n ios_ping:\n dest: \"{{ item | ipaddr(10) | ipaddr('address') }}\"\n loop: \"{{ all_svi_prefixes }}\"\n ignore_errors: yes\n tags: svi\n```", "```\nok: [core01 -> localhost] => {\n \"all_svi_prefixes\": [\n \"10.1.10.0/24\",\n \"10.1.20.0/24\",\n \"10.1.100.0/24\"\n ]\n}\n```", "```\nTASK [P1T2: Ping Hosts in all VLANs] *****************************\n ok: [core01] => (item=10.1.10.0/24)\n ok: [core02] => (item=10.1.10.0/24)\n ok: [wan01] => (item=10.1.10.0/24)\n ok: [wan02] => (item=10.1.10.0/24)\n ok: [core01] => (item=10.1.20.0/24)\n ok: [core02] => (item=10.1.20.0/24)\n ok: [core01] => (item=10.1.100.0/24)\n ok: [wan01] => (item=10.1.20.0/24)\n ok: [wan02] => (item=10.1.20.0/24)\n ok: [core02] => (item=10.1.100.0/24)\n ok: [wan01] => (item=10.1.100.0/24)\n ok: [wan02] => (item=10.1.100.0/24)\n```", "```\n---\n - name: \"Play 1: Execute Operational Commands\"\n hosts: network\n vars:\n config_folder: \"configs\"\n op_folder: \"op_data\"\n op_cmds:\n - show ip ospf neighbor\n - show ip route\n tasks:\n - name: \"P1T1: Build Directories to Store Data\"\n block:\n - name: \"Create folder to store Device config\"\n file:\n path: \"{{ config_folder }}\"\n state: directory\n - name: \"Create Folder to store operational commands\"\n file:\n path: \"{{ op_folder }}\"\n state: directory\n run_once: yes\n delegate_to: localhost\n```", "```\n - name: \"P1T2: Get Running configs from Devices\"\n ios_command:\n commands: show running-config\n register: show_run\n - name: \"P1T3: Save Running Config per Device\"\n copy:\n content: \"{{ show_run.stdout[0] }}\"\n dest: \"{{ config_folder }}/{{ inventory_hostname }}.cfg\"\n```", "```\n - name: \"P1T4: Create Folder per Device\"\n file:\n path: \"{{ op_folder}}/{{ inventory_hostname }}\"\n state: directory\n delegate_to: localhost\n - name: \"P1T5: Get Operational Data from Devices\"\n ios_command:\n commands: \"{{ item }}\"\n register: op_output\n loop: \"{{ op_cmds }}\"\n - name: \"P1T6: Save output per each node\"\n copy:\n content: \"{{ item.stdout[0] }}\"\n dest: \"{{ op_folder}}/{{ inventory_hostname }}/{{item.item | replace(' ', '_')}}.txt\"\n loop: \"{{ op_output.results }}\"\n```", "```\n$ tree configs/\n configs/\n \u251c\u2500\u2500 access01.cfg\n \u251c\u2500\u2500 access02.cfg\n \u251c\u2500\u2500 core01.cfg\n \u251c\u2500\u2500 core02.cfg\n \u251c\u2500\u2500 isp01.cfg\n \u251c\u2500\u2500 wan01.cfg\n \u2514\u2500\u2500 wan02.cfg\n```", "```\n$ tree op_data/\n op_data/\n \u251c\u2500\u2500 access01\n \u2502 \u251c\u2500\u2500 show_ip_ospf_neighbor.txt\n \u2502 \u2514\u2500\u2500 show_ip_route.txt\n \u251c\u2500\u2500 access02\n \u2502 \u251c\u2500\u2500 show_ip_ospf_neighbor.txt\n \u2502 \u2514\u2500\u2500 show_ip_route.txt\n \u251c\u2500\u2500 core01\n \u2502 \u251c\u2500\u2500 show_ip_ospf_neighbor.txt\n \u2502 \u2514\u2500\u2500 show_ip_route.txt\n \u251c\u2500\u2500 core02\n \u2502 \u251c\u2500\u2500 show_ip_ospf_neighbor.txt\n \u2502 \u2514\u2500\u2500 show_ip_route.txt\n \u251c\u2500\u2500 isp01\n \u2502 \u251c\u2500\u2500 show_ip_ospf_neighbor.txt\n \u2502 \u2514\u2500\u2500 show_ip_route.txt\n \u251c\u2500\u2500 wan01\n \u2502 \u251c\u2500\u2500 show_ip_ospf_neighbor.txt\n \u2502 \u2514\u2500\u2500 show_ip_route.txt\n \u2514\u2500\u2500 wan02\n \u251c\u2500\u2500 show_ip_ospf_neighbor.txt\n \u2514\u2500\u2500 show_ip_route.txt\n```", "```\n$ head op_data/core01/show_ip_ospf_neighbor.txt\n\nNeighbor ID     Pri   State           Dead Time   Address         Interface\n10.100.1.3        0   FULL/  -        00:00:37    10.3.1.2        Ethernet1/0\n10.100.1.2        0   FULL/  -        00:00:36    10.1.200.2      Vlan200\n```", "```\n$ sudo pip3 install pyats genie\n```", "```\n\n $ cat roles/requirements.yml\n- src: https://github.com/CiscoDevNet/Ansible-pyats\n scm: git\n name: Ansible-pyats\n```", "```\n $ Ansible-galaxy install -r requirements.yml\n```", "```\n---\n - name: Network Validation with pyATS\n hosts: wan\n roles:\n - Ansible-pyats\n vars:\n Ansible_connection: local\n tasks:\n - pyats_parse_command:\n command: show ip ospf neighbor\n register: ospf_output\n vars:\n Ansible_connection: network_cli\n```", "```\n - name: \"FACT >> Pyats OSPF Info\"\n set_fact:\n pyats_ospf_data: \"{{ ospf_output.structured.interfaces }}\"\n\n - name: \" FACT >> Set OSPF peers\"\n set_fact:\n OSPF_PEERS: \"{{ wan_l3_links[inventory_hostname] | selectattr('ospf','equalto',true) | list }}\"\n```", "```\n - name: Validate Number of OSPF Peers\n assert:\n that:\n - pyats_ospf_data | length == OSPF_PEERS | length\n loop: \"{{ OSPF_PEERS }}\"\n\n - name: Validate All Peers are in Full State\n assert:\n that:\n - pyats_ospf_data[item.name] | json_query('neighbors.*.state') | first == 'FULL/ -'\n loop: \"{{ OSPF_PEERS }}\"\n```", "```\n\"structured\": {\n \"interfaces\": {\n \"GigabitEthernet2\": {\n \"neighbors\": {\n \"10.100.1.1\": {\n \"address\": \"10.3.1.1\",\n \"dead_time\": \"00:00:37\",\n \"priority\": 0,\n \"state\": \"FULL/ -\"\n }\n }\n }\n }\n}\n```"]