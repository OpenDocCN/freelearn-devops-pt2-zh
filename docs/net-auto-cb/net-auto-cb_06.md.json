["```\n$ pip3 install napalm-ansible\n```", "```\n$ napalm-ansible\n```", "```\n[defaults]\n library = /usr/local/lib/python3.6/site-packages/napalm_ansible/modules\n action_plugins = /usr/local/lib/python3.6/site-packages/napalm_ansible/plugins/action\n```", "```\n$ cat ansible.cfg\n[defaults]\ninventory=hosts\nretry_files_enabled=False\ngathering=explicit\nhost_key_checking=False\nlibrary = /usr/local/lib/python3.6/site-packages/napalm_ansible/modules\naction_plugins = /usr/local/lib/python3.6/site-packages/napalm_ansible/plugins/action\n```", "```\n$ cat hosts\n[pe]\n mxpe01 ansible_host=172.20.1.3\n mxpe02 ansible_host=172.20.1.4\n xrpe03 ansible_host=172.20.1.5\n\n[p]\n mxp01 ansible_host=172.20.1.2\n mxp02 ansible_host=172.20.1.6\n\n[junos]\n mxpe01\n mxpe02\n mxp01\n mxp02\n\n[iosxr]\n xrpe03\n [sp_core:children]\n pe\n p\n```", "```\nsystem {\n login {\n user ansible {\n class super-user;\n authentication {\n encrypted-password \"$1$mR940Z9C$ipX9sLKTRDeljQXvWFfJm1\"; ## ansible123\n }\n }\n }\n}\n```", "```\n!\n username ansible\n group root-system\n password 7 14161C180506262E757A60 # ansible123\n!\n```", "```\nsystem {\n services {\n netconf {\n ssh {\n port 830;\n }\n }\n }\n}\n```", "```\n!\nxml agent tty\niteration off\n!\nxml agent\n!\nssh server v2\nssh server vrf default\n```", "```\n$ cat group_vars/iosxr.yml\n---\n ansible_network_os: junos\n ansible_connection: netconf\n\n $ cat group_vars/junos.yml\n---\n ansible_network_os: iosxr\n ansible_connection: network_cli\n```", "```\n$ cat group_vars/all.yml\nansible_user: ansible\n ansible_ssh_pass: ansible123\n```", "```\n$ ansible all -m ping\nmxpe01 | SUCCESS => {\n  \"changed\": false,\n  \"ping\": \"pong\"\n}\nmxpe02 | SUCCESS => {\n  \"changed\": false,\n  \"ping\": \"pong\"\n}\nmxp02 | SUCCESS => {\n  \"changed\": false,\n  \"ping\": \"pong\"\n}\nmxp01 | SUCCESS => {\n  \"changed\": false,\n  \"ping\": \"pong\"\n}\nxrpe03 | SUCCESS => {\n  \"changed\": false,\n  \"ping\": \"pong\"\n}\u2003\n```", "```\n$ mkdir roles && mkdir roles/build_router_config\n```", "```\n$ tree roles/build_router_config/\n\nroles/build_router_config/\n \u251c\u2500\u2500 tasks\n \u2502 \u251c\u2500\u2500 build_config_dir.yml\n \u2502 \u251c\u2500\u2500 build_device_config.yml\n \u2502 \u2514\u2500\u2500 main.yml\n \u2514\u2500\u2500 templates\n \u2514\u2500\u2500 junos\n \u251c\u2500\u2500 bgp.j2\n \u251c\u2500\u2500 intf.j2\n \u251c\u2500\u2500 mgmt.j2\n \u251c\u2500\u2500 mpls.j2\n \u2514\u2500\u2500 ospf.j2\n```", "```\n$ tree roles/build_router_config/templates/iosxr/\n roles/build_router_config/templates/iosxr/\n \u251c\u2500\u2500 bgp.j2\n \u251c\u2500\u2500 intf.j2\n \u251c\u2500\u2500 mgmt.j2\n \u251c\u2500\u2500 mpls.j2\n \u2514\u2500\u2500 ospf.j2\n```", "```\n$ cat group_vars/all.yml\ntmp_dir: ./tmp\nconfig_dir: ./configs\np2p_ip:\n< -- Output Omitted for brevity -->\n  xrpe03:\n    - {port: GigabitEthernet0/0/0/0, ip: 10.1.1.7 , peer: mxp01, pport: ge-0/0/2, peer_ip: 10.1.1.6}\n    - {port: GigabitEthernet0/0/0/1, ip: 10.1.1.13 , peer: mxp02, pport: ge-0/0/2, peer_ip: 10.1.1.12}\n\nlo_ip:\n  mxp01: 10.100.1.254/32\n  mxp02: 10.100.1.253/32\n  mxpe01: 10.100.1.1/32\n  mxpe02: 10.100.1.2/32\n  xrpe03: 10.100.1.3/32\n```", "```\n$ cat host_vars/xrpe03/bgp.yml\nbgp_asn: 65400\nbgp_peers:\n  - local_as: 65400\n    peer: 10.100.1.254\n    remote_as: 65400\n```", "```\n$ cat pb_napalm_net_build.yml\n---\n- name: \" Generate and Deploy Configuration on All Devices\"\n hosts: sp_core\n tasks:\n - name: Build Device Configuration\n import_role:\n name: build_router_config\n delegate_to: localhost\n tags: build\n```", "```\ntemplates/\n \u251c\u2500\u2500 iosxr\n \u2502 \u251c\u2500\u2500 bgp.j2\n \u2502 \u251c\u2500\u2500 intf.j2\n \u2502 \u251c\u2500\u2500 mgmt.j2\n \u2502 \u251c\u2500\u2500 mpls.j2\n \u2502 \u2514\u2500\u2500 ospf.j2\n \u2514\u2500\u2500 junos\n \u251c\u2500\u2500 bgp.j2\n \u251c\u2500\u2500 intf.j2\n \u251c\u2500\u2500 ospf.j2\n \u251c\u2500\u2500 mgmt.j2\n \u2514\u2500\u2500 mpls.j2\n```", "```\n$ tree configs/\nconfigs/\n \u251c\u2500\u2500 mxp01.cfg\n \u251c\u2500\u2500 mxp02.cfg\n \u251c\u2500\u2500 mxpe01.cfg\n \u251c\u2500\u2500 mxpe02.cfg\n \u2514\u2500\u2500 xrpe03.cfg\u2003\n```", "```\n$ cat pb_napalm_net_build.yml\n\n---\n- name: \" Play 1: Deploy Config on All JunOS Devices\"\n  hosts: sp_core\n  tasks:\n\n< -- Output Omitted for brevity -->\n\n    - name: \"P1T5: Deploy Configuration\"\n      napalm_install_config:\n        hostname: \"{{ ansible_host }}\"\n        username: \"{{ ansible_user }}\"\n        password: \"{{ ansible_ssh_pass }}\"\n        dev_os: \"{{ ansible_network_os }}\"\n        config_file: \"{{config_dir}}/{{ inventory_hostname }}.cfg\"\n        commit_changes: \"{{commit | default('no')}}\"\n        replace_config: yes\n      tags: deploy, never\n```", "```\n$ ansible-playbook pb_napalm_net_build.yml --tags deploy --e commit=yes\n```", "```\n$ cat group_vars/all.yml\n\n< -- Output Omitted for brevity -->\nconfig_diff_dir: ./config_diff\n\n$ cat tasks/build_config_dir.yml\n\n- name: \"Create Config Diff Directory\"\n file: path={{config_diff_dir}} state=directory\n run_once: yes\n```", "```\n$ cat pb_napalm_net_build.yml\n\n---\n- name: \"Generate and Deploy Configuration on All Devices\"\n hosts: sp_core\n tasks:\n\n< -- Output Omitted for brevity -->\n\n - name: \"Deploy Configuration\"\n napalm_install_config:\n hostname: \"{{ ansible_host }}\"\n username: \"{{ ansible_user }}\"\n password: \"{{ ansible_ssh_pass }}\"\n dev_os: \"{{ ansible_network_os }}\"\n config_file: \"{{config_dir}}/{{ inventory_hostname }}.cfg\"\n diff_file: \"{{ config_diff_dir}}/{{ inventory_hostname }}_diff.txt\"\n commit_changes: \"{{commit | default('no')}}\"\n replace_config: yes\n tags: deploy, never\n```", "```\n$ tree config_diff/\nconfig_diff/\n \u251c\u2500\u2500 mxp01_diff.txt\n \u251c\u2500\u2500 mxpe01_diff.txt\n \u251c\u2500\u2500 mxpe02_diff.txt\n \u2514\u2500\u2500 xrpe03_diff.txt\n```", "```\n$ cat cat pb_napalm_get_facts.yml\n\n---\n- name: \" Collect Network Facts using NAPALM\"\n hosts: sp_core\n tasks:\n - name: \"P1T1: Collect NAPALM Facts\"\n napalm_get_facts:\n hostname: \"{{ ansible_host }}\"\n username: \"{{ ansible_user }}\"\n password: \"{{ ansible_ssh_pass }}\"\n dev_os: \"{{ ansible_network_os }}\"\n filter:\n - bgp_neighbors\n```", "```\n$ cat pb_napalm_get_facts.yml\n\n< -- Output Omitted for brevity -->\n\n- name: Validate All BGP Routers ID is correct\n assert:\n that: napalm_bgp_neighbors.global.router_id == lo_ip[inventory_hostname].split('/')[0]\n when: napalm_bgp_neighbors\n\n- name: Validate Correct Number of BGP Peers\n assert:\n that: bgp_peers | length == napalm_bgp_neighbors.global.peers.keys() | length\n when: bgp_peers is defined\n\n- name: Validate All BGP Sessions Are UP\n assert:\n that: napalm_bgp_neighbors.global.peers[item.peer].is_up == true\n loop: \"{{ bgp_peers }}\"\n when: bgp_peers is defined\n```", "```\nok: [mxpe02] => {\n  \"napalm_bgp_neighbors\": {\n    \"global\": {\n      \"peers\": {\n        \"10.100.1.254\": {\n          \"address_family\": {\n            \"ipv4\": {\n              \"accepted_prefixes\": 0,\n              \"received_prefixes\": 0,\n              \"sent_prefixes\": 0\n            },\n < -- Output Omitted for brevity -->\n          },\n          \"description\": \"\",\n          \"is_enabled\": true,\n          \"is_up\": true,\n          \"local_as\": 65400,\n          \"remote_as\": 65400,\n          \"remote_id\": \"10.100.1.254\",\n          \"uptime\": 247307\n        }\n      },\n      \"router_id\": \"10.100.1.2\"\n    }\n  }\n}\n```", "```\nok: [xrpe03] => {\n  \"napalm_bgp_neighbors\": {\n    \"global\": {\n      \"peers\": {\n        \"10.100.1.254\": {\n          \"address_family\": {\n\n< -- Output Omitted for brevity -->\n          },\n          \"description\": \"\",\n          \"is_enabled\": false,\n          \"is_up\": true,\n          \"local_as\": 65400,\n          \"remote_as\": 65400,\n          \"remote_id\": \"10.100.1.254\",\n          \"uptime\": 247330\n        }\n      },\n      \"router_id\": \"10.100.1.3\"\n    }\n  }\n}\n```", "```\n$ cat pb_napalm_ping.yml\n\n---\n- name: \" Validation Traffic Forwarding with NAPALM\"\n hosts: junos:&pe\n vars:\n rr: 10.100.1.254\n max_delay: 5 # This is 5 msec\n tasks:\n - name: \"P1T1: Ping Remote Destination using NAPALM\"\n napalm_ping:\n hostname: \"{{ ansible_host }}\"\n username: \"{{ ansible_user }}\"\n password: \"{{ ansible_ssh_pass }}\"\n dev_os: \"{{ ansible_network_os }}\"\n destination: \"{{ rr }}\"\n count: 2\n register: rr_ping\n```", "```\n$ cat pb_napalm_ping.yml\n\n< -- Output Omitted for brevity -->\n- name: Validate Packet Loss is Zero and No Delay\n assert:\n that:\n - rr_ping.ping_results.keys() | list | first == 'success'\n - rr_ping.ping_results['success'].packet_loss == 0\n - rr_ping.ping_results['success'].rtt_avg < max_delay\n```", "```\n\"ping_results\": {\n \"success\": {\n \"packet_loss\": 0,\n \"probes_sent\": 2,\n \"results\": [\n {\n \"ip_address\": \"10.100.1.254\",\n \"rtt\": 2.808\n },\n {\n \"ip_address\": \"10.100.1.254\",\n \"rtt\": 1.91\n }\n ],\n \"rtt_avg\": 2.359,\n \"rtt_max\": 2.808,\n \"rtt_min\": 1.91,\n \"rtt_stddev\": 0.449\n }\n}\n```", "```\n$ cat napalm_validate/mxpe01.yml\n\n---\n- get_interfaces_ip:\n ge-0/0/0.0:\n ipv4:\n 10.1.1.3:\n prefix_length: 31\n- get_bgp_neighbors:\n global:\n router_id: 10.100.1.1\n```", "```\n$ cat pb_napalm_validation.yml\n\n---\n- name: \" Validating Network State via NAPALM\"\n hosts: pe\n tasks:\n - name: \"P1T1: Validation with NAPALM\"\n napalm_validate:\n hostname: \"{{ ansible_host }}\"\n username: \"{{ ansible_user }}\"\n password: \"{{ ansible_ssh_pass }}\"\n dev_os: \"{{ ansible_network_os }}\"\n validation_file: \"napalm_validate/{{ inventory_hostname}}.yml\"\n ignore_errors: true\n register: net_validate\n```", "```\n$ cat pb_napalm_validation.yml\n\n< -- Output Omitted for brevity -->\n\n- name: Create Compliance Report Folder\n  file: path=compliance_folder state=directory\n\n- name: Clean Last Compliance Report\n  file: path=compliance_folder/{{inventory_hostname}}.txt state=absent\n\n- name: Create Compliance Report\n  copy:\n    content: \"{{ net_validate.compliance_report | to_nice_yaml }}\"\n    dest: \"compliance_folder/{{ inventory_hostname }}.txt\"\n```", "```\ncomplies: true\nget_bgp_neighbors:\n complies: true\n extra: []\n missing: []\n present:\n global:\n complies: true\n nested: true\nget_interfaces_ip:\n complies: true\n extra: []\n missing: []\n present:\n ge-0/0/0.0:\n complies: true\n nested: true\nskipped: []\n```"]