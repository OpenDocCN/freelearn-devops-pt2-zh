["```\nsudo snap install microk8s --classic\n```", "```\nsudo gpasswd -a $USER microk8s\n```", "```\nfor i in storage dns ingress; do microk8s enable $i; done\n```", "```\nmicrok8s kubectl apply -f https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml\n```", "```\nmicrok8s kubectl get pods\n```", "```\nopenssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout awx.key -out awx.crt -subj \"/CN=awx.example.org/O=mastery\" -addext \"subjectAltName = DNS:awx.example.org\"\n```", "```\nmicrok8s kubectl create secret tls awx-secret-ssl --namespace default --key awx.key --cert awx.crt\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n\u00a0 name: awx-pvc\nspec:\n\u00a0 accessModes:\n\u00a0 \u00a0 - ReadWriteMany\n\u00a0 storageClassName: microk8s-hostpath\n\u00a0 resources:\n\u00a0 \u00a0 requests:\n\u00a0 \u00a0 \u00a0 storage: 1Gi\n```", "```\nmicrok8s kubectl create -f my-awx-storage.yml\n```", "```\napiVersion: awx.ansible.com/v1beta1\nkind: AWX\nmetadata:\n\u00a0 name: awx\nspec:\n\u00a0 tower_ingress_type: Ingress\n\u00a0 tower_ingress_tls_secret: awx-secret-ssl\n\u00a0 tower_hostname: awx.example.org\n\u00a0 tower_projects_existing_claim: awx-pvc\n\u00a0\u00a0tower_projects_persistence: true\n```", "```\nmicrok8s kubectl apply -f my-awx.yml\n```", "```\nmicrok8s kubectl get pods\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n\u00a0 name: awx-ingress\n\u00a0 annotations:\n\u00a0 \u00a0 nginx.ingress.kubernetes.io/rewrite-target: /$1\nspec:\n\u00a0 tls:\n\u00a0 - hosts:\n\u00a0 \u00a0 - awx.example.org\n\u00a0 \u00a0 secretName: awx-secret-ssl\n\u00a0 rules:\n\u00a0 \u00a0 - host: awx.example.org\n\u00a0 \u00a0 \u00a0 http:\n\u00a0 \u00a0 \u00a0 \u00a0 paths:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - backend:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 service:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: awx-service\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 number: 80\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pathType: Prefix\n```", "```\nmicrok8s kubectl apply -f my-awx-ingress.yml\nmicrok8s kubectl describe ingress\n```", "```\nmicrok8s kubectl delete -f my-awx-ingress.yml\nmicrok8s kubectl apply -f my-awx-ingress.yml\n```", "```\nmicrok8s kubectl get secret awx-admin-password -o jsonpath='{.data.password}' | base64 --decode\n```", "```\nmicrok8s kubectl get pods -A | awk '/hostpath/ {print $2}'\n```", "```\nmicrok8s kubectl describe -n kube-system pod/hostpath-provisioner-5c65fbdb4f-jcq8b | awk '/PV_DIR/ {print $2}'\n```", "```\nmicrok8s kubectl describe pvc/awx-pvc | awk '/Volume:/ {print $2}'\n```", "```\n/var/snap/microk8s/common/default-storage/default-awx-pvc-pvc-52ea2e69-f3c7-4dd0-abcb-2a1370ca3ac6/\n```", "```\ncd /var/snap/microk8s/common/default-storage/default-awx-pvc-pvc-64aee7f5-a65d-493d-bdc1-2c33f7da8a4e\nmkdir /var/lib/awx/projects/mastery\n```", "```\n---\n- name: AWX example playbook\n\u00a0\u00a0hosts: all\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0tasks:\n\u00a0\u00a0\u00a0\u00a0- name: Create temporary directory\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.file:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: /tmp/mastery\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: directory\n\u00a0\u00a0\u00a0\u00a0- name: Create a file with example text\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.lineinfile:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: /tmp/mastery/mastery.txt\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0line: 'Created with Ansible Mastery!'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0create: yes\n```", "```\n[MasteryGroup]\n10.0.50.25\n```", "```\ncurl -k -s --user admin:adminpassword -X GET https://awx.example.org/api/v2/inventories/ | python -m json.tool\n```", "```\ncurl -k -s --user admin:adminpassword -X GET https://awx.example.org/api/v2/job_templates/ | python -m json.tool\n```", "```\ncurl -k -s --user admin:adminpassword -X POST -H 'Content-Type:application/json' https://awx.example.org/api/v2/job_templates/12/launch/ --data '{\"extra_vars\": \"{\\\"http_port\\\": 80}\"}' | python -m json.tool\n```", "```\ncurl -k -s --user admin:adminpassword -X GET https://awx.example.org/api/v2/jobs/10/ | python -m json.tool\n```", "```\ncurl -k -s --user admin:adminpassword -X GET https://awx.example.org/api/v2/jobs/10/stdout/\n```"]