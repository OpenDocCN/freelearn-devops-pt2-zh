["```\n--- \n- name: Upgrade foo-app in place \n\u00a0\u00a0hosts: foo-app \n\u00a0\u00a0serial: 2 \n```", "```\n\u00a0\u00a0tasks: \n\u00a0\u00a0- name: disable member in balancer \n\u00a0\u00a0\u00a0\u00a0community.general.haproxy: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0backend: foo-app \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host: \"{{ inventory_hostname }}\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: disabled \n\u00a0\u00a0\u00a0\u00a0delegate_to: foo-lb \n```", "```\n\u00a0\u00a0- name: pull stable foo-app \n\u00a0\u00a0\u00a0\u00a0ansible.builtin.git: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0repo: \"{{ foo-app.repo }}\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dest: /srv/foo-app/ \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0version: \"{{ foo-version }}\" \n\u00a0\u00a0\u00a0\u00a0notify: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- reload nginx \n```", "```\n\u00a0\u00a0- meta: flush_handlers \n```", "```\n\u00a0\u00a0- name: ensure healthy service \n\u00a0\u00a0\u00a0\u00a0ansible.builtin.wait_for: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 80 \n```", "```\n\u00a0\u00a0- name: enable member in balancer \n\u00a0\u00a0\u00a0\u00a0community.general.haproxy: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0backend: foo-app \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0host: \"{{ inventory_hostname }}\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: enabled \n\u00a0\u00a0\u00a0\u00a0delegate_to: foo-lb \n```", "```\n\u00a0\u00a0handlers: \n\u00a0\u00a0- name: reload nginx \n\u00a0\u00a0\u00a0\u00a0ansible.builtin.service: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: nginx \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: restarted \n```", "```\n--- \n- name: Create new foo servers \n\u00a0\u00a0hosts: localhost \n\n\u00a0\u00a0tasks: \n\u00a0\u00a0- name: launch instances\n\u00a0\u00a0\u00a0\u00a0openstack.cloud.os_server:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: foo-appv{{ version }}-{{ item }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: foo-appv{{ version }}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0flavor: 4\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0key_name: ansible-prod\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0security_groups: foo-app\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auto_floating_ip: false\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: present\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auth:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auth_url: https://me.openstack.blueboxgrid.com:5001/v2.0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0username: jlk\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0password: FAKEPASSW0RD\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0project_name: mastery\n\u00a0\u00a0\u00a0\u00a0register: launch\n\u00a0\u00a0\u00a0\u00a0loop: \"{{ range(1, 8 + 1, 1)|list }}\"\n```", "```\n\u00a0\u00a0- name: add hosts \n\u00a0\u00a0\u00a0\u00a0ansible.builtin.add_host: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: \"{{ item.openstack.name }}\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible_ssh_host: \"{{ item.openstack.private_v4 }}\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0groups: new-foo-app \n\u00a0\u00a0\u00a0\u00a0loop: launch.results \n```", "```\n- name: Ensure new app \n\u00a0\u00a0hosts: new-foo-app \n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: ensure healthy service \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.wait_for: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 80 \n```", "```\n- name: Configure load balancer \n\u00a0\u00a0hosts: foo-lb \n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: haproxy config\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.template:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dest: /etc/haproxy/haproxy.cfg\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0src: templates/etc/haproxy/haproxy.cfg\n\u00a0\u00a0- name: reload haproxy\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.service:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: haproxy\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: reloaded\n```", "```\n[failtest] \nfailer[01:10] \n```", "```\n--- \n- name: any errors fatal \n\u00a0\u00a0hosts: failtest \n\u00a0\u00a0gather_facts: false \n\u00a0\u00a0any_errors_fatal: true \n```", "```\n\u00a0\u00a0tasks: \n\u00a0\u00a0- name: fail last host\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.fail:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am last\"\n\u00a0\u00a0\u00a0\u00a0when: inventory_hostname == play_hosts[-1]\n\u00a0\u00a0- name: never run\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I should never be run\"\n\u00a0\u00a0\u00a0\u00a0when: inventory_hostname == play_hosts[-1]\n```", "```\nansible-playbook -i mastery-hosts failtest.yaml\n```", "```\n--- \n- name: any errors fatal \n\u00a0\u00a0hosts: failtest \n\u00a0\u00a0gather_facts: false \n\u00a0\u00a0max_fail_percentage: 20 \n```", "```\n\u00a0\u00a0- name: fail last host\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.fail:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am last\"\n\u00a0\u00a0\u00a0\u00a0when: inventory_hostname in play_hosts[0:3]\n```", "```\n--- \n- name: any errors fatal \n\u00a0\u00a0hosts: failtest \n\u00a0\u00a0gather_facts: false \n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: run first\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am a change\"\n\u00a0\u00a0\u00a0\u00a0changed_when: true\n\u00a0\u00a0\u00a0\u00a0when: inventory_hostname == play_hosts[-1]\n\u00a0\u00a0\u00a0\u00a0notify: critical handler\n\u00a0\u00a0- name: change a host\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.fail:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am last\"\n\u00a0\u00a0\u00a0\u00a0when: inventory_hostname == play_hosts[-1] \n```", "```\n\u00a0\u00a0- name: never run\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I should never be run\"\n\u00a0\u00a0\u00a0\u00a0when: inventory_hostname == play_hosts[-1]\n\u00a0\u00a0handlers:\n\u00a0\u00a0\u00a0\u00a0- name: critical handler\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I really need to run\"\n```", "```\nansible-playbook -i mastery-hosts failtest.yaml --limit failer01:failer01\n```", "```\n---\n- name: any errors fatal\n\u00a0\u00a0hosts: failtest\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0force_handlers: true\n```", "```\nroles/microA \n\u251c\u2500\u2500 handlers \n\u2502\u00a0\u00a0\u00a0\u2514\u2500\u2500 main.yaml \n\u2514\u2500\u2500 tasks \n\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500 main.yaml \nroles/microB \n\u251c\u2500\u2500 handlers \n\u2502\u00a0\u00a0\u00a0\u2514\u2500\u2500 main.yaml \n\u2514\u2500\u2500 tasks \n\u00a0\u00a0\u00a0\u00a0\u2514\u2500\u2500 main.yaml \n```", "```\n--- \n- name: install microA package \n\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0msg: \"This is installing A\" \n\u00a0\u00a0changed_when: true \n\u00a0\u00a0notify: restart microA \n```", "```\n---\n- name: install microB package\n\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0msg: \"This is installing B\"\n\u00a0\u00a0changed_when: true\n\u00a0\u00a0notify: restart microB\n```", "```\n--- \n- name: restart microA \n\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0msg: \"microA is restarting\" \n\u00a0\u00a0when: not upgrade | default(false) | bool \n```", "```\n---\n- name: restart microB\n\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0msg: \"microB is restarting\"\n\u00a0\u00a0when: not upgrade | default(false) | bool\n```", "```\n---\n- name: apply microA\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0roles:\n\u00a0\u00a0- role: microA\n- name: apply microB\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0roles:\n\u00a0\u00a0- role: microB\n- name: restart microA\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: restart microA for upgrade\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"microA is restarting\"\n\u00a0\u00a0\u00a0\u00a0when: upgrade | default(false) | bool\n- name: restart microB\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0tasks:\n\u00a0\u00a0- name: restart microB for upgrade\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"microB is restarting\"\n\u00a0\u00a0\u00a0\u00a0when: upgrade | default(false) | bool\n```", "```\nansible-playbook -i mastery-hosts micro.yaml\n```", "```\nansible-playbook -i mastery-hosts micro.yaml -e upgrade=true\n```", "```\n--- \n- name: run once test \n\u00a0\u00a0hosts: failtest[0:1] \n\u00a0\u00a0gather_facts: false \n\n\u00a0\u00a0tasks: \n\u00a0\u00a0- name: do a thing\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am groot\"\n\u00a0\u00a0\u00a0\u00a0register: groot\n\u00a0\u00a0\u00a0\u00a0run_once: true\n\u00a0\u00a0- name: what is groot\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var: groot\n\u00a0\u00a0\u00a0\u00a0when: inventory_hostname == play_hosts[-1]\n```", "```\nansible-playbook -i mastery-hosts runonce.yaml\n```", "```\n--- \n- name: parallel and serial \n\u00a0\u00a0hosts: failtest[0:3] \n\u00a0\u00a0gather_facts: false \n\n\u00a0\u00a0tasks: \n\u00a0\u00a0- name: do a thing\n\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am groot\"\n\u00a0\u00a0\u00a0\u00a0changed_when: inventory_hostname in play_hosts[0:2]\n\u00a0\u00a0\u00a0\u00a0register: groot\n\u00a0\u00a0\u00a0\u00a0notify: restart groot\n\u00a0\u00a0handlers:\n\u00a0\u00a0- name: restart groot\n\u00a0\u00a0\u00a0\u00a0debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am groot?\"\n\u00a0\u00a0\u00a0\u00a0loop: \"{{ play_hosts }}\"\n\u00a0\u00a0\u00a0\u00a0delegate_to: \"{{ item }}\"\n\u00a0\u00a0\u00a0\u00a0run_once: true\n\u00a0\u00a0\u00a0\u00a0when: hostvars[item]['groot']['changed'] | bool\n\u00a0\u00a0\u00a0\u00a0loop_control:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pause: 2\n```", "```\nansible-playbook -i mastery-hosts forserial.yaml -vv\n```"]