["```\nsetting = {{ setting }} \n{% if feature.enabled %} \nfeature = True \n{% else %} \nfeature = False \n{% endif %} \nanother_setting = {{ another_setting }} \n```", "```\n--- \n- name: demo the template \n\u00a0\u00a0hosts: localhost \n\u00a0\u00a0gather_facts: false\u00a0\u00a0\n\u00a0\u00a0vars: \n\u00a0\u00a0\u00a0\u00a0setting: a_val \n\u00a0\u00a0\u00a0\u00a0feature: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enabled: true \n\u00a0\u00a0\u00a0\u00a0another_setting: b_val\u00a0\u00a0\n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: pause with render \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.pause: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prompt: \"{{ lookup('template', 'demo.j2') }}\" \n```", "```\nansible-playbook -i mastery-hosts template-demo.yaml\n```", "```\nansible-playbook -i mastery-hosts template-demo.yaml -e '{feature: {\"enabled\": false}}'\n```", "```\nAPI = cinder{{ 'v2' if api.v2 else '' }} \n```", "```\n--- \n- name: demo the template \n\u00a0\u00a0hosts: localhost \n\u00a0\u00a0gather_facts: false \n\u00a0\u00a0vars: \n\u00a0\u00a0\u00a0\u00a0api: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0v2: true\u00a0\u00a0\n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: pause with render \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"API = cinder{{ 'v2' if api.v2 else '' }}\" \n```", "```\nansible-playbook -i mastery-hosts template-demo-v2.yaml\n```", "```\nansible-playbook -i mastery-hosts template-demo-v2.yaml -e '{api: {\"v2\": false}}'\n```", "```\n# data dirs \n{% for dir in data_dirs -%} \ndata_dir = {{ dir }} \n{% endfor -%} \n```", "```\n# data dirs \n{% for dir in data_dirs -%} \ndata_dir = {{ dir }} \n{% else -%} \n# no data dirs found \n{% endfor -%} \n```", "```\n- name: demo the template\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0vars:\n\u00a0\u00a0\u00a0\u00a0data_dirs: []\n\u00a0\u00a0tasks:\n\u00a0\u00a0\u00a0\u00a0- name: pause with render\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.pause:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prompt: \"{{ lookup('template', 'demo-for.j2') }}\"\n```", "```\nansible-playbook -i mastery-hosts template-demo-for.yaml\n```", "```\n# data dirs \n{% for dir in data_dirs -%} \n{% if dir != \"/\" -%} \ndata_dir = {{ dir }} \n{% endif -%} \n{% else -%} \n# no data dirs found \n{% endfor -%}\n```", "```\n# data dirs \n{% for dir in data_dirs if dir != \"/\" -%} \ndata_dir = {{ dir }} \n{% else -%} \n# no data dirs found \n{% endfor -%} \n```", "```\n# data dirs\n{% for dir in data_dirs if dir != \"/\" -%}\n{% if loop.first -%}\ndata_dir = {{ dir }},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{% else -%}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ dir }},\n{% endif -%}\n{% else -%}\n# no data dirs found\n{% endfor -%} \n```", "```\n--- \n- name: demo the template \n\u00a0\u00a0hosts: localhost \n\u00a0\u00a0gather_facts: false\u00a0\u00a0\n\u00a0\u00a0vars: \n\u00a0\u00a0\u00a0\u00a0data_dirs: ['/', '/foo', '/bar']\u00a0\u00a0\n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: pause with render \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.pause: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prompt: \"{{ lookup('template', 'demo-for.j2') }}\"\n```", "```\nansible-playbook -i mastery-hosts template-demo-for.yaml\n```", "```\n# data dirs. \n{% for dir in data_dirs if dir != \"/\" -%} \n{% if loop.first -%} \ndata_dir = {{ dir }}{{ ',' if not loop.last else '' }} \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{% else -%} \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ dir }}{{ ',' if not loop.last else '' }} \n{% endif -%} \n{% else -%} \n# no data dirs found \n{% endfor -%}\n```", "```\nansible-playbook -i mastery-hosts template-demo-for.yaml\n```", "```\n{% macro comma(loop) -%} \n{{ ',' if not loop.last else '' }} \n{%- endmacro -%} \n# data dirs. \n{% for dir in data_dirs if dir != \"/\" -%} \n{% if loop.first -%} \ndata_dir = {{ dir }}{{ comma(loop) }} \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{% else -%} \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{{ dir }}{{ comma(loop) }} \n{% endif -%} \n{% else -%} \n# no data dirs found \n{% endfor -%} \n```", "```\n{% macro test() -%} \n{{ test.name }} \n{%- endmacro -%} \n{{ test() }} \n```", "```\n---\n- name: demo the template\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0vars:\n\u00a0\u00a0\u00a0\u00a0data_dirs: ['/', '/foo', '/bar']\n\u00a0\u00a0tasks:\n\u00a0\u00a0\u00a0\u00a0- name: pause with render\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.pause:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0prompt: \"{{ lookup('template', 'demo-macro.j2') }}\"\n```", "```\nansible-playbook -i mastery-hosts template-demo-macro.yaml\n```", "```\n{% macro test(var_a='a string') -%} \n{{ test.arguments }} \n{%- endmacro -%} \n{{ test() }} \n```", "```\n{% macro test(var_a='a string') -%} \n{{ test.arguments }} \n{{ test.defaults }} \n{%- endmacro -%} \n{{ test() }}\n```", "```\n{% macro test() -%} \n{{ kwargs }} \n{{ test.catch_kwargs }} \n{%- endmacro -%} \n{{ test(unexpected='surprise') }}\n```", "```\n{% macro test() -%} \n{{ varargs }} \n{{ test.catch_varargs }} \n{%- endmacro -%} \n{{ test('surprise') }}\n```", "```\n{% macro test() -%}\nThe text from the caller follows: {{ caller() }}\n{%- endmacro -%}\n{% call test() -%}\nThis is text inside the call \n{% endcall -%} \n```", "```\n{% macro test(group, hosts) -%} \n[{{ group }}] \n{% for host in hosts -%} \n{{ host }} {{ caller(host) }} \n{%- endfor -%} \n{%- endmacro -%}\u00a0\u00a0\n{% call(host) test('web', ['host1', 'host2', 'host3']) -%} \nssh_host_name={{ host }}.example.name ansible_sudo=true \n{% endcall -%}\u00a0\u00a0\n{% call(host) test('db', ['db1', 'db2']) -%} \nssh_host_name={{ host }}.example.name \n{% endcall -%}\n```", "```\n{{ my_word | lower }} \n```", "```\n{{ answers | replace('no', 'yes') }} \n```", "```\n{{ answers | replace('no', 'yes') | lower }} \n```", "```\n {{ answers | lower | replace('no', 'yes') }} \n```", "```\n- name: demo the template\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0vars:\n\u00a0\u00a0\u00a0\u00a0answers: \"no so YES no\"\n\u00a0\u00a0tasks:\n\u00a0\u00a0\u00a0\u00a0- name: debug the template\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"{{ answers | replace('no', 'yes') | lower }}\" \n```", "```\nansible-playbook -i mastery-hosts template-demo-filters.yaml\n```", "```\n{% if some_variable is defined -%} \n{{ some_variable }} \n{% else -%} \ndefault_value \n{% endif -%}\n{{ some_variable | default('default_value') }} \n```", "```\nmax_threads: {{ play_hosts | count }} \n```", "```\nname: backup the database \n\u00a0\u00a0shell: mysqldump -u root nova > /data/nova.backup.sql \n\u00a0\u00a0delegate_to: \"{{ groups['db_servers'] | random }}\" \n\u00a0\u00a0run_once: true \n```", "```\n{{ math_result | round | int }} \n```", "```\nwhen: derp | success\n```", "```\nwhen: derp is success\n```", "```\n--- \n- name: demo the filters \n\u00a0\u00a0hosts: localhost \n\u00a0\u00a0gather_facts: false\u00a0\u00a0\n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: fail a task \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"I am not a change\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0register: derp\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0- name: only do this on change \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"You had a change\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when: derp is changed\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0- name: only do this on success \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"You had a success\" \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when: derp is success\n```", "```\nansible-playbook -i mastery-hosts template-demo-filters.yaml\n```", "```\n--- \n- name: demo the filters \n\u00a0\u00a0hosts: localhost \n\u00a0\u00a0gather_facts: false\u00a0\u00a0\n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: shuffle the cards \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"{{ ['Ace', 'Queen', 'King', 'Deuce'] | shuffle }}\" \n```", "```\nansible-playbook -i mastery-hosts template-demo-filters.yaml\n```", "```\n---\n- name: demo the filters\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0tasks:\n\u00a0\u00a0\u00a0\u00a0- name: demo basename\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"{{ '/var/log/nova/nova-api.log' | basename }}\"\n```", "```\nansible-playbook -i mastery-hosts template-demo-filters.yaml\n```", "```\n---\n- name: demo the filters\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0tasks:\n\u00a0\u00a0\u00a0\u00a0- name: demo filter\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"{{ '~/.stackrc' | expanduser }}\"\n```", "```\n--- \n- name: demo the filters \n\u00a0\u00a0hosts: localhost \n\u00a0\u00a0gather_facts: false\u00a0\u00a0\n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: create a test file\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.lineinfile:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path: /tmp/derp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0line: \"Ansible is great!\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0state: present\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0create: yes\n\u00a0\u00a0\u00a0\u00a0- name: read file \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.slurp: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0src: /tmp/derp \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0register: derp\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0- name: display file content (undecoded) \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var: derp.content\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0- name: display file content (decoded) \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var: derp.content | b64decode\n```", "```\nansible-playbook -i mastery-hosts template-demo-filters.yaml\n```", "```\n- name: check database version \n\u00a0\u00a0ansible.builtin.shell: neutron-manage current | grep juno \n\u00a0\u00a0register: neutron_db_ver \n\u00a0\u00a0failed_when: false\u00a0\u00a0\n- name: upgrade db \n\u00a0\u00a0ansible.builtin.command: neutron-manage db_sync \n\u00a0\u00a0when: neutron_db_ver is failed \n```", "```\n- name: check database version \n\u00a0\u00a0ansible.builtin.command: neutron-manage current \n\u00a0\u00a0register: neutron_db_ver\u00a0\u00a0\n- name: upgrade db \n\u00a0\u00a0ansible.builtin.command: neutron-manage db_sync \n\u00a0\u00a0when: not neutron_db_ver.stdout is search('juno') \n```", "```\n- name: install pips with versions \n\u00a0\u00a0ansible.builtin.pip: \"name={{ item.name }} version={{ item.ver }}\"\n\u00a0\u00a0loop: \"{{ pips }}\"\n\u00a0\u00a0when: item.ver is defined\u00a0\u00a0\n- name: install pips without versions \n\u00a0\u00a0ansible.builtin.pip: \"name={{ item.name }}\" \n\u00a0\u00a0loop: \"{{ pips }}\"\n\u00a0\u00a0when: item.ver is undefined \n```", "```\n- name: install pips \n\u00a0\u00a0ansible.builtin.pip: \"name={{ item.name }} version={{ item.ver | default(omit) }}\" \n\u00a0\u00a0loop: \"{{ pips }}\" \n```", "```\n--- \n- name: demo the filters \n\u00a0\u00a0hosts: localhost \n\u00a0\u00a0gather_facts: false \n\n\u00a0\u00a0tasks: \n\u00a0\u00a0\u00a0\u00a0- name: string methods \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug: \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"{{ 'foo bar baz'.upper().split() }}\" \n```", "```\nansible-playbook -i mastery-hosts template-demo-objects.yaml\n```", "```\n---\n- name: demo the logic\n\u00a0\u00a0hosts: localhost\n\u00a0\u00a0gather_facts: false\n\u00a0\u00a0vars:\n\u00a0\u00a0\u00a0\u00a0num1: 10\n\u00a0\u00a0\u00a0\u00a0num3: 10\n\u00a0\u00a0tasks:\n\u00a0\u00a0\u00a0\u00a0- name: logic and comparison\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ansible.builtin.debug:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg: \"Can you read me?\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when: num1 >= num3 and num1 is even and num2 is not defined\n```", "```\nansible-playbook -i mastery-hosts template-demo-comparisons.yaml\n```"]