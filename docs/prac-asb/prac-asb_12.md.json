["```\n$ ansible --version\n```", "```\n$ ansible all -i n1.example.com, -c network_cli -u my_user -k -m ios_facts -e ansible_network_os=ios all\n```", "```\n$ ansible -i vx01.example.com, -u cumulus -m setup -a 'filter=ansible_swp*' all --ask-pass\n```", "```\nvx01.example.com | SUCCESS => {\n \"ansible_facts\": {\n \"ansible_swp1\": {\n \"active\": false,\n \"device\": \"swp1\",\n \"features\": {\n \"esp_hw_offload\": \"off [fixed]\",\n \"esp_tx_csum_hw_offload\": \"off [fixed]\",\n \"fcoe_mtu\": \"off [fixed]\",\n \"generic_receive_offload\": \"on\",\n \"generic_segmentation_offload\": \"on\",\n \"highdma\": \"off [fixed]\",\n...\n```", "```\n[routers]\nn1.example.com\nn2.example.com\n\n[cumulusvx]\nvx01.example.com\n```", "```\n---\nansible_connection: network_cli\nansible_network_os: ios\nansible_become: True\nansible_become_method: enable\n```", "```\n---\n- name: Play to return facts from a Cisco IOS device\n  hosts: routers\n  gather_facts: False\n  tasks:\n    - name: Gather IOS facts\n      ios_facts:\n        gather_subset: all\n```", "```\n$ ansible-playbook -i hosts ios_facts.yml --ask-pass\n```", "```\n---\nansible_user: cumulus\nbecome: false\n```", "```\n---\n- name: Simply play to gather Cumulus VX switch facts\n  hosts: cumulusvx\n  gather_facts: no\n\n  tasks:\n    - name: Gather facts\n      setup:\n        gather_subset: all\n```", "```\n$ ansible-playbook -i hosts cumulusvx_facts.yml --ask-pass\n```", "```\nSSH password:\n\nPLAY [Simply play to gather Cumulus VX switch facts] ************************************************************************************************\n\nTASK [Gather facts] ************************************************************************************************\nok: [vx01.example.com]\n\nPLAY RECAP ************************************************************************************************\nvx01.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n[bastion_routers]\nn1.example.com\nn2.example.com\n\n[bastion_cumulusvx]\nvx01.example.com\n```", "```\n---\nansible_connection: network_cli\nansible_network_os: ios\nansible_become: True\nansible_become_method: enable\nansible_ssh_common_args: '-o ProxyCommand=\"ssh -W %h:%p -q bastion.example.com\"'\nproxy_env:\n    http_proxy: http://proxy.example.com:8080\n```", "```\n---\nansible_user: cumulus\nansible_become: false\nansible_ssh_common_args: '-o ProxyCommand=\"ssh -W %h:%p -q bastion.example.com\"'\nproxy_env:\n    http_proxy: http://proxy.example.com:8080\n```", "```\n$ ansible -i hosts -m ping -u cumulus --ask-pass bastion_cumulusvx\nSSH password:\n\nvx01.example.com | SUCCESS => {\n \"ansible_facts\": {\n \"discovered_interpreter_python\": \"/usr/bin/python\"\n },\n \"changed\": false,\n \"ping\": \"pong\"\n}\n```", "```\n- name: Wait for interface to be enabled\n  eos_command:\n      commands:\n          - show interface Ethernet4 | json\n      wait_for:\n          - \"result[0].interfaces.Ethernet4.interfaceStatus  eq  connected\"\n```", "```\n---\n- name: Simple play to demonstrate conditional on Cumulus Linux\n  hosts: cumulusvx\n\n  tasks:\n    - name: Enable swp2 if it is disabled\n      nclu:\n        commands:\n          - add int swp2\n        commit: yes\n      when: ansible_swp2.active == false\n```", "```\nPLAY [Simple play to demonstrate conditional on Cumulus Linux] ***************************************************************\n\nTASK [Gathering Facts] \n***************************************************************\nok: [vx01.example.com]\n\nTASK [Enable swp2 if it is disabled] ***************************************************************\nchanged: [vx01.example.com]\n\nPLAY RECAP \n***************************************************************\nvx01.example.com : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\nPLAY [Simple play to demonstrate conditional on Cumulus Linux] ***************************************************************\n\nTASK [Gathering Facts] \n***************************************************************\nok: [vx01.example.com]\n\nTASK [Enable swp2 if it is disabled] ***************************************************************\nskipping: [vx01.example.com]\n\nPLAY RECAP\n***************************************************************\nvx01.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0\n```"]