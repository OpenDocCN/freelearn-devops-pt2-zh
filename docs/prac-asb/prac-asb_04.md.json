["```\n$ ansible -i /home/cloud-user/inventory all -m ping\n```", "```\ntarget1.example.com ansible_host=192.168.81.142 ansible_port=3333  target2.example.com ansible_port=3333 ansible_user=danieloh  target3.example.com ansible_host=192.168.81.143 ansible_port=5555\n```", "```\n---\nungrouped:\n  hosts:\n    target1.example.com:\n      ansible_host: 192.168.81.142\n      ansible_port: 3333\n    target2.example.com:\n      ansible_port: 3333\n      ansible_user: danieloh\n    target3.example.com:\n      ansible_host: 192.168.81.143\n      ansible_port: 5555\n```", "```\n$ ansible -i /etc/ansible/my_inventory.yaml all -m shell -a 'echo hello-yaml' -f 5\ntarget1.example.com | CHANGED | rc=0 >>\nhello-yaml\ntarget2.example.com | CHANGED | rc=0 >>\nhello-yaml\ntarget3.example.com | CHANGED | rc=0 >>\nhello-yaml\n```", "```\nloadbalancer.example.com\n\n[frontends]\nfrt01.example.com\nfrt02.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[databases]\ndbms01.example.com\ndbms02.example.com\n```", "```\nloadbalancer.example.com\n\n[frontends]\nfrt01.example.com\nfrt02.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[databases]\ndbms01.example.com\ndbms02.example.com\n\n[centos:children]\napps\ndatabases\n\n[ubuntu:children]\nfrontends\n```", "```\nall:\n  hosts:\n    loadbalancer.example.com:\n  children:\n    centos:\n      children:\n        apps:\n          hosts:\n            app01.example.com:\n            app02.example.com:\n        databases:\n          hosts:\n            dbms01.example.com:\n            dbms02.example.com:\n    ubuntu:\n      children:\n        frontends:\n          hosts:\n            frt01.example.com:\n            frt02.example.com:\n```", "```\n$ ansible -i /etc/ansible/my_inventory.yaml all -m shell -a 'echo hello-yaml' -f 5\n```", "```\n$ ansible -i hostgroups-yml centos -m shell -a 'echo hello-yaml' -f 5\napp01.example.com | CHANGED | rc=0 >>\nhello-yaml\napp02.example.com | CHANGED | rc=0 >>\nhello-yaml\ndbms01.example.com | CHANGED | rc=0 >>\nhello-yaml\ndbms02.example.com | CHANGED | rc=0 >>\nhello-yaml \n```", "```\n[apps]\napp01.example.com\napp02.example.com\n...\napp99.example.com\napp100.example.com\n```", "```\n[apps]\napp[01:100].prod.com\n```", "```\n[caches]\ncache-[a:e].prod.com  \n```", "```\n[caches]\ncache-a.prod.com cache-b.prod.com\ncache-c.prod.com\ncache-d.prod.com\ncache-e.prod.com \n```", "```\n[frontends]\nfrt01.example.com https_port=8443 lb_vip=lb.example.com\nfrt02.example.com https_port=8443 lb_vip=lb.example.com\n```", "```\n$ ansible -i hostvars1-hostgroups-ini frontends -m debug -a \"msg=\\\"Connecting to {{ lb_vip }}, listening on {{ https_port }}\\\"\"\nfrt01.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\nfrt02.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\n```", "```\n[frontends]\nfrt01.example.com\nfrt02.example.com\n\n[frontends:vars]\nhttps_port=8443\nlb_vip=lb.example.com\n```", "```\n$ ansible -i groupvars1-hostgroups-ini frontends -m debug -a \"msg=\\\"Connecting to {{ lb_vip }}, listening on {{ https_port }}\\\"\"\nfrt01.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\nfrt02.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\n```", "```\n[frontends]\nfrt01.example.com https_port=8444\nfrt02.example.com\n\n[frontends:vars]\nhttps_port=8443\nlb_vip=lb.example.com\n```", "```\n$ ansible -i hostvars2-hostgroups-ini frontends -m debug -a \"msg=\\\"Connecting to {{ lb_vip }}, listening on {{ https_port }}\\\"\"\nfrt01.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8444\"\n}\nfrt02.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\n```", "```\n        frontends:\n          hosts:\n            frt01.example.com:\n              https_port: 8444\n            frt02.example.com:\n          vars:\n            https_port: 8443\n            lb_vip: lb.example.com\n```", "```\n$ ansible -i hostvars2-hostgroups-yml frontends -m debug -a \"msg=\\\"Connecting to {{ lb_vip }}, listening on {{ https_port }}\\\"\"\nfrt01.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8444\"\n}\nfrt02.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\n```", "```\n$ mkdir vartree\n$ cd vartree\n```", "```\n$ mkdir host_vars group_vars\n```", "```\n---\nhttps_port: 8444\n```", "```\n---\nhttps_port: 8443\nlb_vip: lb.example.com\n```", "```\nloadbalancer.example.com\n\n[frontends]\nfrt01.example.com\nfrt02.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[databases]\ndbms01.example.com\ndbms02.example.com\n```", "```\n$  tree\n.\n\u251c\u2500\u2500 group_vars\n\u2502   \u2514\u2500\u2500 frontends.yml\n\u251c\u2500\u2500 host_vars\n\u2502   \u2514\u2500\u2500 frt01.example.com.yml\n\u2514\u2500\u2500 inventory\n\n2 directories, 3 files\n```", "```\n$ ansible -i inventory frontends -m debug -a \"msg=\\\"Connecting to {{ lb_vip }}, listening on {{ https_port }}\\\"\"\nfrt02.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\nfrt01.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8444\"\n}\n```", "```\n$ tree\n.\n\u251c\u2500\u2500 group_vars\n\u2502   \u2514\u2500\u2500 frontends\n\u2502       \u251c\u2500\u2500 https_port.yml\n\u2502       \u2514\u2500\u2500 lb_vip.yml\n\u251c\u2500\u2500 host_vars\n\u2502   \u2514\u2500\u2500 frt01.example.com\n\u2502       \u2514\u2500\u2500 main.yml\n\u2514\u2500\u2500 inventory\n```", "```\n$ cat host_vars/frt01.example.com/main.yml\n---\nhttps_port: 8444\n\n$ cat group_vars/frontends/https_port.yml\n---\nhttps_port: 8443\n\n$ cat group_vars/frontends/lb_vip.yml\n---\nlb_vip: lb.example.com\n```", "```\n$ ansible -i inventory frontends -m debug -a \"msg=\\\"Connecting to {{ lb_vip }}, listening on {{ https_port }}\\\"\"\nfrt01.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8444\"\n}\nfrt02.example.com | SUCCESS => {\n \"msg\": \"Connecting to lb.example.com, listening on 8443\"\n}\n```", "```\nloadbalancer.example.com\n\n[frontends]\nfrt01.example.com\nfrt02.example.com\n\n[frontends:vars]\ntestvar=childgroup\n\n[apps]\napp01.example.com\napp02.example.com\n\n[databases]\ndbms01.example.com\ndbms02.example.com\n\n[centos:children]\napps\ndatabases\n\n[ubuntu:children]\nfrontends\n\n[ubuntu:vars]\ntestvar=group\n```", "```\n$ ansible -i hostgroups-children-vars-ini ubuntu -m debug -a \"var=testvar\"\nfrt01.example.com | SUCCESS => {\n \"testvar\": \"childgroup\"\n}\nfrt02.example.com | SUCCESS => {\n \"testvar\": \"childgroup\"\n}\n```", "```\n$ yum install -y cobbler cobbler-web\n$ setenforce 0\n```", "```\n# default, localhost server: 127.0.0.1  \n```", "```\n$ systemctl start cobblerd.service\n$ systemctl enable cobblerd.service\n$ systemctl status cobblerd.service\n```", "```\n$ cobbler distro add --name=CentOS --kernel=/boot/vmlinuz-3.10.0-957.el7.x86_64 --initrd=/boot/initramfs-3.10.0-957.el7.x86_64.img\n\n$ cobbler profile add --name=webservers --distro=CentOS\n```", "```\n$ cobbler system add --name=frontend01 --profile=webservers --dns-name=frontend01.example.com --interface=eth0\n\n$ cobbler system add --name=frontend02 --profile=webservers --dns-name=frontend02.example.com --interface=eth0\n```", "```\n$ wget https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/cobbler.py\n$ wget https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/cobbler.ini\n$ chmod +x cobbler.py\n```", "```\n[cobbler]\n\n# Specify IP address or Hostname of the cobbler server. The default variable is here:\nhost = http://127.0.0.1/cobbler_api\n\n# (Optional) With caching, you will have responses of API call with the cobbler server quicker\ncache_path = /tmp\ncache_max_age = 900\n```", "```\n$  ansible -i cobbler.py webservers -m ping\nfrontend01.example.com | SUCCESS => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\nfrontend02.example.com | SUCCESS => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n} \n```", "```\n[webservers]\n\n[centos:children]\nwebservers\n```", "```\n$ ansible -i static-groups-mix-ini -i cobbler.py centos -m ping\nfrontend01.example.com | SUCCESS => {\n \"ansible_facts\": {\n \"discovered_interpreter_python\": \"/usr/bin/python\"\n },\n \"changed\": false,\n \"ping\": \"pong\"\n}\nfrontend02.example.com | SUCCESS => {\n \"ansible_facts\": {\n \"discovered_interpreter_python\": \"/usr/bin/python\"\n },\n \"changed\": false,\n \"ping\": \"pong\"\n}\n```", "```\nloadbalancer.example.com\n\n[frontends]\nfrt01.example.com\nfrt02.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[databases]\ndbms01.example.com\ndbms02.example.com\n\n[centos:children]\napps\ndatabases\n\n[ubuntu:children]\nfrontends\n```", "```\n$ ansible -i hostgroups-children-ini all --list-hosts\n hosts (7):\n loadbalancer.example.com\n frt01.example.com\n frt02.example.com\n app01.example.com\n app02.example.com\n dbms01.example.com\n dbms02.example.com\n```", "```\n$ ansible -i hostgroups-children-ini '*' --list-hosts\n hosts (7):\n loadbalancer.example.com\n frt01.example.com\n frt02.example.com\n app01.example.com\n app02.example.com\n dbms01.example.com\n dbms02.example.com\n```", "```\n$ ansible -i hostgroups-children-ini frontends:apps --list-hosts\n hosts (4):\n frt01.example.com\n frt02.example.com\n app01.example.com\n app02.example.com\n```", "```\n$ ansible -i hostgroups-children-ini 'all:!apps' --list-hosts\n hosts (5):\n loadbalancer.example.com\n frt01.example.com\n frt02.example.com\n dbms01.example.com\n dbms02.example.com\n```", "```\n$ ansible -i hostgroups-children-ini 'centos:&apps' --list-hosts\n  hosts (2):\n    app01.example.com\n    app02.example.com\n```", "```\n$ ansible -i hostgroups-children-ini 'db*.example.com' --list-hosts\n hosts (2):\n dbms02.example.com\n dbms01.example.com\n```", "```\n$ ansible-playbook -i hostgroups-children-ini site.yml --limit frontends:apps\n\nPLAY [A simple playbook for demonstrating inventory patterns] ******************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt02.example.com]\nok: [app01.example.com]\nok: [frt01.example.com]\nok: [app02.example.com]\n\nTASK [Ping each host] **********************************************************\nok: [app01.example.com]\nok: [app02.example.com]\nok: [frt02.example.com]\nok: [frt01.example.com]\n\nPLAY RECAP *********************************************************************\napp01.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrt01.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrt02.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```"]