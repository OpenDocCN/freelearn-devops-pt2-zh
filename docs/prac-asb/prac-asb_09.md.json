["```\n$ mkdir -p inventories/development/group_vars\n$ mkdir -p inventories/development/host_vars\n```", "```\n[app]\napp01.dev.example.com\napp02.dev.example.com\n```", "```\n---\nhttp_port: 8080\n```", "```\n$ mkdir -p inventories/production/group_vars\n$ mkdir -p inventories/production/host_vars\n```", "```\n[app]\napp01.prod.example.com\napp02.prod.example.com\n```", "```\n---\nhttp_port: 80\n```", "```\n$ mkdir library\n```", "```\n$ mkdir filter_plugins\n```", "```\n$ mkdir roles\n$ ansible-galaxy role init --init-path roles/ installapp\n- Role installapp was created successfully\n```", "```\n---\n- name: Display http_port variable contents\n  debug:\n    var: http_port\n\n- name: Create /tmp/foo\n  file:\n    path: /tmp/foo\n    state: file\n\n- name: Use custom module to copy /tmp/foo\n  remote_filecopy:\n    source: /tmp/foo\n    dest: /tmp/bar\n\n- name: Define a fact about automation\n  set_fact:\n    about_automation: \"Puppet is an excellent automation tool\"\n\n- name: Tell us about automation with a custom filter applied\n  debug:\n    msg: \"{{ about_automation | improve_automation }}\"\n```", "```\n---\n- name: Play using best practise directory structure\n  hosts: all\n\n  roles:\n    - installapp\n```", "```\n.\n\u251c\u2500\u2500 filter_plugins\n\u2502   \u251c\u2500\u2500 custom_filter.py\n\u2502   \u2514\u2500\u2500 custom_filter.pyc\n\u251c\u2500\u2500 inventories\n\u2502   \u251c\u2500\u2500 development\n\u2502   \u2502   \u251c\u2500\u2500 group_vars\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 app.yml\n\u2502   \u2502   \u251c\u2500\u2500 hosts\n\u2502   \u2502   \u2514\u2500\u2500 host_vars\n\u2502   \u2514\u2500\u2500 production\n\u2502   \u251c\u2500\u2500 group_vars\n\u2502   \u2502   \u2514\u2500\u2500 app.yml\n\u2502   \u251c\u2500\u2500 hosts\n\u2502   \u2514\u2500\u2500 host_vars\n\u251c\u2500\u2500 library\n\u2502   \u2514\u2500\u2500 remote_filecopy.py\n\u251c\u2500\u2500 roles\n\u2502   \u2514\u2500\u2500 installapp\n\u2502   \u251c\u2500\u2500 defaults\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 files\n\u2502   \u251c\u2500\u2500 handlers\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 meta\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 README.md\n\u2502   \u251c\u2500\u2500 tasks\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 templates\n\u2502   \u251c\u2500\u2500 tests\n\u2502   \u2502   \u251c\u2500\u2500 inventory\n\u2502   \u2502   \u2514\u2500\u2500 test.yml\n\u2502   \u2514\u2500\u2500 vars\n\u2502   \u2514\u2500\u2500 main.yml\n\u2514\u2500\u2500 site.yml\n```", "```\n$ ansible-playbook -i inventories/development/hosts site.yml\n\nPLAY [Play using best practise directory structure] ****************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app02.dev.example.com]\nok: [app01.dev.example.com]\n\nTASK [installapp : Display http_port variable contents] ************************\nok: [app01.dev.example.com] => {\n \"http_port\": 8080\n}\nok: [app02.dev.example.com] => {\n \"http_port\": 8080\n}\n\nTASK [installapp : Create /tmp/foo] ********************************************\nchanged: [app02.dev.example.com]\nchanged: [app01.dev.example.com]\n\nTASK [installapp : Use custom module to copy /tmp/foo] *************************\nchanged: [app02.dev.example.com]\nchanged: [app01.dev.example.com]\n\nTASK [installapp : Define a fact about automation] *****************************\nok: [app01.dev.example.com]\nok: [app02.dev.example.com]\n\nTASK [installapp : Tell us about automation with a custom filter applied] ******\nok: [app01.dev.example.com] => {\n \"msg\": \"Ansible is an excellent automation tool\"\n}\nok: [app02.dev.example.com] => {\n \"msg\": \"Ansible is an excellent automation tool\"\n}\n\nPLAY RECAP *********************************************************************\napp01.dev.example.com : ok=6 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.dev.example.com : ok=6 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ ansible-playbook -i inventories/production/hosts site.yml\n\nPLAY [Play using best practise directory structure] ****************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app02.prod.example.com]\nok: [app01.prod.example.com]\n\nTASK [installapp : Display http_port variable contents] ************************\nok: [app01.prod.example.com] => {\n \"http_port\": 80\n}\nok: [app02.prod.example.com] => {\n \"http_port\": 80\n}\n\nTASK [installapp : Create /tmp/foo] ********************************************\nchanged: [app01.prod.example.com]\nchanged: [app02.prod.example.com]\n\nTASK [installapp : Use custom module to copy /tmp/foo] *************************\nchanged: [app02.prod.example.com]\nchanged: [app01.prod.example.com]\n\nTASK [installapp : Define a fact about automation] *****************************\nok: [app01.prod.example.com]\nok: [app02.prod.example.com]\n\nTASK [installapp : Tell us about automation with a custom filter applied] ******\nok: [app01.prod.example.com] => {\n \"msg\": \"Ansible is an excellent automation tool\"\n}\nok: [app02.prod.example.com] => {\n \"msg\": \"Ansible is an excellent automation tool\"\n}\n\nPLAY RECAP *********************************************************************\napp01.prod.example.com : ok=6 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.prod.example.com : ok=6 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ wget https://raw.githubusercontent.com/ansible/ansible/stable-2.9/contrib/inventory/ec2.py\n$ chmod +x ec2.py\n$ wget https://raw.githubusercontent.com/ansible/ansible/stable-2.9/contrib/inventory/ec2.ini\n```", "```\n#!/usr/bin/env python\n\n'''\nEC2 external inventory script\n=================================\n\nGenerates inventory that Ansible can understand by making API request to\nAWS EC2 using the Boto library.\n\nNOTE: This script assumes Ansible is being executed where the environment\nvariables needed for Boto have already been set:\n    export AWS_ACCESS_KEY_ID='AK123'\n    export AWS_SECRET_ACCESS_KEY='abc123'\n\nOptional region environment variable if region is 'auto'\n\nThis script also assumes that there is an ec2.ini file alongside it. To specify\n a\ndifferent path to ec2.ini, define the EC2_INI_PATH environment variable:\n\n    export EC2_INI_PATH=/path/to/my_ec2.ini\n```", "```\n# Ansible EC2 external inventory script settings\n#\n\n[ec2]\n\n# to talk to a private eucalyptus instance uncomment these lines\n# and edit edit eucalyptus_host to be the host name of your cloud controller\n#eucalyptus = True\n#eucalyptus_host = clc.cloud.domain.org\n\n# AWS regions to make calls to. Set this to 'all' to make request to all regions\n# in AWS and merge the results together. Alternatively, set this to a comma\n# separated list of regions. E.g. 'us-east-1,us-west-1,us-west-2' and do not\n# provide the 'regions_exclude' option. If this is set to 'auto', AWS_REGION or\n# AWS_DEFAULT_REGION environment variable will be read to determine the region.\nregions = all\nregions_exclude = us-gov-west-1, cn-north-1\n```", "```\n$ sudo yum -y install python-boto python-boto3\n```", "```\n$ sudo pip3 install boto3\n```", "```\n$ export AWS_ACCESS_KEY_ID='<YOUR_DATA>'\n$ export AWS_SECRET_ACCESS_KEY='<YOUR_DATA>'\n```", "```\n$ ansible -i ec2.py -u ec2-user --private-key /home/james/my-ec2-id_rsa -m ping all\n```", "```\n$ ./ec2.py --refresh-cache\n```", "```\n$ mkdir -p inventories/development/group_vars\n$ mkdir -p inventories/development/host_vars\n```", "```\n[app]\napp01.dev.example.com\napp02.dev.example.com\n```", "```\n---\nhttp_port: 8080\n```", "```\n---\n- name: Play using best practise directory structure\n  hosts: all\n\n  tasks:\n    - name: Display the value of our inventory variable\n      debug:\n        var: http_port\n```", "```\n$ ansible-playbook -i inventories/development/hosts site.yml\n\nPLAY [Play using best practise directory structure] ****************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app01.dev.example.com]\nok: [app02.dev.example.com]\n\nTASK [Display the value of our inventory variable] *****************************\nok: [app01.dev.example.com] => {\n \"http_port\": 8080\n}\nok: [app02.dev.example.com] => {\n \"http_port\": 8080\n}\n\nPLAY RECAP *********************************************************************\napp01.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\nhttp_port: 8081\n```", "```\n$ ansible-playbook -i inventories/development/hosts site.yml\n\nPLAY [Play using best practise directory structure] ****************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app02.dev.example.com]\nok: [app01.dev.example.com]\n\nTASK [Display the value of our inventory variable] *****************************\nok: [app01.dev.example.com] => {\n \"http_port\": 8081\n}\nok: [app02.dev.example.com] => {\n \"http_port\": 8081\n}\n\nPLAY RECAP *********************************************************************\napp01.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n[app]\napp01.dev.example.com\napp02.dev.example.com\n\n[centos:children]\napp\n\n[newcentos:children]\napp\n```", "```\n---\nhttp_port: 8082\n```", "```\n---\nhttp_port: 8083\n```", "```\n$ ansible-playbook -i inventories/development/hosts site.yml\n\nPLAY [Play using best practise directory structure] ****************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app01.dev.example.com]\nok: [app02.dev.example.com]\n\nTASK [Display the value of our inventory variable] *****************************\nok: [app01.dev.example.com] => {\n \"http_port\": 8083\n}\nok: [app02.dev.example.com] => {\n \"http_port\": 8083\n}\n\nPLAY RECAP *********************************************************************\napp01.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\nhttp_port: 9090\n```", "```\n$ ansible-playbook -i inventories/development/hosts site.yml\n\nPLAY [Play using best practise directory structure] ****************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app01.dev.example.com]\nok: [app02.dev.example.com]\n\nTASK [Display the value of our inventory variable] *****************************\nok: [app01.dev.example.com] => {\n \"http_port\": 9090\n}\nok: [app02.dev.example.com] => {\n \"http_port\": 8083\n}\n\nPLAY RECAP *********************************************************************\napp01.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.dev.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ sudo yum install git\n```", "```\n$ sudo apt-get update\n$ sudo apt-get install git\n```", "```\n$ git clone https://github.com/<YOUR_GIT_ACCOUNT>/<GIT_REPO>.git\nCloning into '<GIT_REPO>'...\nremote: Enumerating objects: 7, done.\nremote: Total 7 (delta 0), reused 0 (delta 0), pack-reused 7\nUnpacking objects: 100% (7/7), done. \n```", "```\n$ cd <GIT_REPO>\n$ vim myplaybook.yml\n```", "```\n$ git add myplaybook.yml\n```", "```\n$ git commit -m 'Added new spongle-widget deployment to myplaybook.yml'\n[master ed14138] Added new spongle-widget deployment to myplaybook.yml\n Committer: Daniel Oh <doh@danieloh.redhat.com>\nYour name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYou can suppress this message by setting them explicitly. Run the\nfollowing command and follow the instructions in your editor to edit\nyour configuration file:\n\n    git config --global --edit\n\nAfter doing this, you may fix the identity used for this commit with:\n\n    git commit --amend --reset-author\n\n 1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\n$ git push\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 297 bytes | 297.00 KiB/s, done.\nTotal 3 (delta 2), reused 0 (delta 0)\nremote: Resolving deltas: 100% (2/2), completed with 2 local objects.\nTo https://github.com/<YOUR_GIT_ACCOUNT>/<GIT_REPO>.git\n   0d00263..ed14138 master -> master \n```", "```\n$ git pull\n```", "```\n[app]\napp01.dev.example.com\napp02.dev.example.com\n```", "```\n---\n- name: Play to demonstrate group_by module\n  hosts: all\n\n  tasks:\n    - name: Create inventory groups based on host facts\n      group_by:\n        key: os_{{ ansible_facts['distribution'] }}\n```", "```\n- name: Play to install Apache on CentOS\n  hosts: os_CentOS\n  become: true\n\n  tasks:\n    - name: Install Apache on CentOS\n      yum:\n        name: httpd\n        state: present\n```", "```\n- name: Play to install Apache on Ubuntu\n  hosts: os_Ubuntu\n  become: true\n\n  tasks:\n    - name: Install Apache on Ubuntu\n      apt:\n        name: apache2\n        state: present\n```", "```\n$ ansible-playbook -i hosts osvariants.yml\n\nPLAY [Play to demonstrate group_by module] *************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app02.dev.example.com]\nok: [app01.dev.example.com]\n\nTASK [Create inventory groups based on host facts] *****************************\nok: [app01.dev.example.com]\nok: [app02.dev.example.com]\n\nPLAY [Play to install Apache on CentOS] ****************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app01.dev.example.com]\nok: [app02.dev.example.com]\n\nTASK [Install Apache on CentOS] ************************************************\nchanged: [app02.dev.example.com]\nchanged: [app01.dev.example.com]\n[WARNING]: Could not match supplied host pattern, ignoring: os_Ubuntu\n\nPLAY [Play to install Apache on Ubuntu] ****************************************\nskipping: no hosts matched\n\nPLAY RECAP *********************************************************************\napp01.dev.example.com : ok=4 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.dev.example.com : ok=4 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ ansible --version\nansible 2.9.6\n config file = /etc/ansible/ansible.cfg\n configured module search path = [u'/home/james/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n ansible python module location = /usr/lib/python2.7/site-packages/ansible\n executable location = /usr/bin/ansible\n python version = 2.7.5 (default, Aug 7 2019, 00:51:29) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]\n```", "```\n$ ansible --version\nansible 2.8.4\n config file = /etc/ansible/ansible.cfg\n configured module search path = [u'/home/james/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n ansible python module location = /usr/lib/python2.7/site-packages/ansible\n executable location = /usr/bin/ansible\n python version = 2.7.5 (default, Aug 7 2019, 00:51:29) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]\n```"]