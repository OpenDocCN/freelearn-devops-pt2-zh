["```\n$ ansible --version\nansible 2.9.6\n config file = /etc/ansible/ansible.cfg\n configured module search path = [u'/home/jamesf_local/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n ansible python module location = /usr/lib/python2.7/dist-packages/ansible\n executable location = /usr/bin/ansible\n python version = 2.7.17 (default, Nov 7 2019, 10:07:09) [GCC 9.2.1 20191008]\n```", "```\n$ ssh <username>@frontend.example.com\nThe authenticity of host 'frontend.example.com (192.168.1.52)' can't be established.\nED25519 key fingerprint is SHA256:hU+saFERGFDERW453tasdFPAkpVws.\nAre you sure you want to continue connecting (yes/no)? yes password:<Input_Your_Password>\n```", "```\nfrontend.example.com\nbackend1.example.com\nbackend2.example.com \n```", "```\n$ ping frontend.example.com\nPING frontend.example.com (192.168.1.52): 56 data bytes\n64 bytes from 192.168.1.52: icmp_seq=0 ttl=64 time=0.040 ms\n64 bytes from 192.168.1.52: icmp_seq=1 ttl=64 time=0.115 ms\n64 bytes from 192.168.1.52: icmp_seq=2 ttl=64 time=0.097 ms\n64 bytes from 192.168.1.52: icmp_seq=3 ttl=64 time=0.130 ms \n```", "```\n$ ssh-keygen \n```", "```\n$ ssh-keygen \nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/doh/.ssh/id_rsa): <Enter>\nEnter passphrase (empty for no passphrase): <Press Enter>\nEnter same passphrase again: <Press Enter>\nYour identification has been saved in /Users/doh/.ssh/id_rsa.\nYour public key has been saved in /Users/doh/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:1IF0KMMTVAMEQF62kTwcG59okGZLiMmi4Ae/BGBT+24 doh@danieloh.com\nThe key's randomart image is:\n+---[RSA 2048]----+\n|=*=*BB==+oo |\n|B=*+*B=.o+ . |\n|=+=o=.o+. . |\n|...=. . |\n| o .. S |\n| .. |\n| E |\n| . |\n| |\n+----[SHA256]-----+\n```", "```\n$ ssh-agent bash\n$ ssh-add ~/.ssh/id_rsa \n```", "```\n$  ssh-copy-id -i ~/.ssh/id_rsa.pub frontend.example.com\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"~/.ssh/id_rsa.pub\"\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\ndoh@frontend.example.com's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with: \"ssh 'frontend.example.com'\"\nand check to make sure that only the key(s) you wanted were added.\n```", "```\n$ ansible all -i hosts -m ping\nfrontend.example.com | SUCCESS => {\n \"changed\": false, \n \"ping\": \"pong\"\n}\nbackend1.example.com | SUCCESS => {\n \"changed\": false, \n \"ping\": \"pong\"\n}\nbackend2.example.com | SUCCESS => {\n \"changed\": false, \n \"ping\": \"pong\"\n}\n```", "```\nbackend2.example.com | FAILED => SSH encountered an unknown error during the connection. We recommend you re-run the command using -vvvv, which will enable SSH debugging output to help diagnose the issue \n```", "```\nremote1.example.com\nremote2.example.com\nremote3.example.com\n```", "```\n---\n- name: My first Ansible playbook\n  hosts: all\n```", "```\n  become: yes\n```", "```\n  tasks:\n  - name: Update the latest of an Apache Web Server\n    yum:\n      name: httpd\n      state: latest\n    notify:\n      - Restart an Apache Web Server\n\n handlers:\n - name: Restart an Apache Web Server\n   service:\n     name: httpd\n     state: restarted\n```", "```\n$ PLAY [My first Ansible playbook] ***********************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [remote2.example.com]\nok: [remote1.example.com]\nok: [remote3.example.com]\n\nTASK [Update the latest of an Apache Web Server] *******************************\nchanged: [remote2.example.com]\nchanged: [remote3.example.com]\nchanged: [remote1.example.com]\n\nRUNNING HANDLER [Restart an Apache Web Server] *********************************\nchanged: [remote3.example.com]\nchanged: [remote1.example.com]\nchanged: [remote2.example.com]\n\nPLAY RECAP *********************************************************************\nremote1.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nremote2.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nremote3.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\nPLAY [My first Ansible playbook] ***********************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [remote1.example.com]\nok: [remote2.example.com]\nok: [remote3.example.com]\n\nTASK [Update the latest of an Apache Web Server] *******************************\nok: [remote2.example.com]\nok: [remote3.example.com]\nok: [remote1.example.com]\n\nPLAY RECAP *********************************************************************\nremote1.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nremote2.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nremote3.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n  - name: Update the latest of an Apache Web Server\n    yum:\n      name: httpd\n      state: latest\n```", "```\n  - name: Update the latest of an Apache Web Server\n    yum:\n      name:\n        - httpd\n        - mod_ssl\n      state: latest\n```", "```\n    service:\n      name: httpd\n      state: restarted\n```", "```\n---\nemployees:\n  - name: daniel\n    fullname: Daniel Oh\n    role: DevOps Evangelist\n    level: Expert\n    skills:\n      - Kubernetes\n      - Microservices\n      - Ansible\n      - Linux Container\n  - name: michael\n    fullname: Michael Smiths\n    role: Enterprise Architect\n    level: Advanced\n    skills:\n      - Cloud\n      - Middleware\n      - Windows\n      - Storage\n```", "```\nSpecialty: |\n  Agile methodology\n  Cloud-native app development practices\n  Advanced enterprise DevOps practices\n```", "```\nAgile methodology\nCloud-native app development practices\nAdvanced enterprise DevOps practices\n```", "```\nSpecialty: >\n  Agile methodology\n  Cloud-native app development practices\n  Advanced enterprise DevOps practices\n```", "```\nAgile methodologyCloud-native app development practicesAdvanced enterprise DevOps practices\n```", "```\n---\nservers:\n  - frontend\n  - backend\n  - database\n  - cache\nemployees:\n  - name: daniel\n    fullname: Daniel Oh\n    role: DevOps Evangelist\n    level: Expert\n    skills:\n      - Kubernetes\n      - Microservices\n      - Ansible\n      - Linux Container\n  - name: michael\n    fullname: Michael Smiths\n    role: Enterprise Architect\n    level: Advanced\n    skills:\n      - Cloud\n      - Middleware\n      - Windows\n      - Storage\n    Speciality: |\n      Agile methodology\n      Cloud-native app development practices\n      Advanced enterprise DevOps practices\n```", "```\n--- employees: [{\"fullname\": \"Daniel Oh\",\"level\": \"Expert\",\"name\": \"daniel\",\"role\": \"DevOps Evangelist\",\"skills\": [\"Kubernetes\",\"Microservices\",\"Ansible\",\"Linux Container\"]},{\"fullname\": \"Michael Smiths\",\"level\": \"Advanced\",\"name\": \"michael\",\"role\": \"Enterprise Architect\",\"skills\":[\"Cloud\",\"Middleware\",\"Windows\",\"Storage\"]}]\n```", "```\nversion: \"2.0\"\n```", "```\n[frontends_na_zone] \nfrontend1-na.example.com \nfrontend2-na.example.com [frontends_emea_zone]\nfrontend1-emea.example.com\nfrontend2-emea.example.com\n\n[appservers_na_zone]\nappserver1-na.example.com\nappserver2-na.example.com\n\n[appservers_emea_zone]\nappserver1-emea.example.com\nappserver2-emea.example.com\n```", "```\n---\n- hosts: frontends_na_zone\n  remote_user: danieloh\n  tasks:\n    - name: simple connection test\n      ping: \n```", "```\n$ ansible-playbook -i production-inventory frontends-na.yml\n\nPLAY [frontends_na_zone] *******************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frontend1-na.example.com]\nok: [frontend2-na.example.com]\n\nTASK [simple connection test] **************************************************\nok: [frontend1-na.example.com]\nok: [frontend2-na.example.com]\n\nPLAY RECAP *********************************************************************\nfrontend1-na.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrontend2-na.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n---\n- hosts: appservers_emea_zone\n  remote_user: danieloh\n  tasks:\n    - name: simple connection test\n      ping: \n```", "```\n$ ansible-playbook -i production-inventory appservers-emea.yml\n\nPLAY [appservers_emea_zone] ****************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [appserver2-emea.example.com]\nok: [appserver1-emea.example.com]\n\nTASK [simple connection test] **************************************************\nok: [appserver2-emea.example.com]\nok: [appserver1-emea.example.com]\n\nPLAY RECAP *********************************************************************\nappserver1-emea.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nappserver2-emea.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\n- import_playbook: frontend-na.yml\n- import_playbook: appserver-emea.yml\n```", "```\n$ ansible-playbook -i production-inventory site.yml\n\nPLAY [frontends_na_zone] *******************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frontend2-na.example.com]\nok: [frontend1-na.example.com]\n\nTASK [simple connection test] **************************************************\nok: [frontend1-na.example.com]\nok: [frontend2-na.example.com]\n\nPLAY [appservers_emea_zone] ****************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [appserver2-emea.example.com]\nok: [appserver1-emea.example.com]\n\nTASK [simple connection test] **************************************************\nok: [appserver2-emea.example.com]\nok: [appserver1-emea.example.com]\n\nPLAY RECAP *********************************************************************\nappserver1-emea.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nappserver2-emea.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrontend1-na.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrontend2-na.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ ansible 2.9.6\n  config file = None\n  configured module search path = ['/Users/james/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/local/Cellar/ansible/2.9.6_1/libexec/lib/python3.8/site-packages/ansible\n  executable location = /usr/local/bin/ansible\n  python version = 3.8.2 (default, Mar 11 2020, 00:28:52) [Clang 11.0.0 (clang-1100.0.33.17)]\n```", "```\n$ ansible-config list \n```", "```\n$ ansible-config list\nACTION_WARNINGS:\n  default: true\n  description:\n  - By default Ansible will issue a warning when received from a task action (module\n    or action plugin)\n  - These warnings can be silenced by adjusting this setting to False.\n  env:\n  - name: ANSIBLE_ACTION_WARNINGS\n  ini:\n  - key: action_warnings\n    section: defaults\n  name: Toggle action warnings\n  type: boolean\n  version_added: '2.5'\nAGNOSTIC_BECOME_PROMPT:\n  default: true\n  description: Display an agnostic become prompt instead of displaying a prompt containing\n    the command line supplied become method\n  env:\n  - name: ANSIBLE_AGNOSTIC_BECOME_PROMPT\n  ini:\n  - key: agnostic_become_prompt\n    section: privilege_escalation\n  name: Display an agnostic become prompt\n  type: boolean\n  version_added: '2.5'\n  yaml:\n    key: privilege_escalation.agnostic_become_prompt\n.....\n```", "```\n$ ansible-config dump \n```", "```\n$ ansible-config dump\nACTION_WARNINGS(default) = True\nAGNOSTIC_BECOME_PROMPT(default) = True\nALLOW_WORLD_READABLE_TMPFILES(default) = False\nANSIBLE_CONNECTION_PATH(default) = None\nANSIBLE_COW_PATH(default) = None\nANSIBLE_COW_SELECTION(default) = default\nANSIBLE_COW_WHITELIST(default) = ['bud-frogs', 'bunny', 'cheese', 'daemon', 'default', 'dragon', 'elephant-in-snake', 'elephant', 'eyes', 'hellokitty', 'kitty', 'luke-koala', 'meow', 'milk', 'moofasa', 'moose', 'ren', 'sheep', 'small', 'stegosaurus', 'stimpy', 'supermilker', 'three-eyes', 'turkey', 'turtle', 'tux', 'udder', 'vader-koala', 'vader', 'www']\nANSIBLE_FORCE_COLOR(default) = False\nANSIBLE_NOCOLOR(default) = False\nANSIBLE_NOCOWS(default) = False\nANSIBLE_PIPELINING(default) = False\nANSIBLE_SSH_ARGS(default) = -C -o ControlMaster=auto -o ControlPersist=60s\nANSIBLE_SSH_CONTROL_PATH(default) = None\nANSIBLE_SSH_CONTROL_PATH_DIR(default) = ~/.ansible/cp\n....\n```", "```\n$ export ANSIBLE_FORCE_COLOR=True \n```", "```\n$ ansible-config dump --only-change\nANSIBLE_FORCE_COLOR(env: ANSIBLE_FORCE_COLOR) = True\n```", "```\n# Set my configuration variables\n[defaults]\ninventory = /Users/danieloh/ansible/hosts ; Here is the path of the inventory file\n```", "```\n$ ansible 2.9.6\n  config file = None\n  configured module search path = ['/Users/james/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/local/Cellar/ansible/2.9.6_1/libexec/lib/python3.8/site-packages/ansible\n  executable location = /usr/local/bin/ansible\n  python version = 3.8.2 (default, Mar 11 2020, 00:28:52) [Clang 11.0.0 (clang-1100.0.33.17)]\n```", "```\n$ ansible --help \n```", "```\n$ ansible --help\nusage: ansible [-h] [--version] [-v] [-b] [--become-method BECOME_METHOD] [--become-user BECOME_USER] [-K] [-i INVENTORY] [--list-hosts] [-l SUBSET] [-P POLL_INTERVAL] [-B SECONDS] [-o] [-t TREE] [-k]\n               [--private-key PRIVATE_KEY_FILE] [-u REMOTE_USER] [-c CONNECTION] [-T TIMEOUT] [--ssh-common-args SSH_COMMON_ARGS] [--sftp-extra-args SFTP_EXTRA_ARGS] [--scp-extra-args SCP_EXTRA_ARGS]\n               [--ssh-extra-args SSH_EXTRA_ARGS] [-C] [--syntax-check] [-D] [-e EXTRA_VARS] [--vault-id VAULT_IDS] [--ask-vault-pass | --vault-password-file VAULT_PASSWORD_FILES] [-f FORKS]\n               [-M MODULE_PATH] [--playbook-dir BASEDIR] [-a MODULE_ARGS] [-m MODULE_NAME]\n               pattern\n\nDefine and run a single task 'playbook' against a set of hosts\n\npositional arguments:\n  pattern host pattern\n\noptional arguments:\n  --ask-vault-pass ask for vault password\n  --list-hosts outputs a list of matching hosts; does not execute anything else\n  --playbook-dir BASEDIR\n                        Since this tool does not use playbooks, use this as a substitute playbook directory.This sets the relative path for many features including roles/ group_vars/ etc.\n  --syntax-check perform a syntax check on the playbook, but do not execute it\n  --vault-id VAULT_IDS the vault identity to use\n  --vault-password-file VAULT_PASSWORD_FILES\n                        vault password file\n  --version show program's version number, config file location, configured module search path, module location, executable location and exit\n  -B SECONDS, --background SECONDS\n                        run asynchronously, failing after X seconds (default=N/A)\n  -C, --check don't make any changes; instead, try to predict some of the changes that may occur\n  -D, --diff when changing (small) files and templates, show the differences in those files; works great with --check\n  -M MODULE_PATH, --module-path MODULE_PATH\n                        prepend colon-separated path(s) to module library (default=~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules)\n  -P POLL_INTERVAL, --poll POLL_INTERVAL\n                        set the poll interval if using -B (default=15)\n  -a MODULE_ARGS, --args MODULE_ARGS\n                        module arguments\n  -e EXTRA_VARS, --extra-vars EXTRA_VARS\n                        set additional variables as key=value or YAML/JSON, if filename prepend with @\n```", "```\n$ ansible -i production-inventory --list-host appservers_emea_zone \n```", "```\n$ ansible -i production-inventory --list-host appservers_emea_zone\n  hosts (2):\n    appserver1-emea.example.com\n    appserver2-emea.example.com\n```", "```\n$ ansible-playbook -i production-inventory site.yml --private-key ~/keys/id_rsa\n```", "```\n$ ansible-playbook -i production-inventory site.yml --user danieloh\n```", "```\n[frontends_na_zone]\nfrontend1-na.example.com\nfrontend2-na.example.com\n\n[frontends_emea_zone]\nfrontend1-emea.example.com\nfrontend2-emea.example.com\n\n[appservers_na_zone]\nappserver1-na.example.com\nappserver2-na.example.com\n\n[appservers_emea_zone]\nappserver1-emea.example.com\nappserver2-emea.example.com\n```", "```\n$ ansible -i production-inventory frontends_emea_zone -a /usr/bin/date \n```", "```\n$ ansible -i production-inventory frontends_emea_zone -a /usr/bin/date\nfrontend1-emea.example.com | CHANGED | rc=0 >>\nSun 5 Apr 18:55:30 BST 2020\nfrontend2-emea.example.com | CHANGED | rc=0 >>\nSun 5 Apr 18:55:30 BST 2020\n```", "```\n$ ansible -i production-inventory frontends_emea_zone -a /usr/sbin/pvs -u danieloh\n\nfrontend2-emea.example.com | FAILED | rc=5 >>\n  WARNING: Running as a non-root user. Functionality may be unavailable.\n  /run/lvm/lvmetad.socket: access failed: Permission denied\n  WARNING: Failed to connect to lvmetad. Falling back to device scanning.\n  /run/lock/lvm/P_global:aux: open failed: Permission denied\n  Unable to obtain global lock.non-zero return code\nfrontend1-emea.example.com | FAILED | rc=5 >>\n  WARNING: Running as a non-root user. Functionality may be unavailable.\n  /run/lvm/lvmetad.socket: access failed: Permission denied\n  WARNING: Failed to connect to lvmetad. Falling back to device scanning.\n  /run/lock/lvm/P_global:aux: open failed: Permission denied\n  Unable to obtain global lock.non-zero return code\n```", "```\n$ ansible -i production-inventory frontends_emea_zone -a /usr/sbin/pvs -u danieloh --become\n\nfrontend2-emea.example.com | FAILED | rc=-1 >>\nMissing sudo password\nfrontend1-emea.example.com | FAILED | rc=-1 >>\nMissing sudo password\n```", "```\n$ ansible -i production-inventory frontends_emea_zone -a /usr/sbin/pvs -u danieloh --become --ask-become-pass\nBECOME password:\n\nfrontend1-emea.example.com | CHANGED | rc=0 >>\n PV VG Fmt Attr PSize PFree\n /dev/sda2 centos lvm2 a-- <19.00g 0\nfrontend2-emea.example.com | CHANGED | rc=0 >>\n PV VG Fmt Attr PSize PFree\n /dev/sda2 centos lvm2 a-- <19.00g 0\n```", "```\n$ ansible -i production-inventory frontends_emea_zone -m copy -a \"src=/etc/yum.conf dest=/tmp/yum.conf\"\nfrontend1-emea.example.com | CHANGED => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"changed\": true,\n    \"checksum\": \"e0637e631f4ab0aaebef1a6b8822a36f031f332e\",\n    \"dest\": \"/tmp/yum.conf\",\n    \"gid\": 0,\n    \"group\": \"root\",\n    \"md5sum\": \"a7dc0d7b8902e9c8c096c93eb431d19e\",\n    \"mode\": \"0644\",\n    \"owner\": \"root\",\n    \"size\": 970,\n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1586110004.75-208447517347027/source\",\n    \"state\": \"file\",\n    \"uid\": 0\n}\nfrontend2-emea.example.com | CHANGED => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"changed\": true,\n    \"checksum\": \"e0637e631f4ab0aaebef1a6b8822a36f031f332e\",\n    \"dest\": \"/tmp/yum.conf\",\n    \"gid\": 0,\n    \"group\": \"root\",\n    \"md5sum\": \"a7dc0d7b8902e9c8c096c93eb431d19e\",\n    \"mode\": \"0644\",\n    \"owner\": \"root\",\n    \"size\": 970,\n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1586110004.75-208447517347027/source\",\n    \"state\": \"file\",\n    \"uid\": 0\n} \n```", "```\n$ ansible -i production-inventory frontends_emea_zone -B 7200 -P 0 -a \"sleep 2h\"\nfrontend1-emea.example.com | CHANGED => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"ansible_job_id\": \"537978889103.8857\",\n    \"changed\": true,\n    \"finished\": 0,\n    \"results_file\": \"/root/.ansible_async/537978889103.8857\",\n    \"started\": 1\n}\nfrontend2-emea.example.com | CHANGED => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"ansible_job_id\": \"651461662130.8858\",\n    \"changed\": true,\n    \"finished\": 0,\n    \"results_file\": \"/root/.ansible_async/651461662130.8858\",\n    \"started\": 1\n}\n```", "```\n$ ansible -i production-inventory frontend2-emea.example.com -m async_status -a \"jid=651461662130.8858\"\nfrontend2-emea.example.com | SUCCESS => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"ansible_job_id\": \"651461662130.8858\",\n    \"changed\": false,\n    \"finished\": 0,\n    \"started\": 1\n} \n```", "```\n$ ansible -i production-inventory frontend2-emea.example.com -m async_status -a \"jid=651461662130.8858\"\nfrontend2-emea.example.com | FAILED! => {\n \"ansible_facts\": {\n \"discovered_interpreter_python\": \"/usr/bin/python\"\n },\n \"ansible_job_id\": \"651461662130.8858\",\n \"changed\": true,\n \"cmd\": [\n \"sleep\",\n \"2h\"\n ],\n \"delta\": \"0:03:16.534212\",\n \"end\": \"2020-04-05 19:18:08.431258\",\n \"finished\": 1,\n \"msg\": \"non-zero return code\",\n \"rc\": -15,\n \"start\": \"2020-04-05 19:14:51.897046\",\n \"stderr\": \"\",\n \"stderr_lines\": [],\n \"stdout\": \"\",\n \"stdout_lines\": []\n}\n```", "```\nregion:\n  east: app\n  west: frontend\n  central: cache\n```", "```\n# bracket notation\nregion['east']\n\n# dot notation\nregion.east\n```", "```\n---\nredis:\n  - server: cacheserver01.example.com\n    port: 6379\n    slaveof: cacheserver02.example.com\n\n```", "```\nroles:\n  - role: dbms_admin\n    vars:\n      username: James\n  - role: system_admin\n    vars:\n      username: John\n  - role: security_amdin\n    vars:\n      username: Rock\n  - role: app_admin\n    vars:\n      username: Daniel\n```", "```\n---\n- name: Display redis variables\n  hosts: all\n\n  vars:\n    redis:\n      server: cacheserver01.example.com\n      port: 6379\n      slaveof: cacheserver02.example.com\n\n  tasks:\n    - name: Display the redis port\n      debug:\n        msg: \"The redis port for {{ redis.server }} is {{ redis.port }}\"\n```", "```\n$ ansible-playbook -i localhost, redis-playbook.yml\n\nPLAY [Display redis variables] *************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [localhost]\n\nTASK [Display the redis port] **************************************************\nok: [localhost] => {\n \"msg\": \"The redis port for cacheserver01.example.com is 6379\"\n}\n\nPLAY RECAP *********************************************************************\nlocalhost : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\ntags:\n  - key: job\n    value: developer\n  - key: language\n    value: java\n```", "```\n---\n- name: Jinja2 filtering demo 1\n  hosts: localhost\n\n  tasks:\n    - copy:\n        src: multiple-document-strings.yaml\n        dest: /tmp/multiple-document-strings.yaml\n    - shell: cat /tmp/multiple-document-strings.yaml\n      register: result\n    - debug:\n        msg: '{{ item }}'\n      loop: '{{ result.stdout | from_yaml_all | list }}'\n```", "```\n$ ansible-playbook -i localhost, jinja-filtering1.yml\n\nPLAY [Jinja2 filtering demo 1] *************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [localhost]\n\nTASK [copy] ********************************************************************\nok: [localhost]\n\nTASK [shell] *******************************************************************\nchanged: [localhost]\n\nTASK [debug] *******************************************************************\nok: [localhost] => (item={'tags': [{'value': u'developer', 'key': u'job'}, {'value': u'java', 'key': u'language'}]}) => {\n \"msg\": {\n \"tags\": [\n {\n \"key\": \"job\",\n \"value\": \"developer\"\n },\n {\n \"key\": \"language\",\n \"value\": \"java\"\n }\n ]\n }\n}\n\nPLAY RECAP *********************************************************************\nlocalhost : ok=4 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\n- name: Jinja2 filtering demo 2\n  hosts: localhost\n  vars:\n    tags:\n      - key: job\n        value: developer\n      - key: language\n        value: java\n\n  tasks:\n    - debug:\n        msg: '{{ tags | items2dict }}'\n```", "```\n$ ansible-playbook -i localhost, jinja2-filtering2.yml\n[WARNING]: Found variable using reserved name: tags\n\nPLAY [Jinja2 filtering demo 2] *************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [localhost]\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n \"msg\": {\n \"job\": \"developer\",\n---\n \"language\": \"java\"\n }\n}\n\nPLAY RECAP *********************************************************************\nlocalhost : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\n- name: Jinja2 filtering demo 3\n  hosts: localhost\n  vars:\n    ping_value: \"{{ lookup('file', '/etc/hosts') }}\"\n```", "```\n  tasks:\n    - debug:\n        msg: \"ping value is {{ ping_value }}\"\n```", "```\n$ ansible-playbook -i localhost, jinja2-filtering3.yml\n\nPLAY [Jinja2 filtering demo 3] *************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [localhost]\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n \"msg\": \"ping value is 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4\\n::1 localhost localhost.localdomain localhost6 localhost6.localdomain6\\n\\n\"\n}\n\nPLAY RECAP *********************************************************************\nlocalhost : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n# Add some quotation in the shell - shell: echo {{ string_value | quote }} # Concatenate a list into a specific string\n{{ list | join(\"$\") }}\n\n# Have the last name of a specific file path\n{{  path  |  basename  }}\n\n# Have the directory from a specific path\n{{  path  |  dirname  }} # Have the directory from a specific windows path\n{{  path  |  win_dirname  }} \n```"]