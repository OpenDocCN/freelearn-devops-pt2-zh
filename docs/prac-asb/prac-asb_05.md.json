["```\n[frontends]\nfrt01.example.com https_port=8443\nfrt02.example.com http_proxy=proxy.example.com\n\n[frontends:vars]\nntp_server=ntp.frt.example.com\nproxy=proxy.frt.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[webapp:children]\nfrontends\napps\n\n[webapp:vars]\nproxy_server=proxy.webapp.example.com\nhealth_check_retry=3\nhealth_check_interal=60\n```", "```\n---\n- hosts: frontends\n  remote_user: danieloh\n\n  tasks:\n  - name: simple connection test\n    ping:\n    remote_user: danieloh\n```", "```\n  - name: run a simple command\n    shell: /bin/ls -al /nonexistent\n    ignore_errors: True\n```", "```\n$ ansible-playbook -i hosts myplaybook.yaml\n\nPLAY [frontends] ***************************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt02.example.com]\nok: [frt01.example.com]\n\nTASK [simple connection test] **************************************************\nok: [frt01.example.com]\nok: [frt02.example.com]\n\nTASK [run a simple command] ****************************************************\nfatal: [frt02.example.com]: FAILED! => {\"changed\": true, \"cmd\": \"/bin/ls -al /nonexistent\", \"delta\": \"0:00:00.015687\", \"end\": \"2020-04-10 16:37:56.895520\", \"msg\": \"non-zero return code\", \"rc\": 2, \"start\": \"2020-04-10 16:37:56.879833\", \"stderr\": \"/bin/ls: cannot access /nonexistent: No such file or directory\", \"stderr_lines\": [\"/bin/ls: cannot access /nonexistent: No such file or directory\"], \"stdout\": \"\", \"stdout_lines\": []}\n...ignoring\nfatal: [frt01.example.com]: FAILED! => {\"changed\": true, \"cmd\": \"/bin/ls -al /nonexistent\", \"delta\": \"0:00:00.012160\", \"end\": \"2020-04-10 16:37:56.930058\", \"msg\": \"non-zero return code\", \"rc\": 2, \"start\": \"2020-04-10 16:37:56.917898\", \"stderr\": \"/bin/ls: cannot access /nonexistent: No such file or directory\", \"stderr_lines\": [\"/bin/ls: cannot access /nonexistent: No such file or directory\"], \"stdout\": \"\", \"stdout_lines\": []}\n...ignoring\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=1\nfrt02.example.com : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=1 \n```", "```\n---\n- name: Handler demo 1\n  hosts: frt01.example.com\n  gather_facts: no\n  become: yes\n\n  tasks:\n    - name: Update Apache configuration\n      template:\n        src: template.j2\n        dest: /etc/httpd/httpd.conf\n      notify: Restart Apache\n\n  handlers:\n    - name: Restart Apache\n      service:\n        name: httpd\n        state: restarted\n```", "```\n$ ansible-playbook -i hosts handlers1.yml\n\nPLAY [Handler demo 1] **********************************************************\n\nTASK [Update Apache configuration] *********************************************\nchanged: [frt01.example.com]\n\nRUNNING HANDLER [Restart Apache] ***********************************************\nchanged: [frt01.example.com]\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=2 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ ansible-playbook -i hosts handlers1.yml\n\nPLAY [Handler demo 1] **********************************************************\n\nTASK [Update Apache configuration] *********************************************\nok: [frt01.example.com]\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\n- name: Handler demo 1\n  hosts: frt01.example.com\n  gather_facts: no\n  become: yes\n\n  handlers:\n    - name: restart chronyd\n      service:\n        name: chronyd\n        state: restarted\n      listen: \"restart all services\"\n    - name: restart apache\n      service:\n        name: httpd\n        state: restarted\n      listen: \"restart all services\"\n\n  tasks:\n    - name: restart all services\n      command: echo \"this task will restart all services\"\n      notify: \"restart all services\"\n```", "```\n$ ansible-playbook -i hosts handlers2.yml\n\nPLAY [Handler demo 1] **********************************************************\n\nTASK [restart all services] ****************************************************\nchanged: [frt01.example.com]\n\nRUNNING HANDLER [restart chronyd] **********************************************\nchanged: [frt01.example.com]\n\nRUNNING HANDLER [restart apache] ***********************************************\nchanged: [frt01.example.com]\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=3 changed=3 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ sudo yum install httpd\n$ sudo firewall-cmd --add-service=http --permanent \n$ sudo firewall-cmd --add-service=https --permanent\n$ sudo firewall-cmd --reload\n$ sudo systemctl enable httpd.service\n$ sudo systemctl restart httpd.service\n```", "```\n$ ansible -i hosts frt01* -m service -a \"name=httpd state=restarted\"\n```", "```\nfrt01.example.com | CHANGED => {\n \"ansible_facts\": {\n \"discovered_interpreter_python\": \"/usr/bin/python\"\n },\n \"changed\": true,\n \"name\": \"httpd\",\n \"state\": \"started\",\n```", "```\n---\n- name: Install Apache\n  hosts: frt01.example.com\n  gather_facts: no\n  become: yes\n\n  tasks:\n    - name: Install Apache package\n      yum:\n        name: httpd\n        state: latest\n    - name: Open firewall for Apache\n      firewalld:\n        service: \"{{ item }}\"\n        permanent: yes\n        state: enabled\n        immediate: yes\n      loop:\n        - \"http\"\n        - \"https\"\n    - name: Restart and enable the service\n      service:\n        name: httpd\n        state: restarted\n        enabled: yes\n```", "```\n$ ansible-playbook -i hosts installapache.yml\n\nPLAY [Install Apache] **********************************************************\n\nTASK [Install Apache package] **************************************************\nchanged: [frt01.example.com]\n\nTASK [Open firewall for Apache] ************************************************\nchanged: [frt01.example.com] => (item=http)\nchanged: [frt01.example.com] => (item=https)\n\nTASK [Restart and enable the service] ******************************************\nchanged: [frt01.example.com]\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=2 changed=3 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\n- name: Play 1 - configure the frontend servers\n  hosts: frontends\n  become: yes\n\n  tasks:\n  - name: Install the Apache package\n    yum:\n      name: httpd\n      state: latest\n  - name: Start the Apache server\n    service:\n      name: httpd\n      state: started\n```", "```\n- name: Play 2 - configure the application servers\n  hosts: apps\n  become: true\n\n  tasks:\n  - name: Install Tomcat\n    yum:\n      name: tomcat\n      state: latest\n  - name: Start the Tomcat server\n    service:\n      name: tomcat\n      state: started\n```", "```\n$ ansible-playbook -i hosts playandtask.yml\n\nPLAY [Play 1 - configure the frontend servers] *********************************\n\nTASK [Gathering Facts] *********************************************************\nchanged: [frt02.example.com]\nchanged: [frt01.example.com]\n\nTASK [Install the Apache package] *********************************************\nchanged: [frt01.example.com]\nchanged: [frt02.example.com]\n\nTASK [Start the Apache server] *************************************************\nchanged: [frt01.example.com]\nchanged: [frt02.example.com]\n\nPLAY [Play 2 - configure the application servers] *******************************\n\nTASK [Gathering Facts] *********************************************************\nchanged: [app01.example.com]\nchanged: [app02.example.com]\n\nTASK [Install Tomcat] **********************************************************\nchanged: [app02.example.com]\nchanged: [app01.example.com]\n\nTASK [Start the Tomcat server] *************************************************\nchanged: [app02.example.com]\nchanged: [app01.example.com]\n\nPLAY RECAP *********************************************************************\napp01.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrt01.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrt02.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\nsite.yml\nfrontends.yml\ndbservers.yml\nroles/\n   installapache/\n     tasks/\n     handlers/\n     templates/\n     vars/\n     defaults/\n   installtomcat/\n     tasks/\n     meta/\n```", "```\n[frontends]\nfrt01.example.com https_port=8443\nfrt02.example.com http_proxy=proxy.example.com\n\n[frontends:vars]\nntp_server=ntp.frt.example.com\nproxy=proxy.frt.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[webapp:children]\nfrontends\napps\n\n[webapp:vars]\nproxy_server=proxy.webapp.example.com\nhealth_check_retry=3\nhealth_check_interal=60\n```", "```\n$ mkdir -p roles/installapache/tasks\n```", "```\n---\n- name: import a tasks based on OS platform \n import_tasks: centos.yml \n  when: ansible_distribution == 'CentOS' \n- import_tasks: ubuntu.yml \n  when: ansible_distribution == 'Ubuntu'\n```", "```\n---\n- name: Install Apache using yum\n yum:\n    name: \"httpd\"\n    state: latest\n- name: Start the Apache server\n  service:\n    name: httpd\n    state: started \n```", "```\n---\n- name: Install Apache using apt\n apt:\n    name: \"apache2\"\n    state: latest\n- name: Start the Apache server\n  service:\n    name: apache2\n    state: started\n```", "```\n---\n- name: Install Apache using a role\n  hosts: frontends\n  become: true\n\n  roles:\n    - installapache\n```", "```\n.\n\u251c\u2500\u2500 roles\n\u2502   \u2514\u2500\u2500 installapache\n\u2502   \u2514\u2500\u2500 tasks\n\u2502   \u251c\u2500\u2500 centos.yml\n\u2502   \u251c\u2500\u2500 main.yml\n\u2502   \u2514\u2500\u2500 ubuntu.yml\n\u2514\u2500\u2500 site.yml\n```", "```\n$ ansible-playbook -i hosts site.yml\n\nPLAY [Install Apache using a role] *********************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt01.example.com]\nok: [frt02.example.com]\n\nTASK [installapache : Install Apache using yum] ********************************\nchanged: [frt02.example.com]\nchanged: [frt01.example.com]\n\nTASK [installapache : Start the Apache server] *********************************\nchanged: [frt01.example.com]\nchanged: [frt02.example.com]\n\nTASK [installapache : Install Apache using apt] ********************************\nskipping: [frt01.example.com]\nskipping: [frt02.example.com]\n\nTASK [installapache : Start the Apache server] *********************************\nskipping: [frt01.example.com]\nskipping: [frt02.example.com]\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0\nfrt02.example.com : ok=3 changed=2 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0\n```", "```\n--- \n- name: Play to import and include a role\n hosts: frontends\n\n tasks:\n  - import_role:\n      name: common\n  - include_role:\n      name: approle\n```", "```\n---\n- name: Role variables and meta playbook\n  hosts: frt01.example.com\n\n  roles:\n    - platform\n```", "```\n$ mkdir -p roles/platform/meta\n```", "```\n---\ndependencies:\n- role: linuxtype\n  vars:\n    type: centos\n- role: linuxtype\n  vars:\n    type: ubuntu\n```", "```\n$ mkdir -p roles/linuxtype/meta/\n```", "```\n---\ndependencies:\n- role: version\n- role: network\n```", "```\n$ mkdir -p roles/version/meta\n$ mkdir -p roles/version/tasks\n```", "```\n---\nallow_duplicates: true\n```", "```\n---\n- name: Print type variable\n  debug:\n    var: type\n```", "```\n$ mkdir -p roles/network/meta\n$ mkdir -p roles/network/tasks\n```", "```\n---\nallow_duplicates: true\n```", "```\n---\n- name: Print type variable\n  debug:\n    var: type\n```", "```\n.\n\u251c\u2500\u2500 hosts\n\u251c\u2500\u2500 roles\n\u2502   \u251c\u2500\u2500 linuxtype\n\u2502   \u2502   \u2514\u2500\u2500 meta\n\u2502   \u2502       \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 network\n\u2502   \u2502   \u251c\u2500\u2500 meta\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u2502   \u2514\u2500\u2500 tasks\n\u2502   \u2502       \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 platform\n\u2502   \u2502   \u2514\u2500\u2500 meta\n\u2502   \u2502       \u2514\u2500\u2500 main.yml\n\u2502   \u2514\u2500\u2500 version\n\u2502       \u251c\u2500\u2500 meta\n\u2502       \u2502   \u2514\u2500\u2500 main.yml\n\u2502       \u2514\u2500\u2500 tasks\n\u2502           \u2514\u2500\u2500 main.yml\n\u2514\u2500\u2500 site.yml\n\n11 directories, 8 files\n```", "```\n$ ansible-playbook -i hosts site.yml\n\nPLAY [Role variables and meta playbook] ****************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt01.example.com]\n\nTASK [version : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"ubuntu\"\n}\n\nTASK [network : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"ubuntu\"\n}\n\nTASK [version : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"ubuntu\"\n}\n\nTASK [network : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"ubuntu\"\n}\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=5 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\ndependencies:\n- role: linuxtype\n  type: centos\n- role: linuxtype\n  type: ubuntu\n```", "```\n$ ansible-playbook -i hosts site.yml\n\nPLAY [Role variables and meta playbook] ****************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt01.example.com]\n\nTASK [version : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"centos\"\n}\n\nTASK [network : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"centos\"\n}\n\nTASK [version : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"ubuntu\"\n}\n\nTASK [network : Print type variable] *******************************************\nok: [frt01.example.com] => {\n \"type\": \"ubuntu\"\n}\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=5 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ ansible-galaxy role install -p roles/ arillso.motd\n```", "```\n$ ansible-galaxy role init --init-path roles/ testrole\n- Role testrole was created successfully\n$ tree roles/testrole/\nroles/testrole/\n\u251c\u2500\u2500 defaults\n\u2502   \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 files\n\u251c\u2500\u2500 handlers\n\u2502   \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 meta\n\u2502   \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 tasks\n\u2502   \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 templates\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 inventory\n\u2502   \u2514\u2500\u2500 test.yml\n\u2514\u2500\u2500 vars\n \u2514\u2500\u2500 main.yml \n```", "```\n[frontends]\nfrt01.example.com https_port=8443\nfrt02.example.com http_proxy=proxy.example.com\n\n[frontends:vars]\nntp_server=ntp.frt.example.com\nproxy=proxy.frt.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[webapp:children]\nfrontends\napps\n\n[webapp:vars]\nproxy_server=proxy.webapp.example.com\nhealth_check_retry=3\nhealth_check_interal=60\n```", "```\n---\n- name: Play to patch only CentOS systems\n  hosts: all\n  become: true\n\n  tasks:\n  - name: Patch CentOS systems\n    yum:\n      name: httpd\n      state: latest\n    when: ansible_facts['distribution'] == \"CentOS\"\n```", "```\n$ ansible-playbook -i hosts condition.yml\n\nPLAY [Play to patch only CentOS systems] ***************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt02.example.com]\nok: [app01.example.com]\nok: [frt01.example.com]\nok: [app02.example.com]\n\nTASK [Patch CentOS systems] ****************************************************\nok: [app01.example.com]\nchanged: [frt01.example.com]\nok: [app02.example.com]\nok: [frt02.example.com]\n\nPLAY RECAP *********************************************************************\napp01.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrt01.example.com : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\nfrt02.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\n- name: Play to patch only CentOS systems\n  hosts: all\n  become: true\n\n  tasks:\n  - name: Patch CentOS systems\n    yum:\n      name: httpd\n      state: latest\n    when: (ansible_facts['distribution'] == \"CentOS\" and ansible_facts['distribution_major_version'] == \"6\")\n```", "```\n$ ansible-playbook -i hosts condition2.yml\n\nPLAY [Play to patch only CentOS systems] ***************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt01.example.com]\nok: [app02.example.com]\nok: [app01.example.com]\nok: [frt02.example.com]\n\nTASK [Patch CentOS systems] ****************************************************\nchanged: [app01.example.com]\nskipping: [frt01.example.com]\nskipping: [frt02.example.com]\nskipping: [app02.example.com]\n\nPLAY RECAP *********************************************************************\napp01.example.com : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\napp02.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0\nfrt01.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0\nfrt02.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0\n```", "```\n---\n- name: Play to patch only CentOS systems\n  hosts: localhost\n  become: true\n\n  tasks:\n    - name: Gather directory listing from local system\n      shell: \"ls -l\"\n      register: shellresult\n\n    - name: Alert if we find a hosts file\n      debug:\n        msg: \"Found hosts file!\"\n      when: '\"hosts\" in shellresult.stdout'\n```", "```\n$ ansible-playbook condition3.yml\n[WARNING]: provided hosts list is empty, only localhost is available. Note that\nthe implicit localhost does not match 'all'\n\nPLAY [Play to patch only CentOS systems] ***************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [localhost]\n\nTASK [Gather directory listing from local system] ******************************\nchanged: [localhost]\n\nTASK [Alert if we find a hosts file] *******************************************\nok: [localhost] => {\n \"msg\": \"Found hosts file!\"\n}\n\nPLAY RECAP *********************************************************************\nlocalhost : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ ansible-playbook condition3.yml\n[WARNING]: provided hosts list is empty, only localhost is available. Note that\nthe implicit localhost does not match 'all'\n\nPLAY [Play to patch only CentOS systems] ***************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [localhost]\n\nTASK [Gather directory listing from local system] ******************************\nchanged: [localhost]\n\nTASK [Alert if we find a hosts file] *******************************************\nskipping: [localhost]\n\nPLAY RECAP *********************************************************************\nlocalhost : ok=2 changed=1 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0\n```", "```\ntasks:\n  - name: Only perform this task on Fedora 25 and later\n shell: echo \"only on Fedora 25 and later\"\n    when: ansible_facts['distribution'] == \"Fedora\" and ansible_facts['distribution_major_version']|int >= 25 \n```", "```\n[frontends]\nfrt01.example.com https_port=8443\nfrt02.example.com http_proxy=proxy.example.com\n\n[frontends:vars]\nntp_server=ntp.frt.example.com\nproxy=proxy.frt.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[webapp:children]\nfrontends\napps\n\n[webapp:vars]\nproxy_server=proxy.webapp.example.com\nhealth_check_retry=3\nhealth_check_interal=60\n```", "```\n---\n- name: Simple loop demo play\n  hosts: frt01.example.com\n\n  tasks:\n    - name: Echo a value from the loop\n      command: echo \"{{ item }}\"\n      loop:\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n```", "```\n$ ansible-playbook -i hosts loop1.yml\n\nPLAY [Simple loop demo play] ***************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt01.example.com]\n\nTASK [Echo a value from the loop] **********************************************\nchanged: [frt01.example.com] => (item=1)\nchanged: [frt01.example.com] => (item=2)\nchanged: [frt01.example.com] => (item=3)\nchanged: [frt01.example.com] => (item=4)\nchanged: [frt01.example.com] => (item=5)\nchanged: [frt01.example.com] => (item=6)\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n\n---\n- name: Simple loop demo play\n  hosts: frt01.example.com\n\n  tasks:\n    - name: Echo a value from the loop\n      command: echo \"{{ item }}\"\n      loop:\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n      when: item|int > 3\n```", "```\n$ ansible-playbook -i hosts loop2.yml\n\nPLAY [Simple loop demo play] ***************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt01.example.com]\n\nTASK [Echo a value from the loop] **********************************************\nskipping: [frt01.example.com] => (item=1)\nskipping: [frt01.example.com] => (item=2)\nskipping: [frt01.example.com] => (item=3)\nchanged: [frt01.example.com] => (item=4)\nchanged: [frt01.example.com] => (item=5)\nchanged: [frt01.example.com] => (item=6)\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n---\n- name: Simple loop demo play\n  hosts: frt01.example.com\n\n  tasks:\n    - name: Echo a value from the loop\n      command: echo \"{{ item }}\"\n      loop:\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n      when: item|int > 3\n      register: loopresult\n\n    - name: Print the results from the loop\n      debug:\n        var: loopresult\n```", "```\n$ ansible-playbook -i hosts loop3.yml\n\nPLAY [Simple loop demo play] ***************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt01.example.com]\n\nTASK [Echo a value from the loop] **********************************************\nskipping: [frt01.example.com] => (item=1)\nskipping: [frt01.example.com] => (item=2)\nskipping: [frt01.example.com] => (item=3)\nchanged: [frt01.example.com] => (item=4)\nchanged: [frt01.example.com] => (item=5)\nchanged: [frt01.example.com] => (item=6)\n\nTASK [Print the results from the loop] *****************************************\nok: [frt01.example.com] => {\n \"loopresult\": {\n \"changed\": true,\n \"msg\": \"All items completed\",\n \"results\": [\n {\n \"ansible_loop_var\": \"item\",\n \"changed\": false,\n \"item\": 1,\n \"skip_reason\": \"Conditional result was False\",\n \"skipped\": true\n },\n {\n \"ansible_loop_var\": \"item\",\n \"changed\": false,\n \"item\": 2,\n \"skip_reason\": \"Conditional result was False\",\n \"skipped\": true\n },\n```", "```\n---\n- name: Play to demonstrate nested loops\n  hosts: localhost\n\n  tasks:\n    - name: Outer loop\n      include_tasks: loopsubtask.yml\n      loop:\n        - a\n        - b\n        - c\n      loop_control:\n        loop_var: second_item\n```", "```\n---\n- name: Inner loop\n  debug:\n    msg: \"second item={{ second_item }} first item={{ item }}\"\n  loop:\n    - 100\n    - 200\n    - 300\n```", "```\n$ ansible-playbook loopmain.yml\n[WARNING]: provided hosts list is empty, only localhost is available. Note that\nthe implicit localhost does not match 'all'\n\nPLAY [Play to demonstrate nested loops] ****************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [localhost]\n\nTASK [Outer loop] **************************************************************\nincluded: /root/Practical-Ansible-2/Chapter 4/loopsubtask.yml for localhost\nincluded: /root/Practical-Ansible-2/Chapter 4/loopsubtask.yml for localhost\nincluded: /root/Practical-Ansible-2/Chapter 4/loopsubtask.yml for localhost\n\nTASK [Inner loop] **************************************************************\nok: [localhost] => (item=100) => {\n \"msg\": \"second item=a first item=100\"\n}\nok: [localhost] => (item=200) => {\n \"msg\": \"second item=a first item=200\"\n}\nok: [localhost] => (item=300) => {\n \"msg\": \"second item=a first item=300\"\n}\n\nTASK [Inner loop] **************************************************************\nok: [localhost] => (item=100) => {\n \"msg\": \"second item=b first item=100\"\n}\nok: [localhost] => (item=200) => {\n \"msg\": \"second item=b first item=200\"\n}\nok: [localhost] => (item=300) => {\n \"msg\": \"second item=b first item=300\"\n}\n\nTASK [Inner loop] **************************************************************\nok: [localhost] => (item=100) => {\n \"msg\": \"second item=c first item=100\"\n}\nok: [localhost] => (item=200) => {\n \"msg\": \"second item=c first item=200\"\n}\nok: [localhost] => (item=300) => {\n \"msg\": \"second item=c first item=300\"\n}\n\nPLAY RECAP *********************************************************************\nlocalhost : ok=7 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n[frontends]\nfrt01.example.com https_port=8443\nfrt02.example.com http_proxy=proxy.example.com\n\n[frontends:vars]\nntp_server=ntp.frt.example.com\nproxy=proxy.frt.example.com\n\n[apps]\napp01.example.com\napp02.example.com\n\n[webapp:children]\nfrontends\napps\n\n[webapp:vars]\nproxy_server=proxy.webapp.example.com\nhealth_check_retry=3\nhealth_check_interal=60\n```", "```\n---\n- name: Conditional block play\n  hosts: all\n  become: true\n\n  tasks:\n  - name: Install and configure Apache\n    block:\n      - name: Install the Apache package\n        dnf:\n          name: httpd\n          state: installed\n      - name: Install the templated configuration to a dummy location\n        template:\n          src: templates/src.j2\n          dest: /tmp/my.conf\n      - name: Start the httpd service\n        service:\n          name: httpd\n          state: started\n          enabled: True\n    when: ansible_facts['distribution'] == 'Fedora'\n```", "```\n$ ansible-playbook -i hosts blocks.yml\n\nPLAY [Conditional block play] **************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [app02.example.com]\nok: [frt01.example.com]\nok: [app01.example.com]\nok: [frt02.example.com]\n\nTASK [Install the Apache package] **********************************************\nchanged: [frt01.example.com]\nchanged: [frt02.example.com]\nskipping: [app01.example.com]\nskipping: [app02.example.com]\n\nTASK [Install the templated configuration to a dummy location] *****************\nchanged: [frt01.example.com]\nchanged: [frt02.example.com]\nskipping: [app01.example.com]\nskipping: [app02.example.com]\n\nTASK [Start the httpd service] *************************************************\nchanged: [frt01.example.com]\nchanged: [frt02.example.com]\nskipping: [app01.example.com]\nskipping: [app02.example.com]\n\nPLAY RECAP *********************************************************************\napp01.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=3 rescued=0 ignored=0\napp02.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=3 rescued=0 ignored=0\nfrt01.example.com : ok=4 changed=3 unreachable=0 failed=0 skipped=3 rescued=0 ignored=0\nfrt02.example.com : ok=4 changed=3 unreachable=0 failed=0 skipped=3 rescued=0 ignored=0\n```", "```\n---\n- name: Play to demonstrate block error handling\n  hosts: frontends\n\n  tasks:\n    - name: block to handle errors\n      block:\n        - name: Perform a successful task\n          debug:\n            msg: 'Normally executing....'\n        - name: Deliberately create an error\n          command: /bin/whatever\n        - name: This task should not run if the previous one results in an error\n          debug:\n            msg: 'Never print this message if the above command fails!!!!'\n      rescue:\n        - name: Catch the error (and perform recovery actions)\n          debug:\n            msg: 'Caught the error'\n        - name: Deliberately create another error\n          command: /bin/whatever\n        - name: This task should not run if the previous one results in an error\n          debug:\n            msg: 'Do not print this message if the above command fails!!!!'\n      always:\n        - name: This task always runs!\n          debug:\n            msg: \"Tasks in this part of the play will be ALWAYS executed!!!!\"\n```", "```\n$ ansible-playbook -i hosts blocks-error.yml\n\nPLAY [Play to demonstrate block error handling] ********************************\n\nTASK [Gathering Facts] *********************************************************\nok: [frt02.example.com]\nok: [frt01.example.com]\n\nTASK [Perform a successful task] ***********************************************\nok: [frt01.example.com] => {\n    \"msg\": \"Normally executing....\"\n}\nok: [frt02.example.com] => {\n    \"msg\": \"Normally executing....\"\n}\n\nTASK [Deliberately create an error] ********************************************\nfatal: [frt01.example.com]: FAILED! => {\"changed\": false, \"cmd\": \"/bin/whatever\", \"msg\": \"[Errno 2] No such file or directory\", \"rc\": 2}\nfatal: [frt02.example.com]: FAILED! => {\"changed\": false, \"cmd\": \"/bin/whatever\", \"msg\": \"[Errno 2] No such file or directory\", \"rc\": 2}\n\nTASK [Catch the error (and perform recovery actions)] **************************\nok: [frt01.example.com] => {\n    \"msg\": \"Caught the error\"\n}\nok: [frt02.example.com] => {\n    \"msg\": \"Caught the error\"\n}\n\nTASK [Deliberately create another error] ***************************************\nfatal: [frt01.example.com]: FAILED! => {\"changed\": false, \"cmd\": \"/bin/whatever\", \"msg\": \"[Errno 2] No such file or directory\", \"rc\": 2}\nfatal: [frt02.example.com]: FAILED! => {\"changed\": false, \"cmd\": \"/bin/whatever\", \"msg\": \"[Errno 2] No such file or directory\", \"rc\": 2}\n\nTASK [This task always runs!] **************************************************\nok: [frt01.example.com] => {\n    \"msg\": \"Tasks in this part of the play will be ALWAYS executed!!!!\"\n}\nok: [frt02.example.com] => {\n    \"msg\": \"Tasks in this part of the play will be ALWAYS executed!!!!\"\n}\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=4 changed=0 unreachable=0 failed=1 skipped=0 rescued=1 ignored=0\nfrt02.example.com : ok=4 changed=0 unreachable=0 failed=1 skipped=0 rescued=1 ignored=0\n```", "```\n---\n- name: Play to demonstrate the debug strategy\n  hosts: frt01.example.com\n  strategy: debug\n  debugger: on_failed\n  gather_facts: no\n  vars:\n    username: daniel\n\n  tasks:\n    - name: Generate an error by referencing an undefined variable\n      ping: data={{ mobile }}\n```", "```\n$ ansible-playbook -i hosts debug.yml\n\nPLAY [Play to demonstrate the debug strategy] **********************************\n\nTASK [Generate an error by referencing an undefined variable] ******************\nfatal: [frt01.example.com]: FAILED! => {\"msg\": \"The task includes an option with an undefined variable. The error was: 'mobile' is undefined\\n\\nThe error appears to be in '/root/Practical-Ansible-2/Chapter 4/debug.yml': line 11, column 7, but may\\nbe elsewhere in the file depending on the exact syntax problem.\\n\\nThe offending line appears to be:\\n\\n tasks:\\n - name: Generate an error by referencing an undefined variable\\n ^ here\\n\"}\n[frt01.example.com] TASK: Generate an error by referencing an undefined variable (debug)>\n\n[frt02.prod.com] TASK: make an error with refering incorrect variable (debug)> p task_vars\n{'ansible_check_mode': False,\n 'ansible_current_hosts': [u'frt02.prod.com'],\n 'ansible_diff_mode': False,\n 'ansible_facts': {},\n 'ansible_failed_hosts': [],\n 'ansible_forks': 5,\n...\n[frt02.prod.com] TASK: make an error with refering incorrect variable (debug)> quit\nUser interrupted execution\n$ \n```", "```\n[frt01.example.com] TASK: Generate an error by referencing an undefined variable (debug)> p task\nTASK: Generate an error by referencing an undefined variable\n```", "```\n[frt01.example.com] TASK: Generate an error by referencing an undefined variable (debug)> p task.args\n{u'data': u'{{ mobile }}'}\n```", "```\n[frt01.example.com] TASK: Generate an error by referencing an undefined variable (debug)> p task_vars\n{'ansible_check_mode': False,\n 'ansible_current_hosts': [u'frt01.example.com'],\n 'ansible_dependent_role_names': [],\n 'ansible_diff_mode': False,\n 'ansible_facts': {},\n 'ansible_failed_hosts': [],\n 'ansible_forks': 5,\n```", "```\n[frt01.example.com] TASK: Generate an error by referencing an undefined variable (debug)> q\nUser interrupted execution\n$\n```", "```\n$ ansible-pull -d /var/ansible-set-motd -i ${HOSTNAME}, -U https://github.com/jamesfreeman959/ansible-set-motd.git site.yml -e \"ag_motd_content='MOTD generated by ansible-pull'\" >> /tmp/ansible-pull.log 2>&1\n```", "```\n$ ansible-pull -d /var/ansible-set-motd -i ${HOSTNAME}, -U https://github.com/jamesfreeman959/ansible-set-motd.git site.yml -e \"ag_motd_content='MOTD generated by ansible-pull'\"\nStarting Ansible Pull at 2020-04-14 17:26:21\n/usr/bin/ansible-pull -d /var/ansible-set-motd -i cookbook, -U https://github.com/jamesfreeman959/ansible-set-motd.git site.yml -e ag_motd_content='MOTD generated by ansible-pull'\ncookbook |[WARNING]: SUCCESS = Your git > {\n    \"aversion isfter\": \"7d too old t3a191ecb2do fully suebe7f84f4fpport the a5817b0f1bdepth argu49c4cd54\",ment.\nFall\n    \"ansing back tible_factso full che\": {\n     ckouts.\n   \"discovered_interpreter_python\": \"/usr/bin/python\"\n    },\n    \"before\": \"7d3a191ecb2debe7f84f4fa5817b0f1b49c4cd54\",\n    \"changed\": false,\n    \"remote_url_changed\": false\n}\n\nPLAY [Update the MOTD on hosts] ************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [cookbook]\n\nTASK [ansible.motd : Add 99-footer file] ***************************************\nskipping: [cookbook]\n\nTASK [ansible.motd : Delete 99-footer file] ************************************\nok: [cookbook]\n\nTASK [ansible.motd : Delete /etc/motd file] ************************************\nskipping: [cookbook]\n\nTASK [ansible.motd : Check motd tail supported] ********************************\nfatal: [cookbook]: FAILED! => {\"changed\": true, \"cmd\": \"test -f /etc/update-motd.d/99-footer\", \"delta\": \"0:00:00.004444\", \"end\": \"2020-04-14 17:26:25.489793\", \"msg\": \"non-zero return code\", \"rc\": 1, \"start\": \"2020-04-14 17:26:25.485349\", \"stderr\": \"\", \"stderr_lines\": [], \"stdout\": \"\", \"stdout_lines\": []}\n...ignoring\n\nTASK [ansible.motd : Add motd tail] ********************************************\nskipping: [cookbook]\n\nTASK [ansible.motd : Add motd] *************************************************\nchanged: [cookbook]\n\nPLAY RECAP *********************************************************************\ncookbook : ok=4 changed=2 unreachable=0 failed=0 skipped=3 rescued=0 ignored=1\n```"]