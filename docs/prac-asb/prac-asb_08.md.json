["```\n$ ls /usr/lib/python2.7/site-packages/ansible/plugins/\naction    cliconf       httpapi        inventory    lookup     terminal\nbecome    connection    __init__.py    loader.py    netconf    test\ncache     doc_fragments __init__.pyc   loader.pyc   shell      vars\ncallback  filter        __init__.pyo   loader.pyo   strategy\n```", "```\n$ ls -l /usr/lib/python2.7/site-packages/ansible/plugins/connection/paramiko_ssh.py\n-rw-r--r-- 1 root root 23544 Mar 5 05:39 /usr/lib/python2.7/site-packages/ansible/plugins/connection/paramiko_ssh.py\n```", "```\n$ git clone https://github.com/ansible/ansible.git\n$ cd ansible\n```", "```\n$ cd lib/ansible/plugins\n```", "```\n$ ls -al connection/\n```", "```\n$ ls -al connection/\ntotal 176\ndrwxr-xr-x 2 root root 109 Apr 15 17:24 .\ndrwxr-xr-x 19 root root 297 Apr 15 17:24 ..\n-rw-r--r-- 1 root root 16411 Apr 15 17:24 __init__.py\n-rw-r--r-- 1 root root 6855 Apr 15 17:24 local.py\n-rw-r--r-- 1 root root 23525 Apr 15 17:24 paramiko_ssh.py\n-rw-r--r-- 1 root root 32839 Apr 15 17:24 psrp.py\n-rw-r--r-- 1 root root 55367 Apr 15 17:24 ssh.py\n-rw-r--r-- 1 root root 31277 Apr 15 17:24 winrm.py\n```", "```\n$ less connection/paramiko_ssh.py\n```", "```\n# (c) 2012, Michael DeHaan <michael.dehaan@gmail.com>\n# (c) 2017 Ansible Project\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nDOCUMENTATION = \"\"\"\n author: Ansible Core Team\n connection: paramiko\n short_description: Run tasks via python ssh (paramiko)\n description:\n - Use the python ssh implementation (Paramiko) to connect to targets\n - The paramiko transport is provided because many distributions, in particular EL6 and before do not support ControlPersist\n in their SSH implementations.\n....\n```", "```\n$ sudo dnf install python python-devel\n```", "```\n$ sudo yum install python python-devel\n```", "```\n$ sudo apt-get update\n$ sudo apt-get install python-pip python-dev build-essential \n```", "```\n$ sudo brew install python\n```", "```\n$ git clone https://github.com/ansible/ansible.git\n$ cd ansible\n```", "```\n# (c) 2020, James Freeman <james.freeman@example.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n```", "```\ndef improve_automation(a):\n return a.replace(\"Puppet\", \"Ansible\")\n```", "```\nclass FilterModule(object):\n       '''improve_automation filters'''\n       def filters(self):\n           return {'improve_automation': improve_automation}\n```", "```\n---\n- name: Play to demonstrate our custom filter\n  hosts: frontends\n  gather_facts: false\n  vars:\n    statement: \"Puppet is an excellent automation tool!\"\n\n  tasks:\n    - name: make a statement\n      debug:\n        msg: \"{{ statement | improve_automation }}\"\n```", "```\n.\n\u251c\u2500\u2500 filter_plugins\n\u2502   \u251c\u2500\u2500 custom_filter.py\n\u251c\u2500\u2500 hosts\n\u251c\u2500\u2500 myplugin.yml\n```", "```\n$ ansible-playbook -i hosts myplugin.yml\n\nPLAY [Play to demonstrate our custom filter] ***********************************\n\nTASK [make a statement] ********************************************************\nok: [frt01.example.com] => {\n \"msg\": \"Ansible is an excellent automation tool!\"\n}\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n# (c) 2020, James Freeman <james.freeman@example.com>\n# (c) 2012, Daniel Hokka Zakrisson <daniel@hozac.com>\n# (c) 2017 Ansible Project\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n```", "```\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n```", "```\nDOCUMENTATION = \"\"\"\n    lookup: firstchar\n    author: James Freeman <james.freeman@example.com>\n    version_added: \"2.9\"\n    short_description: read the first character of file contents\n    description:\n        - This lookup returns the first character of the contents from a file on the Ansible controller's file system.\n    options:\n      _terms:\n        description: path(s) of files to read\n        required: True\n    notes:\n      - if read in variable context, the file can be interpreted as YAML if the content is valid to the parser.\n      - this lookup does not understand 'globing', use the fileglob lookup instead.\n\"\"\"\n```", "```\nEXAMPLES = \"\"\"\n- debug: msg=\"the first character in foo.txt is {{lookup('firstchar', '/etc/foo.txt') }}\"\n\n\"\"\"\n```", "```\nRETURN = \"\"\"\n  _raw:\n    description:\n      - first character of content of file(s)\n\"\"\"\n```", "```\nfrom ansible.errors import AnsibleError, AnsibleParserError\nfrom ansible.plugins.lookup import LookupBase\nfrom ansible.utils.display import Display\n\ndisplay = Display()\n```", "```\nclass LookupModule(LookupBase):\n\n    def run(self, terms, variables=None, **kwargs):\n\n        ret = []\n```", "```\n      for term in terms:\n            display.debug(\"File lookup term: %s\" % term)\n\n   lookupfile = self.find_file_in_search_path(variables, 'files', term)\n\n      display.vvvv(u\"File lookup using %s as file\" % lookupfile)\n```", "```\n            try:\n                if lookupfile:\n               contents, show_data = self._loader._get_file_contents(lookupfile)\n                    ret.append(contents.rstrip()[0])\n                else:\n                    raise AnsibleParserError()\n            except AnsibleParserError:\n                raise AnsibleError(\"could not locate file in lookup: %s\" % term)\n```", "```\n        return ret\n```", "```\n---\n- name: Play to demonstrate our custom lookup plugin\n  hosts: frontends\n  gather_facts: false\n\n  tasks:\n    - name: make a statement\n      debug:\n        msg: \"{{ lookup('firstchar', 'testdoc.txt')}}\"\n```", "```\nHello\n```", "```\n.\n\u251c\u2500\u2500 hosts\n\u251c\u2500\u2500 lookup_plugins\n\u2502   \u2514\u2500\u2500 firstchar.py\n\u251c\u2500\u2500 myplugin2.yml\n\u2514\u2500\u2500 testdoc.txt\n```", "```\n$ ansible-playbook -i hosts myplugin2.yml\n\nPLAY [Play to demonstrate our custom lookup plugin] ****************************\n\nTASK [make a statement] ********************************************************\nok: [frt01.example.com] => {\n \"msg\": \"H\"\n}\n\nPLAY RECAP *********************************************************************\nfrt01.example.com : ok=1 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ git clone https://github.com/ansible/ansible.git\n$ cd ansible\n```", "```\n$ cp ~/custom_filter.py ./lib/ansible/plugins/filter/\n```", "```\n$ cp ~/firstchar.py ./lib/ansible/plugins/lookup/\n```", "```\n$ . hacking/env-setup\nrunning egg_info\ncreating lib/ansible.egg-info\nwriting requirements to lib/ansible.egg-info/requires.txt\nwriting lib/ansible.egg-info/PKG-INFO\nwriting top-level names to lib/ansible.egg-info/top_level.txt\nwriting dependency_links to lib/ansible.egg-info/dependency_links.txt\nwriting manifest file 'lib/ansible.egg-info/SOURCES.txt'\nreading manifest file 'lib/ansible.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwarning: no files found matching 'SYMLINK_CACHE.json'\nwriting manifest file 'lib/ansible.egg-info/SOURCES.txt'\n\nSetting up Ansible to run out of checkout...\n\nPATH=/home/james/ansible/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin\nPYTHONPATH=/home/james/ansible/lib\nMANPATH=/home/james/ansible/docs/man:/usr/local/share/man:/usr/share/man\n\nRemember, you may wish to specify your host file with -i\n\nDone!\n\n$ ansible-doc -t lookup firstchar\n> FIRSTCHAR (/home/james/ansible/lib/ansible/plugins/lookup/firstchar.py)\n\n This lookup returns the first character of the contents from a\n file on the Ansible controller's file system.\n\n * This module is maintained by The Ansible Community\nOPTIONS (= is mandatory):\n\n= _terms\n path(s) of files to read\n```", "```\n$ git clone https://github.com/<your GitHub account>/ansible.git\n```", "```\n$ cd ansible\n$ cp ~/ansible-development/plugindev/firstchar.py ./lib/ansible/plugins/lookup\n$ git add lib/ansible/plugins/lookup/firstchar.py\n$ git commit -m 'Added tested version of firstchar.py for pull request creation'\n```", "```\n$ git push\n```"]