["```\nignore_errors: yes\n```", "```\n- name: Run a command that will return 1\n command: /bin/false ignore_errors: yes\n```", "```\n--- - hosts: target_host\n tasks: - name: Display all variables/facts known for a host debug: var: hostvars[inventory_hostname]\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - shell: /usr/bin/uptime\n      register: result\n    - debug:\n        var: result\n```", "```\n$ ansible-playbook debug.yaml\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [shell] **************************************************************************************\nchanged: [localhost]\n\nTASK [debug] **************************************************************************************\nok: [localhost] => {\n    \"result\": {\n        \"changed\": true,\n        \"cmd\": \"/usr/bin/uptime\",\n        \"delta\": \"0:00:00.003461\",\n        \"end\": \"2019-06-16 11:30:51.087322\",\n        \"failed\": false,\n        \"rc\": 0,\n        \"start\": \"2019-06-16 11:30:51.083861\",\n        \"stderr\": \"\",\n        \"stderr_lines\": [],\n        \"stdout\": \" 11:30:51 up 40 min, 1 user, load average: 1.11, 0.73, 0.53\",\n        \"stdout_lines\": [\n            \" 11:30:51 up 40 min, 1 user, load average: 1.11, 0.73, 0.53\"\n        ]\n    }\n}\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n---\n- hosts: localhost\n  tasks:\n    - shell: /usr/bin/uptime\n      register: result\n    - debug:\n       var: result\n       verbosity: 2\n```", "```\nTASK [debug] **************************************************************************************\nskipping: [localhost]\n```", "```\n$ ansible-playbook debug2.yaml -vv\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Touch a file\n      file:\n        path: /tmp/myfile\n        state: touch\n```", "```\n$ ansible-playbook check-mode.yaml --check\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [Touch a file] *******************************************************************************\nok: [localhost]\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ ansible-playbook check-mode.yaml --diff\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [Touch a file] *******************************************************************************\n--- before\n+++ after\n@@ -1,6 +1,6 @@\n {\n- \"atime\": 1560693571.3594637,\n- \"mtime\": 1560693571.3594637,\n+ \"atime\": 1560693571.3620908,\n+ \"mtime\": 1560693571.3620908,\n \"path\": \"/tmp/myfile\",\n- \"state\": \"absent\"\n+ \"state\": \"touch\"\n }\n\nchanged: [localhost]\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n---\n- hosts: all\n  tasks:\n    - name: Touch a file\n      file:\n        path: /tmp/myfile\n        state: touch\n```", "```\n$ ansible-playbook -i host.example.com, remote.yaml\n```", "```\nPLAY [all] ****************************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nfatal: [host.example.com]: UNREACHABLE! => {\"changed\": false, \"msg\": \"Failed to connect to the host via ssh: ssh: Could not resolve hostname host.example.com: Name or service not known\", \"unreachable\": true}\n\nPLAY RECAP ****************************************************************************************\nhost.example.com : ok=0 changed=0 unreachable=1 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\nPLAY [all] ****************************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nfatal: [host.example.com]: UNREACHABLE! => {\"changed\": false, \"msg\": \"Failed to connect to the host via ssh: fale@host.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).\", \"unreachable\": true}\n\nPLAY RECAP ****************************************************************************************\nhost.example.com : ok=0 changed=0 unreachable=1 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ ssh host.example.com -vvv\n```", "```\n$ ssh fale@host.example.com -vvv\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - debug:\n       var: variable\n```", "```\n$ ansible-playbook printvar.yaml --extra-vars='{\"variable\": \"Hello, World!\"}'\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [debug] **************************************************************************************\nok: [localhost] => {\n \"variable\": \"Hello, World!\"\n}\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n---\n- hosts: all\n  tasks:\n    - debug:\n        msg: \"Hello, World!\"\n```", "```\n[hosts]\nhost1.example.com\nhost2.example.com\nhost3.example.com\n```", "```\n$ ansible-playbook -i inventory helloworld.yaml\n```", "```\nPLAY [all] ****************************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [host1.example.com]\nok: [host3.example.com]\nok: [host2.example.com]\n\nTASK [debug] **************************************************************************************\nok: [host1.example.com] => {\n \"msg\": \"Hello, World!\"\n}\nok: [host2.example.com] => {\n \"msg\": \"Hello, World!\"\n}\nok: [host3.example.com] => {\n \"msg\": \"Hello, World!\"\n}\n\nPLAY RECAP ****************************************************************************************\nhost1.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \nhost2.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \nhost3.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ ansible-playbook -i inventory helloworld.yaml --limit=host3.example.com\n```", "```\nPLAY [all] ****************************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [host3.example.com]\n\nTASK [debug] **************************************************************************************\nok: [host3.example.com] => {\n \"msg\": \"Hello, World!\"\n}\n\nPLAY RECAP ****************************************************************************************\nhost3.example.com : ok=2 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ ansible-playbook -i inventory helloworld.yaml --limit=host2.example.com,host3.example.com\n\n$ ansible-playbook -i inventory helloworld.yaml --limit=host[2-3].example.com\n```", "```\n$ ansible-playbook -i inventory helloworld.yaml --limit=host4.example.com\n```", "```\n [WARNING]: Could not match supplied host pattern, ignoring: host4.example.com\n\nERROR! Specified hosts and/or --limit does not match any hosts\n```", "```\nansible-playbook -i inventory helloworld.yaml --flush-cache\n```", "```\n---\n- hosts: all\n  tasks:\n    - debug:\n      msg: \"Hello, World!\"\n```", "```\n$ ansible-playbook syntaxcheck.yaml --syntax-check\n```", "```\nERROR! 'msg' is not a valid attribute for a Task\n\nThe error appears to be in '/home/fale/ansible/Ansible2Cookbook/Ch11/syntaxcheck.yaml': line 4, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n tasks:\n - debug:\n ^ here\n\nThis error can be suppressed as a warning using the \"invalid_task_attribute_failed\" configuration\n```", "```\n---\n- hosts: all\n  tasks:\n    - debug:\n        msg: \"Hello, World!\"\n```", "```\n$  ansible-playbook syntaxcheck-fixed.yaml --syntax-check\n\nplaybook: syntaxcheck.yaml\n```"]