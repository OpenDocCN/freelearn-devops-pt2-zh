["```\n$ sudo pip install ansible-container[docker,k8s]\n```", "```\n$ ansible-container init\nAnsible Container initialized.\n```", "```\nversion: \"2\"\nsettings:\n  conductor:\n    base: centos:7\n  project_name: http-server\nservices:\n  web:\n    from: \"centos:7\"\n    roles:\n      - geerlingguy.apache\n    ports:\n      - \"80:80\"\n    command:\n      - \"/usr/bin/dumb-init\"\n      - \"/usr/sbin/apache2ctl\"\n      - \"-D\"\n      - \"FOREGROUND\"\n    dev_overrides:\n      environment:\n        - \"DEBUG=1\"\n```", "```\nk8s_namespace:\n  name: http-server\n  description: An HTTP server\n  display_name: HTTP server\n```", "```\n$ ansible-container --engine kubernetes deploy\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Get information from K8s\n      k8s_info:\n        api_version: v1\n        kind: Namespace\n      register: ns\n    - name: Print info\n      debug:\n        var: ns\n```", "```\n$ ansible-playbook k8s-ns-show.yaml\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Ensure the myns namespace exists\n      k8s:\n        api_version: v1\n        kind: Namespace\n        name: myns\n        state: present\n```", "```\n$ kubectl get ns\nNAME STATUS AGE\ndefault Active 69m\nkube-node-lease Active 69m\nkube-public Active 69m\nkube-system Active 69m\n```", "```\n$ ansible-playbook k8s-ns.yaml\n```", "```\nPLAY [localhost] *******************************************************************\n\nTASK [Gathering Facts] *************************************************************\nok: [localhost]\n\nTASK [Ensure the myns namespace exists] ********************************************\nchanged: [localhost]\n\nPLAY RECAP *************************************************************************\nlocalhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n$ kubectl get ns\nNAME STATUS AGE\ndefault Active 74m\nkube-node-lease Active 74m\nkube-public Active 74m\nkube-system Active 74m\nmyns Active 22s \n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Ensure the Service mysvc is present\n      k8s:\n        state: present\n        definition:\n          apiVersion: v1\n          kind: Service\n          metadata:\n            name: mysvc\n            namespace: myns\n          spec:\n            selector:\n              app: myapp\n              service: mysvc\n            ports:\n              - protocol: TCP\n                targetPort: 800\n                name: port-80-tcp\n                port: 80\n```", "```\n$ kubectl get svc\nNo resources found in myns namespace.\n```", "```\n$ ansible-playbook k8s-svc.yaml\n```", "```\nPLAY [localhost] *******************************************************************\n\nTASK [Gathering Facts] *************************************************************\nok: [localhost]\n\nTASK [Ensure the myns namespace exists] ********************************************\nchanged: [localhost]\n\nPLAY RECAP *************************************************************************\nlocalhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ kubectl get svc\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nmysvc ClusterIP 10.0.0.84 <none> 80/TCP 10s\n```", "```\nREPOSITORY TAG IMAGE ID CREATED SIZE\n```", "```\nCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Start a container with a command\n      docker_container:\n        name: test-container\n        image: alpine\n        command:\n          - echo\n          - \"Hello, World!\"\n```", "```\n$ ansible-playbook start-docker-container.yaml\n```", "```\nPLAY [localhost] *********************************************************************\n\nTASK [Gathering Facts] ***************************************************************\nok: [localhost]\n\nTASK [Start a container with a command] **********************************************\nchanged: [localhost]\n\nPLAY RECAP ***************************************************************************\nlocalhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0  \n```", "```\n$ docker container list -a\n```", "```\nCONTAINER ID IMAGE  COMMAND              CREATED       STATUS                        PORTS NAMES\nc706ec55fc0d alpine \"echo Hello, World!\" 3 minutes ago Exited (0) About a minute ago       test-container\n```", "```\n$ docker logs c706ec55fc0d\n```", "```\nHello, World!\n```", "```\n$ pip install boto\n```", "```\n[default] aws_access_key_id = [YOUR_KEY_HERE] aws_secret_access_key = [YOUR_SECRET_ACCESS_KEY_HERE]\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Ensure key pair is present\n      ec2_key:\n        name: fale\n        key_material: \"{{ lookup('file', '~/.ssh/fale.pub') }}\"\n    - name: Gather information of the EC2 VPC net in eu-west-1\n      ec2_vpc_net_facts:\n        region: eu-west-1\n      register: aws_simple_net\n    - name: Gather information of the EC2 VPC subnet in eu-west-1\n      ec2_vpc_subnet_facts:\n        region: eu-west-1\n        filters:\n          vpc-id: '{{ aws_simple_net.vpcs.0.id }}'\n      register: aws_simple_subnet\n    - name: Ensure wssg Security Group is present\n      ec2_group:\n        name: wssg\n        description: Web Security Group\n        region: eu-west-1\n        vpc_id: '{{ aws_simple_net.vpcs.0.id }}'\n        rules:\n          - proto: tcp\n            from_port: 22\n            to_port: 22\n            cidr_ip: 0.0.0.0/0\n          - proto: tcp\n            from_port: 80\n            to_port: 80\n            cidr_ip: 0.0.0.0/0\n          - proto: tcp\n            from_port: 443\n            to_port: 443\n            cidr_ip: 0.0.0.0/0\n        rules_egress:\n          - proto: all\n            cidr_ip: 0.0.0.0/0\n      register: aws_simple_wssg\n    - name: Setup instance\n      ec2:\n        assign_public_ip: true\n        image: ami-3548444c\n        region: eu-west-1\n        exact_count: 1\n        key_name: fale\n        count_tag:\n          Name: ws01.ansible2cookbook.com\n        instance_tags:\n          Name: ws01.ansible2cookbook.coms\n        instance_type: t2.micro\n        group_id: '{{ aws_simple_wssg.group_id }}'\n        vpc_subnet_id: '{{ aws_simple_subnet.subnets.0.id }}'\n        volumes:\n          - device_name: /dev/sda1\n            volume_type: gp2\n            volume_size: 10\n            delete_on_termination: True\n```", "```\n$ ansible-playbook aws.yaml\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [Ensure key pair is present] *****************************************************************\nok: [localhost]\n\nTASK [Gather information of the EC2 VPC net in eu-west-1] *****************************************\nok: [localhost]\n\nTASK [Gather information of the EC2 VPC subnet in eu-west-1] **************************************\nok: [localhost]\n\nTASK [Ensure wssg Security Group is present] ******************************************************\nok: [localhost]\n\nTASK [Setup instance] *****************************************************************************\nchanged: [localhost]\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=6 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ pip install requests google-auth\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: create a instance\n      gcp_compute_instance:\n        name: TestMachine\n        machine_type: n1-standard-1\n        disks:\n        - auto_delete: 'true'\n          boot: 'true'\n          initialize_params:\n            source_image: family/centos-7\n            disk_size_gb: 10\n        zone: eu-west1-c\n        auth_kind: serviceaccount\n        service_account_file: \"~/sa.json\"\n        state: present\n```", "```\n$ ansible-playbook gce.yaml\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [create a instance] **************************************************************************\nchanged: [localhost]\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ pip install 'ansible[azure]'\n```", "```\n[default] subscription_id = [YOUR_SUBSCIRPTION_ID_HERE] client_id = [YOUR_CLIENT_ID_HERE] secret = [YOUR_SECRET_HERE] tenant = [YOUR_TENANT_HERE]\n```", "```\n[default] ad_user = [YOUR_AD_USER_HERE] password = [YOUR_AD_PASSWORD_HERE]\n```", "```\n[default] ad_user = [YOUR_AD_USER_HERE] password = [YOUR_AD_PASSWORD_HERE] client_id = [YOUR_CLIENT_ID_HERE] tenant = [YOUR_TENANT_HERE] adfs_authority_url = [YOUR_ADFS_AUTHORITY_URL_HERE]\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Ensure the Storage Account is present\n      azure_rm_storageaccount:\n        resource_group: Testing\n        name: mysa\n        account_type: Standard_LRS\n    - name: Ensure the Virtual Network is present\n      azure_rm_virtualnetwork:\n        resource_group: Testing\n        name: myvn\n        address_prefixes: \"10.10.0.0/16\"\n    - name: Ensure the Subnet is present\n      azure_rm_subnet:\n        resource_group: Testing\n        name: mysn\n        address_prefix: \"10.10.0.0/24\"\n        virtual_network: myvn\n    - name: Ensure that the Public IP is set\n      azure_rm_publicipaddress:\n        resource_group: Testing\n        allocation_method: Static\n        name: myip\n    - name: Ensure a Security Group allowing SSH is present\n      azure_rm_securitygroup:\n        resource_group: Testing\n        name: mysg\n        rules:\n          - name: SSH\n            protocol: Tcp\n            destination_port_range: 22\n            access: Allow\n            priority: 101\n            direction: Inbound\n    - name: Ensure the NIC is present\n      azure_rm_networkinterface:\n        resource_group: Testing\n        name: testnic001\n        virtual_network: myvn\n        subnet: mysn\n        public_ip_name: myip\n        security_group: mysg\n    - name: Ensure the Virtual Machine is present\n      azure_rm_virtualmachine:\n        resource_group: Testing\n        name: myvm01\n        vm_size: Standard_D1\n        storage_account: mysa\n        storage_container: myvm01\n        storage_blob: myvm01.vhd\n        admin_username: admin\n        admin_password: Password!\n        network_interfaces: testnic001\n        image:\n          offer: CentOS\n          publisher: OpenLogic\n          sku: '8.0'\n          version: latest\n```", "```\n$ ansible-playbook azure.yaml\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [Ensure the Storage Account is present] ******************************************************\nchanged: [localhost] TASK [Ensure the Virtual Network is present] ******************************************************\nchanged: [localhost]\n\nTASK [Ensure the Subnet is present] ***************************************************************\nchanged: [localhost]\n\nTASK [Ensure that the Public IP is set] ***********************************************************\nchanged: [localhost]\n\nTASK [Ensure a Security Group allowing SSH is present] ********************************************\nchanged: [localhost]\n\nTASK [Ensure the NIC is present] ******************************************************************\nchanged: [localhost]\n\nTASK [Ensure the Virtual Machine is present] ******************************************************\nchanged: [localhost]\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=8 changed=7 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ pip install pyrax\n```", "```\n[rackspace_cloud] username = [YOUR_USERNAME_HERE] api_key = [YOUR_API_KEY_HERE]\n```", "```\n**$ export RAX_CREDS_FILE=~/.rackspace_credentials** \n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Ensure the my_machine exists\n      rax:\n        name: my_machine\n        flavor: 4\n        image: centos-8\n        count: 1\n        group: my_group\n        wait: True\n```", "```\n$ ansible-playbook rax.yaml\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [Ensure the my_machine exists] ***************************************************************\nchanged: [localhost]\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```", "```\n$ pip install openstacksdk\n```", "```\nclouds:\n test_cloud: region_name: MyRegion auth: auth_url: http://[YOUR_AUTH_URL_HERE]:5000/v2.0/     username: [YOUR_USERNAME_HERE]\n password: [YOUR_PASSWORD_HERE] project_name: myProject\n```", "```\n---\n- hosts: localhost\n  tasks:\n    - name: Ensure the SSH key is present on OpenStack\n      os_keypair:\n        state: present\n        name: ansible_key\n        public_key_file: \"{{ '~' | expanduser }}/.ssh/id_rsa.pub\"\n    - name: Ensure we have a CentOS image\n      get_url:\n        url: http://cloud.centos.org/centos/8/x86_64/images/CentOS-8-GenericCloud-8.1.1911-20200113.3.x86_64.qcow2\n        dest: /tmp/CentOS-8-GenericCloud-8.1.1911-20200113.3.x86_64.qcow2\n    - name: Ensure the CentOS image is in OpenStack\n      os_image:\n        name: centos\n        container_format: bare\n        disk_format: qcow2\n        state: present\n        filename: /tmp/CentOS-8-GenericCloud-8.1.1911-20200113.3.x86_64.qcow2\n    - name: Ensure the Network is present\n      os_network:\n        state: present\n        name: mynet\n        external: False\n        shared: False\n      register: net_out\n    - name: Ensure the Subnetwork is present\n      os_subnet:\n        state: present\n        network_name: \"{{ net_out.id }}\"\n        name: mysubnet\n        ip_version: 4\n        cidr: 192.168.0.0/24\n        gateway_ip: 192.168.0.1\n        enable_dhcp: yes\n        dns_nameservers:\n          - 8.8.8.8\n    - name: Ensure the Router is present\n      os_router:\n        state: present\n        name: myrouter\n        network: nova\n        external_fixed_ips:\n          - subnet: nova\n        interfaces:\n          - mysubnet\n    - name: Ensure the Security Group is present\n      os_security_group:\n        state: present\n        name: mysg\n    - name: Ensure the Security Group allows ICMP traffic\n      os_security_group_rule:\n        security_group: mysg\n        protocol: icmp\n        remote_ip_prefix: 0.0.0.0/0\n    - name: Ensure the Security Group allows SSH traffic\n      os_security_group_rule:\n        security_group: mysg\n        protocol: tcp\n        port_range_min: 22\n        port_range_max: 22\n        remote_ip_prefix: 0.0.0.0/0\n    - name: Ensure the Instance exists\n      os_server:\n        state: present\n        name: myInstance\n        image: centos\n        flavor: m1.small\n        security_groups: mysg\n        key_name: ansible_key\n        nics:\n          - net-id: \"{{ net_out.id }}\"\n```", "```\n$ ansible-playbook openstack.yaml\n```", "```\nPLAY [localhost] **********************************************************************************\n\nTASK [Gathering Facts] ****************************************************************************\nok: [localhost]\n\nTASK [Ensure the SSH key is present on OpenStack] *************************************************\nchanged: [localhost]\n\nTASK [Ensure we have a CentOS image] **************************************************************\nchanged: [localhost]\n\nTASK [Ensure the CentOS image is in OpenStack] ****************************************************\nchanged: [localhost]\n\nTASK [Ensure the Network is present] **************************************************************\nchanged: [localhost]\n\nTASK [Ensure the Subnetwork is present] ***********************************************************\nchanged: [localhost]\n\nTASK [Ensure the Router is present] ***************************************************************\nchanged: [localhost]\n\nTASK [Ensure the Security Group is present] *******************************************************\nchanged: [localhost]\n\nTASK [Ensure the Security Group allows ICMP traffic] **********************************************\nchanged: [localhost]\n\nTASK [Ensure the Security Group allows SSH traffic] ***********************************************\nchanged: [localhost]\n\nTASK [Ensure the Instance exists] *****************************************************************\nchanged: [localhost]\n\nPLAY RECAP ****************************************************************************************\nlocalhost : ok=11 changed=10 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 \n```"]