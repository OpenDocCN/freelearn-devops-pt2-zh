["```\n$ gcloud container clusters create kube\n```", "```\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lSQUpEbDRydFJWSENjSlNhL2lxcVN4d0V3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa1pUTmtaRFZtT1dJdE1UVTBPUzAwTlRoa0xXRmxZV010Tnpkak9HTTBOalV5Wm1aaQpNQjRYRFRFM01USXlOekV4TXpRek0xb1hEVEl5TVRJeU5qRXlNelF6TTFvd0x6RXRNQ3NHQTFVRUF4TWtaVE5rClpEVm1PV0l0TVRVME9TMDBOVIhaveEditedThisDoNotW0rryT0dNME5qVXlabVppTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb21pdGF4eE9DMzJwRE5nY3RLQkFKRXZhVjVBL1ZEMnByU0xYcnpsYwpOL1h1UFI2NWpVR0Z3emVNbkcvMHNrZXZoUklEUncvK3B0elNDSnR5WFhtNnUysdfsdfsdfsd4LzdHZmxSCmtnRWNPY1pZd2NzS3dIU1lRTXBQVE5Lek51b0JqcDlla0ltcnFSNW5qWHRrNU1DS0ROS2lWbVlwTVBBV2dCL1MKakRDYWpNcUxwZU5FdDlRVkluQVI3aUNTeFRHQkN5cE5ZRHd3R0ZOaFhka3B6b01rcUg2dDhmeXlSTEV1dkZTMgpJVFNOUzJsRVFPc2x4L1MxaklVVEVlSVlXclFBRlJrRGs2M2VoTnRhVzNubU0rMU9FUCtqT2ZJR3hYWVdtR29FCkgwRERBRmttRjNrcVEvR3JnbThDb3o0UWdLMlIzMEh0OVlYeUkvckxNSTF5dVFJREFRQUJveU13SVRBT0JnTsdfsdfsdhxdVCQU1DQWdRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQphSnRrdGYyZWFrcVFNQldSV2MrSGJZUzNKYjlzZktTNWFGSW14a2duVkNpMHBRVXJGWEwzNEt3dk5raG9SQUlkCklBRVpmRTUwT2p3WFdjMnluVW1XL1dMeVU4K0pQZDNWWDBML0w1SW9oMGdud1c1NU4xK0dQQTZNRWZmSnltenAKVGE3U1NmbUJaTFIyemFaSGNGWDZxeThzMEhVRHN0L2hTQ0E1WFo5bHp6U1B0WkwxUTVpanhVVUkxbjFsS1p4dwpXTndxaDhtTFBmME1xWE9sejdMT1g2YmJsQ1B6cUcxRTdRdG5leUpXNk5oL2FmQkY5V2tnT1d3TWlBMlRFMHZ3CmkrMktzdCtWQ1JkaDlRSVEzUzQvMlRTVHJhMlRCMk9WOWpYY2tYckRaeXJaTThxMzBQQjlnay8zR29pajA4N1EKOWdleUJUNGRxWXZlT3NyWmNNMWlxUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://35.202.202.37\n  name: gke_russ-kubernetes-cluster_us-central1-b_kube\ncontexts:\n- context:\n    cluster: gke_russ-kubernetes-cluster_us-central1-b_kube\n    user: gke_russ-kubernetes-cluster_us-central1-b_kube\n  name: gke_russ-kubernetes-cluster_us-central1-b_kube\ncurrent-context: gke_russ-kubernetes-cluster_us-central1-b_kube\nkind: Config\npreferences: {}\nusers:\n- name: gke_russ-kubernetes-cluster_us-central1-b_kube\n  user:\n    auth-provider:\n      config:\n        cmd-args: config config-helper --format=json\n        cmd-path: /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/gcloud\n        expiry-key: '{.credential.token_expiry}'\n        token-key: '{.credential.access_token}'\n      name: gcp\n```", "```\n$ kubectl get nodes\n```", "```\n$ kubectl get nodes\n```", "```\n$ gcloud container clusters get-credentials kube\n```", "```\n$ kubectl cluster-info\n```", "```\nUser \"system:anonymous\" cannot get services/proxy in the namespace \"kube-system\".: \"No policy matched.\\nUnknown user \\\"system:anonymous\\\"\"\n```", "```\n$ kubectl proxy\n```", "```\n$ az aks get-credentials --resource-group KubeResourceGroup --name AzureKubeCluster\n```", "```\n$ kubectl apply -f ./faas.yml,monitoring.yml\n```", "```\n$ kubectl get services\n```", "```\n$ kubectl get deployments\n```", "```\n$ kubectl expose deployment gateway --type=LoadBalancer --name=gateway-lb\n```", "```\n$ kubectl get services\n```", "```\n$ export RELEASE=v0.3.0\n$ kubectl create ns kubeless\n$ kubectl create -f https://github.com/kubeless/kubeless/releases/download/$RELEASE/kubeless-$RELEASE.yaml\n```", "```\n$ kubectl get services -n kubeless\n```", "```\n$ kubeless function deploy hello --from-file hello.py --handler hello.handler --runtime python2.7 --trigger-http\n```", "```\n$ kubectl get function\n$ kubeless function ls\n$ kubeless function call hello\n```", "```\n$ kubectl expose deployment hello --type=LoadBalancer --name=hello-lb\n```", "```\n$ kubectl get services\n```", "```\n$ kubeless function deploy hello --from-file hello.py --handler hello.handler\n--runtime python2.7 --trigger-http\n```", "```\n$ export gw=http://$(minikube ip):31112\n$ faas-cli deploy -f hello.yml --gateway $gw\n```", "```\n$ kubectl -n openwhisk expose service nginx --type=LoadBalancer --name=front-end\n$ wsk -i property set --auth 23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP --apihost https://35.188.204.73:443\n```", "```\n$ helm install --namespace fission https://github.com/fission/fission/releases/download/0.4.0/fission-all-0.4.0.tgz\n$ export FISSION_URL=http://$(kubectl --namespace fission get svc controller -o=jsonpath='{..ip}')\n$ export FISSION_ROUTER=$(kubectl --namespace fission get svc router -o=jsonpath='{..ip}')\n$ fission env create --name nodejs --image fission/node-env\n$ curl https://raw.githubusercontent.com/fission/fission/master/examples/nodejs/hello.js > hello.js\n$ fission function create --name hello --env nodejs --code hello.js\n$ fission route create --method GET --url /hello --function hello\n$ curl http://$FISSION_ROUTER/hello\n```", "```\n$ fission function list\n```", "```\n$ kubectl -n fission port-forward $(kubectl -n fission get pod -o name|grep controller|cut -f2 -d'/') 8888\n```", "```\n$ az aks browse --resource-group KubeResourceGroup --name AzureKubeCluster\n```", "```\nenv:\n  - name: WSID\n    value: <WORKSPACE ID>\n  - name: KEY\n    value: <PRIMARY KEY>\n```", "```\n$ kubectl create -f oms-daemonset.yaml\n```", "```\n$ kubectl get daemonset\n```"]