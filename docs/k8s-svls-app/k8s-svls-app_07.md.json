["```\n$ brew cask install vagrant\n```", "```\n$ choco install vagrant\n```", "```\n$ sudo apt-get update\n$ sudo apt-get install vagrant \n```", "```\n$ mkdir vagrant-test\n$ cd vagrant-test\n$ vagrant init ubuntu/xenial64\n$ vagrant up\n```", "```\nVagrant.configure(\"2\") do |config|\n config.vm.box = \"ubuntu/xenial64\"\nend\n```", "```\n$ vagrant ssh\n```", "```\n$ vagrant destroy\n```", "```\n$ cd ../\n$ rm -rf vagrant-test\n```", "```\n$ git clone --depth=1 https://github.com/apache/incubator-openwhisk.git openwhisk\n$ cd openwhisk/tools/vagrant\n$ ./hello\n```", "```\n$ curl -L --insecure https://192.168.33.13/cli/go/download/mac/amd64/wsk > /usr/local/bin/wsk\n$ chmod +x /usr/local/bin/wsk\n$ wsk help\n```", "```\n$ cd C:\\WINDOWS\\system32\n$ Invoke-WebRequest -Uri https://openwhisk.ng.bluemix.net/cli/go/download/windows/amd64/wsk.exe -UseBasicParsing -OutFile wsk.exe\n```", "```\n$ wsk help\n```", "```\n$ sudo sh -c \"curl -L --insecure https://192.168.33.13/cli/go/download/linux/amd64/wsk > /usr/local/bin/wsk\"\n$ sudo chmod +x /usr/local/bin/wsk\n```", "```\n$ wsk help\n```", "```\n$ wsk property set --apihost 192.168.33.13 --auth 23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP\n```", "```\n$ wsk property set --apihost 192.168.33.13 --auth `vagrant ssh -- cat openwhisk/ansible/files/auth.guest`\n```", "```\n$ wsk -i action invoke /whisk.system/utils/echo -p message hello --result\n```", "```\n$ mkdir openwhisk-http\n$ cd openwhisk-http\n```", "```\nfunction main(args) {\n    var msg = \"you didn't tell me who you are.\"\n    if (args.name) {\n        msg = `hello ${args.name}!`\n    }\n    return {body:\n       `<html><body><h3><center>${msg}</center></h3></body></html>`}\n}\n```", "```\n$ wsk -i package create /guest/demo\n$ wsk -i action create /guest/demo/hello hello.js --web true\n```", "```\n$ http --verify=no https://192.168.33.13/api/v1/web/guest/demo/hello.http?name=Kubernetes%20for%20Serverless%20Applications\n```", "```\n$ wsk -i list\n$ wsk -i action delete /guest/demo/hello\n$ wsk -i package delete /guest/demo\n```", "```\n$ vagrant destroy\n```", "```\n$ gcloud container clusters create kube-cluster\n```", "```\n$ kubectl get nodes\n```", "```\n$ git clone --depth=1 https://github.com/apache/incubator-openwhisk-deploy-kube.git openwhisk-kube\n$ cd openwhisk-kube\n```", "```\n$ kubectl create namespace openwhisk\n```", "```\n$ kubectl apply -f kubernetes/couchdb/couchdb.yml\n```", "```\n$ kubectl -n openwhisk get pods\n```", "```\n$ kubectl -n openwhisk logs couchdb-1146267775-v0sdm\n```", "```\n$ kubectl apply -f kubernetes/redis/redis.yml\n```", "```\n$ kubectl apply -f kubernetes/apigateway/apigateway.yml\n```", "```\n$ kubectl apply -f kubernetes/zookeeper/zookeeper.yml\n```", "```\n$ kubectl apply -f kubernetes/kafka/kafka.yml\n```", "```\n$ kubectl -n openwhisk get pods\n```", "```\n$ kubectl apply -f kubernetes/controller/controller.yml\n```", "```\n      - name: apparmor\n        hostPath:\n          path: \"/usr/lib/x86_64-linux-gnu/libapparmor.so.1\"\n```", "```\n        - name: apparmor\n          mountPath: \"/usr/lib/x86_64-linux-gnu/libapparmor.so.1\"\n```", "```\n$ kubectl apply -f kubernetes/invoker/invoker.yml\n```", "```\n$ choco install openssl.light\n```", "```\n$ mkdir -p certs\n$ openssl req -x509 -newkey rsa:2048 -keyout certs/key.pem -out certs/cert.pem -nodes -subj \"/CN=localhost\" -days 365\n```", "```\n$ kubectl -n openwhisk create configmap nginx --from-file=kubernetes/nginx/nginx.conf\n```", "```\n$ kubectl -n openwhisk create secret tls nginx --cert=certs/cert.pem --key=certs/key.pem\n```", "```\n$ kubectl apply -f kubernetes/nginx/nginx.yml\n```", "```\n$ kubectl -n openwhisk get pods\n```", "```\n$ kubectl -n openwhisk describe service nginx\n```", "```\n$ kubectl -n openwhisk expose service nginx --type=LoadBalancer --name=front-end\n```", "```\n$ kubectl -n openwhisk describe service front-end\n```", "```\n$ wsk -i property set --auth 23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP --apihost https://35.188.204.73:443\n```", "```\n$ wsk -i package create /guest/demo\n$ wsk -i action create /guest/demo/hello hello.js --web true\n```", "```\n$ http --verify=no https://35.188.204.73/api/v1/web/guest/demo/hello.http?name=Kubernetes%20for%20Serverless%20Applications\n```", "```\n$ gcloud container clusters delete kube-cluster\n```"]