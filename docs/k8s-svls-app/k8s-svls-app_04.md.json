["```\n$ minikube delete\n$ minikube start\n```", "```\n$ kubectl create ns kubeless\n```", "```\n$ kubectl create -f https://github.com/kubeless/kubeless/releases/download/v0.2.3/kubeless-v0.2.3.yaml\n```", "```\n$ kubectl get pods -n kubeless\n$ kubectl get deployment -n kubeless\n$ kubectl get statefulset -n kubeless\n```", "```\n$ minikube dashboard\n```", "```\n$ brew tap kubeless/tap\n$ brew install kubeless\n```", "```\n$ kubeless version\n```", "```\n$ Invoke-WebRequest -Uri https://github.com/kubeless/kubeless/releases/download/v0.2.3/kubeless_windows-amd64.zip -Outfile C:\\Temp\\kubeless_windows-amd64.zip\n$ expand-archive -path 'C:\\Temp\\kubeless_windows-amd64.zip' -destinationpath 'C:\\Temp\\kubeless_windows-amd64'\n$ Move-Item C:\\Temp\\kubeless_windows-amd64\\bundles\\kubeless_windows-amd64\\kubeless.exe .\\\n```", "```\n$ ./kubeless version\n```", "```\n$ curl -Lo /tmp/kubeless.zip https://github.com/kubeless/kubeless/releases/download/v0.2.3/kubeless_linux-amd64.zip\n$ unzip /tmp/kubeless.zip -d /tmp\n$ chmod +x /tmp/bundles/kubeless_linux-amd64/kubeless\n$ sudo mv /tmp/bundles/kubeless_linux-amd64/kubeless /usr/local/bin/\n```", "```\n$ kubeless version\n```", "```\n$ kubectl create -f https://raw.githubusercontent.com/kubeless/kubeless-ui/master/k8s.yaml\n```", "```\n$ minikube service ui --namespace kubeless\n```", "```\nimport json\ndef handler():\n    return \"Hello World!\"\n```", "```\n$ kubeless function deploy hello \\\n --from-file hello.py\n --handler hello.handler \\\n --runtime python2.7 \\\n  --trigger-http\n```", "```\n$ kubeless function ls\n```", "```\n$ kubectl get functions\n```", "```\n$ kubeless function call hello\n```", "```\n$ minikube service ui --namespace kubeless\n```", "```\n$ minikube addons enable ingress\n```", "```\n$ kubeless ingress create --function hello hello-ingress\n```", "```\n$ kubeless ingress ls\n```", "```\nimport json\n\ndef handler(context):\n    print context.json\n    return context.json\n```", "```\n$ kubeless function deploy hello-name \\\n --from-file hello-name.py \\\n --handler hello-name.handler \\\n --runtime python2.7 \\\n --trigger-http\n```", "```\n$ kubeless function ls\n```", "```\n$ kubeless function call hello-name --data '{ \"name\": \"Russ\" }'\n```", "```\n$ minikube service ui --namespace kubeless\n```", "```\n{ \"name\": \"Russ\" }\n```", "```\n$ kubeless ingress create --function hello-name hello-name-ingress\n$ kubeless ingress list\n```", "```\n$ kubeless function logs hello-name\n```", "```\n$ brew cask install postman\n```", "```\n$ choco install postman\n```", "```\n$ wget https://dl.pstmn.io/download/latest/linux64 -O postman.tar.gz\n$ sudo tar -xzf postman.tar.gz -C /opt\n$ rm postman.tar.gz\n$ sudo ln -s /opt/Postman/Postman /usr/bin/postman\n```", "```\n$ cat > ~/.local/share/applications/postman.desktop <<EOL\n[Desktop Entry]\nEncoding=UTF-8\nName=Postman\nExec=postman\nIcon=/opt/Postman/resources/app/assets/icon.png\nTerminal=false\nType=Application \nCategories=Development;\nEOL\n```", "```\n{\n  \"name\": \"Russ\" \n}\n```", "```\n$ kubeless ingress delete hello\n$ kubeless function delete hello\n$ kubeless ingress delete hello-name\n$ kubeless function delete hello-name\n```", "```\n$ minikube service ui --namespace kubeless\n$ minikube dashboard\n```", "```\n$ kubectl create secret generic twitter \\\n --from-literal=consumer_key=YOUR_CONSUMER_KEY \\ \n --from-literal=consumer_secret=YOUR_CONSUMER_SECRET \\\n --from-literal=token_key=YOUR_TOKEN_KEY \\\n --from-literal=token_secret=YOUR_TOKEN_SECRET\n```", "```\n$ kubectl get secret\n```", "```\npython-twitter\nkubernetes==2.0.0\n```", "```\nimport base64\nimport twitter\n\nfrom kubernetes import client, config\n\nconfig.load_incluster_config()\n\nv1=client.CoreV1Api()\n\nfor secrets in v1.list_secret_for_all_namespaces().items:\n    if secrets.metadata.name == 'twitter':\n        consumer_key = base64.b64decode(secrets.data['consumer_key'])\n        consumer_secret = base64.b64decode(secrets.data['consumer_secret'])\n        token_key = base64.b64decode(secrets.data['token_key'])\n        token_secret = base64.b64decode(secrets.data['token_secret'])\n\napi = twitter.Api(consumer_key=consumer_key,\n                  consumer_secret=consumer_secret,\n                  access_token_key=token_key,\n                  access_token_secret=token_secret)\n\ndef handler(context):\n    msg = context.json\n    status = api.PostUpdate(msg['tweet'])\n```", "```\n$ kubeless function deploy twitter \\\n --from-file tweet.py \\\n --handler tweet.handler \\\n --runtime python2.7 \\\n --trigger-http \\\n --dependencies requirements.txt\n```", "```\n$ kubeless function call twitter --data '{\"tweet\": \"Testing twitter function from Kubeless!\"}'\n```", "```\n$ kubeless ingress create --function twitter twitter-ingress\n$ kubeless ingress list\n```", "```\n{\n  \"tweet\": \"Testing twitter function from Kubeless using @postmanclient!\"\n}\n```", "```\n$ kubeless function delete twitter\n$ kubeless ingress delete twitter-ingress\n$ kubectl delete secret twitter\n```", "```\n$ brew install node\n```", "```\n$ choco install nodejs\n```", "```\n$ curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\n$ sudo apt-get install -y nodejs\n```", "```\n$ npm install -g serverless\n```", "```\n$ serverless login\n```", "```\n$ serverless create --template kubeless-python --path new-project\n$ cd new-project\n$ npm install\n```", "```\nservice: new-project\n\nprovider:\n  name: kubeless\n  runtime: python2.7\n\nplugins:\n  - serverless-kubeless\n\nfunctions:\n  hello:\n    handler: handler.hello\n```", "```\nimport json\n\ndef hello(request):\n    body = {\n        \"message\": \"Go Serverless v1.0! Your function executed successfully!\",\n        \"input\": request.json\n    }\n\n    response = {\n        \"statusCode\": 200,\n        \"body\": json.dumps(body)\n    }\n\n    return response\n```", "```\n$ serverless deploy -v\n```", "```\n$ serverless deploy function -f hello\n```", "```\n$ serverless invoke --function hello --data '{\"Kubeless\": \"Welcome!\"}' -l\n```", "```\n$ kubeless function list\n$ kubeless function call hello --data '{\"Kubeless\": \"Welcome!\"}'\n```", "```\n$ serverless remove\n```", "```\nservice: events\n\nprovider:\n  name: kubeless\n  runtime: python2.7\n\nplugins:\n  - serverless-kubeless\n\nfunctions:\n  events:\n    handler: handler.events\n    events:\n      - trigger: 'hello_topic'\n```", "```\ndef events(context):\n    return context\n```", "```\n$ npm install\n$ serverless deploy -v\n$ kubeless function list\n```", "```\n$ kubeless topic publish --topic hello_topic --data 'testing an event!'\n$ kubeless topic publish --topic hello_topic --data 'and another event!'\n```", "```\n$ serverless logs -f events\n```", "```\n$ minikube delete\n```"]