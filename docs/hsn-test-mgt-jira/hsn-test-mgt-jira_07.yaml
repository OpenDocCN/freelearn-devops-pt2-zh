- en: Test Management Approach
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试管理方法
- en: Execution strategy in the test management approach plays a crucial role in determining
    the success or failure of the testing cycle. The strategy helps to identify optimized
    pathways to mitigate risks early. In this chapter, we will cover in detail the
    best approaches for selecting various project execution workflows based on the
    project's needs. We'll learn how to create ad hoc test runs and execute test cases
    in the test cycles as part of a test plan. Then, we'll understand the importance
    of each execution type, and its benefits and targeted purpose. Let's get started
    with the execution strategy for structured testing with **Test Management Approach** (**TMap**).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 测试管理方法中的执行策略在确定测试周期的成功或失败方面起着至关重要的作用。该策略有助于识别优化的路径以尽早减轻风险。在本章中，我们将详细介绍根据项目需求选择各种项目执行工作流程的最佳方法。我们将学习如何创建临时测试运行并将测试用例作为测试计划的一部分在测试周期中执行。然后，我们将了解每种执行类型的重要性、其优势和目标目的。让我们开始TMap的结构化测试执行策略。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Execution strategy for structured testing with TMap
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TMap结构化测试的执行策略
- en: Execution in test cycles for selected release
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在选定的发布中进行测试周期内的执行
- en: Best practices for test management
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试管理的最佳实践
- en: Execution strategy for structured testing with TMap
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TMap结构化测试的执行策略
- en: 'With the evolution of the software industry and their standards, the emphasis
    is for processes to be driven by business objectives, rather than processes being
    drivers of business objectives. This led to the creation of the following two
    ways of assessing the test process:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 随着软件行业及其标准的发展，强调的重点是流程应该由业务目标驱动，而不是流程成为业务目标的驱动因素。这导致了以下两种评估测试流程的方式的创建：
- en: '**Prescriptive**: In this approach, the model provides a framework along with
    the **key performance indicators** (**KPIs**) and questions to ask for each test
    unit. This helps you identify the root causes of inefficiencies. It also provides
    the order in which each of these inefficiencies should be tackled to improve the
    process.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规定性**：在这种方法中，模型提供了一个框架，以及每个测试单元的**关键绩效指标**（KPI）和需要询问的问题。这有助于您识别低效的根本原因。它还提供了应该解决每个这些低效的顺序以改进流程。'
- en: '**Non-prescriptive**: In this approach, the model provides a framework along
    with the KPIs and questions to ...'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非规定性**：在这种方法中，模型提供了一个框架，以及KPI和问题...'
- en: Ad hoc test runs
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 临时测试运行
- en: 'The testing team faces a variety of situations during the test process based
    on the maturity of the processes followed in the organization to deliver products
    on a schedule. The following are some examples of these situations:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 测试团队在测试过程中面临各种情况，这取决于组织中遵循的流程成熟度以按计划交付产品。以下是这些情况的一些示例：
- en: 'The turnaround window is short, such as in the following examples:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 周转时间窗口很短，例如以下示例：
- en: Testing for bug fixes after the product went live and needs to be fixed quickly
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品上线后进行错误修复的测试
- en: A small change request in the maintenance phase that needs to be handled quickly
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在维护阶段需要快速处理的小更改请求
- en: 'The workflows to validate is less complex, such as in the following examples:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要验证的工作流程不太复杂，例如以下示例：
- en: Testing for requirements where the scope is minimum and requires less testing,
    such as adding validation popups to forms to prompt end users to fill in all fields
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对范围较小且需要较少测试的需求进行测试，例如向表单添加验证弹出窗口以提示最终用户填写所有字段
- en: Cosmetic changes, such as changing the text on a button in the UI from OK to
    Accept
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诸如在UI中将按钮上的文本从“确定”更改为“接受”等外观变化
- en: In these situations, the underlying factor is that the changes are not drastic
    and the scope of testing is very limited. Hence, in such situations, we can adopt
    the ad hoc testing approach.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，潜在因素是变化不是激烈的，测试范围非常有限。因此，在这种情况下，我们可以采用临时测试方法。
- en: The **ad hoc testing** procedure is a three-step process of understanding requirements,
    building test cases for the test requirements, and executing them as needed. In
    this approach, a test professional simply creates the least possible number of
    test cases, links them to the relevant requirements, and then performs test execution
    at the test case level. During test execution, testers can update the status of
    the execution supported with the required artifacts. This saves considerable overhead
    and time on arranging meetings, preparing test plans, test cycles, waiting to
    get sign-off for test plans, and so on.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**临时测试**程序是一个理解需求、为测试需求构建测试用例并根据需要执行它们的三个步骤。在这种方法中，测试专业人员只需创建最少量的测试用例，将它们链接到相关需求，然后在测试用例级别执行测试。在测试执行过程中，测试人员可以更新执行状态，并提供所需的工件支持。这节省了大量的开销和时间，无需安排会议、准备测试计划、测试周期，等待获得测试计划的签字等。'
- en: Let’s see how we can execute test cases as part of an ad hoc test run in the
    synapseRT, Zephyr, and Test Management tools.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在synapseRT、Zephyr和测试管理工具中将测试用例作为临时测试运行的一部分执行。
- en: synapseRT
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: synapseRT
- en: 'Test cases can be executed as and when they''re needed as part of an ad hoc
    execution. In synapseRT, you can create the test case as a Jira ticket. Since
    a test case is just another type of Jira ticket, it has default fields like any
    other issue types in the Details section. However, it does contain Test Step,
    Automation, and Ad hoc Test Run sections, as shown in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 测试用例可以作为临时执行的一部分在需要时执行。在synapseRT中，您可以将测试用例创建为Jira工单。由于测试用例只是另一种类型的Jira工单，它在“详细信息”部分具有默认字段，就像其他问题类型一样。但是，它包含测试步骤、自动化和临时测试运行部分，如下面的屏幕截图所示：
- en: '![](Images/6b333dea-c528-4fee-96b4-052f92922998.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6b333dea-c528-4fee-96b4-052f92922998.png)'
- en: Now, on clicking the Create button, an ad hoc test run is created for the selected
    test case. Testers can execute each step and update the status of the execution,
    add a new defect or link an existing one, attach artifacts, and so on, as shown
    in ...
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击创建按钮，为所选的测试用例创建了一个临时测试运行。测试人员可以执行每个步骤并更新执行状态，添加新缺陷或链接现有缺陷，附加工件等，如下所示...
- en: Zephyr
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zephyr
- en: 'Zephyr executes the test case as an ad hoc run or as a part of the ad hoc test
    cycle. In order to do so, the user just needs to create a test case issue type
    and enter all the required details. Once it''s created, you can see the Execute
    button under the Test Case Summary field, as shown in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Zephyr将测试用例作为临时运行或作为临时测试周期的一部分执行。为了这样做，用户只需创建一个测试用例问题类型并输入所有必需的详细信息。创建后，您可以在测试用例摘要字段下看到“执行”按钮，如下截图所示：
- en: '![](Images/49e5d1e2-e9b3-4823-95a7-6ed193d30510.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/49e5d1e2-e9b3-4823-95a7-6ed193d30510.png)'
- en: 'Alternatively, we can also create an ad hoc test cycle by navigating to Tests |
    Cycle Summary tab. It gives us an option to add or remove multiple test cases
    as part of an ad hoc test cycle:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们也可以通过导航到 Tests | Cycle Summary 选项卡来创建一个临时测试周期。它给了我们一个选项，可以添加或删除多个测试用例作为临时测试周期的一部分：
- en: '![](Images/98e85880-e9e3-4161-88d2-0245bfe63240.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/98e85880-e9e3-4161-88d2-0245bfe63240.png)'
- en: 'After adding test cases to the ad hoc cycle, it looks like the following screenshot.
    As you can see, it gives us an option to organize the ad hoc test cycle as per
    your release. It also shows a detailed summary of the added test cases, including
    their ticket ID, Summary, current execution Status, and linked Defects:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在将测试用例添加到临时周期后，它看起来像以下的截图。正如您所看到的，它给了我们一个选项，可以根据您的发布来组织临时测试周期。它还显示了添加的测试用例的详细摘要，包括它们的票号、摘要、当前执行状态和链接的缺陷：
- en: '![](Images/1c6ef7fa-1dad-41f4-ad34-c7958d4145fe.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/1c6ef7fa-1dad-41f4-ad34-c7958d4145fe.png)'
- en: Test Management
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试管理
- en: The ad hoc test execution option is not supported by the Test Management tool.
    However, it does support the execution in a test cycle, which we will see in detail
    in the following section.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 临时测试执行选项不受测试管理工具支持。然而，它支持在测试周期中执行，我们将在下一节中详细介绍。
- en: Execution in test cycles for selected releases
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为选定的发布执行测试周期
- en: 'Ad hoc testing is a flexible and faster way to test shorter workflows. However,
    this approach isn''t effective when you want to plan for the entire release or
    want to cover several testing types/characteristics, such as performance, security,
    acceptance, and integration. In such cases, we can consider preparing test cycles
    and then executing test cases as per the test strategy defined in the test plan.
    Let’s consider some situations that a testing team faces when using the ad hoc
    approach:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 临时测试是测试较短工作流程的一种灵活和更快的方式。然而，当您想要为整个发布计划或想要覆盖多种测试类型/特性（如性能、安全性、验收和集成）时，这种方法并不有效。在这种情况下，我们可以考虑准备测试周期，然后根据测试计划中定义的测试策略执行测试用例。让我们考虑一些在使用临时方法时测试团队面临的情况：
- en: 'The turnaround time is longer, such as in the following examples:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 周转时间更长，例如以下示例：
- en: The team is building a new project and is targeting the release of the product
    by the end of the year.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队正在建立一个新项目，并计划在年底发布产品。
- en: An upgrade of the product is planned to be released in this quarter.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划在本季度发布产品的升级。
- en: 'The workflow to validate has more steps and/or is complex, such as in the following
    examples:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证工作流程具有更多步骤和/或更复杂，例如以下示例：
- en: A customer has requested a change that has large, complex requirements, and
    it requires more thorough testing.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户要求进行更彻底的测试，因为变更具有大型、复杂的要求。
- en: When testing a reported bug to impact several components of an application,
    which requires rigorous testing.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当测试一个报告的错误影响应用程序的多个组件时，需要进行严格的测试。
- en: 'In these situations, we need to analyze the problem and plan our testing strategy.
    Planning and executing test cases in cycles can be the most effective way to ensure
    that we have covered all types of required testing for the desired product or
    application. Hence, we adopt the *execution in the test cycle* approach, which
    gives us an opportunity to prepare a detailed test plan that does the following
    things:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，我们需要分析问题并计划我们的测试策略。在周期内规划和执行测试用例可能是确保我们已经覆盖了所需产品或应用程序的所有类型的测试的最有效方式。因此，我们采用“测试周期中的执行”方法，这使我们有机会准备一个详细的测试计划，做以下事情：
- en: Calls out all the dependencies
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用所有依赖项
- en: Lists the input and output parameters required to execute the test cases
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出执行测试用例所需的输入和输出参数
- en: Defines success criteria in order to pass the test
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义通过测试的成功标准
- en: Defines defect tracking and testing strategies
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义缺陷跟踪和测试策略
- en: Designs and performs end-to-end workflows as per the use cases
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据用例设计和执行端到端工作流程
- en: Plans for different types of testing and integrates them in terms of the test
    cycles
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划不同类型的测试并将它们集成到测试周期中
- en: Designs test cases for smoke, sanity, integration, cross browser, or even environment
    testing, and so on
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为冒烟测试、理智测试、集成测试、跨浏览器测试或环境测试等设计测试用例
- en: Since the change is huge, as its impact, we are better prepared with the preceding
    approach. Let’s see in detail how Jira plugins can be used to plan our executions
    in different types of cycles.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于变化很大，因为它的影响，我们最好准备好前面的方法。让我们详细看看Jira插件如何用于计划我们在不同类型的周期中的执行。
- en: synapseRT
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: synapseRT
- en: Test cycles are a part of the test plan ticket in synapseRT. Hence, in order
    to create test cycles, we need to create a test plan first. Once the test plan
    is ready, you can add the test cases or test suites, which can then be categorized
    under the test cycle based on their types, priority, or other execution criteria.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 测试周期是synapseRT中测试计划票的一部分。因此，为了创建测试周期，我们需要首先创建一个测试计划。一旦测试计划准备好，您可以添加测试用例或测试套件，然后根据它们的类型、优先级或其他执行标准将其分类到测试周期下。
- en: 'The following screenshot shows a test plan with three test cycles—`Credit Card
    type A`, `Credit Card type B`, and `Regression Test`:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了一个包含三个测试周期的测试计划——`信用卡类型A`，`信用卡类型B`和`回归测试`：
- en: '![](Images/24f4f123-6d72-44c2-887a-be8532c53943.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/24f4f123-6d72-44c2-887a-be8532c53943.png)'
- en: We'll cover how to track and execute these test cycles in detail in [Chapter
    7](f9aabeff-0258-4025-a04e-3c62fce7de8d.xhtml), *Test Execution Phase*.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第7章](f9aabeff-0258-4025-a04e-3c62fce7de8d.xhtml)中详细介绍如何跟踪和执行这些测试周期，*测试执行阶段*。
- en: Zephyr
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zephyr
- en: 'On the other hand, if you want to create different types of test cycles based
    on the testing needs, Zephyr categorizes them under the Cycle Summary tab of the
    Tests section. The following image shows two main test cycles—`Loan Testing` and
    `Ad hoc`. `Loan testing` has the `Education loan`, `Personal loan`, `Car loan`,
    and `Home loan` subtest cycles:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果您想根据测试需求创建不同类型的测试周期，Zephyr将它们归类到测试部分的周期摘要选项卡下。以下图片显示了两个主要的测试周期——`贷款测试`和`临时测试`。`贷款测试`包括`教育贷款`，`个人贷款`，`汽车贷款`和`房屋贷款`子测试周期：
- en: '![](Images/651fb620-7ca7-4cdb-9654-540c9890a017.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/651fb620-7ca7-4cdb-9654-540c9890a017.png)'
- en: 'The test case ticket also has a Test Executions section, which shows how many
    times this test has been executed ad hoc or as a part of any other test cycles.
    As shown in the following screenshot, if we expand the Test Executions section,
    it shows all the test runs with the test cycle under which it has been executed.
    It also shows linked defects and the execution date:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 测试用例票据还有一个测试执行部分，显示了这个测试已经被执行了多少次，是临时执行还是作为其他测试周期的一部分。如下截图所示，如果我们展开测试执行部分，它会显示所有测试运行和它所执行的测试周期。它还显示了关联的缺陷和执行日期：
- en: '![](Images/0df40a30-2edf-4551-a9dd-f1de1e43979d.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/0df40a30-2edf-4551-a9dd-f1de1e43979d.png)'
- en: Test management
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试管理
- en: 'In the Test Management tool, test cycles can be created from the Cycles tab.
    As shown in the following screenshot, for a banking application, we have `Credit
    Score Release` as the main test cycle. Under this, we have three subtest cycles—`Acceptance
    Tests`, `Functional Tests`, and `Regression Tests`. Each cycle contains the required
    set of test cases, and their execution status can be viewed from the Progress
    column:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试管理工具中，可以从周期选项卡创建测试周期。如下截图所示，对于银行应用程序，我们有`信用评分发布`作为主要测试周期。在此之下，我们有三个子测试周期——`验收测试`，`功能测试`和`回归测试`。每个周期包含所需的测试用例，其执行状态可以从进度列中查看：
- en: '![](Images/6f9588a1-a502-4626-9af0-3ff505bc04f8.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6f9588a1-a502-4626-9af0-3ff505bc04f8.png)'
- en: Best practices for test management
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试管理的最佳实践
- en: 'The TMap provides guidance for implementing a structured testing approach in
    an organization. Here are a few important factors that''ll help you create a strong
    foundation to establish the test-management practice:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: TMap提供了在组织中实施结构化测试方法的指导。以下是一些重要因素，将帮助您建立一个坚实的基础，以建立测试管理实践：
- en: Utilize a model for the testing activities based on the development process.
    In our case, we use the STLC model, which is a subset of the SDLC model for the
    testing activities. The TMap life cycle model can be used for the test management
    activities.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用基于开发流程的测试活动模型。在我们的情况下，我们使用STLC模型，这是测试活动的SDLC模型的子集。TMap生命周期模型可用于测试管理活动。
- en: Ensure that appropriate testing tools and techniques, such as checklists, are
    adopted to identify, execute, track, and communicate progress and results. Communication
    is essential to identify and tackle obstacles quickly and in time.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保采用适当的测试工具和技术，如检查表，来识别、执行、跟踪和沟通进展和结果。沟通是必不可少的，以便及时识别和解决障碍。
- en: Establish the required test environments with the infrastructure that meets
    both the software and hardware requirements to operationalize the product in the
    test. This also includes setting up a test database and test data. This will enable
    a smoother execution phase.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立所需的测试环境，满足测试产品的软件和硬件要求。这还包括设置测试数据库和测试数据。这将使执行阶段更加顺利。
- en: For effective test management, the testing team should be a group with the right
    combination of testing skills and knowledge of the product. This also means that
    the organization should ensure the staff are trained and processes are improved
    so as to achieve the maturity levels necessary to establish a scalable and repeatable
    success story. Establishing a solid organization with mature processes ensures
    that the team follows common terminologies, approaches, tools, techniques, entry
    and exit criteria, weekly or daily calls, and reporting formats. This helps the
    top management in the generation of standard reporting artifacts.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了有效的测试管理，测试团队应该是一个具有正确测试技能和产品知识的团队。这也意味着组织应确保员工接受培训，并改进流程，以实现建立可扩展和可重复的成功故事所需的成熟水平。建立一个成熟的组织和流程确保团队遵循共同的术语、方法、工具、技术、进入和退出标准、每周或每日电话会议和报告格式。这有助于高层管理生成标准的报告文档。
- en: Automation is key and hence the organization must try to incorporate open source
    or paid testing tools that will help testers to perform their job more efficiently.
    Automating repetitive activities can help testers to focus on exploratory testing,
    while the testing tool performs regression testing. Before adopting these tools,
    a cost-to-benefit analysis should be performed, since such tools require considerable
    ramp-up time for training and gaining skills before staff can use them productively.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化是关键，因此组织必须尝试整合开源或付费测试工具，这将帮助测试人员更有效地执行工作。自动化重复活动可以帮助测试人员专注于探索性测试，而测试工具执行回归测试。在采用这些工具之前，应进行成本效益分析，因为这些工具需要相当长的培训和技能获取时间，员工才能有效地使用它们。
- en: Utilize the artifacts from each step of the BDTM process to ensure the test
    goals are clear and specific to the testing requirements. This helps in analyzing
    the test basis thoroughly, implementing strategies well in time, and achieving
    good test coverage.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用BDTM过程的每个步骤的成果，确保测试目标明确并与测试需求具体相关。这有助于彻底分析测试基础，及时实施策略，并实现良好的测试覆盖。
- en: The aim of testing is to have a feasible test coverage over the functions and
    requirements of the product. The bigger the project, the greater the test levels
    and test units. Hence, it's essential to use test suites to organize them. Also,
    avoid merging and covering large complex requirements in one test case by adding
    a large number of test steps—instead, add them to separate test cases to verify
    the functionality more accurately.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试的目的是对产品的功能和需求进行可行的测试覆盖。项目越大，测试级别和测试单元就越多。因此，使用测试套件对它们进行组织是至关重要的。此外，避免将大型复杂需求合并到一个测试用例中，通过添加大量的测试步骤来覆盖它们，而是将它们添加到单独的测试用例中，以更准确地验证功能。
- en: Summary
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered the best approaches for selecting various project
    execution strategies, as well as different approaches to execute test cases during
    the test execution phase. The TMap provides a structured approach for testing.
    We learned about the BDTM approach. For shorter and less complex requirements,
    the ad hoc test strategy can be used to effectively and efficiently test and validate
    the requirements. We learned how ad hoc testing can be implemented using the Jira
    plugins. Execution in test cycles is required to organize and manage test cases
    for bigger and more complex projects. We learned how test cycles can be created
    and organized using the Jira plugins. Finally, we discussed the best practices
    to establish a ...
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了选择各种项目执行策略的最佳方法，以及在测试执行阶段执行测试用例的不同方法。TMap提供了一种结构化的测试方法。我们了解了BDTM方法。对于较短和不太复杂的需求，可以使用临时测试策略来有效和高效地测试和验证需求。我们了解了如何使用Jira插件来实施临时测试。对于更大更复杂的项目，需要在测试周期内执行以组织和管理测试用例。我们了解了如何使用Jira插件创建和组织测试周期。最后，我们讨论了建立最佳实践的方法来...
