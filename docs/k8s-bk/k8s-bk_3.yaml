- en: '3: Installing Kubernetes'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3：安装Kubernetes
- en: In this chapter, we’ll take a look at a few different ways to install Kubernetes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看一下安装Kubernetes的几种不同方法。
- en: Things have changed a lot since I wrote the first edition of the book in July
    2017\. Back then, installing Kubernetes was hard. These days it’s a lot easier!
    In fact, we’re approaching the point where we can just *ask for a Kubernetes cluster,
    and get one* . This is especially true with *hosted Kubernetes services* like
    Azure Kubernetes Service (AKS) and Google Kubernetes Engine (GKE).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 自2017年7月我写下这本书的第一版以来，事情发生了很大变化。那时，安装Kubernetes很困难。如今，情况好多了！事实上，我们正接近一个可以*要求一个Kubernetes集群，并获得一个*的时刻。这在*托管的Kubernetes服务*，如Azure
    Kubernetes Service（AKS）和Google Kubernetes Engine（GKE）中尤其如此。
- en: On the topic of *hosted Kubernetes services* , more and more people are choosing
    to use hosted Kubernetes services, and with things like *GKE On-Prem (https://cloud.google.com/gke-on-prem/)*
    , it’s looking increasingly likely that a large number of Kubernetes clusters
    will be built and managed via the major cloud providers.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 关于*托管的Kubernetes服务*，越来越多的人选择使用托管的Kubernetes服务，而且像*GKE On-Prem（https://cloud.google.com/gke-on-prem/）*这样的服务，越来越可能会有大量的Kubernetes集群通过主要的云服务提供商构建和管理。
- en: 'With all of this in mind, ask yourself the following question before building
    your own Kubernetes cluster: *Is building and managing your own Kubernetes cluster
    the best use of your time and effort?* If the answer isn’t a resounding **“Yes!”**
    , I strongly suggest you consider a hosted service.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑构建自己的Kubernetes集群之前，请问自己以下问题：*构建和管理自己的Kubernetes集群是你时间和精力的最佳利用吗？*如果答案不是一个坚定的**“是！”**，我强烈建议你考虑使用托管服务。
- en: 'OK, we’ll look at the following installation types:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们将看一下以下安装类型：
- en: Play with Kubernetes (PWK)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Kubernetes玩（PWK）
- en: 'Docker Desktop: local development cluster on your laptop'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Desktop：在你的笔记本上进行本地开发集群
- en: 'Minikube: local development cluster on your laptop'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Minikube：在你的笔记本上进行本地开发集群
- en: 'Google Kubernetes Engine (GKE): production-grade hosted cluster'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Kubernetes Engine（GKE）：生产级托管集群
- en: 'Kops: Install your own cluster on AWS'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kops：在AWS上安装你自己的集群
- en: 'Kubeadm: Manual installation with kubeadm'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubeadm：使用kubeadm手动安装
- en: A couple of quick things to point out before diving in…
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入之前，有几件事情需要指出...
- en: Firstly, there are a lot of other ways to install Kubernetes. The ones we’re
    covering here are the ones I think will be most helpful.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，还有很多其他安装Kubernetes的方法。我们在这里涵盖的是我认为最有帮助的方法。
- en: Secondly, a *hosted Kubernetes service* is one where the control plane (masters)
    is managed by the platform. For example, AKS, EKS, and GKE are all hosted Kubernetes
    services where the management of the control plane is taken care of by the platform
    (you aren’t responsible). 2018 saw a huge increase in use of hosted Kubernetes
    platforms.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，*托管的Kubernetes服务*是指控制平面（主节点）由平台管理的服务。例如，AKS、EKS和GKE都是托管的Kubernetes服务，其中控制平面的管理由平台负责（你不需要负责）。2018年看到了托管的Kubernetes平台的大幅增长。
- en: Time to look at some installs.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候看一些安装了。
- en: Play with Kubernetes
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Kubernetes玩耍
- en: Play with Kubernetes (PWK) is free, and is a great way to get your hands on
    a Kubernetes cluster without having to install any software on your own kit. All
    you need is a computer, an internet connection, and an account on Docker Hub or
    GitHub. In my opinion, it’s the fastest and easiest way to get your hands on Kubernetes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Kubernetes玩（PWK）是免费的，是一个很好的方法，可以在不必在自己的设备上安装任何软件的情况下获得Kubernetes集群。你所需要的只是一台电脑，一个互联网连接，以及一个Docker
    Hub或GitHub的账户。在我看来，这是获得Kubernetes的最快最简单的方法。
- en: However, it has limitations. For starters, it’s a time-limited playground -
    you get a lab that lasts for 4 hours. It also lacks some integrations with external
    services such as cloud-based load-balancers. However, limitations aside, it’s
    a great tool and I use it all the time!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但它也有局限性。首先，它是一个有时间限制的游乐场-您会得到一个持续4小时的实验室。它还缺少与云基负载均衡器等外部服务的一些集成。然而，除了限制之外，它是一个很棒的工具，我一直在使用！
- en: Let’s see what it looks like.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它是什么样子。
- en: Point your browser at http://play-with-k8s.com
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将浏览器指向http://play-with-k8s.com
- en: Login with your GitHub or Docker Hub account and click `Start`
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的GitHub或Docker Hub帐户登录并单击“开始”
- en: Click `+ ADD NEW INSTANCE` from the navigation pane on the left of your browser
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从浏览器左侧的导航窗格中单击“+添加新实例”
- en: You will be presented with a terminal window in the right of your browser. This
    is a Kubernetes node (`node1` ).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在浏览器右侧看到一个终端窗口。这是一个Kubernetes节点（`node1`）。
- en: Run a few commands to see some of the components pre-installed on the node.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行一些命令，查看节点上预安装的一些组件。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As the output shows, the node already has Docker and `kubectl` (the Kubernetes
    client) pre-installed. Other tools including `kubeadm` are also pre-installed.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如输出所显示的，节点已经预安装了Docker和`kubectl`（Kubernetes客户端）。其他工具包括`kubeadm`也已经预安装。
- en: It’s also worth noting that although the command prompt is a `$` , we’re actually
    running as `root` . We can confirm this by running `whoami` or `id` .
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，虽然命令提示符是`$`，但我们实际上是以`root`身份运行的。我们可以通过运行`whoami`或`id`来确认这一点。
- en: Use the `kubeadm` command to initialize a new cluster
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`kubeadm`命令初始化一个新的集群
- en: When you added a new instance in step 3, PWK gave you a short list of commands
    to initialize a new Kubernetes cluster. One of these was `kubeadm init...` . The
    following command will initialize a new cluster and configure the API server to
    listen on the correct IP interface.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在第3步中添加了一个新实例时，PWK会给您一个初始化新Kubernetes集群的命令的简短列表。其中一个是`kubeadm init...`。以下命令将初始化一个新的集群并配置API服务器以侦听正确的IP接口。
- en: You may be able to specify the version of Kubernetes to install by adding the
    `--kubernetes-version` flag to the command. The latest versions can be seen at
    https://github.com/kubernetes/kubernetes/releases. Not all versions work with
    PWK.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在命令中添加`--kubernetes-version`标志来指定要安装的Kubernetes版本。最新版本可以在https://github.com/kubernetes/kubernetes/releases上看到。并非所有版本都适用于PWK。
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Congratulations! You have a brand new single-node Kubernetes cluster! The node
    that we executed the command from (`node1` ) is initialized as the *master* .
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您有一个全新的单节点Kubernetes集群！我们执行命令的节点（`node1`）被初始化为*master*。
- en: The output of the `kubeadm init` gives you a short list of commands it wants
    you to run. These will copy the Kubernetes config file and set permissions. You
    can ignore these, as PWK has already configured them for you. Feel free to poke
    around inside of `$HOME/.kube` .
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`kubeadm init`的输出会给您一个要运行的命令的简短列表。这些命令将复制Kubernetes配置文件并设置权限。您可以忽略这些，因为PWK已经为您配置好了。随意在`$HOME/.kube`内部查看。'
- en: Verify the cluster with the following `kubectl` command.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下`kubectl`命令验证集群。
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The output shows a single-node Kubernetes cluster. However, the status of the
    node is `NotReady` . This is because we haven’t configured the *Pod network* yet.
    When you first logged on to the PWK node, you were given a list of three commands
    to configure the cluster. So far, we’ve only executed the first one (`kubeadm
    init...` ).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示了一个单节点Kubernetes集群。但是，节点的状态是`NotReady`。这是因为我们还没有配置*Pod网络*。当您首次登录到PWK节点时，您会得到一个配置集群的三个命令的列表。到目前为止，我们只执行了第一个（`kubeadm
    init...`）。
- en: Initialize the Pod network (cluster networking).
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化Pod网络（集群网络）。
- en: Copy the second command from the list of three commands that were printed on
    the screen when you first created `node1` (this will be a `kubectl apply` command).
    Paste it onto a new line in the terminal. In the book, the command may wrap over
    multiple lines and insert backslashes (`\` ). You should remove any backslashes
    that occur at the right-edge of the page.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 从首次创建`node1`时屏幕上打印的三个命令列表中复制第二个命令（这将是一个`kubectl apply`命令）。将其粘贴到终端的新行中。在书中，命令可能会跨越多行并插入反斜杠（`\`）。您应该删除页面右边出现的任何反斜杠。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Verify the cluster again to see if `node1` has changed to `Ready` .
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次验证集群，看看`node1`是否已更改为`Ready`。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now that the *Pod network* has been initialized and the control plane is `Ready`
    , you’re ready to add some worker nodes.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在*Pod网络*已经初始化，控制平面为`Ready`，您可以添加一些工作节点了。
- en: Copy the `kubeadm join` command from the output of the `kubeadm init` .
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`kubeadm init`的输出中复制`kubeadm join`命令。
- en: When you initialized the new cluster with `kubeadm init` , the final output
    of the command listed a `kubeadm join` command to use when adding nodes. This
    command includes the cluster join-token, the IP socket that the API server is
    listening on, and other bits required to join a new node to the cluster. Copy
    this command and be ready to paste it into the terminal of a new node (`node2`
    ).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用`kubeadm init`初始化新集群时，命令的最终输出列出了一个`kubeadm join`命令，用于添加节点时使用。此命令包括集群加入令牌、API服务器正在侦听的IP套接字以及加入新节点到集群所需的其他位。复制此命令，并准备粘贴到新节点（`node2`）的终端中。
- en: Click the `+ ADD NEW INSTANCE` button in the left pane of the PWK window.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PWK窗口的左侧窗格中点击`+ ADD NEW INSTANCE`按钮。
- en: You will be given a new node called `node2` .
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 将会给你一个名为`node2`的新节点。
- en: Paste the `kubeadm join` command into the terminal of `node2` .
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`kubeadm join`命令粘贴到`node2`的终端中。
- en: The join-token and IP address will be different in your environment.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的环境中，加入令牌和IP地址将是不同的。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Switch back to `node1` and run another `kubectl get nodes`
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换回`node1`并运行另一个`kubectl get nodes`。
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Your Kubernetes cluster now has two nodes - one master and one worker node.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您的Kubernetes集群现在有两个节点 - 一个主节点和一个工作节点。
- en: Feel free to add more nodes.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 随意添加更多节点。
- en: Congratulations! You have a fully working Kubernetes cluster that you can use
    as a test lab.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您现在拥有一个完全可用的Kubernetes集群，可以用作测试实验室。
- en: It’s worth pointing out that `node1` was initialized as the Kubernetes *master*
    , and additional nodes will join the cluster as *nodes* . PWK usually puts a blue
    icon next to *masters* and a transparent one next to *nodes* . This helps you
    identify which is which.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 值得指出的是，`node1`被初始化为Kubernetes的*master*，而其他节点将作为*nodes*加入集群。PWK通常在*masters*旁边放置蓝色图标，在*nodes*旁边放置透明图标。这有助于您识别哪个是哪个。
- en: Finally, PWK sessions only last for 4 hours and are obviously not intended for
    production use.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，PWK会话只持续4小时，显然不适用于生产环境。
- en: Have fun!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 玩得开心！
- en: Docker Desktop
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Docker Desktop
- en: In my opinion, *Docker Desktop* is the best way to get a local development cluster
    on your Mac or Windows laptop. With a few easy steps, you get a single-node Kubernetes
    cluster that you can develop and test with. I use it nearly every day.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，*Docker Desktop*是在Mac或Windows笔记本电脑上获得本地开发集群的最佳方式。通过简单的几个步骤，您可以获得一个单节点Kubernetes集群，可以进行开发和测试。我几乎每天都在使用它。
- en: It works by creating a virtual machine (VM) on your laptop and starting a single-node
    Kubernetes cluster inside that VM. It also configures your `kubectl` client to
    be able to talk to the cluster. Finally, you get a simple GUI that allows you
    to perform basic operations such as switching between all of your `kubectl` contexts.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 它通过在笔记本电脑上创建一个虚拟机（VM）并在该虚拟机内启动单节点Kubernetes集群来工作。它还配置您的`kubectl`客户端，以便能够与集群通信。最后，您将获得一个简单的GUI，允许您执行基本操作，如在所有`kubectl`上下文之间切换。
- en: '**Note:** A kubectl context is a bunch of settings that the `kubectl` command
    uses so that it knows which cluster to issue commands to.'
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** kubectl上下文是`kubectl`命令使用的一堆设置，以便它知道要向哪个集群发出命令。'
- en: Point your web browser to `www.docker.com` and choose `Products` > `Docker Desktop`
    .
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的网络浏览器指向`www.docker.com`，然后选择`Products` > `Docker Desktop`。
- en: Click the download button for either Mac or Windows.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下载按钮，选择Mac或Windows版本。
- en: You may need to login to the Docker Store. Accounts are free, and so is the
    product.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要登录到Docker Store。账户是免费的，产品也是免费的。
- en: Open the installer and follow the simple installation instructions.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开安装程序并按照简单的安装说明进行操作。
- en: Once the installer is complete you’ll get a whale icon on the Windows task bar,
    or the menu bar on a Mac.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 安装程序完成后，您将在Windows任务栏上或Mac的菜单栏上看到一个鲸鱼图标。
- en: Click the whale icon (you may need to right-click it), go to `Settings` and
    enable Kubernetes from the `Kubernetes` tab.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击鲸鱼图标（您可能需要右键单击），转到`Settings`并从`Kubernetes`选项卡中启用Kubernetes。
- en: 'You can open a terminal window and see your cluster:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以打开一个终端窗口并查看您的集群：
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Congratulations, you now have a local development cluster!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，您现在拥有一个本地开发集群！
- en: Minikube
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Minikube
- en: Minikube is another option if you’re a developer and need a local Kubernetes
    development environment on your laptop. Like *Docker Desktop* , you get a local
    VM running a single-node Kubernetes cluster for development. It’s not for production!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Minikube是另一个选项，如果您是开发人员，并且需要在笔记本电脑上的本地Kubernetes开发环境。与*Docker Desktop*一样，您可以在本地运行一个单节点Kubernetes集群进行开发。这不是用于生产！
- en: '**Note:** I’ve had mixed results with Minikube. It’s great when it works, but
    sometimes it’s hard to get working. For this reason, I prefer Docker Desktop for
    Mac and Windows.'
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 我对Minikube的结果参差不齐。当它工作时很棒，但有时很难让它工作。因此，我更喜欢Docker Desktop for Mac和Windows。'
- en: You can get Minikube for Mac, Windows, and Linux. We’ll take a quick look at
    Mac and Windows, as this is what most people run on their laptops.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Mac、Windows和Linux上获取Minikube。我们将快速查看Mac和Windows，因为这是大多数人在笔记本电脑上运行的系统。
- en: '**Note:** Minikube requires virtualization extensions enabled in your system’s
    BIOS.'
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** Minikube需要在系统的BIOS中启用虚拟化扩展。'
- en: Installing Minikube on Mac
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在Mac上安装Minikube
- en: It’s probably a good idea to install `kubectl` (the Kubernetes client) before
    you install Minikube. You’ll use this later to issue commands to the Minikube
    cluster.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Minikube之前，最好先安装`kubectl`（Kubernetes客户端）。稍后您将使用它来向Minikube集群发出命令。
- en: Use Brew to install `kubectl`
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Brew安装`kubectl`。
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This puts the kubectl binary in `/usr/local/bin` and makes it executable.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把kubectl二进制文件放在`/usr/local/bin`中，并使其可执行。
- en: Verify that the install worked.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证安装是否成功。
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now that we’ve installed the `kubectl` client, let’s install Minikube.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了`kubectl`客户端，让我们安装Minikube。
- en: Use Brew to install Minikube.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Brew安装Minikube。
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Provide your password if prompted.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提示，请提供您的密码。
- en: Use Brew to install the **hyperkit** lightweight hypervisor for Mac.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Brew为Mac安装**hyperkit**轻量级超级管理程序。
- en: Other Hypervisor options are available - VirtualBox and VMware Fusion - but
    we’re only showing hyperkit.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 其他的Hypervisor选项可用 - VirtualBox和VMware Fusion - 但我们只展示hyperkit。
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Start Minikube with the following command.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启动Minikube。
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`minikube start` is the simplest way to start Minikube. Specifying the `--vm-driver=hyperkit`
    flag will force it to use the **hyperkit** hypervisor instead of VirtualBox.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`minikube start`是启动Minikube的最简单方法。指定`--vm-driver=hyperkit`标志将强制其使用**hyperkit**超级管理程序，而不是VirtualBox。'
- en: You now have a Minikube instance up and running on your Mac!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在在Mac上已经有一个Minikube实例在运行！
- en: Installing Minikube on Windows 10
  id: totrans-94
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在Windows 10上安装Minikube
- en: In this section we’ll show you how to use Minikube on Windows using Hyper-V
    as the virtual machine manager. Other options exist, but we’re not showing them
    here. We’ll also be using a PowerShell terminal opened with Administrative privileges.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您展示如何在Windows上使用Hyper-V作为虚拟机管理器使用Minikube。还有其他选项，但我们在这里不展示它们。我们还将使用以管理员权限打开的PowerShell终端。
- en: 'Before installing Minikube, let’s install the `kubectl` client. There are a
    couple of ways to do this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Minikube之前，让我们安装`kubectl`客户端。有几种方法可以做到这一点：
- en: Using the Chocolaty package manager
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Chocolaty软件包管理器
- en: Downloading via your web browser
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过您的网络浏览器下载
- en: If you are using Chocolaty, you can install it with the following command.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用Chocolaty，可以使用以下命令安装它。
- en: '[PRE13]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If you are not using Chocolaty, you can install `kubectl` using your web browser.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不使用Chocolaty，可以使用您的网络浏览器安装`kubectl`。
- en: Point your web browser to https://kubernetes.io/docs/tasks/tools/install-kubectl/
    and click the `Install kubectl binary using curl` option. Click the `Windows`
    tab. Copy and paste the URL into your web browser - this will download the `kubectl`
    binary. Be sure that you just copy and paste the URL and not the full `curl` command.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 将您的网络浏览器指向https://kubernetes.io/docs/tasks/tools/install-kubectl/，并单击`使用curl安装kubectl二进制文件`选项。单击`Windows`选项卡。将URL复制并粘贴到您的网络浏览器中
    - 这将下载`kubectl`二进制文件。确保只复制和粘贴URL，而不是完整的`curl`命令。
- en: Once the download is complete, copy the `kubectl.exe` file to a folder in your
    system’s `%PATH%` .
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，将`kubectl.exe`文件复制到系统的`%PATH%`文件夹中。
- en: Verify the installation with a `kubectl version` command.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kubectl version`命令验证安装。
- en: '[PRE14]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Now that you have `kubectl` , you can proceed to install Minikube for Windows.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您有了`kubectl`，可以继续安装Windows的Minikube。
- en: Open a web browser to the Minikube Releases page on GitHub
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在GitHub上的Minikube版本页面上打开一个网络浏览器
- en: https://github.com/kubernetes/minikube/releases
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: https://github.com/kubernetes/minikube/releases
- en: Click `minikube-installer.exe` from beneath the latest version of Minikube.
    This will download the 64-bit Windows installer.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Minikube的最新版本下方单击`minikube-installer.exe`。这将下载64位Windows安装程序。
- en: Start the installer and click through the wizard accepting the default options.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动安装程序，并通过向导接受默认选项。
- en: Make sure Hyper-V has an external vSwitch .
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保Hyper-V有一个外部vSwitch。
- en: 'Open Hyper-V Manager (`virtmgmt.msc` ) and go to `Virtual Switch Manager...`
    . If there is no Virtual Switch configured with the following two options, create
    a new one:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Hyper-V管理器（`virtmgmt.msc`），转到`虚拟交换机管理器...`。如果没有配置以下两个选项的虚拟交换机，请创建一个新的：
- en: '`Connection type = External network`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`连接类型=外部网络`'
- en: '`Allow management operating system to share this network adapter`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`允许管理操作系统共享此网络适配器`'
- en: For the remainder of this section we’ll assume that you have Hyper-V configured
    with an external vSwitch called `external` . If yours has a different name, you
    will need to substitute the name of yours in the following commands.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的其余部分，我们将假设您已经配置了一个名为`external`的Hyper-V外部vSwitch。如果您的名称不同，您将需要在以下命令中替换您的名称。
- en: Verify the Minikube version with the following command.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令验证Minikube版本。
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Use the following command to start a local Minikube instance running Kubernetes
    version 1.12.1.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启动运行Kubernetes版本1.12.1的本地Minikube实例。
- en: The command assumes a Hyper-V vSwitch called `external` and uses backticks “`”
    to allow the command to span multiple lines for readability.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令假定一个名为`external`的Hyper-V vSwitch，并使用反引号“`”使命令跨多行以提高可读性。
- en: It can take a while to download and start the cluster the first time.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次下载和启动集群可能需要一段时间。
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Verify the installation by checking the version of the Kubernetes master.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过检查Kubernetes主版本的版本来验证安装。
- en: '[PRE17]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If the target machine actively refuses the network connection with an `Unable
    to connect to the server: dial tcp...` error, this is most likely a network-related
    error. Make sure that your vSwitch is configured correctly, and that you specified
    it correctly with the `--hyperv-virtual-switch` flag. `kubectl` talks to Kubernetes
    inside the `minikube` Hyper-V VM over port 8443.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标机器积极拒绝网络连接，并显示`无法连接到服务器：拨号tcp...`错误，这很可能是与网络相关的错误。确保您的vSwitch已正确配置，并且您已使用`--hyperv-virtual-switch`标志正确指定了它。`kubectl`通过端口8443与`minikube`
    Hyper-V VM内的Kubernetes进行通信。
- en: Congratulations! You’ve got a fully working Minikube cluster up and running
    on your Windows 10 PC.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已在Windows 10 PC上成功运行了一个完全可用的Minikube集群。
- en: You can now type `minikube` on the command line to see a full list of minikube
    sub-commands. A good one to try might be `minikube ip` which will give you the
    IP address that the Minikube cluster is operating on.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以在命令行上键入`minikube`以查看minikube子命令的完整列表。一个值得尝试的好命令可能是`minikube ip`，它将为您提供Minikube集群正在运行的IP地址。
- en: Use `kubectl` to verify the Minikube install
  id: totrans-127
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用`kubectl`验证Minikube安装
- en: The `minikube start` operation configures a *kubectl context* so that you can
    use `kubectl` against your new Minikube environment. Test this by running the
    following `kubectl` command from the same shell that you ran `minikube start`
    from.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`minikube start`操作配置了一个*kubectl上下文*，这样您就可以在新的Minikube环境中使用`kubectl`。通过从与您运行`minikube
    start`相同的shell中运行以下`kubectl`命令来测试这一点。'
- en: '[PRE18]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Great, your kubectl context is set to Minikube. This means `kubectl` commands
    will be sent to the Minikube cluster.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，您的kubectl上下文已设置为Minikube。这意味着`kubectl`命令将被发送到Minikube集群。
- en: It’s worth pointing out that `kubectl` can be configured to talk to any Kubernetes
    cluster by setting different contexts - you just need to switch between contexts
    to send commands to different clusters.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 值得指出的是，`kubectl`可以通过设置不同的上下文来配置为与任何Kubernetes集群通信-您只需要在不同的上下文之间切换以向不同的集群发送命令。
- en: Use the `kubectl get nodes` command to list the nodes in the cluster.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kubectl get nodes`命令列出集群中的节点。
- en: '[PRE19]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: That’s a single-node Minikube cluster ready to use!
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个准备好使用的单节点Minikube集群！
- en: You can use the `minikube ip` command to get the IP address of your cluster.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`minikube ip`命令获取集群的IP地址。
- en: Deleting a Minikube cluster
  id: totrans-136
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 删除Minikube集群
- en: We spun up the Minikube cluster with a single `minikube start` command. We can
    stop it with a `minikube stop` command.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用单个`minikube start`命令启动了Minikube集群。我们可以使用`minikube stop`命令停止它。
- en: '[PRE20]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Stopping a Minikube keeps all the config on disk. This makes it easy to start
    it up again and pick things up from where you left off.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 停止Minikube会保留所有磁盘上的配置。这样可以轻松地重新启动它，并从您离开的地方继续进行。
- en: To blow it away completely - leaving no trace - use the `minikube delete` command.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 完全清除它-不留痕迹-使用`minikube delete`命令。
- en: '[PRE21]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Running a particular version of Kubernetes inside of Minikube
  id: totrans-142
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 在Minikube内运行特定版本的Kubernetes
- en: Minikube lets you use the `--kubernetes-version` flag specify the version of
    Kubernetes you want to run. This is useful if you need to match the version of
    Kubernetes used in your production environment.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Minikube允许您使用`--kubernetes-version`标志指定要运行的Kubernetes版本。如果您需要匹配生产环境中使用的Kubernetes版本，这将非常有用。
- en: The following command will start a Minikube cluster running Kubernetes version
    1.10.7.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将启动一个运行Kubernetes版本1.10.7的Minikube集群。
- en: '[PRE22]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Run another `kubectl get nodes` command to verify the version.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 运行另一个`kubectl get nodes`命令来验证版本。
- en: '[PRE23]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Bingo!
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 中了！
- en: That’s Minikube! A great way to spin up a simple Kubernetes cluster on your
    Mac or PC. But it’s not for production!
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Minikube！在Mac或PC上快速启动一个简单的Kubernetes集群的绝佳方式。但这不适用于生产！
- en: Google Kubernetes Engine (GKE)
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google Kubernetes Engine（GKE）
- en: 'Google Kubernetes Engine is a *hosted Kubernetes* service that runs on the
    Google Cloud (GCP). Like most *hosted Kubernetes* services, it provides:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Google Kubernetes Engine是在Google Cloud（GCP）上运行的*托管Kubernetes*服务。像大多数*托管Kubernetes*服务一样，它提供：
- en: A fast and easy way to get a production-grade Kubernetes cluster
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速轻松地获得生产级别的Kubernetes集群
- en: A managed control plane (you do not manage the *masters* )
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托管的控制平面（您不管理*主节点*）
- en: Itemized billing
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逐项计费
- en: '**Warning:** GKE and other hosted Kubernetes services are not free. Some services
    might provide a *free tier* or an initial amount of *free credit* . However, generally
    speaking, you have to pay to use them.'
  id: totrans-155
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**警告：**GKE和其他托管的Kubernetes服务并非免费。一些服务可能提供*免费层*或*免费信用额*的初始金额。但是，一般来说，您必须付费才能使用它们。'
- en: Configuring GKE
  id: totrans-156
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置GKE
- en: To work with GKE you’ll need an account on the Google Cloud with billing configured
    and a blank project. These are all simple to setup, so we won’t spend time explaining
    them here - for the remainder of this section we’ll be assuming you have these.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用GKE，您需要在Google Cloud上拥有一个已配置计费的账户和一个空白项目。这些都很容易设置，所以我们不会在这里花时间解释它们 - 在本节的其余部分，我们将假设您已经拥有这些。
- en: The following steps will walk you through configuring GKE via a web browser.
    Some of the details might change in the future, but the overall flow will be the
    same.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导您通过Web浏览器配置GKE。一些细节可能会在将来发生变化，但整体流程将保持不变。
- en: From within the Console of your Google Cloud Platform (GCP) project, open the
    navigation pane on the left-hand side and select `Kubernetes Engine` > `Clusters`
    . You may have to click the three horizontals bars at the top-left of the Console
    to make the navigation pane visible.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Google Cloud Platform（GCP）项目的控制台中，打开左侧的导航窗格，然后选择`Kubernetes Engine` > `Clusters`。您可能需要点击控制台左上角的三个水平条，以使导航窗格可见。
- en: Click the `Create cluster` button.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`创建集群`按钮。
- en: This will start the wizard to create a new Kubernetes cluster.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动创建新Kubernetes集群的向导。
- en: The wizard currently offers a few templated options. This may change in the
    future, but the overall flow will be the same. Choose a template (`Your first
    cluster` or `Standard cluster` will probably be good options to choose from).
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向导目前提供了一些模板选项。这可能会在将来改变，但整体流程将保持不变。选择一个模板（`Your first cluster` 或 `Standard cluster`
    可能是不错的选择）。
- en: Give the cluster a meaningful name and description.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为集群命名并添加描述。
- en: Choose whether you want a `Regional` or `Zonal` cluster. Regional is newer and
    potentially more resilient - your masters and nodes will be distributed across
    multiple zones but still accessible via a single highly-available endpoint.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要的`区域`或`区域内`集群。区域是更新的，可能更具弹性 - 您的主节点和节点将分布在多个区域，但仍可通过单个高可用端点访问。
- en: Choose the Region or Zone for your cluster.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的集群的区域或区域内。
- en: Select the `Cluster Version` . This is the version of Kubernetes that will run
    on your master and nodes. You are limited to the versions available in the drop-down
    list. Choose an up-to-date version.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`集群版本`。这是将在您的主节点和节点上运行的Kubernetes版本。您只能选择下拉列表中可用的版本。选择一个最新版本。
- en: You can select the number and size of your worker nodes under the `Node pools`
    section. This allows you to chose the size and configuration of your worker nodes,
    as well as how many. Larger and faster nodes incur higher costs.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在`节点池`部分选择工作节点的数量和大小。这允许您选择工作节点的大小和配置，以及数量。更大更快的节点会产生更高的成本。
- en: If you are building a Regional cluster, the number you specify will be the number
    of nodes **in each zone** , not the total number.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在构建一个区域集群，您指定的数字将是**每个区域中的节点数**，而不是总数。
- en: Leave all other options with default values and click `Create` .
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有其他选项保持默认值，然后点击`创建`。
- en: You can also click the `More` link to see a long list of other options you can
    customize. It’s worth taking a look at these, but we won’t be discussing them
    in this book.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以单击`更多`链接，查看您可以自定义的其他选项的长列表。值得一看，但我们不会在本书中讨论它们。
- en: Your cluster will now be created!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您的集群现在将被创建！
- en: Exploring GKE
  id: totrans-172
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 探索GKE
- en: Now that you have a cluster, it’s time to have a quick look at it.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经有了一个集群，是时候快速查看一下了。
- en: Make sure you’re logged on to the GCP Console and are viewing `Clusters` under
    `Kubernetes Engine` .
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已登录到GCP控制台，并在`Kubernetes Engine`下查看`Clusters`。
- en: The clusters page shows a high-level overview of the Kubernetes clusters you
    have in your project. Figure 3.1 shows a single 3-node cluster called `gke1` .
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 集群页面显示了您在项目中拥有的Kubernetes集群的高级概览。图3.1显示了一个名为`gke1`的单个3节点集群。
- en: '![Figure 3.1](Image00019.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1](Image00019.jpg)'
- en: Figure 3.1
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1
- en: Click the cluster name to drill in to more detail. Figure 3.2 shows a screenshot
    of some of the detail you can view.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 单击集群名称以查看更多详细信息。图3.2显示了一些您可以查看的详细信息的屏幕截图。
- en: '![Figure 3.2](Image00020.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2](Image00020.jpg)'
- en: Figure 3.2
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2
- en: Clicking the `> CONNECT` icon towards the top of the web UI (not shown in Figure
    3.2) gives you a command you can run on your laptop to configure your local `gcloud`
    and `kubectl` tools to talk to your cluster. Copy this command to your clipboard.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 单击Web UI顶部的`> CONNECT`图标（图3.2中未显示）会给您一个命令，您可以在笔记本电脑上运行，以配置本地的`gcloud`和`kubectl`工具与您的集群通信。将此命令复制到剪贴板。
- en: For the following step to work, you will need to download and install the Google
    Cloud SDK from `https://cloud.google.com/sdk/` . This will download several utilities,
    including the `gcloud` and `kubectl` command-line utilities.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使以下步骤生效，您需要从`https://cloud.google.com/sdk/`下载并安装Google Cloud SDK。这将下载几个实用程序，包括`gcloud`和`kubectl`命令行实用程序。
- en: Open a terminal and paste the long `gcloud` command into it. This will configure
    your `kubectl` client to talk to your new GKE cluster.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端并将长的`gcloud`命令粘贴到其中。这将配置您的`kubectl`客户端以与您的新GKE集群通信。
- en: Run a `kubectl get nodes` command to list the nodes in the cluster.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`kubectl get nodes`命令以列出集群中的节点。
- en: '[PRE24]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Congratulations! You know how to create a production-grade Kubernetes cluster
    using Google Kubernetes Engine (GKE). You also know how to inspect it and connect
    to it.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您知道如何使用Google Kubernetes Engine（GKE）创建一个生产级别的Kubernetes集群。您还知道如何检查它并连接到它。
- en: '**Warning!** Be sure to delete your GKE cluster as soon as you are finished
    using it. GKE, and other hosted K8s platforms, may incur costs even when they
    are not in use.'
  id: totrans-187
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**警告！**确保在使用完毕后立即删除您的GKE集群。即使不使用，GKE和其他托管的K8s平台可能会产生费用。'
- en: Installing Kubernetes on AWS with `kops`
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用`kops`在AWS上安装Kubernetes
- en: '`kops` is short for Kubernetes Operations. It’s a *highly-opinionated* cluster
    bootstrapping tool that makes installing Kubernetes on supported platforms *relatively
    simple* .'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`kops`是Kubernetes Operations的缩写。它是一个*高度主观*的集群引导工具，使得在受支持的平台上安装Kubernetes*相对简单*。'
- en: By *highly opinionated* , we mean it’s limited in how much you can customize
    the installation. If you need a highly-customized cluster you should look at `kubeadm`
    .
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 通过*高度主观*，我们的意思是在安装过程中您的自定义程度受到限制。如果您需要一个高度定制的集群，您应该看看`kubeadm`。
- en: By *relatively simple* , we mean it’s easier than compiling the binaries yourself
    :-D There are still parts that can be complicated if you’re not already experienced
    in those areas. For example, `kops` is extremely opinionated when it comes to
    DNS configuration - if you get the DNS wrong you’ll be in a world of pain! Fortunately
    it supports gossip-based installations that don’t use DNS. This is intended for
    development use-cases where the additional hassle of configuring DNS isn’t needed.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 通过“相对简单”，我们的意思是比起自己编译二进制文件来说更容易:-D 如果你对这些领域没有经验，仍然有一些部分可能会很复杂。例如，当涉及到DNS配置时，`kops`非常主观
    - 如果DNS配置错误，你将会陷入困境！幸运的是，它支持不使用DNS的基于八卦的安装。这适用于开发用例，不需要额外的DNS配置。
- en: Kops currently supports bootstrapping a cluster on AWS and GCE. Other platforms
    might be supported in the future.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: Kops目前支持在AWS和GCE上引导集群。其他平台可能在将来得到支持。
- en: At the time of writing, the `kops` command-line tool is only available on Mac
    and Linux.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，`kops`命令行工具仅适用于Mac和Linux。
- en: 'You’ll need all of the following to bootstrap a cluster with `kops` :'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要以下所有内容才能使用`kops`引导集群：
- en: An AWS account and a decent understanding of AWS fundamentals
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个AWS账户和对AWS基础知识的良好理解
- en: '`kubectl`'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubectl`'
- en: The latest version of the `kops` binary for your OS (Mac or Linux)
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于您的操作系统（Mac或Linux）的最新版本的`kops`二进制文件
- en: The `awscli` tool
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`awscli`工具'
- en: 'The credentials of an AWS account with the following permissions:'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有以下权限的AWS账户凭据：
- en: '`AmazonEC2FullAccess`'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonEC2FullAccess`'
- en: '`AmazonRoute53FullAccess`'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonRoute53FullAccess`'
- en: '`AmazonS3FullAccess`'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonS3FullAccess`'
- en: '`IAMFullAccess`'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IAMFullAccess`'
- en: '`AmazonVPCFullAccess`'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonVPCFullAccess`'
- en: The following examples are from a Linux machine, but it works the same on a
    Mac (and possibly Windows in the future).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例来自Linux机器，但在Mac上（可能在将来也适用于Windows）也是一样的。
- en: 'The following examples show both installation options:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了两种安装选项：
- en: DNS
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DNS
- en: Gossip
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 八卦
- en: The gossip-based installation is the simplest, and is ideal for situations where
    private DNS domains are not available. It’s also ideal for AWS locations, such
    as China, where Route53 isn’t available.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 基于八卦的安装是最简单的，适用于私有DNS域不可用的情况。它也非常适合AWS位置，比如中国，那里没有Route53。
- en: The DNS installation is more involved and requires a top-level-domain, as well
    as a sub-domain delegated to AWS Route53\. The DNS examples in this chapter use
    a domain called `tf1.com` that is hosted with a 3rd party provider such as GoDaddy.
    It has a subdomain called `k8s` that is delegated to Amazon Route53\. If you’re
    following along with the DNS examples you will need your own working domains.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: DNS安装更加复杂，需要顶级域和一个委托给AWS Route53的子域。本章中的DNS示例使用一个名为`tf1.com`的域，该域由GoDaddy等第三方提供商托管。它有一个名为`k8s`的子域，该子域被委托给Amazon
    Route53。如果您要跟随DNS示例，您将需要自己的工作域。
- en: Download and install `kubectl`
  id: totrans-211
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 下载并安装`kubectl`
- en: For Mac, the download and installation is a simple `brew install kubernetes-cli`
    .
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Mac，下载和安装很简单，使用`brew install kubernetes-cli`。
- en: The following procedure is for a Linux machine.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤适用于Linux机器。
- en: Use the following command to download the latest `kubectl` binary to your home
    directory.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将最新的`kubectl`二进制文件下载到您的主目录。
- en: '[PRE25]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The command is a single command, but is quite long and will wrap over multiple
    lines in the book. This process might introduce backslashes at the edge of the
    printed page that are not part of the command and will need to be removed.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令是一个单一的命令，但相当长，在书中会换行多次。这个过程可能会在打印页面的边缘引入反斜杠，这些反斜杠不是命令的一部分，需要被移除。
- en: Make the downloaded binary executable and move it to a directory in your `PATH`
    .
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使下载的二进制文件可执行，并将其移动到`PATH`中的目录。
- en: '[PRE26]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Run a `kubectl` command to make sure it’s installed and working.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`kubectl`命令，确保它已安装并正常工作。
- en: Download and install `kops`
  id: totrans-220
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 下载并安装`kops`。
- en: For Mac, you just need to run `brew install kops` .
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Mac，您只需要运行`brew install kops`。
- en: Use the following procedure for Linux.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux，请使用以下过程。
- en: Download the `kops` binary with the following `curl` command.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下`curl`命令下载`kops`二进制文件。
- en: The command should be issued on one line and have no backslashes `\` in it.
    It also has the version of the `kops` tool embedded in the URL, you can change
    this. See https://github.com/kubernetes/kops/releases for the latest versions.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 命令应该在一行上发出，并且不应该有反斜杠`\`。它还嵌入了URL中`kops`工具的版本，您可以更改这个版本。请参阅https://github.com/kubernetes/kops/releases获取最新版本。
- en: '[PRE27]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Make the downloaded binary executable and move it to a directory in your system’s
    `PATH` .
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使下载的二进制文件可执行，并将其移动到系统`PATH`中的目录。
- en: '[PRE28]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Run a `kops version` command to verify the installation.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`kops version`命令验证安装。
- en: '[PRE29]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Install and configure the AWS CLI
  id: totrans-230
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装和配置AWS CLI。
- en: You can install the AWS CLI tool on Mac OS using the `brew install awscli` .
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`brew install awscli`在Mac OS上安装AWS CLI工具。
- en: The following example shows how to install the AWS CLI from the default app
    repos used by Ubuntu 18.04\. The installation method will obviously be different
    if you’re using a different Linux distro.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示如何从Ubuntu 18.04使用的默认应用程序仓库安装AWS CLI。如果您使用不同的Linux发行版，安装方法显然会有所不同。
- en: Run the following command to install the AWS CLI
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令安装AWS CLI。
- en: '[PRE30]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Run the `aws configure` command to configure your instance of the AWS CLI
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`aws configure`命令来配置AWS CLI的实例。
- en: You will need the credentials of an AWS IAM account with *AmazonEC2FullAccess*
    , *AmazonRoute53FullAccess* , *AmazonS3FullAccess* , *IAMFullAccess* , and *AmazonVPCFullAccess*
    to complete this step.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要一个具有*AmazonEC2FullAccess*、*AmazonRoute53FullAccess*、*AmazonS3FullAccess*、*IAMFullAccess*和*AmazonVPCFullAccess*权限的AWS
    IAM帐户的凭据来完成此步骤。
- en: '[PRE31]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Create a new S3 bucket for kops to store configuration and state information.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为kops创建一个新的S3存储桶，用于存储配置和状态信息。
- en: Kops requires cluster names to be valid DNS names. We’ll use the name `cluster1.k8s.tf1.com`
    in these examples. You will have to use a different name in your environment.
    Let’s quickly break-down how it works. The example assumes I own a domain called
    `tf1.com` , and that I’ve delegated a sub-domain called `k8s` to AWS Route53\.
    Within that sub-domain I can create clusters with whatever names I like. In the
    example, we’ll create a cluster called `cluster1` . This will make the fully-qualified
    domain name for the cluster `cluster1.k8s.tf1.com` . I’ve created `NS` records
    in the parent `tf1.com` domain to point to the `k8s` hosted domain in Route53\.
    `tf1.com` is fictional and only being used in these examples to keep the command-line
    arguments short.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Kops要求集群名称必须是有效的DNS名称。在这些示例中，我们将使用名称`cluster1.k8s.tf1.com`。您将需要在您的环境中使用不同的名称。让我们快速分解一下它是如何工作的。该示例假设我拥有一个名为`tf1.com`的域，并且我已经将一个名为`k8s`的子域委派给了AWS
    Route53。在该子域中，我可以创建任何我喜欢的名称的集群。在该示例中，我们将创建一个名为`cluster1`的集群。这将使集群的完全限定域名为`cluster1.k8s.tf1.com`。我已经在父域`tf1.com`中创建了`NS`记录，指向了Route53中托管的`k8s`域。`tf1.com`是虚构的，仅在这些示例中用于保持命令行参数的简洁。
- en: If you plan on creating a gossip-based cluster, you will need to use a cluster
    name that ends with `.k8s.local` .
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您计划创建一个基于gossip的集群，您需要使用以`.k8s.local`结尾的集群名称。
- en: '[PRE32]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: List your S3 buckets and `grep` for the name of the bucket you created. This
    will prove that the bucket created successfully.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出您的S3存储桶，并使用`grep`查找您创建的存储桶的名称。这将证明存储桶已成功创建。
- en: '[PRE33]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Tell **kops** where to find its config and state - this will be the S3 bucket
    created in the previous step.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 告诉**kops**在哪里找到它的配置和状态 - 这将是在上一步中创建的S3存储桶。
- en: '[PRE34]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Create a new cluster with one of the following `kops create cluster` commands.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下`kops create cluster`命令之一创建新集群。
- en: The first command creates the cluster using gossip instead of DNS. To work with
    gossip the cluster name **must** end with `.k8s.local` .
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令使用gossip而不是DNS创建集群。要使用gossip，集群名称**必须**以`.k8s.local`结尾。
- en: The second command creates the cluster with DNS and assumes a working DNS configuration
    as previously explained.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个命令使用DNS创建集群，并假定之前已经解释过的工作DNS配置。
- en: You will need a copy of your AWS public key for the command to work. In the
    examples, the key is called `np-k8s.pub` and is in the current working directory.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一份AWS公钥的副本才能使命令生效。在示例中，密钥名为`np-k8s.pub`，位于当前工作目录中。
- en: '[PRE35]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The command is broken down as follows. `kops create cluster` tells **kops**
    to create a new cluster. `--cloud=aws` tells it to create the cluster in AWS using
    the AWS provider. `--zones=eu-west-1b` tells **kops** to create the cluster in
    the eu-west-1b zone. If creating the cluster with DNS, the `--dns-zone` flag tells
    it to use the delegated zone. We name the cluster with the `--name` flag - remember
    to end your cluster name with “.k8s.local” if creating with gossip. `--ssh-public-key`
    tells it which key to use. Finally, the `--yes` flag tells **kops** to go ahead
    and deploy the cluster. If you omit the `--yes` flag, a cluster config will be
    created but it will not be deployed.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 命令分解如下。`kops create cluster`告诉**kops**创建一个新的集群。`--cloud=aws`告诉它使用AWS提供程序在AWS中创建集群。`--zones=eu-west-1b`告诉**kops**在eu-west-1b区创建集群。如果使用DNS创建集群，`--dns-zone`标志告诉它使用委托区域。我们使用`--name`标志命名集群-如果使用gossip创建，请记住以“.k8s.local”结尾。`--ssh-public-key`告诉它使用哪个密钥。最后，`--yes`标志告诉**kops**继续部署集群。如果省略`--yes`标志，将创建集群配置，但不会部署。
- en: It may take a few minutes for the cluster to deploy. This is because **kops**
    is creating the AWS resources required to build the cluster. This includes things
    like a VPC, EC2 instances, launch configs, auto scaling groups, security groups
    etc. After it has built the AWS infrastructure, it also has to build the Kubernetes
    cluster.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 集群部署可能需要几分钟时间。这是因为**kops**正在创建构建集群所需的AWS资源。这包括诸如VPC、EC2实例、启动配置、自动缩放组、安全组等。在构建了AWS基础设施之后，它还必须构建Kubernetes集群。
- en: Once the cluster is deployed you can validate it with the `kops validate cluster`
    command. It may take a while for the cluster to completely come up, so be patient.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署集群后，您可以使用`kops validate cluster`命令对其进行验证。集群完全启动可能需要一段时间，所以请耐心等待。
- en: '[PRE37]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Congratulations! You now know how to create a Kubernetes cluster in AWS using
    the `kops` tool.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您现在知道如何使用`kops`工具在AWS中创建Kubernetes集群。
- en: Now that your cluster is up and running you can issue `kubectl` commands against
    it. It might also be worth having a poke around in the AWS console to see some
    of the resources that `kops` created.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的集群已经运行起来，您可以对其发出`kubectl`命令。也许值得在AWS控制台中查看一下`kops`创建的一些资源。
- en: '**Warning!** Be sure to delete your cluster when you’re finished using it.
    Clusters running on cloud platforms may incur costs even when they are not actively
    being used.'
  id: totrans-258
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**警告！**确保在使用完毕后删除您的集群。在云平台上运行的集群可能会产生费用，即使它们没有被积极使用。'
- en: Deleting a Kubernetes cluster in AWS with `kops`
  id: totrans-259
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用`kops`在AWS中删除Kubernetes集群
- en: You can use the `kops delete cluster` command to delete the cluster you just
    created. This will also delete all of the AWS resources that were created to support
    the cluster.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`kops delete cluster`命令来删除您刚刚创建的集群。这也将删除为支持集群创建的所有AWS资源。
- en: The following command will delete the cluster created in the previous steps.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将删除前面步骤中创建的集群。
- en: '[PRE38]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Installing Kubernetes with `kubeadm`
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用`kubeadm`安装Kubernetes
- en: In this section, we’ll see how to install Kubernetes using `kubeadm` .
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将看到如何使用`kubeadm`安装Kubernetes。
- en: One of the best things about `kubeadm` is that you can use it to install Kubernetes
    nearly anywhere - laptop, bare metal in your data center, even on public clouds.
    It also does a lot more than just install Kubernetes - you can upgrade, manage,
    and query your clusters too. It’s often said that `kubeadm` is `kubectl` for clusters
    - a great tool for building **and** managing Kubernetes clusters. Anyway, `kubeadm`
    is a core Kubernetes project and has a promising future.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`kubeadm`最好的一点是，您可以使用它在几乎任何地方安装Kubernetes - 笔记本电脑、数据中心的裸机，甚至在公共云上。它不仅仅是安装Kubernetes
    - 您还可以升级、管理和查询您的集群。人们经常说`kubeadm`是集群的`kubectl` - 一个用于构建**和**管理Kubernetes集群的绝佳工具。无论如何，`kubeadm`是一个核心的Kubernetes项目，并且有着光明的未来。'
- en: The examples in this section are based on Ubuntu 18.04\. Some of the commands
    in the pre-reqs section will be different if you’re using a different Linux distro.
    However, the procedure we’re showing can be used to install Kubernetes on your
    laptop, in your data center, or even in the cloud.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的示例基于Ubuntu 18.04。如果您使用不同的Linux发行版，则先决条件部分中的一些命令将有所不同。但是，我们展示的过程可以用于在笔记本电脑、数据中心甚至云中安装Kubernetes。
- en: We’ll be walking through a simple example using three Ubuntu 18.04 machines
    configured as one master and two nodes as shown in Figure 3.3.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将演示一个简单的示例，使用三台配置为一个主节点和两个节点的Ubuntu 18.04机器，如图3.3所示。
- en: '![Figure 3.3](Image00021.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![图3.3](Image00021.jpg)'
- en: Figure 3.3
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3
- en: 'The high-level plan will be as follows:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 高级计划将如下：
- en: Install the pre-requisites
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装先决条件
- en: Initialize a new cluster with **node1** as the master
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**node1**初始化一个新的集群作为主节点
- en: Create the Pod network
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Pod网络
- en: Add **node2** and **node3** as worker nodes.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**node2**和**node3**添加为工作节点。
- en: 'All three nodes will get the following:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 所有三个节点都将获得以下内容：
- en: Docker
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker
- en: '`kubeadm`'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubeadm`'
- en: kubelet
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: kubelet
- en: '`kubectl`'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubectl`'
- en: '**Docker** is the container runtime. Other runtimes exist, but we’ll go with
    Docker. `kubeadm` is the tool we’ll use the build the cluster, **kubelet** is
    the Kubernetes node agent, and `kubectl` is the Kubernetes command-line utility.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '**Docker**是容器运行时。还存在其他运行时，但我们将使用Docker。`kubeadm`是我们将用来构建集群的工具，**kubelet**是Kubernetes节点代理，`kubectl`是Kubernetes命令行实用程序。'
- en: Pre-requisites
  id: totrans-281
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 先决条件
- en: The following commands are specific to Ubuntu 18.04 and need to be ran on **all
    three nodes** . They set things up so that we can install the right packages from
    the right repos. Equivalent commands and packages exist for other flavors of Linux.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令特定于Ubuntu 18.04，并且需要在**所有三个节点**上运行。它们设置了一些东西，以便我们可以从正确的存储库安装正确的软件包。其他Linux版本也存在等效的命令和软件包。
- en: Use the following two commands to get the latest versions of a few packages
    that will be required in later steps.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下两个命令获取稍后步骤中将需要的一些软件包的最新版本。
- en: '[PRE39]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Download and install the following two repository keys. One of the repositories
    has the Kubernetes tools and the other has Docker. We’ll need these keys in later
    steps.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装以下两个存储库密钥。其中一个存储库包含Kubernetes工具，另一个存储库包含Docker。我们将在稍后的步骤中需要这些密钥。
- en: '[PRE40]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Create, or edit, the following file and add the repo required to install the
    Kubernetes packages.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 创建或编辑以下文件，并添加安装Kubernetes软件包所需的存储库。
- en: '[PRE41]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Add the following line.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 添加以下行。
- en: '[PRE42]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The next step is to install `kubeadm` , `kubectl` , and the `kubelet` . Use
    the following two commands.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是安装`kubeadm`，`kubectl`和`kubelet`。使用以下两个命令。
- en: '[PRE43]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: If you run the `apt-get install` command again you can see the versions that
    were installed.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 如果再次运行`apt-get install`命令，您可以看到已安装的版本。
- en: Now let’s install Docker…
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们安装Docker...
- en: Add the required fingerprint.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 添加所需的指纹。
- en: '[PRE44]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Now add the *stable* Docker repository. This is a single command with backslashes
    used to spread it over multiple lines.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 现在添加*stable* Docker 仓库。这是一个单一的命令，使用反斜杠将其分布在多行上。
- en: '[PRE45]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Install Docker.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Docker。
- en: '[PRE46]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: That’s the pre-reqs done.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是先决条件。
- en: Initialize a new cluster
  id: totrans-302
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 初始化一个新的集群
- en: Initializing a new Kubernetes cluster with `kubeadm` is as simple as typing
    `kubeadm init` .
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kubeadm init`初始化一个新的 Kubernetes 集群就像输入`kubeadm init`一样简单。
- en: '[PRE47]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The command pulls all required images and builds the cluster. When the process
    is complete, it spits out a few short commands that enable you to manage the cluster
    as a regular user. It also gives you the `kubeadm join` command that will let
    you add additional nodes to the cluster.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令拉取所有必需的镜像并构建集群。当过程完成时，它会输出一些简短的命令，让您可以作为普通用户管理集群。它还会给出`kubeadm join`命令，让您可以将其他节点添加到集群中。
- en: Congratulations! That’s a brand-new single-master Kubernetes cluster.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！这是一个全新的单主 Kubernetes 集群。
- en: Complete the process by running the commands listed in the output of the `kubeadm
    init` .
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行`kubeadm init`输出中列出的命令来完成该过程。
- en: '[PRE48]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: These commands may be different, or even no longer required in the future. However,
    they copy the Kubernetes config file from `/etc/kubernetes` into your home directory,
    and change the ownership to you.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令可能会有所不同，甚至在将来可能不再需要。但是，它们会将 Kubernetes 配置文件从`/etc/kubernetes`复制到您的主目录，并将所有权更改为您。
- en: Use `kubectl` to verify that the cluster initialized successfully.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kubectl`验证集群是否初始化成功。
- en: '[PRE49]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Run the following `kubectl` command to find the reason why the cluster `STATUS`
    is showing as `NotReady` .
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下`kubectl`命令查找集群`STATUS`显示为`NotReady`的原因。
- en: '[PRE50]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: This command shows all Pods in all namespaces - this includes system Pods in
    the system (kube-system) namespace.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令显示所有命名空间中的所有 Pods - 这包括系统命名空间（kube-system）中的系统 Pods。
- en: As we can see, none of the `coredns` Pods are running. This is preventing the
    cluster from entering the `Ready` state, and is happening because we haven’t created
    the Pod network yet.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，没有一个`coredns` Pods 在运行。这阻止了集群进入`Ready`状态，这是因为我们还没有创建 Pod 网络。
- en: Create the Pod network. The following example creates a multi-host overlay network
    provided by Weaveworks. Other options exist, and you do not have to go with the
    example shown here.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Pod 网络。以下示例创建了一个由 Weaveworks 提供的多主机覆盖网络。还有其他选项可用，您不必选择这里显示的示例。
- en: The command may wrap over multiple lines in the book. Any backslashes (`\` )
    at the edge of the printed page should be removed.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令可能会在书中跨越多行。在打印页面的边缘处的任何反斜杠（`\`）都应该被移除。
- en: '[PRE51]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Check if the status of the master has changed from `NotReady` to `Ready` .
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 检查主节点的状态是否从`NotReady`变为`Ready`。
- en: '[PRE52]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Great, the cluster is ready and the DNS Pods will now be running.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，集群已经准备好了，DNS Pods 现在将会运行。
- en: Now that the cluster is up and running, it’s time to add some nodes.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 现在集群已经运行起来了，是时候添加一些节点了。
- en: Adding worker nodes requires the cluster’s join token. You might remember that
    this was provided as part of the output when the cluster was first initialized.
    Scroll back up to that output, copy the `kubeadm join` command to the clipboard
    and then run it on **node2** and **node3** .
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 添加工作节点需要集群的加入令牌。您可能还记得，这是在集群首次初始化时作为输出的一部分提供的。滚动回到那个输出，将`kubeadm join`命令复制到剪贴板上，然后在**node2**和**node3**上运行它。
- en: '**Note:** The following must be performed on **node2** and **node3** and you
    must have already installed the pre-reqs (Docker, kubeadm, kubectl, and the kubelet)
    on these nodes.'
  id: totrans-324
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：**以下操作必须在**node2**和**node3**上执行，并且您必须已经在这些节点上安装了先决条件（Docker、kubeadm、kubectl
    和 kubelet）。'
- en: '[PRE53]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Repeat the command on **node3** .
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 在**node3**上重复该命令。
- en: Make sure that both nodes successfully registered by running another `kubectl
    get nodes` on the master.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 确保两个节点都成功注册，通过在主节点上再次运行 `kubectl get nodes` 来检查。
- en: '[PRE54]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Congratulations! You’ve manually built a 3-node cluster using `kubeadm` . But
    remember that it’s running a single master without H/A.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已经使用 `kubeadm` 手动构建了一个由 3 个节点组成的集群。但请记住，它只运行一个单一的主节点，没有 H/A。
- en: Feel free to poke around the cluster with `kubeadm` . You should also investigate
    ways `kubeadm` can install clusters with H/A managers.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 随意使用 `kubeadm` 在集群中探索。您还应该调查 `kubeadm` 安装具有 H/A 管理器的集群的方法。
- en: Chapter summary
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 章节总结
- en: In this chapter, we learned how to install Kubernetes in a few different ways
    on a few different platforms.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在几种不同的平台上以几种不同的方式安装 Kubernetes。
- en: We saw how fast and simple it is to setup a Kubernetes cluster on Play with
    Kubernetes (PWK). We got a 4-hour playground without having to install anything
    on our laptop or in our own cloud.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了在 Play with Kubernetes (PWK) 上设置 Kubernetes 集群是多么快速简单。我们可以在没有在笔记本电脑或自己的云中安装任何东西的情况下获得
    4 小时的游乐场。
- en: We setup Docker Desktop and Minikube for a great developer experience on our
    laptops.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在笔记本电脑上为开发人员提供了出色的开发体验，安装了 Docker Desktop 和 Minikube。
- en: We learned how to spin up a managed/hosted Kubernetes cluster in the Google
    Cloud using Google Kubernetes Engine (GKE).
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何在谷歌云中使用 Google Kubernetes Engine (GKE) 快速创建托管的 Kubernetes 集群。
- en: Then we looked at how to use the `kops` tool to spin up a cluster in AWS using
    the AWS provider.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们看了如何使用 `kops` 工具在 AWS 上使用 AWS 提供程序快速创建集群。
- en: We finished the chapter seeing how to perform a manual install using the `kubeadm`
    tool.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 我们完成了本章，看到了如何使用 `kubeadm` 工具执行手动安装。
- en: There are other ways and places we can install Kubernetes. But the chapter is
    already long enough and I’ve pulled out way too much of my hair already :-D
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在其他方式和地方安装 Kubernetes。但本章已经足够长了，我已经拔了太多头发了 :-D
