["```\n    $ docker version\n    Docker version 18\n\n    .09.0-ce...\n\n    $ kubectl version --output=\n\n    yaml\n    clientVersion:\n    ...\n      major: \"1\"\n\n      minor: \"11\"\n\n    ```", "```\n    $\n\n     kubeadm\n\n     init\n\n     --\n\n    apiserver\n\n    -\n\n    advertise\n\n    -\n\n    address\n\n     $\n\n    (\n\n    hostname\n\n     -\n\n    i\n\n    )\n\n    [\n\n    kubeadm\n\n    ]\n\n     WARNING\n\n    :\n\n     kubeadm\n\n     is\n\n     in\n\n     beta\n\n    ,\n\n     do\n\n     not\n\n     use\n\n     it\n\n     for\n\n     prod\n\n    ...\n\n    [\n\n    init\n\n    ]\n\n     Using\n\n     Kubernetes\n\n     version\n\n    :\n\n     v1\n\n    .11.1\n\n    [\n\n    init\n\n    ]\n\n     Using\n\n     Authorization\n\n     modes\n\n    :\n\n     [\n\n    Node\n\n     RBAC\n\n    ]\n\n    <\n\n    Snip\n\n    >\n\n    Your\n\n     Kubernetes\n\n     master\n\n     has\n\n     initialized\n\n     successfully\n\n    !\n\n    <\n\n    Snip\n\n    >\n\n    ```", "```\n    $ kubectl get nodes\n    NAME      STATUS     AGE       VERSION\n    node1     NotReady   1m        v1.11.2\n\n    ```", "```\n    $ kubectl apply -n kube-system -f \\\n\n     \"https://cloud.weave.works/k8s/net?k8s-version=\n\n    $(\n\n    kubectl version |\n\n     base64 |\n\n     tr\\\n\n     -d '\\n'\n\n    )\n\n    \"\n\n     serviceaccount \"weave-net\"\n\n     created\n     clusterrole \"weave-net\"\n\n     created\n     clusterrolebinding \"weave-net\"\n\n     created\n     role \"weave-net\"\n\n     created\n     rolebinding \"weave-net\"\n\n     created\n     daemonset \"weave-net\"\n\n     created\n\n    ```", "```\n    $ kubectl get nodes\n    NAME      STATUS    AGE       VERSION\n    node1     Ready     2m        v1.11.2\n\n    ```", "```\n   $ kubeadm join --token 948f32.79bd6c8e951cf122 10.0.29.3:6443...\n   Initializing machine ID from random generator.\n   [preflight] Skipping pre-flight checks\n   <Snip>\n   Node join complete:\n   * Certificate signing request sent to master and response received.\n   * Kubelet informed of new secure connection details.\n\n```", "```\n   $ kubectl get nodes\n   NAME      STATUS    AGE       VERSION\n   node1     Ready     5m        v1.11.2\n   node2     Ready     1m        v1.11.2\n\n```", "```\n$ kubectl get nodes\nNAME                 STATUS   ROLES    AGE   VERSION\ndocker-for-desktop   Ready    master   68d   v1.10.3\n\n```", "```\n    $ brew install kubernetes-cli\n    Updating Homebrew...\n\n    ```", "```\n    $ kubectl version --client\n    Client Version: version.Info{\n\n    Major:\"1\"\n\n    , Minor:\"12\"\n\n    ...\n\n    ```", "```\n    $ brew cask install minikube\n\n    ==\n\n    > Downloading https://storage.googlapis.com/minikube...\n\n    ```", "```\n    $ brew install hyperkit\n\n    ==\n\n    > Downloading https://homebrew.bintray...\n\n    ```", "```\n    $ minikube start --vm-driver=\n\n    hyperkit\n    Starting local\n\n     Kubernetes cluster...\n    Starting VM...\n\n    ```", "```\n> choco install kubernetes-cli\n\n```", "```\n> kubectl version --client=true --output=yaml\nclientVersion:\n  ...\n  gitVersion: v1.12.0\n  ...\n  major: \"1\"\n  minor: \"12\"\n  platform: windows/amd64\n\n```", "```\n    > minikube version\n    minikube version: v0.30.0\n\n    ```", "```\n    > minikube start `\n    --vm-driver=hyperv `\n    --hyperv-virtual-switch=\"external\" `\n    --kubernetes-version=\"v1.12.1\" `\n    --memory=4096\n\n      Starting local Kubernetes v1.12.1 cluster...\n      Starting VM...\n      139.09 MB / 139.09 MB [================] 100.00% 0s\n      <Snip>\n      Starting cluster components...\n      Kubectl is now configured to use the cluster.\n\n    ```", "```\n    > kubectl version -o yaml\n    clientVersion:\n    <Snip>\n    serverVersion:\n      buildDate: 2018-10-05T16:36:14Z\n      compiler: gc\n      gitCommit: 4ed3216f3ec431b140b1d899130a69fc671678f4\n      gitTreeState: clean\n      gitVersion: v1.12.1\n      goVersion: go1.10.4\n      major: \"1\"\n      minor: \"12\"\n      platform: linux/amd64\n\n    ```", "```\n   $ kubectl config current-context\n   minikube\n\n```", "```\n   $ kubectl get nodes\n   NAME       STATUS   AGE   VERSION\n   minikube   Ready    1m    v1.12.1\n\n```", "```\n   $ minikube stop\n   Stopping local Kubernetes cluster...\n   Machine stopped\n\n```", "```\n   $ minikube delete\n   Deleting local Kubernetes cluster...\n   Machine deleted\n\n```", "```\n   $ minikube start \\\n     --kubernetes-version=v1.10.7\n\n     Starting local Kubernetes cluster...\n     Starting VM...\n\n```", "```\n   $ kubectl get nodes\n   NAME       STATUS   AGE   VERSION\n   minikube   Ready    1m    v1.10.7\n\n```", "```\n   $ kubectl get nodes\n   NAME             STATUS     AGE    VERSION\n   gke-cluster...   Ready      5m     v1.10.7-gke.6\n   gke-cluster...   Ready      6m     v1.10.7-gke.6\n   gke-cluster...   Ready      6m     v1.10.7-gke.6\n\n```", "```\n    $ curl -LO https://storage.googleapis.com/kubernetes-release/release/$(\n\n    curl -s \\\n\n    https://storage.googleapis.com/kubernetes-release/release/stable.txt)\n\n    /bin/linux\\\n\n    /amd64/kubectl\n\n    ```", "```\n    $ chmod +x ./kubectl\n    $ mv ./kubectl /usr/local/bin/kubectl\n\n    ```", "```\n    $ curl -LO https://github.com/kubernetes/kops/releases/download/1.10.0/kops-lin\\\n\n    ux-amd64\n\n    ```", "```\n    $ chmod +x kops-linux-amd64\n    $ mv kops-linux-amd64 /usr/local/bin/kops\n\n    ```", "```\n   $ kops version\n   Version 1.10.0\n\n```", "```\n    $ sudo apt-get install awscli -y\n\n    ```", "```\n    $ aws configure\n    AWS Access Key ID [\n\n    None]\n\n    : **************\n    AWS Secret Access Key [\n\n    None]\n\n    : **************\n    Default region name [\n\n    None]\n\n    : enter-your-region-here\n    Default output format [\n\n    None]\n\n    :\n\n    ```", "```\n    $ aws s3 mb s3://cluster1.k8s.tf1.com\n    make_bucket: cluster1.k8s.tf1.com\n\n    ```", "```\n    $ aws s3 ls |\n\n     grep k8s\n    2018\n\n    -10-10 13\n\n    :09:11 cluster1.k8s.tf1.com\n\n    ```", "```\n    $ export\n\n     KOPS_STATE_STORE\n\n    =\n\n    s3://cluster1.k8s.tf1.com\n\n    ```", "```\n    $ kops create cluster \\\n\n      --cloud-aws \\\n\n      --zones=\n\n    eu-west-1b \\\n\n      --name=\n\n    mycluster.k8s.local \\\n\n      --ssh-public-key ~/np-k8s.pub \\\n\n      --yes\n\n    ```", "```\n    $ kops create cluster \\\n\n      --cloud=\n\n    aws \\\n\n      --zones=\n\n    eu-west-1b \\\n\n      --dns-zone=\n\n    k8s.tf1.com \\\n\n      --name cluster1.k8s.tf1.com  \\\n\n      --ssh-public-key ~/np-k8s.pub \\\n\n      --yes\n\n    ```", "```\n    $ kops validate cluster\n    Using cluster from kubectl context: cluster1.k8s.tf1.com\n\n    INSTANCE GROUPS\n    NAME      ROLE     MACHINETYPE  MIN  MAX  SUBNETS\n    master..  Master   m3.medium    1\n\n        1\n\n        eu-west-1b\n    nodes     Node     t2.medium    2\n\n        2\n\n        eu-west-1b\n\n    NODE STATUS\n    NAME             ROLE      READY\n    ip-172-20-38..   node      True\n    ip-172-20-58..   master    True\n    ip-172-20-59..   node      True\n\n    Your cluster cluster1.k8s.tf1.com is ready\n\n    ```", "```\n   $ kops delete cluster --name=cluster1.k8s.tf1.com --yes\n\n```", "```\n$ sudo apt-get update\n<Snip>\n\n$ sudo apt-get install -y \\\n\n  apt-transport-https \\\n\n  ca-certificates \\\n\n  curl \\\n\n  software-properties-common\n\n```", "```\n$ curl -s \\\n\n https://packages.cloud.google.com/apt/doc/apt-key.gpg |\n\n sudo apt-key add -\nOK\n\n$ curl -fsSL \\\n\n https://download.docker.com/linux/ubuntu/gpg |\n\n sudo apt-key add -\nOK\n\n```", "```\n$ sudo vim /etc/apt/sources.list.d/kubernetes.list\n\n```", "```\ndeb\n\n https://apt.kubernetes.io/\n\n kubernetes-xenial\n\n main\n\n```", "```\n$ sudo apt-get update\n<Snip>\n\n$ sudo apt-get install -y kubelet kubeadm kubectl\n<Snip>\n\n```", "```\n$ sudo apt-key fingerprint 0EBFCD88\npub   rsa4096 2017\n\n-02-22 [\n\nSCEA]\n\n      9DC8 5822\n\n 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88\nuid           [\n\n unknown]\n\n Docker Release (\n\nCE deb)\n\n <docker@docker.com>\nsub   rsa4096 2017\n\n-02-22 [\n\nS]\n\n```", "```\n$ sudo add-apt-repository \\\n\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n\n$(\n\nlsb_release -cs)\n\n \\\n\n stable\"\n\n```", "```\n$ sudo apt-get update\n<Snip>\n\n$ sudo apt-get install docker-ce\n<Snip>\n\n```", "```\n   $ sudo kubeadm init\n   <SNIP>\n   Your Kubernetes master has initialized successfully!\n\n   To start using your cluster, you need to run (as a regular user):\n\n   mkdir -p $HOME/.kube\n   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n   sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n   <SNIP>\n   You can join any number of machines by running the following...\n\n   kubeadm join --token b90685.bd53aca93b758efc 172.31.32.74:6443\n\n```", "```\n   $ mkdir -p $HOME/.kube\n   $ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n   $ sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n```", "```\n   $ kubectl get nodes\n   NAME    STATUS     ROLES    AGE     VERSION\n   node1   NotReady   master   2m43s   v1.12.1\n\n```", "```\n   $ kubectl get pods --all-namespaces\n   NAMESPACE     NAME           READY   STATUS              RESTARTS   AGE\n   kube-system   coredns-...vt  0/1     ContainerCreating   0          8m33s\n   kube-system   coredns-...xw  0/1     ContainerCreating   0          8m33s\n   kube-system   etcd...        1/1     Running             0          7m46s\n   kube-system   kube-api...    1/1     Running             0          7m36s\n   ...\n\n```", "```\n   $ kubectl apply -n kube-system -f \\\n   \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | \\\ntr -d '\\n')\"\n\n```", "```\n$ kubectl get nodes\nNAME    STATUS   ROLES    AGE     VERSION\nnode1   Ready    master   3m51s   v1.12.1\n\n```", "```\n   node2$ kubeadm join 172.31.32.74:6443 --token b90...\n   <SNIP>\n   Node join complete:\n   * Certificate signing request sent to master and response received\n   * Kubelet informed of new secure connection details.\n\n```", "```\n   $ kubectl get nodes\n   NAME    STATUS   ROLES    AGE   VERSION\n   node1   Ready    master   10m   v1.12.1\n   node2   Ready    master   55s   v1.12.1\n   node3   Ready    <none>   34s   v1.12.1\n\n```"]