["```\ncurl -o /usr/local/bin/circleci https://circle-downloads.s3.amazonaws.com/releases/build_agent_wrapper/circleci && chmod +x /usr/local/bin/circleci\n```", "```\n# Go to the Downloads Folder\ncd ~/Downloads\n\n# Unpack the compressed asset\ntar -xvzf circleci-cli_0.1.771_darwin_amd64.tar.gz\n\n# Go into the uncompressed directory\ncd circleci-cli_0.1.771_darwin_amd64\n\n# Move the circleci binary into the folder /usr/local/bin\nmv circleci /usr/local/bin/circleci-beta\n\n# Make sure that the binary is executable\nchmod +x /usr/local/bin/circleci-beta\n\n# Check that the binary version to make sure that it is working\ncircleci-beta help\n```", "```\nversion: 2 jobs: build: docker: # specify the version you desire here - image: circleci/node:7.10\n  working_directory: ~/repo steps: - checkout - restore_cache: keys: - v1-dependencies-{{ checksum \"package.json\" }} - v1-dependencies- - run: yarn install - save_cache: paths: - node_modules key: v1-dependencies-{{ checksum \"package.json\" }} # run tests! - run: yarn test\n```", "```\nversion: 2\njobs:\n    build:\n        ...\n```", "```\nversion: 2 jobs: build: docker: - image: circleci/golang:1.9 working_directory: /go/src/github.com/packtci/go-template-example-with-circle-ci steps: - checkout - run: name: \"Print go version\" command: go version - run: name: \"Run Unit Tests\" command: go test\n```", "```\n...\n    build:\n        ...\n    integration:\n       docker:\n            - image: cypress/base:8\n                environment:\n                    TERM: xterm\n       steps:\n            - checkout\n            - run: npm install\n            - run:\n                name: \"Run Integration Tests\"\n                command: $(npm bin)/cypress run\n```", "```\ncircleci step halt\n```", "```\nversion: 2\njobs:\n    build:\n        ...\n    integration:\n        ....\nworkflows:\n    version: 2\n    build_and_integration:\n        jobs:\n            - build\n            - integration\n```", "```\n...\ndeploy:\n    docker:\n        - image: buildpack-deps:trusty\n    steps:\n        - checkout\n        - run:\n            name: Deploy Master to Heroku\n            command: |\n                git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master\n\nworkflows:\n    version: 2\n        build_integration_and_deploy:\n            jobs:\n                - build\n                - integration:\n                    requires:\n                        - build\n                - deploy:\n                    requires:\n                        -integration\n```"]