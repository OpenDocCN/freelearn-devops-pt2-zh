["```\njava -version\n```", "```\nchoco install maven\n```", "```\necho %JAVA_HOME%\n```", "```\necho %JAVA_HOME%\n```", "```\nmvn --version\n```", "```\njava -version\njava version \"1.8.0_162\"\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\n```", "```\nbrew install maven\n```", "```\nexport JAVA_HOME=`/usr/libexec/java_home -v 1.8`\n```", "```\nmvn --version\nApache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T14:49:05-05:00)\nMaven home: /usr/local/Cellar/maven/3.5.3/libexec\nJava version: 1.8.0_162, vendor: Oracle Corporation\nJava home: /Library/Java/JavaVirtualMachines/jdk1.8.0_162.jdk/Contents/Home/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.13.4\", arch: \"x86_64\", family: \"mac\"\n```", "```\njava -version\nopenjdk version \"9-internal\"\nOpenJDK Runtime Environment (build 9-internal+0-2016-04-14-195246.buildd.src)\nOpenJDK 64-Bit Server VM (build 9-internal+0-2016-04-14-195246.buildd.src, mixed mode)\n```", "```\nsudo apt-get update && sudo apt install openjdk-9-jre\n```", "```\nsudo apt-get install maven\n```", "```\nexport JAVA_HOME=/usr/lib/jvm/java-1.9.0-openjdk-amd64/\n```", "```\nmvn --version\nApache Maven 3.3.9\nMaven home: /usr/share/maven\nJava version: 9-internal, vendor: Oracle Corporation\n```", "```\nJava home: /usr/lib/jvm/java-9-openjdk-amd64\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"4.4.0-127-generic\", arch: \"amd64\", family: \"unix\"\n```", "```\necho %USERPROFILE%\\.m2\\settings.xml\n```", "```\nmvn archetype:generate -Dfilter=io.jenkins.archetypes:hello-world\n```", "```\n// First go into the newly created directory\ncd jenkins-helloworld-example-plugin\n// Then run the maven build command\nmvn package\n```", "```\npackage io.jenkins.plugins.sample;   import hudson.Launcher; /* More Import Statements Here */\n\npublic class HelloWorldBuilder extends Builder implements SimpleBuildStep {\n\n    /* Rest of methods in Github Source */\n\n    @Override\n    public void perform(Run<?, ?> run, FilePath workspace, Launcher launcher, TaskListener listener) throws InterruptedException, IOException {\n        if (useFrench) {\n            listener.getLogger().println(\"Bonjour, \" + name + \"!\");\n        } else {\n            listener.getLogger().println(\"Hello, \" + name + \"!\");\n        }\n    }\n\n    @Symbol(\"greet\")\n    @Extension\n    public static final class DescriptorImpl extends BuildStepDescriptor<Builder> {\n\n        /* Rest of the source in Github */\n}\n\n```", "```\npackage io.jenkins.plugins.sample;   import hudson.model.FreeStyleBuild; /* More Import Statements Here */   public class HelloWorldBuilderTest {\n\n    @Rule\n  public JenkinsRule jenkins = new JenkinsRule();   final String name = \"Bobby\";    @Test\n  public void testConfigRoundtrip() throws Exception {\n        FreeStyleProject project = jenkins.createFreeStyleProject();\n  project.getBuildersList().add(new HelloWorldBuilder(name));\n  project = jenkins.configRoundtrip(project);\n  jenkins.assertEqualDataBoundBeans(new HelloWorldBuilder(name), project.getBuildersList().get(0));\n  }\n\n    /* More test Cases in this file. */\n\n}\n```", "```\njenkins-helloworld-example-plugin/target/jenkins-helloworld-example-plugin.hpi\n```"]