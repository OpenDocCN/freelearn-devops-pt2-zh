- en: The Business Value of CI/CD
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CI/CD的商业价值
- en: Now that we have a clear understanding of what automation, **continuous integration**
    (**CI**), and **continuous delivery** (**CD**) are, we need to communicate the
    business value of these practices to business stakeholders, or else we risk building
    features without action items that incorporate these practices. This chapter is
    about convincing the stakeholders of these values, and we will discuss problems
    with communication, how to communicate pain points to team members, sharing responsibilities
    among different teams, knowing your key stakeholders, how to demonstrate why CI/CD
    is important, and how to get approval for CI/CD from your stakeholders.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们清楚了自动化、持续集成（CI）和持续交付（CD）的概念，我们需要向业务利益相关者传达这些实践的商业价值，否则我们就会在不考虑这些实践的情况下构建功能。本章将讨论如何说服利益相关者这些价值，以及我们将讨论沟通问题、如何向团队成员传达痛点、在不同团队之间分享责任、了解你的关键利益相关者、演示CI/CD的重要性以及从利益相关者那里获得CI/CD的批准。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Problems with communication
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 沟通问题
- en: Communicating pain points to team members
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向团队成员传达痛点
- en: Sharing responsibilities among different teams
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同团队之间分享责任
- en: Knowing your stakeholders
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解你的利益相关者
- en: Demonstrating why CI/CD is important
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CI/CD的重要性演示
- en: Getting approval for CI/CD from your stakeholders
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从利益相关者那里获得CI/CD的批准
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术需求
- en: This chapter assumes that you are already familiar with the concepts of automation
    and CI/CD; read [Chapter 1](69088250-887a-4306-ac24-fcda17be315b.xhtml), *CI/CD
    with Automated Testing*, and [Chapter 2](1f431ec3-84d5-4132-b542-01d1fe63a205.xhtml),
    *Basics of Continuous Integration*, before reading this chapter if you are unsure
    about these topics. This chapter will mainly be about how to communicate the values
    of these practices to stakeholders, so there won't be any code samples or installations
    to do.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章假设你已经熟悉自动化和CI/CD的概念；如果你对这些主题感到不确定，请在阅读本章之前阅读[第1章](69088250-887a-4306-ac24-fcda17be315b.xhtml)《自动化测试的CI/CD》和[第2章](1f431ec3-84d5-4132-b542-01d1fe63a205.xhtml)《持续集成的基础知识》。本章主要讨论如何向利益相关者传达这些实践的价值，因此不会有任何代码示例或需要安装的内容。
- en: Problems with communication
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 沟通问题
- en: In any working environment, there are bound to be issues with communication,
    but in particular there are issues in Agile working environments. Some problems
    with communication are miscommunications of requirements, a lack of proper documentation,
    timezone differences, a lack of trust and mutual respect, cultural differences,
    language barriers, and long feedback loop cycles.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何工作环境中，沟通问题都是不可避免的，但特别是在敏捷工作环境中存在问题。一些沟通问题包括需求的误解、缺乏适当的文档、时区差异、缺乏信任和相互尊重、文化差异、语言障碍和长时间的反馈循环。
- en: Miscommunication of requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需求的误解
- en: 'Here is a depiction of a requirements checklist. The purpose of a requirements
    checklist is to get all the necessary facts laid out for a particular feature:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个需求清单的示例。需求清单的目的是为特定功能列出所有必要的事实。
- en: '![](assets/21ef4c87-e303-46a9-b1fc-53cd44be9461.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/21ef4c87-e303-46a9-b1fc-53cd44be9461.png)'
- en: The miscommunication of requirements is a common issue that occurs in sprint
    cycles in an Agile working environment. It is impossible to truly eliminate the
    miscommunication of requirements completely, but it is important to minimize the
    risk of this by making sure that you communicate with the end user or customer
    from the inception of the feature request.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在敏捷工作环境中，需求的误解是一个常见问题。虽然不可能完全消除需求的误解，但通过确保在功能请求的最初阶段与最终用户或客户进行沟通，可以最大程度地减少这种风险。
- en: It is important that the feature request that you are implementing is clearly
    stated and that each piece of functionality has a clear business intent. This
    is important because it helps developers, DevOps personnel, and QA/testers be
    better prepared during the implementation phase.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，你正在实施的功能请求必须清晰陈述，并且每个功能都必须有明确的商业意图。这很重要，因为它有助于开发人员、DevOps人员和QA/测试人员在实施阶段做好充分准备。
- en: Understanding the critical business requirements up front will help reduce the
    miscommunication of requirements between teams, as missing requirements can easily
    create bottlenecks for development when certain actions are not anticipated. Any
    critical requirements information needs to be properly documented.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在前期了解关键业务需求将有助于减少团队之间的需求误解，因为缺少需求可能会在开发过程中轻易造成瓶颈。任何关键需求信息都需要得到适当的文档记录。
- en: Lack of proper documentation
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缺乏适当的文档
- en: The documentation needs to be written at the very moment that any requirements
    are defined and must be updated with additional information continuously while
    the feature is being worked on. It is only when everything is defined and stated
    as clearly as possible that you can start writing a plan to implement a specific
    feature. If a developer encounters an issue and requires clarification from a
    customer, then the answer needs to be put directly in the requirements for future
    reference.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 文档需要在定义任何需求的同时编写，并在功能开发过程中持续更新。只有在一切都尽可能清晰地定义和陈述之后，你才能开始编写实施特定功能的计划。如果开发人员遇到问题并需要向客户澄清，那么答案需要直接放在需求中以供将来参考。
- en: Avoid having multiple documents with requirements information, but instead have
    one document with the requirements information, or else you risk having out-of-date
    information; or worse, having different requirements scattered in different places
    that contradict each other.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 避免有多个包含需求信息的文档，而是使用一个文档包含所有需求信息，否则你就有可能出现信息过时的情况，甚至更糟糕的是，不同的需求分散在不同的地方并相互矛盾。
- en: There should be a single source of truth with the business requirements and
    they should be understood by all parties.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 业务需求应该有一个统一的真相来源，并且所有相关方都应该理解这些需求。
- en: Timezone differences
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时区差异
- en: As more and more teams are becoming distributed and global, differences in time
    zones can create communication bottlenecks. Developers working in drastic time
    zone differences need to ensure that good CI/CD practices are in play. Broken
    CI builds and configuration management issues can quickly become exacerbated with
    time zone differences as a team in one time zone will be left flapping in the
    wind with effective work able to be done. Communication is especially more important
    with distributed teams as the lack of face-to-face interaction can lead to communication
    failures, and at worst can create animosity between teams if not properly managed.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 随着越来越多的团队变得分布式和全球化，时区差异可能会导致沟通瓶颈。在时区差异较大的开发人员需要确保良好的CI/CD实践。CI构建失败和配置管理问题可能会因时区差异而迅速恶化，因为一个时区的团队可能会无法有效地进行工作。在分布式团队中，沟通尤为重要，因为缺乏面对面的互动可能导致沟通失败，最坏的情况下甚至会导致团队之间的敌意。
- en: I once worked at a startup where there was a 3-hour time zone difference, which
    in itself is not an issue, but the standup was done at the end of the business
    day while the other team started the day at noon our time. Naturally, this led
    to days where changes done by the other team would block us until midday our time,
    when the other team was available.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾在一家初创公司工作，那里有3小时的时区差异，这本身并不是问题，但每天的站立会议是在我们的工作日结束时进行的，而另一个团队在我们的中午开始工作。自然而然地，这导致了其他团队的更改会阻塞我们，直到我们的中午才能解决。
- en: Lack of trust and mutual respect
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缺乏信任和相互尊重
- en: 'The following is a diagram depicting the fact that trust and mutual respect
    go hand in hand, and teams need this in order to operate efficiently:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一张图，说明了信任和相互尊重是相辅相成的，团队需要这一点才能高效运作：
- en: '![](assets/85d635a9-3216-4a09-bde2-47af96e61527.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/85d635a9-3216-4a09-bde2-47af96e61527.png)'
- en: Trust among teams is critical and is easily *lost* but *won* with difficulty.
    It is best if there is a good project manager who can facilitate communication
    between teams and help clarify issues that are bound to occur. Healthy teams will
    communicate openly when problems arise during feature work, and it is good to
    have retrospectives in place to help air out frustrations among team members and
    to build trust.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 团队之间的信任至关重要，很容易失去，但很难获得。最好有一个优秀的项目经理，可以促进团队之间的沟通，并帮助澄清必然会发生的问题。健康的团队会在功能工作中出现问题时进行开放的沟通，定期进行回顾也有助于排解团队成员之间的挫折感，并建立信任。
- en: If possible, it is good to have team outing events where multiple teams can
    interact with each other and help build cooperation with each other. Some companies
    institute a quarterly meeting where teams can do fun events together, such as
    sports or games. Team-building exercises can also be scheduled often to keep people
    engaged and build a spirit of cooperation.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能的话，最好能组织团队外出活动，让多个团队之间可以互动并建立合作关系。一些公司会定期举行会议，让团队一起参加有趣的活动，比如体育运动或游戏。定期进行团队建设活动也可以保持团队成员的参与度，并建立合作精神。
- en: Cultural differences and language barriers
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文化差异和语言障碍
- en: As Agile working environments have become more global, global teams have become
    more common. Cultural differences among teams makes communication an even more
    important ingredient to the success of a project. Humor can be a double-edged
    sword as many teams can create division and enmity if the intended humor is taken
    out of context, so it is best if teams can be taught about cultural norms and
    customs to avoid miscommunication issues.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 随着敏捷工作环境的全球化，全球团队变得更加普遍。团队之间的文化差异使得沟通成为项目成功的更加重要的因素。幽默可能是一把双刃剑，因为如果幽默被误解，很容易导致分裂和敌意，所以最好能教导团队有关文化规范和习俗，以避免沟通问题。
- en: Language barriers can also create issues, as the requirements of a feature request
    can become misunderstood. It is best if a project manager can work as a liaison
    between teams to ensure that all the requirements are clearly understood between
    teams and to help clarify any communication bottlenecks.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 语言障碍也可能会导致问题，因为对功能请求的需求可能会被误解。最好是由项目经理作为团队之间的联络人，确保所有需求在团队之间清晰地理解，并帮助澄清任何沟通瓶颈。
- en: Long feedback loop cycles
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 长反馈循环周期
- en: 'The following is a depiction of a feedback loop cycle. The greater the feedback
    loop is, the longer it takes to make changes. It is important to have a short
    feedback loop on the deployment pipeline to be effective, and so that you can
    make timely changes when necessary:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个反馈循环周期的图示。反馈循环越长，做出改变所需的时间就越长。在部署流水线上，有一个短的反馈循环是非常重要的，这样在必要时可以及时做出改变。
- en: '![](assets/203a4e22-1a76-4b1b-8818-b4f449e3f43c.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/203a4e22-1a76-4b1b-8818-b4f449e3f43c.jpg)'
- en: We spoke about long feedback loops in [Chapter 1](69088250-887a-4306-ac24-fcda17be315b.xhtml),
    *CI/CD with Automated Testing*, and in particular we spoke about the dangers of
    long feedback loops and how it is vital to shorten feedback loop cycles so that
    the right information is given to the right person at the right time. Likewise,
    long feedback loop cycles between teams can create issues and natural bottlenecks.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第1章](69088250-887a-4306-ac24-fcda17be315b.xhtml)中谈到了长反馈循环，特别是长反馈循环的危险以及缩短反馈循环周期的重要性，以便在正确的时间将正确的信息传递给正确的人。同样，团队之间长时间的反馈循环周期可能会产生问题和自然瓶颈。
- en: Ideally, teams would get the information they needed as quickly as possible,
    but this is not always a reality. A proper liaison or project manager can help
    shorten the feedback loop among teams, and teams need to properly document any
    processes and make sure that this documentation is visible and known to other
    teams, or else processes among teams can differ.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，团队应尽快获得他们所需的信息，但这并不总是现实。适当的联络人或项目经理可以帮助缩短团队之间的反馈循环，团队需要适当记录任何流程，并确保这些文档对其他团队可见和已知，否则团队之间的流程可能会有所不同。
- en: Remember that short feedback loops lead to faster response times.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，短的反馈循环会导致更快的响应时间。
- en: Communicating pain points to team members
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向团队成员传达痛点
- en: It is important that team members are able to effectively communicate the particular
    pain points or blockers that are inhibiting progress. There are several pain points
    we will discuss in this section, including waiting for requirement information,
    undocumented steps in the deployment pipeline, too many holders of keys to the
    kingdom, and too many communication channels.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 团队成员能够有效地传达阻碍进展的特定痛点或障碍是很重要的。在本节中，我们将讨论几个痛点，包括等待需求信息、部署流水线中未记录的步骤、王国的密钥持有者过多以及沟通渠道过多。
- en: Waiting for requirements information
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 等待需求信息
- en: It is often the case that developers will start work on a particular story/feature
    and not have all the necessary requirements in order to complete their assigned
    work. This is especially problematic for developers because whatever code they
    work on might need to be scrapped and redone depending on how far off the requirements
    were from being done correctly. Developers need all the requirements up front
    before they can start on a story; there must exist processes for each feature
    to work in grabbing all the requirements, and each story ideally will have acceptance
    tests as an action item for the feature work to be considered done. In an ideal
    world, developers would have all the necessary information ready before they started
    their particular feature work, and the acceptance tests written for the story
    would pass when the feature was completed as was specified in the requirements
    document.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员通常会开始处理特定的故事/功能，但并没有所有必要的需求来完成他们分配的工作。这对开发人员来说尤为棘手，因为他们所处理的任何代码可能需要根据需求与正确完成的距离有多远而被废弃并重新完成。开发人员需要在开始故事之前就提前获得所有的需求；每个功能必须存在抓取所有需求的流程，并且每个故事理想情况下都将有验收测试作为特性工作的行动项来考虑完成。在理想的世界中，开发人员将在开始特定的功能工作之前准备好所有必要的信息，并且在需求文档中指定的特性完成时，故事的验收测试将通过。
- en: In [Chapter 1](69088250-887a-4306-ac24-fcda17be315b.xhtml), *CI/CD with Automated
    Testing*, we discussed, as an example, the Billy Bob's Machine Parts company.
    Now, imagine Tom from the development team has started work on showing a supplier
    name, and Tom discovers that the scope of this ticket appears massive and he may
    not be able to finish it in time. This scenario is also complicated by the fact
    that the requirements documentation is severely lacking and critical details were
    missing during development. Tom asks the product owner if he can provide feedback
    on some items but has to wait for several days before he gets this necessary information.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](69088250-887a-4306-ac24-fcda17be315b.xhtml)中，*自动化测试的CI/CD*，我们讨论了比利·鲍勃机械零件公司的例子。现在，想象一下，开发团队的汤姆已经开始了显示供应商名称的工作，并且汤姆发现这个工作的范围似乎很大，他可能无法及时完成。这种情况也因需求文档严重缺乏和开发过程中缺少关键细节而变得复杂。汤姆询问产品负责人是否可以就某些项目提供反馈，但必须等待数天才能获得这些必要信息。
- en: Undocumented steps in a deployment pipeline
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署流水线中未记录的步骤
- en: Each step in the deployment pipeline process should be appropriately documented
    and automated. We spoke about the importance of automating as much as you can
    in the deployment pipeline in [Chapter 5](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml),
    *Installation and Basics of Jenkins*. To reiterate, manual processes are problematic
    because they are repeatable and reliable. Automation is important because it brings
    repeatability and reliability to the deployment pipeline. Anytime someone has
    to do a manual step, there is no assurance as to whether the process will be done
    correctly and in the same manner in each run; only with automation can you guarantee
    the repeatability of a deployment pipeline stage.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 部署流水线过程中的每个步骤都应适当记录和自动化。我们在[第5章](3e1059c7-00d0-48a6-882b-7d7dbdf8aa50.xhtml)中谈到了在Jenkins的*安装和基础知识*中尽可能自动化部署流水线的重要性。重申一下，手动流程是有问题的，因为它们是可重复和可靠的。自动化很重要，因为它为部署流水线带来了可重复性和可靠性。每当有人必须执行手动步骤时，就无法保证流程是否会正确执行，并且在每次运行中都以相同的方式执行；只有通过自动化，您才能保证部署流水线阶段的可重复性。
- en: Alvin, who is part of the DevOps team, is working on the latest release for
    the software product and is running a complicated manual process in the deployment
    pipeline. Alvin types in the wrong command and ends up wiping out the production
    database. Luckily for Alvin, there is a backup that is a day old and he can restore
    the production database to this copy. If there had been automated process in place,
    this would not have occurred.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 作为DevOps团队的一部分，阿尔文正在为软件产品的最新版本进行发布，并在部署流水线中运行一个复杂的手动流程。阿尔文输入了错误的命令，结果清除了生产数据库。幸运的是，阿尔文有一个一天前的备份，他可以将生产数据库恢复到这个备份。如果当时有自动化流程，这种情况就不会发生。
- en: Keys to the kingdom to select few
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 王国的密钥只交给少数人
- en: 'The following diagram represents a key, and the main thing to remember about
    keys to the kingdom is about a select few having the access/key to the production
    environment:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表代表一个关键点，关于王国的关键点要记住的主要事情是只有少数人可以访问/拥有生产环境的密钥：
- en: '![](assets/09ebaf30-d1aa-4797-9625-e2c3ac9fb5e7.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/09ebaf30-d1aa-4797-9625-e2c3ac9fb5e7.jpg)'
- en: It is important to control who can make changes in a production environment,
    and many software companies will often elect a select few or maybe even one individual
    who can make changes in production. This can become problematic if this particular
    individual is not available or leaves the company, but some companies have instituted
    the practice of development teams owning a particular feature end to end, and
    the same developer who worked on the feature is responsible for fixing issues
    that are encountered in the deployment pipeline. At one company I worked for,
    we affectionately said, *only a select few have the keys to the kingdom*.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要控制谁可以在生产环境中进行更改，许多软件公司通常会选出少数几个甚至一个人可以在生产中进行更改。如果这个特定的个人不可用或离开公司，这可能会成为问题，但一些公司已经实行了开发团队全权拥有特定功能的做法，负责修复部署管道中遇到的问题的是同一个开发人员。在我工作过的一家公司，我们亲切地说，“只有少数人拥有王国的钥匙”。
- en: Alvin is one of the few DevOps personnel to hold the keys to the kingdom. A
    customer support representative pings the development team about a production
    outage and the development team is scrambling to get the production environment
    back up for customers. Alvin and one other member of DevOps are the only ones
    that can touch the production environment. This issue is exacerbated by the fact
    that neither Alvin or the other assigned DevOps person is available.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 阿尔文是为数不多的DevOps人员之一，拥有王国的钥匙。客户支持代表向开发团队发出关于生产中断的通知，开发团队正在努力恢复生产环境以满足客户需求。阿尔文和另一名DevOps成员是唯一可以触及生产环境的人。这个问题变得更加严重，因为阿尔文或其他指定的DevOps人员都不可用。
- en: Too many communication channels
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 太多的沟通渠道
- en: There should be a low signal-to-noise ratio when it comes to communication.
    If a developer is being alerted by email, SMS, voicemail, and Slack messaging
    about issues, they may soon tune out and not pay attention to issues. It is important
    to get the attention of the developer to fix issues as they are encountered, but
    you probably shouldn't be alerted like a military command center, where you are
    bombarded with notifications from many different sources.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在沟通方面应该有低信号噪音比。如果开发人员通过电子邮件、短信、语音邮件和Slack消息收到关于问题的警报，他们可能很快就会忽略并不关注这些问题。重要的是要引起开发人员的注意，以便在遇到问题时及时解决，但你可能不应该像军事指挥中心那样被来自许多不同来源的通知轰炸。
- en: Imagine that Bruce is a newer developer in the team and Bruce receives an alert
    about a low-priority ticket that he worked on. Bruce receives an email, text alert,
    Slack message, and phone call about this ticket. Bruce tends to get a lot of messages
    like this and soon decides to ignore them. On one particular afternoon, Bruce
    ignores a high-priority ticket because he figures that it is a senseless alert.
    Bruce has become desensitized to the alerts.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，布鲁斯是团队中的一名新开发人员，他收到了一个关于他处理的低优先级工单的警报。布鲁斯收到了有关这个工单的电子邮件、短信警报、Slack消息和电话。布鲁斯经常收到这样的消息，很快就决定忽略它们。在一个下午，布鲁斯因为觉得这是一个毫无意义的警报而忽略了一个高优先级的工单。布鲁斯已经对这些警报麻木不仁了。
- en: There is too much noise and not really any true signals in the alerting process
    with all of these alerts.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些警报中，噪音太大，真正的信号几乎没有。
- en: Pain-Driven Development (PDD)
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 痛苦驱动开发（PDD）
- en: If something in the CI/CD pipeline is causing you some degree of pain, then
    it might be a good idea to automate the process. If you have a 15-step process
    that is error prone in the deployment pipeline and is causing many issues during
    releases because of mistakes in execution, then this is a pain probably felt by
    others at some point or another. The idea is that the pain is what should guide
    you in the right direction to find a better solution. If you are having issues
    with a process, then you might need to automate the process. It is not always
    necessary to automate a task for the sake of automation; you need to evaluate
    your processes continuously and PDD can be an effective tool for finding processes
    that need to be improved.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果CI/CD管道中的某些部分让你感到痛苦，那么自动化这个过程可能是一个好主意。如果你有一个15步的过程，在部署管道中容易出错，并且由于执行错误而在发布过程中引起许多问题，那么这可能是其他人在某个时候也会感到痛苦的地方。这个想法是痛苦应该引导你找到更好的解决方案。如果你在处理过程中遇到问题，那么你可能需要自动化这个过程。并不总是为了自动化而自动化一个任务；你需要不断评估你的过程，而PDD可以是发现需要改进的过程的有效工具。
- en: Jimmy has been experiencing issues at every commit stage with linting failures.
    Jimmy forgets to check the lint task before he pushes code up to the repository.
    This is especially troublesome because Jimmy makes sure to run all the unit tests
    to check that they are passing but habitually forgets to check linting errors.
    Jimmy decides that the pain is enough and a new process needs to be put in place.
    Jimmy writes a pre-Git push hook script that runs the linter on each Git push
    to the master. Now every time someone pushes to the master, the script runs the
    linter to make sure that a linting error is not introduced into the codebase.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 吉米在每次提交阶段都遇到了linting失败的问题。吉米忘记在将代码推送到代码库之前检查lint任务。这尤其麻烦，因为吉米确保运行所有单元测试来检查它们是否通过，但习惯性地忘记检查linting错误。吉米决定痛苦已经足够了，需要建立一个新的流程。吉米编写了一个预Git推送挂钩脚本，每次Git推送到主分支时都会运行linter。现在，每当有人推送到主分支时，脚本都会运行linter，以确保不会引入linting错误到代码库中。
- en: Sharing responsibilities among different teams
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将责任分享给不同的团队
- en: It is not always apparent where particular pain points or practices are occurring
    in other teams without some collaboration and transparency. It is good if teams
    are able to share responsibilities and practices with other teams. If possible,
    you should rotate team members, try to ask for feedback on development practices,
    and try to create cross-functional teams.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能的话，你应该轮换团队成员，尝试征求开发实践的反馈意见，并尝试创建跨职能团队。
- en: Rotating team members
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轮换团队成员
- en: 'The following diagram symbolizes a rotation of team members. If possible, creating
    a team rotation where different team members can cycle through different job duties
    can help team members to share responsibilities and to build efficient processes,
    and has the possibility of sparking innovation:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表象征着团队成员的轮岗。如果可能的话，创建一个团队轮岗，让不同的团队成员可以轮换不同的工作职责，可以帮助团队成员分享责任，建立高效的流程，并有可能激发创新：
- en: '![](assets/957a4159-d0f7-4286-9e83-3b4b8d857885.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/957a4159-d0f7-4286-9e83-3b4b8d857885.jpg)'
- en: By rotating team members into different teams, you help shape their perspective
    and provide a broader understanding of development practices and increase their
    product knowledge. This isn't always possible, especially, with highly specialized
    teams, such as a security team or a machine learning team, as the level of ramp-up
    time necessary for any given developer to be effective can vary. If possible,
    rotating team members into related projects and technologies can help prevent developer
    burnout and can help developers learn from each other. It is easy to become complacent
    and become accustomed to how things are done, and it is often the case that a
    fresh pair of eyes can see things in a new light and help bring necessary changes
    into a development team.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将团队成员轮岗到不同的团队，可以帮助塑造他们的视角，并提供更广泛的开发实践理解和增加他们的产品知识。这并非总是可能的，特别是对于高度专业化的团队，比如安全团队或机器学习团队，因为任何开发人员有效性所需的上手时间可能会有所不同。如果可能的话，将团队成员轮岗到相关项目和技术中可以帮助防止开发人员的倦怠，并可以帮助开发人员互相学习。变得自满并习惯于事情是如何进行的是很容易的，而通常情况下，一双新的眼睛可以以新的视角看待事物，并帮助开发团队带来必要的变化。
- en: Bruce works in the API development team and has been rotated into the network
    engineering team. The rotation period is about 3 to 6 months and Bruce has already
    learned some practices that will be helpful to the API development team. Some
    of the advantages of cross-training engineers is that skills they learn in other
    development teams can transfer back into other teams. Bruce learned some caching
    optimizations that he can apply in the network layer and in the OSI layer that
    will help the API development team. The **Open System Interconnection **(**OSI**)
    is a conceptual model that breaks down information sent over the wire, so to speak,
    into distinct layers. There are seven layers in the OSI model—the **Application
    layer** (seventh), the **Presentation layer** (sixth), the **Session layer** (fifth),
    the **Transport layer**, (fourth), the **Network layer** (third), the **Data Link**
    **layer** (second), and the **Physical layer** (first). Bruce has been utilizing
    optimization strategies in the Application layer, but with some new-found knowledge
    of the network layer, Bruce has come up with newer optimization strategies.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 布鲁斯在API开发团队工作，并被调入网络工程团队。轮岗期大约为3到6个月，布鲁斯已经学到了一些对API开发团队有帮助的实践。跨培训工程师的一些优势是，他们在其他开发团队学到的技能可以转移到其他团队。布鲁斯学到了一些缓存优化的方法，可以应用在网络层和OSI层，这将有助于API开发团队。**开放系统互连**（**OSI**）是一个将通过网络发送的信息分解成不同层次的概念模型。OSI模型有七层——**应用层**（第七层）、**表示层**（第六层）、**会话层**（第五层）、**传输层**（第四层）、**网络层**（第三层）、**数据链路层**（第二层）和**物理层**（第一层）。布鲁斯一直在应用层利用优化策略，但通过对网络层的新知识，他提出了新的优化策略。
- en: Asking for feedback on development practices
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在开发实践中寻求反馈
- en: Communication among team members is critical for the long-term success of a
    team. Developers should not be afraid to ask for feedback on why things are done
    in a particular way and it is important to create a healthy environment where
    *constructive criticism* is welcomed. Team members can become complacent about
    team processes and may miss out on opportunities to optimize processes.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 团队成员之间的沟通对于团队的长期成功至关重要。开发人员不应该害怕询问为什么以某种特定方式进行事情的反馈，重要的是要创造一个健康的环境，*建设性的批评*是受欢迎的。团队成员可能会对团队流程变得自满，并可能会错过优化流程的机会。
- en: Let's go back to our example company, Billy Bob's Machine Parts company. Let's
    say that Tom has recently joined the team and has noticed that the steps to get
    set up in the API repo are overly complicated and require many steps to get a
    particular environment up and running. Tom asks whether anyone has considered
    automating some of the steps using a build tool, and is told to work on automating
    any steps he thinks would be helpful. Tom decides to write a Makefile that can
    encapsulate all of the steps to get started for a particular environment by simply
    running the `make` command. Tom creates a pull request to the API repo and introduces
    this new functionality, which helps automate the steps to create a particular
    environment.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的例子公司，比利·鲍勃的机械零件公司。假设汤姆最近加入了团队，并注意到在API存储库中设置的步骤过于复杂，需要许多步骤才能使特定环境运行起来。汤姆询问是否有人考虑使用构建工具自动化一些步骤，并被告知可以自行自动化他认为有帮助的任何步骤。汤姆决定编写一个Makefile，可以通过简单运行`make`命令来封装所有开始特定环境的步骤。汤姆向API存储库创建了一个拉取请求，并引入了这个新功能，这有助于自动化创建特定环境的步骤。
- en: Creating cross-functional teams
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建跨职能团队
- en: If possible, and if you have the resources, try to create cross-functional teams
    so that teams can share expertise among other team members. For example, a team
    could have two to three developers, one QA team member, a security team member,
    a DevOps team member, and a product owner who all work together and are able to
    develop efficiencies that would not otherwise occur if they were working in isolation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能的话，并且如果你有资源，尝试创建跨职能团队，这样团队成员可以在其他团队成员中分享专业知识。例如，一个团队可以有两到三名开发人员，一个质量保证团队成员，一个安全团队成员，一个DevOps团队成员和一个产品负责人，他们都可以一起工作，并且能够开发出效率，否则如果他们独立工作则不会发生。
- en: Back to our example company—imagine the following cross-functional team ensemble.
    Tom, Steven, and Bob are all the developers, Ricky is the security team member,
    Susan is the DevOps team member, and Nicky is the product owner. All work together
    in the same space and meet with each other for a morning standup everyday. Now,
    the team members are able to own the deployment pipeline stages end to end, as
    they can work together and help each other automate processes. Tom and Steven
    help write an automated test suite using a new library, and Ricky is able to add
    a tertiary build stage that runs security checks for changes that are made to
    the master branch. Susan has added monitoring and reporting metrics as each item
    is progressing through the deployment pipeline. Nicky quickly updates the requirements
    documentation for Bob, as he notices an edge case with his new feature work. The
    team members are openly communicating about each step in their process and are
    able to optimize processes because they openly collaborate with each other.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们的示例公司——想象一下以下跨职能团队的阵容。汤姆、史蒂文和鲍勃都是开发人员，瑞奇是安全团队成员，苏珊是DevOps团队成员，尼基是产品负责人。他们都在同一个空间里共同工作，并每天早上进行晨会。现在，团队成员能够全权拥有部署流程的各个阶段，因为他们可以共同合作，互相帮助自动化流程。汤姆和史蒂文使用新库编写了自动化测试套件，瑞奇能够添加第三个构建阶段，对对主分支进行的更改进行安全检查。苏珊在每个项目通过部署流程时添加了监控和报告指标。尼基迅速更新了鲍勃的需求文档，因为他注意到了新功能工作中的边缘情况。团队成员在他们的流程中每一步都进行了公开交流，并且能够优化流程，因为他们之间进行了公开的合作。
- en: Knowing your stakeholders
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解你的利益相关者
- en: It is important for a development team to know all of their stakeholders, as
    the stakeholders will hold critical information that can help a team succeed or
    fail. The development team should be able to communicate with project managers
    when necessary, communicate openly to members of the executive leadership team,
    and be able to speak with the end users.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发团队来说，了解所有利益相关者是很重要的，因为利益相关者将持有关键信息，这些信息可以帮助团队成功或失败。开发团队应该能够在必要时与项目经理进行沟通，向高管团队成员公开沟通，并能够与最终用户交流。
- en: Project managers
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目经理
- en: Although a product owner might take on the role of a project manager and can
    help facilitate the duties of a scrum master, it is best if the roles are done
    by separate people. A project manager can be seen as an *agent of change* who
    adapts to a dynamic work environment. At the end of the day, the project manager
    wants to be able to get the deliverable shipped to the end users and can help
    open the channels of communication between different teams. It is important that
    developers are able to communicate openly and notify project managers of any issues
    they encounter during their feature work.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管产品负责人可能承担项目经理的角色，并且可以帮助促进Scrum Master的职责，但最好由不同的人来担任这些角色。项目经理可以被视为适应动态工作环境的变革者。在一天结束时，项目经理希望能够将交付内容交付给最终用户，并且可以帮助打开不同团队之间的沟通渠道。开发人员能够公开沟通，并通知项目经理在他们的功能工作中遇到的任何问题是很重要的。
- en: Some companies also employ an Agile program manager who is in charge of the
    workflow and methodologies in an Agile working environment. The Agile program
    manager will develop a roadmap for the sprint schedule and make sure that each
    developer in the development team is properly allocated work to their scheduled
    capacity. This type of manager will usually be more aware of all the team's work
    and will make sure that all the interested parties have all the tools and information
    that they need to accomplish their deliverables.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一些公司还雇佣了负责敏捷工作环境中工作流程和方法的敏捷项目经理。敏捷项目经理将为冲刺计划制定路线图，并确保开发团队中的每个开发人员都得到了按计划分配的工作。这种类型的经理通常会更加了解团队的所有工作，并确保所有利益相关方都拥有完成其交付内容所需的工具和信息。
- en: Executive leadership team
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高管团队
- en: The company culture can largely be affected by the executive leadership teams,
    such as the **chief executive officer** *(***CEO**), **chief information officer**
    (**CIO**), **c****hief technical officer** (**CTO**), and **chief operating officer**
    (**COO**). It is not always possible to make broad company impact unless you operate
    at these executive levels. If development teams feel that decisions come down
    as edicts and that they have no say in the decisions made, they may not be able
    to prevent issues that would otherwise be preventable. Many companies state they
    have an open-door policy and welcome constructive feedback, but often a development
    team will not empowered to speak up when they fight with broken processes.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 公司文化很大程度上会受到高管团队的影响，比如首席执行官（CEO）、首席信息官（CIO）、首席技术官（CTO）和首席运营官（COO）。除非在这些高管层面上运作，否则很难对公司产生广泛的影响。如果开发团队觉得决策是一种命令，并且他们对所做的决定没有发言权，他们可能无法防止本来可以避免的问题。许多公司声称他们有开放式政策，并欢迎建设性的反馈，但通常开发团队在与破碎的流程作斗争时无法发声。
- en: Let's say that Tom read a blog post over the weekend and has discovered a way
    to reduce the feedback loop in the automated acceptance test suite. This change
    that Tom wants to introduce requires a spike in work. Tom tries to mention this
    at the Monday morning standup but gets stonewalled by the team because there is
    higher value work to be done. Tom decides that this is important enough for upper
    management to become aware of. Tom proceeds to talk to the CTO about this using
    the open-door policy but gets verbally reprimanded the next day for not going
    through the proper leadership channels. In this way, Tom is not able to make the
    decisions that could most benefit the team as none of the team members feel empowered
    to make changes in their workflow processes.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 假设汤姆在周末读了一篇博客文章，发现了一种减少自动接受测试套件中反馈循环的方法。汤姆想引入这种变化需要大量工作。汤姆试图在周一早上的站立会议上提到这一点，但被团队拒绝了，因为有更有价值的工作要做。汤姆决定这对上层管理意识到是很重要的。汤姆继续使用开放式政策与首席技术官谈论这个问题，但第二天因未经过适当的领导渠道而受到口头斥责。这样，汤姆无法做出最有利于团队的决定，因为团队成员都没有被授权对工作流程进行更改。
- en: End users
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终用户
- en: 'Here is a depiction of an end user; at the end of the day, they are the most
    important stakeholder. The feedback that your end users have holds the most weight:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最终用户的描述；最终用户是最重要的利益相关者。您的最终用户的反馈意见最为重要：
- en: '![](assets/d742c79d-0ba3-41c9-97db-8541153205b0.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d742c79d-0ba3-41c9-97db-8541153205b0.jpg)'
- en: At the end of the day, the end user will be using the new functionality that
    you are adding to the product. In this sense, they can help clarify the necessary
    requirements for developers. It is often the case that the end user is not exactly
    clear on what they are looking for until it is right in front of them. It is important
    that the product owner gets all the necessary requirements up front from the customer
    if needs be, and some software organizations go as far as having tests written
    by product owner/customers that specify the requirements in code that must be
    implemented. In any case, the product owner and the end user must be in sync with
    the requested feature before the developer can start his or her work.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，最终用户将使用您为产品添加的新功能。在这方面，他们可以帮助澄清开发人员的必要需求。通常情况下，最终用户在看到产品之前并不清楚他们在寻找什么。如果需要，产品所有者必须从客户那里提前获取所有必要的需求，有些软件组织甚至要求产品所有者/客户编写测试，以代码指定必须实现的需求。无论如何，在开发人员开始工作之前，产品所有者和最终用户必须就所请求的功能达成一致。
- en: The development team is largely removed from the end user and will not interface
    with any end user. It is important, however, for the development team to be aware
    of the specific pain points that end users are encountering when working with
    the software system. Developers in this sense are the most capable of creating
    the changes in the system that will benefit end users, but if developers are not
    aware of such pain points, they will not be able to create the necessary changes
    to benefit the end users. It might be helpful to have developers work with a customer
    success team when appropriate to see how the end users work with the software
    system.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 开发团队基本上与最终用户隔离，不会与任何最终用户接触。然而，对于开发团队来说，了解最终用户在使用软件系统时遇到的具体痛点是很重要的。在这个意义上，开发人员是最有能力对系统进行改变以使最终用户受益的人，但如果开发人员不了解这些痛点，他们将无法进行必要的改变以使最终用户受益。在适当的时候，让开发人员与客户成功团队合作可能会有所帮助，以了解最终用户如何使用软件系统。
- en: Demonstrating why CI/CD is important
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 展示CI/CD的重要性
- en: The importance of a CI/CD pipeline cannot be understated and developers will
    need to demonstrate its importance by providing metrics, reporting, and in general
    educating leadership on the importance of automation.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD流水线的重要性不容小觑，开发人员需要通过提供指标、报告和一般教育领导层自动化的重要性来证明其重要性。
- en: Metrics and reporting
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指标和报告
- en: 'The following diagram is a depiction of charts and graphs that you can use
    to demonstrate to your stakeholders why CI/CD is important. It is a good idea
    to develop graphs and charts as visuals are very convincing:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表是图表和图形的描述，您可以用它向利益相关者展示CI/CD的重要性。开发图表和图表是一个很好的主意，因为视觉很有说服力。
- en: '![](assets/df01b582-5a29-4af5-9a50-4cdc238747ad.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/df01b582-5a29-4af5-9a50-4cdc238747ad.jpg)'
- en: Typically, at the executive level at companies, the numbers and the PowerPoint
    slides must demonstrate why something is important. Developers should be able
    to illustrate with metrics—charts, diagrams and any other visual forms—how CI/CD
    can improve existing processes. There exist enterprise solutions already that
    can help generate this information, but a development team can aggregate this
    information in an Excel spreadsheet.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通常在公司的高管层，数字和PowerPoint幻灯片必须证明某事的重要性。开发人员应该能够用指标（图表、图表和任何其他可视形式）说明CI/CD如何改进现有流程。已经存在企业解决方案可以帮助生成这些信息，但开发团队可以将这些信息汇总到Excel电子表格中。
- en: Let's say that Bob from the development team has decided that enough is enough
    and the manual processes currently in place during release day are in desperate
    need of automation. Bob aggregates all the time spent in the last 6 months working
    on emergency fixes and the man hours wasted per developer on issues that creep
    up during a release day. Bob creates a nice visual diagram that helps convince
    management to create an Agile epic that deals with creating an automated deployment
    pipeline.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们假设开发团队的鲍勃已经决定，手动流程在发布日期间已经够了，迫切需要自动化。鲍勃汇总了过去6个月在紧急修复上花费的时间，以及在发布日出现问题时每个开发人员浪费的工时。鲍勃创建了一个漂亮的可视化图表，帮助说服管理层创建一个处理自动化部署流程的敏捷史诗。
- en: Educating leadership on automation
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 教育领导层关于自动化
- en: A development team cannot assume that leadership understands what automation
    means and what areas are ripe for automation. It is best if a technology representative
    such as a CTO can help by being a proponent of automation and help to explain
    it to the executive leadership team. Someone such as a CTO can help be the agent
    of change to speak on behalf of developers, but regardless of who relays this
    information, the executive team must understand what automation is and what things
    are capable of being automated.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 开发团队不能假设领导了解自动化的含义以及哪些领域适合自动化。最好是由技术代表，如首席技术官，作为自动化的倡导者，并帮助向高管团队解释。像首席技术官这样的人可以成为变革的代理人，代表开发人员发言，但无论是谁传达这些信息，高管团队必须了解自动化的含义以及哪些事情可以自动化。
- en: The leadership team tends to be far removed from what developers are doing on
    a daily basis. The leadership team has more global concerns for the company and
    will tend to work with other members, such as sales, marketing, operations, and
    project managers. It is still important for the executive leadership team to be
    educated on automation so that developers are given the necessary time to develop
    an automated deployment pipeline, and so they are given the time during each sprint
    to conduct testing and to continually add automation processes to a CI/CD build
    pipeline and to the deployment pipeline. There needs to be clear understanding
    about automation at the highest levels of an organization so that developers,
    system admins, and DevOps personnel can incorporate automation practices to the
    key deliverables in the company roadmap.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 领导团队往往与开发人员日常工作相距甚远。领导团队对公司有更全局性的关注，并且往往会与其他成员合作，如销售、营销、运营和项目经理。对于高管领导团队来说，了解自动化仍然很重要，以便开发人员有足够的时间来开发自动化部署流水线，并且他们在每个迭代期间有时间进行测试，并不断将自动化流程添加到CI/CD构建流水线和部署流水线中。组织的最高层需要对自动化有清晰的理解，以便开发人员、系统管理员和DevOps人员可以将自动化实践纳入公司路线图的关键交付成果中。
- en: Getting approval for CI/CD from your stakeholders
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获得利益相关者对CI/CD的批准
- en: Even when stressing the importance of automation and educating your stakeholders
    on its importance, you might need to take action without official approval. Many
    software projects have started as a skunkworks project that a sole developer worked
    on without official approval. A developer can also work on a deployment pipeline
    automation task on his local machine or an unused machine if need be.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 即使强调自动化的重要性并向利益相关者解释其重要性，您可能需要在没有官方批准的情况下采取行动。许多软件项目都是作为一项未经官方批准的秘密项目开始的。开发人员也可以在本地机器或未使用的机器上工作部署流水线自动化任务。
- en: Starting a skunkworks project
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动秘密项目
- en: The origins of the term skunkworks project is open for debate, but the general
    idea is that it is a project that is worked on in secret by a select individual
    or select individuals that is intended to bring innovation and change to an organization.
    It is not always possible for developers to get approval for a given task and
    they may need to resort to alternative tactics to get their point across.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 术语“秘密项目”的起源有待讨论，但一般的想法是，这是一个由个别人或一组人秘密进行的项目，旨在为组织带来创新和变革。开发人员不一定能够获得对于某项任务的批准，他们可能需要采取替代策略来表达自己的观点。
- en: Imagine Bob from the development team has an idea to write a CLI application
    that will help on-board third-party developers to utilize the company dashboard.
    Bob has tried communicating the idea to upper management but with no luck. Bob
    decides to write a CLI application over the next couple of weeks and has decided
    to write the CLI project using a newer programming language called **Rust**. Bob
    creates an intuitive CLI application that is easy to use and pluggable. Bob is
    able to showcase this new application to the team and in turn convince upper management
    to commit resources to work on the CLI project.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，开发团队的鲍勃有一个想法，要编写一个CLI应用程序，帮助第三方开发人员利用公司的仪表板。鲍勃试图向高层管理层传达这个想法，但没有成功。鲍勃决定在接下来的几周内编写一个CLI应用程序，并决定使用一种名为**Rust**的新编程语言来编写CLI项目。鲍勃创建了一个直观的CLI应用程序，易于使用和可插拔。鲍勃能够向团队展示这个新应用程序，并说服高层管理层投入资源来开展CLI项目。
- en: Starting CI/CD on your local machine
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在本地机器上启动CI/CD
- en: It may not be possible for a development team to get the financial approval
    to get started with a CI/CD pipeline. For the purposes of discovery and to convince
    others of the importance an automated CI/CD pipeline, a developer can replicate
    the deployment pipeline on his or her machine and demonstrate the benefits of
    building automated pipeline stages to the team and upper management.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 开发团队可能无法获得启动CI/CD流水线的财务批准。为了发现并说服他人自动化CI/CD流水线的重要性，开发人员可以在自己的机器上复制部署流水线，并向团队和高层管理层展示构建自动化流水线阶段的好处。
- en: It is possible with big cloud providers today, such as Azure, AWS, and Google
    App Engine, to get free account plans to provision cloud services. In this way,
    a developer could easily set up a more realistic deployment pipeline, by showcasing
    a small project and showing all the stages in a CI/CD pipeline such as the commit
    stage, an automated acceptance test stage, and an optional security and capacity
    build stage.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，像Azure、AWS和Google App Engine这样的大型云服务提供商可以提供免费的账户计划来提供云服务。通过这种方式，开发人员可以轻松地设置更真实的部署流水线，通过展示一个小项目，并展示CI/CD流水线中的所有阶段，如提交阶段、自动化验收测试阶段和可选的安全和容量构建阶段。
- en: Company presentation
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公司演示
- en: A company-wide presentation might be the most effective way to get approval
    for CI/CD in your organization. Some companies sponsor hackathons, and you could
    create a new automation process for the company on a sponsored hackathon. The
    advantage of doing this is that you can drive the message automation to the highest
    levels of an organization during a company presentation.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的组织中，公司范围的演示可能是获得CI/CD批准的最有效方式。一些公司赞助黑客马拉松，您可以在赞助的黑客马拉松上为公司创建一个新的自动化流程。这样做的优势是您可以在公司演示期间将自动化信息传达到组织的最高层。
- en: Imagine that Tommy from the development team is experimenting with Docker and
    has the idea to create a Docker image for each deployment pipeline. Tommy shows
    that the Docker container can be used as an isolated versioning system that QA
    can use to test versions of a software product, which also has the advantage of
    environment isolation. Tommy builds this automated process, and shows in the company
    presentation that this can save the QA department 25 hours of regression testing
    man hours. The CEO was not aware that QA spent many hours during deployment trying
    to get an environment set up to conduct regression testing. Tommy has shown the
    leadership via a convincing presentation why automation is important.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 假设开发团队的汤米正在尝试Docker，并且有创建每个部署流水线的Docker镜像的想法。汤米表明Docker容器可以用作QA测试软件产品版本的隔离版本控制系统，这也具有环境隔离的优势。汤米构建了这个自动化流程，并在公司演示中展示了这可以节省QA部门25小时的回归测试工时。CEO并不知道QA在部署过程中花费了很多时间来设置环境进行回归测试。汤米通过令人信服的演示向领导层展示了自动化的重要性。
- en: Lunch and learn
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 午餐和学习
- en: 'The following diagram is just a depiction of a fork and knife, but the main
    point is that breaking bread with others is a good way to open channels of communication
    and to bring people together. You can incorporate an automation presentation into
    a company meeting over lunch:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表只是叉子和刀子的描绘，但主要观点是与他人共进晚餐是打开沟通渠道和团结人们的好方法。您可以在午餐时将自动化演示纳入公司会议中：
- en: '![](assets/d9de0a26-ae79-4c6b-acb7-c6f394df6911.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d9de0a26-ae79-4c6b-acb7-c6f394df6911.png)'
- en: You can invite upper management and use diagrams and PowerPoint slides with
    metrics that help explain what automation is, and also show the money spent on
    manual processes. Usually, upper management are more interested in the monetary
    impact of an activity, and if you can show the cost of manual processes to them,
    they will be more inclined to listen.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以邀请高层管理人员，并使用图表和带有指标的幻灯片来解释自动化是什么，并展示手动流程上的花费。通常，高层管理人员更关心活动的货币影响，如果您能向他们展示手动流程的成本，他们会更愿意倾听。
- en: Summary
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Communicating the business value of CI/CD is very important, as this chapter
    has illustrated. We started this chapter by discussing the problems with communicating
    and talked about some strategies to communicate pain points to team members. We
    discussed sharing responsibilities among different team members, knowing your
    stakeholders, demonstrating why CI/CD is important to your stakeholders, and finally
    getting approval for CI/CD from your stakeholders.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 传达CI/CD的业务价值非常重要，正如本章所阐述的那样。我们从讨论传达问题开始，讨论了一些传达痛点给团队成员的策略。我们讨论了在不同团队成员之间分享责任，了解您的利益相关者，向利益相关者展示为什么CI/CD对他们重要，最终从您的利益相关者那里获得CI/CD的批准。
- en: The next chapter will be about getting Jenkins CI set up in your local environment.
    This chapter will introduce the first CI/CD tool of the book.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍如何在本地环境中设置Jenkins CI。这一章将介绍本书的第一个CI/CD工具。
- en: Questions
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Why should you have all the requirements information in the beginning?
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么您应该在开始时拥有所有的需求信息？
- en: Why is meant by pain-driven development?
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是痛苦驱动开发？
- en: Why is having many communication channels problematic?
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么拥有许多沟通渠道是有问题的？
- en: What are some of the benefits of rotating team members?
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轮换团队成员的一些好处是什么？
- en: What is a benefit of asking for feedback on existing development practices?
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要求对现有开发实践进行反馈的好处是什么？
- en: How is using metrics and reporting useful in demonstrating the value of CI/CD
    to stakeholders?
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用指标和报告如何有助于向利益相关者展示CI/CD的价值？
- en: Why do you need to educate leadership on automation?
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么需要教育领导层关于自动化？
- en: Further reading
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Consider reading *Continuous Integration, Delivery, and Deployment*, by *Packt
    Publishing*, as this book discusses the value of CI/CD for software organizations:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑阅读*Packt Publishing*的*Continuous Integration, Delivery, and Deployment*，因为这本书讨论了软件组织的CI/CD的价值：
- en: '[https://www.packtpub.com/application-development/continuous-integration-delivery-and-deployment](https://www.packtpub.com/application-development/continuous-integration-delivery-and-deployment)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/application-development/continuous-integration-delivery-and-deployment](https://www.packtpub.com/application-development/continuous-integration-delivery-and-deployment)'
