["```\n    package main\n    import (\n    \u00a0\u00a0\u00a0\u00a0\"fmt\"\n    \u00a0\u00a0\u00a0\u00a0\"net/http\"\n    )\n    func WelcomeServerless(w http.ResponseWriter, r *http.Request) {\n    \tfmt.Fprintf(w, \"Hello Serverless World!\")\n    }\n    ```", "```\n    package main\n    import (\n    \u00a0\u00a0\u00a0\u00a0\"fmt\"\n    \u00a0\u00a0\u00a0\u00a0\"net/http\"\n    )\n    func main() {\n    \u00a0\u00a0\u00a0\u00a0fmt.Println(\"Starting the serverless environment..\")\n    \u00a0\u00a0\u00a0\u00a0http.HandleFunc(\"/\", WelcomeServerless)\n    \u00a0\u00a0\u00a0\u00a0fmt.Println(\"Function handlers are registered.\")\n    \u00a0\u00a0\u00a0\u00a0http.ListenAndServe(\":8080\", nil)\n    }\n    ```", "```\n    docker run -it --rm -p 8080:8080 -v \"$(pwd)\":/go/src --workdir=/go/src golang:1.12.5\n    ```", "```\n    FROM golang:1.12.5-alpine3.9 AS builder\n    ADD . .\n    RUN go build *.go\n    FROM alpine:3.9\n    COPY --from=builder /go/function ./function\n    RUN chmod +x ./function\n    ENTRYPOINT [\"./function\"]\n    ```", "```\n    package main\n    import (\n    \t\"fmt\"\n    \t\"net/http\"\n    )\n    func WelcomeServerless(w http.ResponseWriter, r *http.Request) {\n    \tnames, ok := r.URL.Query()[\"name\"]\n\n    \u00a0\u00a0\u00a0\u00a0if ok && len(names[0]) > 0 {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0fmt.Fprintf(w, names[0] + \", Hello Serverless World!\")\n    \t} else {\n    \t\tfmt.Fprintf(w, \"Hello Serverless World!\")\n    \t}\n    }\n    ```"]