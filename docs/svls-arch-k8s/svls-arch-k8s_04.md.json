["```\n    # Linux\n    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n    # MacOS\n    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 \n    chmod +x minikube \n    sudo mv minikube /usr/local/bin\n    ```", "```\n    minikube start\n    ```", "```\n    minikube ssh\n    ```", "```\n    pgrep -l etcd && pgrep -l kube-apiserver && pgrep -l kube-scheduler && pgrep -l controller\n    ```", "```\n    pgrep -l kubelet && pgrep -l kube-proxy\n    ```", "```\n    exit\n    ```", "```\n    # Linux\n    curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl\n    # MacOS\n    curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/darwin/amd64/kubectl\n    chmod +x kubectl\n    sudo mv kubectl /usr/local/bin\n    ```", "```\n    kubectl config use-context minikube\n    ```", "```\n     kubectl get nodes\n    ```", "```\n    kubectl api-resources -o name\n    ```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n name: echo\nspec:\n containers:\n - name: main\n\u00a0\u00a0\u00a0image: ubuntu\n\u00a0\u00a0\u00a0command: ['sh', '-c', 'echo Serverless World! && sleep 3600']\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: webserver\n labels:\n\u00a0\u00a0\u00a0app: nginx\nspec:\n replicas: 5\n selector:\n\u00a0\u00a0\u00a0matchLabels:\n\u00a0\u00a0\u00a0\u00a0\u00a0app: server\n template:\n\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: server\n\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0- name: nginx\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: nginx:1.7.9\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- containerPort: 80 \n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n\u00a0\u00a0name: mysql\nspec:\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0matchLabels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n\u00a0\u00a0serviceName: mysql\n\u00a0\u00a0replicas: 1\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: mysql:5.7\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_ROOT_PASSWORD\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"root\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containerPort: 3306\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: data\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /var/lib/mysql\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subPath: mysql\n\u00a0\u00a0volumeClaimTemplates:\n\u00a0\u00a0- metadata:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: data\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accessModes: [\"ReadWriteOnce\"]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 1Gi\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n\u00a0\u00a0name: my-database\nspec:\n\u00a0\u00a0selector:\n\u00a0\u00a0\u00a0\u00a0app: mysql\n\u00a0\u00a0ports:\n\u00a0\u00a0\u00a0\u00a0- protocol: TCP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 3306\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 3306\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n\u00a0\u00a0name: echo\nspec:\n\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0restartPolicy: OnFailure\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: echo\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: busybox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0args:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /bin/sh\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- -c\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- echo Hello from the echo Job!\n```", "```\napiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n\u00a0\u00a0name: hourly-echo\nspec:\n\u00a0\u00a0schedule: \"0 * * * *\"\n\u00a0\u00a0jobTemplate:\n\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spec:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0restartPolicy: OnFailure\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: hello\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: busybox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0args:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /bin/sh\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- -c\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- date; echo It is time to say echo!\n```", "```\n    apiVersion: apps/v1\n    kind: StatefulSet\n    metadata:\n    \u00a0\u00a0name: mysql\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0matchLabels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n    \u00a0\u00a0serviceName: mysql\n    \u00a0\u00a0replicas: 1\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0labels:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0app: mysql\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: mysql:5.7\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0env:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_ROOT_PASSWORD\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"root\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_DATABASE\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"db\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_USER\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"user\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: MYSQL_PASSWORD\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0value: \"password\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: mysql\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containerPort: 3306\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volumeMounts:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: data\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mountPath: /var/lib/mysql\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0subPath: mysql\n    \u00a0\u00a0volumeClaimTemplates:\n    \u00a0\u00a0- metadata:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: data\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0accessModes: [\"ReadWriteOnce\"]\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resources:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0requests:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0storage: 1Gi\n    ```", "```\n    kubectl apply -f mysql.yaml\n    ```", "```\n    kubectl get persistentvolumes\n    ```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n    \u00a0\u00a0name: my-database\n    spec:\n    \u00a0\u00a0selector:\n    \u00a0\u00a0\u00a0\u00a0app: mysql\n    \u00a0\u00a0ports:\n    \u00a0\u00a0\u00a0\u00a0- protocol: TCP\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0port: 3306\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0targetPort: 3306\n    ```", "```\n    apiVersion: batch/v1\n    kind: Job\n    metadata:\n    \u00a0\u00a0name: create-table\n    spec:\n    \u00a0\u00a0template:\n    \u00a0\u00a0\u00a0\u00a0spec:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0restartPolicy: OnFailure\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0containers:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- name: create\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image: mysql:5.7\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0args:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- /bin/sh\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- -c\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- mysql -h my-database -u user -ppassword db -e 'CREATE TABLE IF NOT EXISTS messages (id INT)';\n    ```", "```\n    kubectl apply -f create-table.yaml\n    ```", "```\n    kubectl run mysql-client --image=mysql:5.7 -i -t --rm --restart=Never \\\n    -- mysql -h my-database -u user -ppassword\u00a0\u00a0db -e \"show tables;\"\n    ```", "```\n    kubectl delete -f create-table.yaml,service.yaml,mysql.yaml\n    ```", "```\n    //only displaying the function here//\n    func main() {\n    \u00a0\u00a0\u00a0\u00a0db, err := sql.Open(\"mysql\", ...\n    \u00a0\u00a0\u00a0\u00a0r, err := http.Get(fmt.Sprintf(\u201ehttp://apilayer.net/api/...\n    \u00a0\u00a0\u00a0\u00a0stmt, err := db.Prepare(\"INSERT INTO GoldPrices(price) VALUES(?)\")_, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0err = stmt.Exec(target.Quotes.USDXAU)\n    \u00a0\u00a0\u00a0\u00a0log.Printf(\"Successfully inserted the price: %v\", target.Quotes.\n    USDXAU)\n    }\n    ```"]