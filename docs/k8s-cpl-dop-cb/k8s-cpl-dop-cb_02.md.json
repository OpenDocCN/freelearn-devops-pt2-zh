["```\n$ git clone https://github.com/k8sdevopscookbook/src.git\n```", "```\n$ cd src/chapter2/yaml/\n```", "```\n$ cat deployment-nginx.yaml\napiVersion: apps/v1\nkind: deployment\nmetadata:\n name: nginx-deployment\n labels:\n app: nginx\nspec:\n replicas: 2\n selector:\n matchLabels:\n app: nginx\n# actual file is longer, shortened to show structure of the file only\n```", "```\n$ kubectl apply -f deployment-nginx.yaml\n```", "```\n$ kubectl rollout status deployment nginx-deployment\ndeployment \"nginx-deployment\" successfully rolled out\n```", "```\n$ kubectl get deployments\nNAME             DESIRED CURRENT UP-TO-DATE AVAILABLE AGE\nnginx-deployment 2       2       2          2         2m40s\n```", "```\n$ kubectl get rs,pods\nNAME                              DESIRED CURRENT READY AGE\nnginx-deployment-5c689d88bb       2       2       2      28m\nNAME                              READY STATUS  RESTARTS AGE\nnginx-deployment-5c689d88bb-r2pp9 1/1   Running 0        28m\nnginx-deployment-5c689d88bb-xsc5f 1/1   Running 0        28m\n```", "```\n$ kubectl edit deployment nginx-deployment\n```", "```\n$ kubectl rollout status deployment nginx-deployment\nWaiting for deployment \"nginx-deployment\" rollout to finish: 1 old replicas are pending termination...\ndeployment \"nginx-deployment\"\n```", "```\n$ kubectl get rs\nNAME                        DESIRED CURRENT READY AGE\nnginx-deployment-5c689d88bb 0       0       0     36m\nnginx-deployment-f98cbd66f  2       2       2     46s\n```", "```\n$ kubectl annotate deployment nginx-deployment kubernetes.io/change-cause=\"image updated to 1.16.0\"\n```", "```\n$ nano deployment-nginx.yaml\n```", "```\n$ kubectl apply -f deployment-nginx.yaml\n```", "```\n$ kubectl get rs\nNAME                        DESIRED CURRENT READY AGE\nnginx-deployment-5c689d88bb 0       0       0     56m\nnginx-deployment-5d599789c6 3       3       3     15s\nnginx-deployment-f98cbd66f  0       0       0     20m\n```", "```\n$ kubectl annotate deployment nginx-deployment kubernetes.io/change-cause=\"image updated to 1.17.0 and scaled up to 3 replicas\"\n```", "```\n$ kubectl describe deployments\n```", "```\n$ kubectl rollout history deployment nginx-deployment\ndeployment.extensions/nginx-deployment\nREVISION CHANGE-CAUSE\n1        <none>\n2        image updated to 1.16.0\n3        image updated to 1.17.0 and scaled up to 3 replicas\n```", "```\n$ kubectl rollout undo deployment nginx-deployment\ndeployment.apps/nginx-deployment rolled back\n```", "```\n$ kubectl get rs\nNAME                        DESIRED CURRENT READY AGE\nnginx-deployment-5c689d88bb 0       0       0     69m\nnginx-deployment-5d599789c6 0       0       0     12m\nnginx-deployment-f98cbd66f  3       3       3     33m\n```", "```\n$ kubectl rollout undo deployment nginx-deployment --to-revision=1\n```", "```\n$ kubectl delete deployment nginx-deployment\n```", "```\n$ kubectl get nodes\n NAME STATUS ROLES AGE VERSION\n ip-172-20-112-25.ec2.internal Ready master 7h19m v1.15.0\n ip-172-20-126-108.ec2.internal Ready node 7h18m v1.15.0\n ip-172-20-51-209.ec2.internal Ready node 7h18m v1.15.0\n ip-172-20-92-89.ec2.internal Ready node 7h19m v1.15.0\n```", "```\n$ mkdir nginx\n```", "```\n$ cp deployment-nginx.yaml ./nginx/\n```", "```\n$ cat <<EOF >./nginx/kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n- deployment-nginx.yaml\nimages:\n - name: nginx\n newName: nginx\n newTag: 1.16.0\ncommonAnnotations:\n kubernetes.io/change-cause: \"Initial deployment with 1.16.0\"\nEOF\n```", "```\n$ kubectl kustomize ./nginx/\n```", "```\n$ kubectl apply -k nginx\n```", "```\n$ cat <<EOF > nginx/kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n - deployment-nginx.yaml\nimages:\n - name: nginx\n newName: nginx\n newTag: 1.17.0\ncommonAnnotations:\n kubernetes.io/change-cause: \"image updated to 1.17.0\"\nEOF\n```", "```\n$ kubectl apply -k nginx\n```", "```\n$ kubectl rollout history deployment nginx-deployment\ndeployment.extensions/nginx-deployment\nREVISION CHANGE-CAUSE\n1        Initial deployment with 1.16.0\n2        image updated to 1.17.0\n```", "```\n$ mkdir registry && mkdir registry/base\n```", "```\n$ cd registry/base/\n$ wget https://raw.githubusercontent.com/k8sdevopscookbook/src/master/chapter2/kustomize/registry/base/deployment-registry.yaml\n```", "```\n$ cat deployment-registry.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\n# actual file is longer, shortened to highlight important structure of the file only\n - image: registry:2\n#....#\n - name: registry-storage\n mountPath: /var/lib/registry\n#....#\n - name: registryui\n image: hyper/docker-registry-web:latest\n#....#\n - name: registry-storage\n persistentVolumeClaim:\n claimName: registry-pvc\n```", "```\n$ wget https://raw.githubusercontent.com/k8sdevopscookbook/src/master/chapter2/kustomize/registry/base/service-registry.yaml\n```", "```\n$ cat <<EOF > registry/base/service-registry.yaml\nkind: Service\n# actual file is longer, shortened to highlight important structure of the file only\n type: NodePort\n ports:\n - name: registry\n port: 5000\n protocol: TCP \n nodePort: 30120\n - name: registry-ui\n port: 80\n protocol: TCP\n nodePort: 30220 \n#....#\n```", "```\n$ cat <<EOF > registry/base/pvc-registry.yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n name: registry-pvc\n labels:\n app: kube-registry-pv-claim\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n requests:\n storage: 10G\nEOF\n```", "```\n$ cat <<EOF >./registry/base/kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n - deployment-registry.yaml\n - service-registry.yaml\n - pvc-registry.yaml\nEOF\n```", "```\n$ mkdir registry/overlays && mkdir registry/overlays/dev \n$ cat <<EOF >./registry/overlays/dev/kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nbases:\n - ../../base\nnamePrefix: dev-\ncommonAnnotations:\n note: Hello, I am development!\nEOF\n```", "```\n$ mkdir registry/overlays/prod\n$ cat <<EOF >./registry/overlays/prod/kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nbases:\n - ../../base\nnamePrefix: prod-\ncommonAnnotations:\n note: Hello, I am production!\nEOF\n```", "```\n$ kubectl kustomize ./registry/overlays/prod/\n# result shortened to highlight the annotation\nmetadata:\n annotations:\n note: Hello, I am production!\n labels:\n app: kube-registry-pv-claim\n name: prod-registry-pvc\n#...#\n```", "```\n$ kubectl kustomize ./dev/\n... # removed\nmetadata:\n annotations:\n note: Hello, I am development!\n labels:\n app: kube-registry-pv-claim\n name: dev-registry-pvc\n... # removed\n```", "```\n$ kubectl apply -k ./registry/overlays/dev\n```", "```\n$ kubectl diff -k registry/overlays/prod/\n```", "```\n$ cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n name: tiller\n namespace: kube-system\nEOF\n```", "```\n$ cat <<EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n name: tiller\nroleRef:\n apiGroup: rbac.authorization.k8s.io\n kind: ClusterRole\n name: cluster-admin\nsubjects:\n - kind: ServiceAccount\n name: tiller\n namespace: kube-system\nEOF\n```", "```\n$ curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > install-helm.sh\n```", "```\n$ chmod u+x install-helm.sh && ./install-helm.sh\n```", "```\n$ helm init --service-account tiller --history-max 200\n```", "```\n$ helm version --short\n```", "```\n$ helm repo update\n```", "```\n$ helm install --name my-mysqlrelease stable/mysql\n```", "```\n$ helm ls\nNAME            REVISION UPDATED                 STATUS   CHART         APP VERSION NAMESPACE\nmy-mysqlrelease 1        Thu Aug 8 02:30:27 2019 DEPLOYED mysql-1.3.0 5.7.14        default\n```", "```\n$ helm status my-mysqlrelease\n```", "```\n$ helm search redis\nNAME CHART VER APP VER DESCRIPTION \nstable/prometheus-redis-exporter 3.0.0 1.0.3 Prometheus export\nstable/redis 9.0.1 5.0.5 Open source, adva\nstable/redis-ha 3.6.2 5.0.5 Highly available \nstable/sensu 0.2.3 0.28 Sensu monitoring \n```", "```\n$ helm search storage\nNAME                 CHART VERSION APP VERSION DESCRIPTION ...\nstable/minio         2.5.4 RELEASE.2019-07-17T22-54-12Z MinIO is a hi\nstable/nfs-server-pr 0.3.0 2.2.1-k8s1.12 nfs-server-provisioner is an\nstable/openebs       1.0.0 1.0.0 Containerized Storage for Containers\n```", "```\n$ helm upgrade my-mysqlrelease stable/mysql\n```", "```\n$ helm upgrade my-mysqlrelease stable/mysql --version 1.2.0\n```", "```\n$ helm ls\nNAME            REVISION UPDATED                  STATUS   CHART       APP VERSION NAMESPACE\nmy-mysqlrelease 3        Tue Jul 30 22:44:07 2019 DEPLOYED mysql-1.2.0 5.7.14      default\n```", "```\n$ helm history my-mysqlrelease stable/mysql\nREV UPDATED             STATUS     CHART       DESCRIPTION\n1   Oct 1 22:47:37 2019 SUPERSEDED mysql-1.3.3 Install complete\n2   Oct 1 22:57:32 2019 SUPERSEDED mysql-1.3.3 Upgrade complete\n3   Oct 1 23:00:44 2019 DEPLOYED   mysql-1.2.0 Upgrade complete\n```", "```\n$ helm upgrade my-mysqlrelease stable/mysql --version 1.2.0 --set mysqlRootPassword=\"MyNevvPa55w0rd\"\n```", "```\n$ kubectl get secret --namespace default my-mysqlrelease -o jsonpath=\"{.data.mysql-root-password}\" | base64 --decode; echo\nMyNevvPa55w0rd\n```", "```\n$ helm history my-mysqlrelease\nREV UPDATED                 STATUS     CHART       DESCRIPTION\n1   Tue Oct 1 22:47:37 2019 SUPERSEDED mysql-1.3.3 Install complete\n2   Tue Oct 1 22:57:32 2019 SUPERSEDED mysql-1.3.3 Upgrade complete\n3   Tue Oct 1 23:00:44 2019 SUPERSEDED mysql-1.2.0 Upgrade complete\n4   Tue Oct 1 23:07:23 2019 SUPERSEDED mysql-1.3.3 Upgrade complete\n5   Tue Oct 1 23:10:39 2019 DEPLOYED   mysql-1.2.0 Upgrade complete\n```", "```\n$ helm rollback my-mysqlrelease 4\nRollback was a success.\n```", "```\n$ helm history my-mysqlrelease\n REV UPDATED                  STATUS     CHART       DESCRIPTION\n...\n 5   Tue Jul 30 22:44:07 2019 SUPERSEDED mysql-1.2.0 Upgrade complete\n 6   Tue Jul 30 23:11:52 2019 DEPLOYED   mysql-1.3.0 Rollback to 4\n```", "```\nhelm ls --all\nNAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE\nmy-mysqlrelease 6 Thu Aug 8 02:34:13 2019 DEPLOYED mysql-1.3.0 5.7.14 default\n```", "```\nhelm delete --purge my-mysqlrelease\n```", "```\n$ helm repo list\n NAME   URL\n stable https://kubernetes-charts.storage.googleapis.com\n local  http://127.0.0.1:8879/charts\n```", "```\ncat <<EOF >customhelmrepo.yaml\nenv:\n open:\n STORAGE: local\npersistence:\n enabled: true\n accessMode: ReadWriteOnce\n size: 10Gi\n secret:\n BASIC_AUTH_USER: helmcurator\n BASIC_AUTH_PASS: myhelmpassword\nEOF\n```", "```\n$ helm install --name my-chartmuseum -f customhelmrepo.yaml stable/chartmuseum\n```", "```\n$ kubectl get svc --namespace default -l \"app=chartmuseum\" -l \\\n\"release=my-chartmuseum\" -o jsonpath=\"{.items[0].spec.clusterIP}\"; echo\n10.3.0.37\n```", "```\n$ helm repo add chartmuseum http://10.3.0.37:8080\n```", "```\n$ helm repo list\nNAME        URL\nstable      https://kubernetes-charts.storage.googleapis.com\nlocal       http://127.0.0.1:8879/charts\nchartmuseum http://10.3.0.37:8080\n```", "```\n$ helm create mychart\n```", "```\n$ helm lint ./mychart\n==> Linting ./mychart\n[INFO] Chart.yaml: icon is recommended\n1 chart(s) linted, no failures\n```", "```\n$ helm install ./mychart --debug --dry-run\n```", "```\n$ helm package .\n```", "```\n$ cd mychart && curl --data-binary \"@mychart-0.1.0.tgz\" http://10.3.0.37:8080/api/charts\n```", "```\nmychart \n\u251c\u2500\u2500 Chart.yaml          --> Description of the chart\n\u251c\u2500\u2500 charts              --> Directory for chart dependencies\n\u251c\u2500\u2500 mychart-0.1.0.tgz   --> Packaged chart following the SemVer 2 standard\n\u251c\u2500\u2500 templates           --> Directory for chart templates\n\u2502   \u251c\u2500\u2500 NOTES.txt       --> Help text displayed to users\n\u2502   \u251c\u2500\u2500 _helpers.tpl    --> Helpers that you can re-use \n\u2502   \u251c\u2500\u2500 deployment.yaml --> Application - example deployment\n\u2502   \u251c\u2500\u2500 service.yaml    --> Application - example service endpoint\n\u2514\u2500\u2500 values.yaml         --> Default values for a chart\n```", "```\n$ sh -c \"$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)\"\n$ PATH=/home/linuxbrew/.linuxbrew/bin/:$PATH\n```", "```\n$ brew tap kudobuilder/tap && brew install kudo-cli\n```", "```\n$ kubectl kudo init\n```", "```\n$ kubectl kudo install zookeeper --instance=zk\n```", "```\n$ kubectl kudo install kafka --instance=kafka\n```", "```\n$ kubectl get Operators\nNAME      AGE\nkafka     9s\nzookeeper 17s\n```", "```\n$ kubectl get instances\nNAME  AGE\nkafka 25s\nzk    33s\n```", "```\n$ kubectl create -f https://raw.githubusercontent.com/Operator-framework/Operator-lifecycle-manager/master/deploy/upstream/quickstart/crds.yaml\n$ kubectl create -f https://raw.githubusercontent.com/Operator-framework/Operator-lifecycle-manager/master/deploy/upstream/quickstart/olm.yaml\n```", "```\n$ kubectl create -f https://Operatorhub.io/install/postgres-Operator.yaml\n```", "```\n$ kubectl get pods -n Operators\nNAME                               READY STATUS  RESTARTS AGE\npostgres-Operator-5cd9d99494-5nl5r 1/1   Running 0        3m56s\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/k8sdevopscookbook/src/master/chapter2/postgres-Operator/ui/postgres-ui.yaml\n```", "```\n$ kubectl create -f https://raw.githubusercontent.com/zalando/postgres-Operator/master/manifests/minimal-postgres-manifest.yaml\n```", "```\n$ kubectl get postgresql\nNAME                 TEAM VERSION PODS VOLUME CPU-REQUEST MEMORY-REQUEST AGE STATUS\nacid-minimal-cluster acid 11      2    1Gi                               7s\n```", "```\n$ export PGPASSWORD=$(kubectl get secret postgres.acid-minimal-cluster.credentials -o 'jsonpath={.data.password}' | base64 -d)\n$ export PGSSLMODE=require\n$ psql -U postgres\n```", "```\n$ kubectl delete postgresql acid-minimal-cluster\n```", "```\n$ curl -L https://github.com/jenkins-x/jx/releases/download/v2.0.905/jx-linux-amd64.tar.gz | tar xzv \n$ sudo mv jx /usr/local/bin\n```", "```\n$ jx create cluster gke --skip-login\n```", "```\nCreating a local Git user for GitHub server\n? GitHub username:\n```", "```\nPlease click this URL and generate a token\nhttps://github.com/settings/tokens/new?scopes=repo,read:user,read:org,user:email,write:repo_hook,delete_repo\nThen COPY the token and enter it following:\n? API Token:\n```", "```\n? Domain [? for help] (your_IP.nip.io)\n```", "```\n? Do you wish to use GitHub as the pipelines Git server: (Y/n)\n```", "```\nJenkins X installation completed successfully\n ********************************************************\n NOTE: Your admin password is: your_password\n ********************************************************\n...\nContext \"gke_devopscookbook_us-central1-a_slayersunset\" modified.\nNAME            HOSTS                             ADDRESS PORTS AGE\nchartmuseum     chartmuseum.jx.your_IP.nip.io     your_IP 80    7m43s\ndocker-registry docker-registry.jx.your_IP.nip.io your_IP 80    7m43s\njenkins         jenkins.jx.your_IP.nip.io         your_IP 80    7m43s\nnexus           nexus.jx.your_IP.nip.io           your_IP 80    7m43s\n```", "```\n$ kubectl get pods -n jx\nNAME                                          READY STATUS  RESTARTS AGE\njenkins-956c58866-pz5vl                       1/1   Running 0       11m\njenkins-x-chartmuseum-75d45b6d7f-5bckh        1/1   Running 0       11m\njenkins-x-controllerrole-bd4d7b5c6-sdkbg      1/1   Running 0       11m\njenkins-x-controllerteam-7bdd76dfb6-hh6c8     1/1   Running 0       11m\njenkins-x-controllerworkflow-7545997d4b-hlvhm 1/1   Running 0       11m\njenkins-x-docker-registry-6d555974c7-sngm7    1/1   Running 0       11m\njenkins-x-heapster-7777b7d7d8-4xgb2           2/2   Running 0       11m\njenkins-x-nexus-6ccd45c57c-btzjr              1/1   Running 0       11m\nmaven-brcfq                                   2/2   Running 0       63s\nmaven-qz0lc                                   2/2   Running 0       3m\nmaven-vqw9l                                   2/2   Running 0       32s\n```", "```\n$ jx get urls\nNAME                      URL\njenkins                   http://jenkins.jx.your_IP.nip.io\njenkins-x-chartmuseum     http://chartmuseum.your_IP.nip.io\njenkins-x-docker-registry http://docker-registry.jx.your_IP.nip.io\nnexus                     http://nexus.jx.your_IP.nip.io\n```", "```\n$ jx context\n```", "```\nChange Kubernetes context: [Use arrows to move, space to select, type to filter]\n> gke_devopscookbook_us-central1-a_slayersunset\neks_devopscookbook_us-west\nopenshift_cluster\n```", "```\njx compliance run\n```", "```\n$ jx compliance status\nCompliance tests completed.\n```", "```\n$ jx compliance results\n```", "```\n$ mkdir import && cd import\n$ git clone https://github.com/k8sdevopscookbook/hello-world.git\n```", "```\n$ cd hello-world & sudo rm -r .git/\n```", "```\n$ jx import\n```", "```\n$ jx upgrade cli\n```", "```\n$ jx upgrade platform\n```", "```\n$ gcloud container clusters list\nNAME LOCATION MASTER_VERSION MASTER_IP MACHINE_TYPE NODE_VERSION NUM_NODES STATUS\nclustername us-central1-a 1.12.8-gke.10 your_IP n1-standard-2 1.12.8-gke.10 3 RUNNING\n```", "```\n$ gcloud container clusters delete <clustername>\n```", "```\n$ helm repo add gitlab https://charts.gitlab.io/\n$ helm repo update\n```", "```\n$ helm upgrade --install gitlab gitlab/gitlab --namespace gitlab \\\n--timeout 600 \\\n--set global.edition=ce \\\n--set certmanager-issuer.email=youremail@domain.com \\\n--set global.hosts.domain=yourdomain.com\n```", "```\n$ kubectl get svc -n gitlab\n```", "```\n$ echo http://$(kubectl get svc --namespace gitlab \\\ngitlab-nginx-ingress-controller \\\n-o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n```", "```\n$ kubectl get secret gitlab-gitlab-initial-root-password \\\n-ojsonpath='{.data.password}' | base64 --decode ; echo\n```", "```\n$ helm get values gitlab > gitlab.yaml\n```", "```\n$ helm repo update\n```", "```\n$ helm search -l gitlab/gitlab\nNAME CHART VERSION APP VERSION DESCRIPTION\ngitlab/gitlab 2.1.7 12.1.6 Web-based Git-repository manager with wiki and issue-trac...\ngitlab/gitlab 2.1.6 12.1.4 Web-based Git-repository manager with wiki and issue-trac...\n...\n```", "```\n$ helm upgrade gitlab gitlab/gitlab --version 2.1.7 -f gitlab.yaml\n```", "```\n$ kubectl create secret tls mytls --cert=cert.crt --key=key.key\n```", "```\n$ helm upgrade --install gitlab gitlab/gitlab --namespace gitlab \\\n--timeout 600 \\\n--set global.edition=ce \\\n--version 2.1.6 \\\n--set certmanager.install=false \\\n--set global.ingress.configureCertmanager=false \\\n--set global.ingress.tls.secretName=mytls\n```", "```\n$ helm upgrade --install gitlab gitlab/gitlab --namespace gitlab \\\n--timeout 600 \\\n--set global.edition=ce \\\n--version 2.1.6 \\\n--set certmanager.install=false \\\n--set global.ingress.configureCertmanager=false \\\n--set gitlab-runner.install=false\n```", "```\n$ kubectl get secret gitlab-wildcard-tls-ca -n gitlab \\\n-ojsonpath='{.data.cfssl_ca}' | base64 --decode > gitlab.mydomain.com.ca.pem\n```", "```\n$ helm upgrade --install gitlab . --set global.Operator.enabled=true \\\n--set global.Operator.bootstrap=true \n```", "```\n$ helm upgrade gitlab . --set global.Operator.enabled=true \\\n--set global.Operator.bootstrap=false \n```", "```\n$ helm delete --purge gitlab\n```", "```\n$ kubectl delete ns gitlab\n```"]