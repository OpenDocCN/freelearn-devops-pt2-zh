["```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nAPI_VERSION = \"2\"\nBOX_NAME = \"centos/7\"\nBOX_IP_SCAN = \"10.20.30.40\"\nBOX_IP_WP = \"10.20.30.41\"\nDOMAIN = \"nip.io\"\nPRIVATE_KEY = \"~/.ssh/id_rsa\"\nPUBLIC_KEY = '~/.ssh/id_rsa.pub'\n\n```", "```\nVagrant.configure(API_VERSION) do |config|\n\n  config.vm.define :scan do |scan| \n    scan.vm.box = BOX_NAME\n    scan.vm.network \"private_network\", ip: BOX_IP_SCAN\n    scan.vm.host_name = BOX_IP_SCAN + '.' + DOMAIN\n    scan.ssh.insert_key = false\n    scan.ssh.private_key_path = [PRIVATE_KEY, \"~/.vagrant.d/insecure_private_key\"]\n    scan.vm.provision \"file\", source: PUBLIC_KEY, destination: \"~/.ssh/authorized_keys\"\n  end\n\n  config.vm.define :wp do |wp| \n    wp.vm.box = BOX_NAME\n    wp.vm.network \"private_network\", ip: BOX_IP_WP\n    wp.vm.host_name = BOX_IP_WP + '.' + DOMAIN\n    wp.ssh.insert_key = false\n    wp.ssh.private_key_path = [PRIVATE_KEY, \"~/.vagrant.d/insecure_private_key\"]\n    wp.vm.provision \"file\", source: PUBLIC_KEY, destination: \"~/.ssh/authorized_keys\"\n  end\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = \"2024\"\n    v.cpus = \"2\"\n  end\n\n  config.vm.provider \"vmware_fusion\" do |v|\n    v.vmx[\"memsize\"] = \"2024\"\n    v.vmx[\"numvcpus\"] = \"2\"\n  end\n\nend\n```", "```\nbox1 ansible_host=10.20.30.40.nip.io\nbox2 ansible_host=10.20.30.41.nip.io\n\n[scan]\nbox1\n\n[wordpress]\nbox2\n\n[boxes]\nbox1\nbox2\n\n[boxes:vars]\nansible_connection=ssh\nansible_user=vagrant\nansible_private_key_file=~/.ssh/id_rsa\nhost_key_checking=False\n```", "```\n$ vagrant up\n$ vagrant up --provider=vmware_fusion\n```", "```\n$ ansible-galaxy init roles/docker\n```", "```\ndocker:\n  gpg_key: \"https://download.docker.com/linux/centos/gpg\"\n  repo_url: \"https://download.docker.com/linux/centos/docker-ce.repo\"\n  repo_path: \"/etc/yum.repos.d/docker-ce.repo\"\n  packages:\n    - \"docker-ce\"\n    - \"device-mapper-persistent-data\"\n    - \"lvm2\"\n    - \"python-setuptools\"\n    - \"libselinux-python\"\n  pip:\n    - \"docker\"\n```", "```\n- name: update all of the installed packages\n  yum:\n    name: \"*\"\n    state: \"latest\"\n    update_cache: \"yes\"\n```", "```\n- name: add the gpg key for the docker repo\n  rpm_key:\n    key: \"{{ docker.gpg_key }}\"\n    state: \"present\"\n```", "```\n- name: add docker repo from the remote url\n  get_url:\n    url: \"{{ docker.repo_url }}\"\n    dest: \"{{ docker.repo_path }}\"\n    mode: \"0644\"\n```", "```\n- name: install the docker packages\n  yum:\n    name: \"{{ item }}\"\n    state: \"installed\"\n    update_cache: \"yes\"\n  with_items: \"{{ docker.packages }}\"\n```", "```\n- name: install pip\n  easy_install:\n    name: pip\n    state: latest\n```", "```\n- name: install the python packages\n  pip:\n    name: \"{{ item }}\"\n  with_items: \"{{ docker.pip }}\"\n```", "```\n- name: put selinux into permissive mode\n  selinux:\n    policy: targeted\n    state: permissive\n```", "```\n- name: start docker and configure to start on boot\n  service:\n    name: \"docker\"\n    state: \"started\"\n    enabled: \"yes\"\n```", "```\n---\n\n- hosts: scan\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/docker\n\n- hosts: wordpress\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/stack-install\n    - roles/stack-config\n    - roles/wordpress\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\nPLAY [scan] *************************************************************************************\n\nTASK [Gathering Facts] **************************************************************************\nok: [box1]\n\nTASK [roles/docker : update all of the installed packages] **************************************\nchanged: [box1]\n\nTASK [roles/docker : add the gpg key for the docker repo] ***************************************\nchanged: [box1]\n\nTASK [roles/docker : add docker repo from the remote url] ***************************************\nchanged: [box1]\n\nTASK [roles/docker : install the docker packages] ***********************************************\nchanged: [box1] => (item=[u'docker-ce', u'device-mapper-persistent-data', u'lvm2', u'python-setuptools', u'libselinux-python'])\n\nTASK [roles/docker : install pip] ***************************************************************\nchanged: [box1]\n\nTASK [roles/docker : install the python packages] ***********************************************\nchanged: [box1] => (item=docker)\n\nTASK [roles/docker : put selinux into permissive mode] ******************************************\nchanged: [box1]\n\nTASK [roles/docker : start docker and configure to start on boot] *******************************\nchanged: [box1]\n\nPLAY [wordpress] ********************************************************************************\n\nTASK [Gathering Facts] **************************************************************************\nok: [box2]\n\nTASK [roles/stack-install : install the repo packages] ******************************************\nchanged: [box2] => (item=[u'epel-release', u'https://centos7.iuscommunity.org/ius-release.rpm'])\n\nTASK [roles/stack-install : add the NGINX mainline repo] ****************************************\nchanged: [box2]\n\nTASK [roles/stack-install : update all of the installed packages] *******************************\nchanged: [box2]\n\nTASK [roles/stack-install : remove the packages so that they can be replaced] *******************\nchanged: [box2] => (item=[u'mariadb-libs.x86_64'])\n\nTASK [roles/stack-install : install the stack packages] *****************************************\nchanged: [box2] => (item=[u'postfix', u'MySQL-python', u'policycoreutils-python', u'nginx', u'mariadb101u', u'mariadb101u-server', u'mariadb101u-config', u'mariadb101u-common', u'mariadb101u-libs', u'php72u', u'php72u-bcmath', u'php72u-cli', u'php72u-common', u'php72u-dba', u'php72u-fpm', u'php72u-fpm-nginx', u'php72u-gd', u'php72u-intl', u'php72u-json', u'php72u-mbstring', u'php72u-mysqlnd', u'php72u-process', u'php72u-snmp', u'php72u-soap', u'php72u-xml', u'php72u-xmlrpc', u'vim-enhanced', u'git', u'unzip'])\n\nTASK [roles/stack-config : add the wordpress user] **********************************************\nchanged: [box2]\n\nTASK [roles/stack-config : copy the nginx.conf to /etc/nginx/] **********************************\nchanged: [box2]\n\nTASK [roles/stack-config : create the global directory in /etc/nginx/] **************************\nchanged: [box2]\n\nTASK [roles/stack-config : copy the restrictions.conf to /etc/nginx/global/] ********************\nchanged: [box2]\n\nTASK [roles/stack-config : copy the wordpress_shared.conf to /etc/nginx/global/] ****************\nchanged: [box2]\n\nTASK [roles/stack-config : copy the default.conf to /etc/nginx/conf.d/] *************************\nchanged: [box2]\n\nTASK [roles/stack-config : copy the www.conf to /etc/php-fpm.d/] ********************************\nchanged: [box2]\n\nTASK [roles/stack-config : configure php.ini] ***************************************************\nchanged: [box2] => (item={u'regexp': u'^;date.timezone =', u'replace': u'date.timezone = Europe/London'})\nchanged: [box2] => (item={u'regexp': u'^expose_php = On', u'replace': u'expose_php = Off'})\nchanged: [box2] => (item={u'regexp': u'^upload_max_filesize = 2M', u'replace': u'upload_max_filesize = 20M'})\n\nTASK [roles/stack-config : start php-fpm] *******************************************************\nchanged: [box2]\n\nTASK [roles/stack-config : start nginx] *********************************************************\nchanged: [box2]\n\nTASK [roles/stack-config : configure the mariadb bind address] **********************************\nchanged: [box2]\n\nTASK [roles/stack-config : start mariadb] *******************************************************\nchanged: [box2]\n\nTASK [roles/stack-config : change mysql root password] ******************************************\nchanged: [box2] => (item=127.0.0.1)\nchanged: [box2] => (item=::1)\nchanged: [box2] => (item=10.20.30.41.nip.io)\nchanged: [box2] => (item=localhost)\n\nTASK [roles/stack-config : set up .my.cnf file] *************************************************\nchanged: [box2]\n\nTASK [roles/stack-config : delete anonymous MySQL user] *****************************************\nok: [box2] => (item=127.0.0.1)\nok: [box2] => (item=::1)\nchanged: [box2] => (item=10.20.30.41.nip.io)\nchanged: [box2] => (item=localhost)\n\nTASK [roles/stack-config : remove the MySQL test database] **************************************\nchanged: [box2]\n\nTASK [roles/stack-config : set the selinux allowing httpd_t to be permissive is required] *******\nchanged: [box2]\n\nTASK [roles/wordpress : download wp-cli] ********************************************************\nchanged: [box2]\n\nTASK [roles/wordpress : update permissions of wp-cli to allow anyone to execute it] *************\nchanged: [box2]\n\nTASK [roles/wordpress : create the wordpress database] ******************************************\nchanged: [box2]\n\nTASK [roles/wordpress : create the user for the wordpress database] *****************************\nchanged: [box2] => (item=127.0.0.1)\nok: [box2] => (item=::1)\nok: [box2] => (item=10.20.30.41.nip.io)\nok: [box2] => (item=localhost)\n\nTASK [roles/wordpress : are the wordpress files already there?] *********************************\nok: [box2]\n\nTASK [roles/wordpress : download wordpresss] ****************************************************\nchanged: [box2]\n\nTASK [roles/wordpress : set the correct permissions on the homedir] *****************************\nchanged: [box2]\n\nTASK [roles/wordpress : is wordpress already configured?] ***************************************\nok: [box2]\n\nTASK [roles/wordpress : configure wordpress] ****************************************************\nchanged: [box2]\n\nTASK [roles/wordpress : do we need to install wordpress?] ***************************************\nfatal: [box2]: FAILED! =>\n...ignoring\n\nTASK [roles/wordpress : install wordpress if needed] ********************************************\nchanged: [box2]\n\nTASK [roles/wordpress : do we need to install the plugins?] *************************************\nfailed: [box2] (item=jetpack) =>\nfailed: [box2] (item=wp-super-cache) =>\nfailed: [box2] (item=wordpress-seo) =>\nfailed: [box2] (item=wordfence) =>\nfailed: [box2] (item=nginx-helper) =>\n...ignoring\n\nTASK [roles/wordpress : set a fact if we don't need to install the plugins] *********************\nskipping: [box2]\n\nTASK [roles/wordpress : set a fact if we need to install the plugins] ***************************\nok: [box2]\n\nTASK [roles/wordpress : install the plugins if we need to or ignore if not] *********************\nchanged: [box2] => (item=jetpack)\nchanged: [box2] => (item=wp-super-cache)\nchanged: [box2] => (item=wordpress-seo)\nchanged: [box2] => (item=wordfence)\nchanged: [box2] => (item=nginx-helper)\n\nTASK [roles/wordpress : do we need to install the theme?] ***************************************\nfatal: [box2]: FAILED! =>\n...ignoring\n\nTASK [roles/wordpress : set a fact if we don't need to install the theme] ***********************\nskipping: [box2]\n\nTASK [roles/wordpress : set a fact if we need to install the theme] *****************************\nok: [box2]\n\nTASK [roles/wordpress : install the theme if we need to or ignore if not] ***********************\nchanged: [box2]\n\nRUNNING HANDLER [roles/stack-config : restart nginx] ********************************************\nchanged: [box2]\n\nRUNNING HANDLER [roles/stack-config : restart php-fpm] ******************************************\nchanged: [box2]\n\nPLAY RECAP **************************************************************************************\nbox1 : ok=9 changed=8 unreachable=0 failed=0\nbox2 : ok=42 changed=37 unreachable=0 failed=0\n```", "```\n$ ansible-galaxy init roles/wpscan\n```", "```\nimage: \"wpscanteam/wpscan\"\nlog:\n  remote_folder: /tmp/wpscan/\n  local_folder: \"generated/\"\n  file: \"{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}.txt\"\n```", "```\n- name: pull the image\n  docker_image:\n    name: \"{{ image }}\"\n```", "```\n- name: create the folder which we will mount inside the container\n  file:\n    path: \"{{ log.remote_folder }}\"\n    state: \"directory\"\n    mode: \"0777\"\n```", "```\n$ docker container run -it --rm --name wpscan -v /tmp/wpscan/:/tmp/wpscan/ wpscanteam/wpscan \\\n -u http://10.20.30.41.nip.io/ --update --enumerate --log /tmp/wpscan/10.20.30.41.nip.io-2018-05-19-12-16.txt\n```", "```\n$ /wpscan/wpscan.rb -u http://10.20.30.41.nip.io/ --update --enumerate --log /tmp/wpscan/10.20.30.41.nip.io-2018-05-19-12-16.txt\n```", "```\n- name: run the scan\n  docker_container:\n    detach: false\n    auto_remove: true\n    name: \"wpscan\"\n    volumes: \"{{ log.remote_folder }}:{{ log.remote_folder }}\"\n    image: \"{{ image }}\"\n    command: \"--url http://{{ hostvars[item]['ansible_host'] }} --update --enumerate --log {{ log.remote_folder }}{{ hostvars[item]['ansible_host'] }}-{{ log.file }}\"\n  register: docker_scan\n  failed_when: docker_scan.rc == 0 or docker_scan.rc >= 2\n  with_items: \"{{ groups['wordpress'] }}\"\n```", "```\n- name: download the html report\n  fetch:\n    src: \"{{ log.remote_folder }}{{ hostvars[item]['ansible_host'] }}-{{ log.file }}\"\n    dest: \"{{ log.local_folder }}{{ hostvars[item]['ansible_host'] }}-{{ log.file }}\"\n    flat: yes\n  with_items: \"{{ groups['wordpress'] }}\"\n```", "```\n- hosts: wordpress\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n```", "```\n  roles:\n    - roles/stack-install\n    - roles/stack-config\n    - roles/wordpress\n\n- hosts: scan\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/docker\n    - roles/wpscan\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\n$ ansible-galaxy init roles/zap\n```", "```\nimage: \"owasp/zap2docker-stable\"\nlog:\n  remote_folder: /tmp/zap/\n  local_folder: \"generated/\"\n  file: \"{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}.html\"\n```", "```\n- name: pull the image\n  docker_image:\n    name: \"{{ image }}\"\n\n- name: create the folder which we will mount inside the container\n  file:\n    path: \"{{ log.remote_folder }}\"\n    state: \"directory\"\n    mode: \"0777\"\n```", "```\n$ docker container run -it --rm --name zap -v /tmp/zap/:/zap/wrk/ owasp/zap2docker-stable \\\n zap-baseline.py -t http://10.20.30.41.nip.io/ -g gen.conf -r 10.20.30.41.nip.io-2018-05-19-14-26.html\n```", "```\n- name: run the scan\n  docker_container:\n    detach: false\n    auto_remove: true\n    name: \"zap\"\n    volumes: \"{{ log.remote_folder }}:/zap/wrk/\"\n    image: \"{{ image }}\"\n    command: \"zap-baseline.py -t http://{{ hostvars[item]['ansible_host'] }} -g gen.conf -r {{ hostvars[item]['ansible_host'] }}-{{ log.file }}\"\n  register: docker_scan\n  failed_when: docker_scan.rc == 0 or docker_scan.rc >= 2\n  with_items: \"{{ groups['wordpress'] }}\"\n```", "```\n- name: download the html report\n  fetch:\n    src: \"{{ log.remote_folder }}{{ hostvars[item]['ansible_host'] }}-{{ log.file }}\"\n    dest: \"{{ log.local_folder }}{{ hostvars[item]['ansible_host'] }}-{{ log.file }}\"\n    flat: yes\n  with_items: \"{{ groups['wordpress'] }}\"\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\n$ vagrant destroy\n```"]