["```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nAPI_VERSION = \"2\"\nDOMAIN      = \"nip.io\"\nPRIVATE_KEY = \"~/.ssh/id_rsa\"\nPUBLIC_KEY  = '~/.ssh/id_rsa.pub'\nCENTOS_IP   = '192.168.50.6'\nCENTOS_BOX  = 'centos/7'\nUBUNTU_IP   = '192.168.50.7'\nUBUNTU_BOX  = 'generic/ubuntu1704'\n\nVagrant.configure(API_VERSION) do |config|\n\n  config.vm.define \"centos\" do |centos|\n      centos.vm.box = CENTOS_BOX\n      centos.vm.network \"private_network\", ip: CENTOS_IP\n      centos.vm.host_name = CENTOS_IP + '.' + DOMAIN\n      centos.ssh.insert_key = false\n      centos.ssh.private_key_path = [PRIVATE_KEY,\n      \"~/.vagrant.d/insecure_private_key\"]\n      centos.vm.provision \"file\", source: PUBLIC_KEY, destination:\n      \"~/.ssh/authorized_keys\"\n\n      centos.vm.provider \"virtualbox\" do |v|\n        v.memory = \"2024\"\n        v.cpus = \"2\"\n      end\n\n      centos.vm.provider \"vmware_fusion\" do |v|\n        v.vmx[\"memsize\"] = \"2024\"\n        v.vmx[\"numvcpus\"] = \"2\"\n      end\n  end\n\n  config.vm.define \"ubuntu\" do |ubuntu|\n      ubuntu.vm.box = UBUNTU_BOX\n      ubuntu.vm.network \"private_network\", ip: UBUNTU_IP\n      ubuntu.vm.host_name = UBUNTU_IP + '.' + DOMAIN\n      ubuntu.ssh.insert_key = false\n      ubuntu.ssh.private_key_path = [PRIVATE_KEY,\n      \"~/.vagrant.d/insecure_private_key\"]\n      ubuntu.vm.provision \"file\", source: PUBLIC_KEY, destination:\n      \"~/.ssh/authorized_keys\"\n\n      ubuntu.vm.provider \"virtualbox\" do |v|\n        v.memory = \"2024\"\n        v.cpus = \"2\"\n      end\n\n      ubuntu.vm.provider \"vmware_fusion\" do |v|\n        v.vmx[\"memsize\"] = \"2024\"\n        v.vmx[\"numvcpus\"] = \"2\"\n      end\n  end\n\nend\n```", "```\n$ vagrant up \n```", "```\n$ vagrant up --provider=vmware_fusion\n```", "```\nBringing machine 'centos' up with 'vmware_fusion' provider...\nBringing machine 'ubuntu' up with 'vmware_fusion' provider...\n==> centos: Cloning VMware VM: 'centos/7'. This can take some time...\n==> centos: Checking if box 'centos/7' is up to date...\n==> centos: Verifying vmnet devices are healthy...\n==> centos: Preparing network adapters...\n==> centos: Starting the VMware VM...\n==> centos: Waiting for the VM to receive an address...\n==> centos: Forwarding ports...\n centos: -- 22 => 2222\n==> centos: Waiting for machine to boot. This may take a few minutes...\n centos: SSH address: 127.0.0.1:2222\n centos: SSH username: vagrant\n centos: SSH auth method: private key\n==> centos: Machine booted and ready!\n==> centos: Setting hostname...\n==> centos: Configuring network adapters within the VM...\n centos: SSH address: 127.0.0.1:2222\n centos: SSH username: vagrant\n centos: SSH auth method: private key\n==> centos: Rsyncing folder: /Users/russ/lemp/ => /vagrant\n==> centos: Running provisioner: file...\n==> ubuntu: Cloning VMware VM: 'generic/ubuntu1704'. This can take some time...\n==> ubuntu: Checking if box 'generic/ubuntu1704' is up to date...\n==> ubuntu: Verifying vmnet devices are healthy...\n==> ubuntu: Preparing network adapters...\n==> ubuntu: Starting the VMware VM...\n==> ubuntu: Waiting for the VM to receive an address...\n==> ubuntu: Forwarding ports...\n ubuntu: -- 22 => 2222\n==> ubuntu: Waiting for machine to boot. This may take a few minutes...\n ubuntu: SSH address: 127.0.0.1:2222\n ubuntu: SSH username: vagrant\n ubuntu: SSH auth method: private key\n==> ubuntu: Machine booted and ready!\n==> ubuntu: Setting hostname...\n==> ubuntu: Configuring network adapters within the VM...\n==> ubuntu: Running provisioner: file...\n```", "```\n$ vagrant ssh centos\n$ vagrant ssh ubuntu\n```", "```\ncentos ansible_host=192.168.50.6.nip.io \nubuntu ansible_host=192.168.50.7.nip.io\n\n[wordpress]\ncentos\nubuntu\n\n[wordpress:vars]\nansible_connection=ssh\nansible_user=vagrant\nansible_private_key_file=~/.ssh/id_rsa\nhost_key_checking=False\n```", "```\n$ ansible -i production centos -m setup | grep ansible_os_family\n$ ansible -i production ubuntu -m setup | grep ansible_os_family\n```", "```\n$ ansible -i production ubuntu -m setup\n```", "```\n$ vagrant ssh ubuntu\n```", "```\nubuntu ansible_host=192.168.50.7.nip.io\n```", "```\nubuntu ansible_host=192.168.50.7.nip.io ansible_python_interpreter=/usr/bin/python3\n```", "```\n$ ansible -i production wordpress -m setup | grep ansible_os_family \n```", "```\n---\n\n- name: include the operating system specific variables\n  include_vars: \"{{ ansible_os_family }}.yml\"\n\n- name: install the stack on centos\n  import_tasks: install-centos.yml\n  when: ansible_os_family == 'RedHat'\n\n- name: install the stack on ubuntu\n  import_tasks: install-ubuntu.yml\n  when: ansible_os_family == 'Debian'\n```", "```\n---\n\nrepo_packages:\n  - \"deb [arch=amd64,i386] http://mirror.sax.uk.as61049.net/mariadb/repo/10.1/ubuntu {{ ansible_distribution_release }} main\"\n  - \"deb http://nginx.org/packages/mainline/ubuntu/ {{ ansible_distribution_release }} nginx\"\n  - \"deb-src http://nginx.org/packages/mainline/ubuntu/ {{ ansible_distribution_release }} nginx\"\n\nrepo_keys:\n  - { key_server: \"keyserver.ubuntu.com\", key: \"0xF1656F24C74CD1D8\" }\n\nrepo_keys_url:\n  - \"http://nginx.org/keys/nginx_signing.key\"\n\nsystem_packages:\n  - \"software-properties-common\"\n  - \"python3-mysqldb\"\n  - \"acl\"\n\nstack_packages:\n  - \"nginx\"\n  - \"mariadb-server\"\n  - \"php7.0\"\n  - \"php7.0-cli\"\n  - \"php7.0-fpm\"\n  - \"php7.0-gd\"\n  - \"php7.0-json\"\n  - \"php7.0-mbstring\"\n  - \"php7.0-mysqlnd\"\n  - \"php7.0-soap\"\n  - \"php7.0-xml\"\n  - \"php7.0-xmlrpc\"\n\nextra_packages:\n  - \"vim\"\n  - \"git\"\n  - \"unzip\"\n```", "```\n- name: update cache and install the system packages\n  apt:\n    name: \"{{ item }}\"\n    update_cache: \"yes\"\n  with_items: \"{{ system_packages }}\"\n```", "```\n- name: add the apt keys from a key server\n  apt_key:\n    keyserver: \"{{ item.key_server }}\"\n    id: \"{{ item.key }}\"\n  with_items: \"{{ repo_keys }}\"\n\n- name: add the apt keys from a URL\n  apt_key:\n    url: \"{{ item }}\"\n    state: present\n  with_items: \"{{ repo_keys_url }}\"\n```", "```\n- name: install the repo packages\n  apt_repository:\n    repo: \"{{ item }}\"\n    state: \"present\"\n    update_cache: \"yes\"\n  with_items: \"{{ repo_packages }}\"\n```", "```\n- name: install the stack packages\n  apt:\n    name: \"{{ item }}\"\n    state: \"installed\"\n  with_items: \"{{ stack_packages + extra_packages }}\"\n```", "```\n- name: include the operating system specific variables\n  include_vars: \"{{ ansible_os_family }}.yml\"\n```", "```\n---\n\nphp_fpm_path: \"/etc/php-fpm.d/www.conf\"\nphp_ini_path: /etc/php.ini\nphp_service_name: \"php-fpm\"\n```", "```\nphp_fpm_path: \"/etc/php/7.0/fpm/pool.d/www.conf\"\nphp_ini_path: \"/etc/php/7.0/fpm/php.ini\"\nphp_service_name: \"php7.0-fpm\"\n```", "```\n- name: add the wordpress group\n  group: \n    name: \"{{ wordpress_system.group }}\"\n    state: \"{{ wordpress_system.state }}\"\n```", "```\n- name: create the global directory in /etc/nginx/\n  file:\n    dest: \"/var/www/\"\n    state: \"directory\"\n    mode: \"0755\"\n```", "```\n- name: copy the www.conf to /etc/php-fpm.d/\n  template:\n    src: \"php-fpmd-www.conf.j2\"\n    dest: \"{{ php_fpm_path }}\"\n  notify: \"restart php-fpm\"\n\n- name: configure php.ini\n  lineinfile: \n    dest: \"{{ php_ini_path }}\"\n    regexp: \"{{ item.regexp }}\"\n    line: \"{{ item.replace }}\"\n    backup: \"yes\"\n    backrefs: \"yes\"\n  with_items: \"{{ php.ini }}\"\n  notify: \"restart php-fpm\"\n```", "```\n- name: \"restart php-fpm\"\n  service:\n    name: \"{{ php_service_name }}\"\n    state: \"restarted\"\n    enabled: \"yes\"\n```", "```\n- name: start php-fpm\n  service:\n    name: \"{{ php_service_name }}\"\n    state: \"started\"\n```", "```\n- name: configure the mariadb bind address\n  lineinfile: \n    dest: \"{{ mariadb.server_config }}\"\n    regexp: \"#bind-address=0.0.0.0\"\n    line: \"bind-address={{ mariadb.bind }}\"\n    backup: \"yes\"\n    backrefs: \"yes\"\n  when: ansible_os_family == 'RedHat'\n```", "```\n- name: set the selinux allowing httpd_t to be permissive is required\n  selinux_permissive:\n    name: httpd_t\n    permissive: true\n  when: selinux.http_permissive == true and ansible_os_family == 'RedHat'\n```", "```\nwordpress:\n  domain: \"http://{{ wordpress_domain }}/\"\n  title: \"WordPress installed by Ansible on {{ os_family }}\"\n```", "```\n- name: set a fact for the wordpress domain\n  set_fact:\n    wordpress_domain: \"{{ ansible_ssh_host }}\"\n    os_family: \"{{ ansible_os_family }}\"\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\nPLAY [wordpress]\n\nTASK [Gathering Facts]\nok: [centos]\nok: [ubuntu]\n\nTASK [roles/stack-install : include the operating system specific variables] \nok: [centos]\nok: [ubuntu]\n\nTASK [roles/stack-install : install the repo packages] \nskipping: [ubuntu] => (item=[])\nchanged: [centos] => (item=[u'epel-release', u'https://centos7.iuscommunity.org/ius-release.rpm'])\n\nTASK [roles/stack-install : add the NGINX mainline repo] \nskipping: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-install : update all of the installed packages] \nskipping: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-install : remove the packages so that they can be replaced] \nskipping: [ubuntu]\nchanged: [centos] => (item=[u'mariadb-libs.x86_64'])\n\nTASK [roles/stack-install : install the stack packages] \nskipping: [ubuntu] => (item=[])\nchanged: [centos] => (item=[u'postfix', u'MySQL-python', u'policycoreutils-python', u'nginx', u'mariadb101u', u'mariadb101u-server', u'mariadb101u-config', u'mariadb101u-common', u'mariadb101u-libs', u'php72u', u'php72u-bcmath', u'php72u-cli', u'php72u-common', u'php72u-dba', u'php72u-fpm', u'php72u-fpm-nginx', u'php72u-gd', u'php72u-intl', u'php72u-json', u'php72u-mbstring', u'php72u-mysqlnd', u'php72u-process', u'php72u-snmp', u'php72u-soap', u'php72u-xml', u'php72u-xmlrpc', u'vim-enhanced', u'git', u'unzip'])\n\nTASK [roles/stack-install : update cache and install the system packages] \nskipping: [centos] => (item=[])\nchanged: [ubuntu] => (item=[u'software-properties-common', u'python3-mysqldb', u'acl'])\n\nTASK [roles/stack-install : add the apt keys from a key server] \nskipping: [centos]\nchanged: [ubuntu] => (item={u'key_server': u'keyserver.ubuntu.com', u'key': u'0xF1656F24C74CD1D8'})\n\nTASK [roles/stack-install : add the apt keys from a URL] \nskipping: [centos]\nchanged: [ubuntu] => (item=http://nginx.org/keys/nginx_signing.key)\n\nTASK [roles/stack-install : install the repo packages] \nskipping: [centos] => (item=epel-release)\nskipping: [centos] => (item=https://centos7.iuscommunity.org/ius-release.rpm)\nchanged: [ubuntu] => (item=deb [arch=amd64,i386] http://mirror.sax.uk.as61049.net/mariadb/repo/10.1/ubuntu zesty main)\nchanged: [ubuntu] => (item=deb http://nginx.org/packages/mainline/ubuntu/ zesty nginx)\nchanged: [ubuntu] => (item=deb-src http://nginx.org/packages/mainline/ubuntu/ zesty nginx)\n\nTASK [roles/stack-install : install the stack packages] \nskipping: [centos] => (item=[])\nchanged: [ubuntu] => (item=[u'nginx', u'mariadb-server', u'php7.0', u'php7.0-cli', u'php7.0-fpm', u'php7.0-gd', u'php7.0-json', u'php7.0-mbstring', u'php7.0-mysqlnd', u'php7.0-soap', u'php7.0-xml', u'php7.0-xmlrpc', u'vim', u'git', u'unzip'])\n\nTASK [roles/stack-config : include the operating system specific variables] \nok: [centos]\nok: [ubuntu]\n\nTASK [roles/stack-config : add the wordpress group] \nok: [centos]\n\nTASK [roles/stack-config : create the global directory in /etc/nginx/] \nchanged: [ubuntu]\nok: [centos]\n\nTASK [roles/stack-config : add the wordpress user] \nchanged: [centos]\nchanged: [ubuntu]\n\nTASK [roles/stack-config : copy the nginx.conf to /etc/nginx/] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : create the global directory in /etc/nginx/] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : copy the restrictions.conf to /etc/nginx/global/] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : copy the wordpress_shared.conf to /etc/nginx/global/] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : copy the default.conf to /etc/nginx/conf.d/] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : copy the www.conf to /etc/php-fpm.d/] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : configure php.ini] \nchanged: [ubuntu] => (item={u'regexp': u'^;date.timezone =', u'replace': u'date.timezone = Europe/London'})\nchanged: [centos] => (item={u'regexp': u'^;date.timezone =', u'replace': u'date.timezone = Europe/London'})\nok: [ubuntu] => (item={u'regexp': u'^expose_php = On', u'replace': u'expose_php = Off'})\nchanged: [centos] => (item={u'regexp': u'^expose_php = On', u'replace': u'expose_php = Off'})\nchanged: [ubuntu] => (item={u'regexp': u'^upload_max_filesize = 2M', u'replace': u'upload_max_filesize = 20M'})\nchanged: [centos] => (item={u'regexp': u'^upload_max_filesize = 2M', u'replace': u'upload_max_filesize = 20M'})\n\nTASK [roles/stack-config : start php-fpm] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : start nginx] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : configure the mariadb bind address] \nskipping: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : start mariadb] \nok: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : change mysql root password] \nchanged: [centos] => (item=127.0.0.1)\nchanged: [ubuntu] => (item=127.0.0.1)\nchanged: [centos] => (item=::1)\nchanged: [ubuntu] => (item=::1)\nchanged: [ubuntu] => (item=192)\nchanged: [centos] => (item=192.168.50.6.nip.io)\nchanged: [ubuntu] => (item=localhost)\nchanged: [centos] => (item=localhost)\n\nTASK [roles/stack-config : set up .my.cnf file] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : delete anonymous MySQL user] \nok: [ubuntu] => (item=127.0.0.1)\nok: [centos] => (item=127.0.0.1)\nok: [ubuntu] => (item=::1)\nok: [centos] => (item=::1)\nok: [ubuntu] => (item=192)\nchanged: [centos] => (item=192.168.50.6.nip.io)\nok: [ubuntu] => (item=localhost)\nchanged: [centos] => (item=localhost)\n\nTASK [roles/stack-config : remove the MySQL test database] \nok: [ubuntu]\nchanged: [centos]\n\nTASK [roles/stack-config : set the selinux allowing httpd_t to be permissive is required] \nskipping: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : set a fact for the wordpress domain] \nok: [centos]\nok: [ubuntu]\n\nTASK [roles/wordpress : download wp-cli] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : update permissions of wp-cli to allow anyone to execute it] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : create the wordpress database] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : create the user for the wordpress database] \nchanged: [ubuntu] => (item=127.0.0.1)\nchanged: [centos] => (item=127.0.0.1)\nok: [ubuntu] => (item=::1)\nok: [centos] => (item=::1)\nok: [ubuntu] => (item=192)\nok: [centos] => (item=192.168.50.6.nip.io)\nok: [ubuntu] => (item=localhost)\nok: [centos] => (item=localhost)\n\nTASK [roles/wordpress : are the wordpress files already there?] \nok: [ubuntu]\nok: [centos]\n\nTASK [roles/wordpress : download wordpresss] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : set the correct permissions on the homedir] \nok: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : is wordpress already configured?] \nok: [centos]\nok: [ubuntu]\n\nTASK [roles/wordpress : configure wordpress] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : do we need to install wordpress?] \nfatal: [ubuntu]: FAILED! => \n...ignoring\nfatal: [centos]: FAILED! => \n...ignoring\n\nTASK [roles/wordpress : install wordpress if needed] \nchanged: [ubuntu]\nchanged: [centos]\n\nTASK [roles/wordpress : do we need to install the plugins?] \nfailed: [ubuntu] (item=jetpack) => \nfailed: [ubuntu] (item=wp-super-cache) => \nfailed: [ubuntu] (item=wordpress-seo) => \nfailed: [centos] (item=jetpack) => \nfailed: [ubuntu] (item=wordfence) => \nfailed: [centos] (item=wp-super-cache) => \nfailed: [ubuntu] (item=nginx-helper) => \nfailed: [centos] (item=wordpress-seo) => \nfailed: [centos] (item=wordfence) => \nfailed: [centos] (item=nginx-helper) =>\n\nTASK [roles/wordpress : set a fact if we don't need to install the plugins] \nskipping: [centos]\nskipping: [ubuntu]\n\nTASK [roles/wordpress : set a fact if we need to install the plugins] \nok: [centos]\nok: [ubuntu]\n\nTASK [roles/wordpress : install the plugins if we need to or ignore if not] \nchanged: [centos] => (item=jetpack)\nchanged: [ubuntu] => (item=jetpack)\nchanged: [ubuntu] => (item=wp-super-cache)\nchanged: [centos] => (item=wp-super-cache)\nchanged: [ubuntu] => (item=wordpress-seo)\nchanged: [centos] => (item=wordpress-seo)\nchanged: [ubuntu] => (item=wordfence)\nchanged: [centos] => (item=wordfence)\nchanged: [ubuntu] => (item=nginx-helper)\nchanged: [centos] => (item=nginx-helper)\n\nTASK [roles/wordpress : do we need to install the theme?] \nfatal: [centos]: FAILED! => \nfatal: [ubuntu]: FAILED! =>\n\nTASK [roles/wordpress : set a fact if we don't need to install the theme] \nskipping: [centos]\nskipping: [ubuntu]\n\nTASK [roles/wordpress : set a fact if we need to install the theme] \nok: [centos]\nok: [ubuntu]\n\nTASK [roles/wordpress : install the theme if we need to or ignore if not] \nchanged: [centos]\nchanged: [ubuntu]\n\nRUNNING HANDLER [roles/stack-config : restart nginx] \nchanged: [ubuntu]\nchanged: [centos]\n\nRUNNING HANDLER [roles/stack-config : restart php-fpm] \nchanged: [ubuntu]\nchanged: [centos]\n\nPLAY RECAP \ncentos : ok=47 changed=37 unreachable=0 failed=0\nubuntu : ok=45 changed=33 unreachable=0 failed=0\n```", "```\n$ vagrant destroy\n```"]