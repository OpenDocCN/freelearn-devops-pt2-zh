["```\n$ mkdir vyos vyos/group_vars vyos/roles\n$ ansible-galaxy init vyos/roles/vyos-firewall\n$ touch vyos/Vagrantfile\n$ touch vyos/production\n$ touch vyos/site.yml\n$ touch vyos/group_vars/common.yml\n$ touch vyos/roles/vyos-firewall/templates/firewall.j2 \n```", "```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nAPI_VERSION = \"2\"\nBOX_NAME    = \"russmckendrick/vyos\"\nBOX_IP      = \"192.168.50.10\"\nDOMAIN      = \"nip.io\"\nPRIVATE_KEY = \"~/.ssh/id_rsa\"\nPUBLIC_KEY  = '~/.ssh/id_rsa.pub'\n\nVagrant.configure(API_VERSION) do |config|\n  config.vm.box = BOX_NAME\n  config.vm.network \"private_network\", ip: BOX_IP\n  config.vm.host_name = BOX_IP + '.' + DOMAIN\n  config.ssh.insert_key = false\n  config.ssh.private_key_path = [PRIVATE_KEY, \"~/.vagrant.d/insecure_private_key\"]\n  config.vm.provision \"file\", source: PUBLIC_KEY, destination: \"~/.ssh/authorized_keys\"\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = \"2024\"\n    v.cpus = \"2\"\n  end\n\n  config.vm.provider \"vmware_fusion\" do |v|\n    v.vmx[\"memsize\"] = \"2024\"\n```", "```\n    v.vmx[\"numvcpus\"] = \"2\"\n  end\n\nend\n```", "```\n---\n\nmotd_asciiart: |\n  -----------------------------\n\n  VyOS Ansible Managed Firewall \n\n  -----------------------------\n\nvyos_nameservers:\n  - 8.8.8.8\n  - 8.8.4.4\n```", "```\n---\n\nvyos:\n  host: \"192.168.50.10.nip.io\"\n  username: \"vagrant\"\n  backup: \"yes\"\n  inside:\n    interface: \"172.16.20.1/24\"\n    subnet: \"172.16.20.0/24\"\n\nwhitelist_ips:\n  - 172.16.20.2\n\nrules:\n    - { action: 'set', source_address: '0.0.0.0/0', source_port: '80', destination_port: '80', destination_address: '172.16.20.11', protocol: 'tcp', description: 'NAT port 80 to 172.16.10.11', rule_number: '10' }\n    - { action: 'set', source_address: '0.0.0.0/0', source_port: '443', destination_port: '443', destination_address: '172.16.20.11', protocol: 'tcp', description: 'NAT port 443 to 172.16.10.11', rule_number: '20' }\n    - { action: 'set', source_address: '123.123.123.123/32', source_port: '222', destination_port: '22', destination_address: '172.16.20.11', protocol: 'tcp', description: 'NAT port 443 to 172.16.10.11', rule_number: '30' }\n```", "```\nlocalhost\n```", "```\n- name: set the hostname correctly\n  vyos_config:\n    provider:\n      host: \"{{ vyos.host }}\"\n      username: \"{{ vyos.username }}\"\n    lines:\n      - \"set system host-name {{ vyos.host }}\"\n```", "```\n- name: configure name servers\n  vyos_system:\n    provider:\n      host: \"{{ vyos.host }}\"\n      username: \"{{ vyos.username }}\"\n    name_server: \"{{ item }}\"\n  with_items: \"{{ vyos_nameservers }}\"\n```", "```\n- name: configure the motd\n  vyos_banner:\n    provider:\n      host: \"{{ vyos.host }}\"\n      username: \"{{ vyos.username }}\"\n    banner: \"post-login\"\n    state: \"present\"\n    text: \"{{ motd_asciiart }}\"\n```", "```\n- name: backup and load from file\n  vyos_config:\n    provider:\n      host: \"{{ vyos.host }}\"\n      username: \"{{ vyos.username }}\"\n    src: \"firewall.j2\"\n    backup: \"{{ vyos.backup }}\"\n    save: \"yes\"\n```", "```\nset firewall all-ping 'enable'\nset firewall broadcast-ping 'disable'\nset firewall ipv6-receive-redirects 'disable'\nset firewall ipv6-src-route 'disable'\nset firewall ip-src-route 'disable'\nset firewall log-martians 'enable'\nset firewall receive-redirects 'disable'\nset firewall send-redirects 'enable'\nset firewall source-validation 'disable'\nset firewall state-policy established action 'accept'\nset firewall state-policy related action 'accept'\nset firewall syn-cookies 'enable'\nset firewall name OUTSIDE-IN default-action 'drop'\nset firewall name OUTSIDE-IN description 'deny traffic from internet'\n{% for item in whitelist_ips %}\nset firewall group address-group SSH-ACCESS address {{ item }}\n{% endfor %}\nset firewall name OUTSIDE-LOCAL rule 310 source group address-group SSH-ACCESS\nset firewall name OUTSIDE-LOCAL default-action 'drop'\nset firewall name OUTSIDE-LOCAL rule 310 action 'accept'\nset firewall name OUTSIDE-LOCAL rule 310 destination port '22'\nset firewall name OUTSIDE-LOCAL rule 310 protocol 'tcp'\nset firewall name OUTSIDE-LOCAL rule 900 action 'accept'\nset firewall name OUTSIDE-LOCAL rule 900 description 'allow icmp'\nset firewall name OUTSIDE-LOCAL rule 900 protocol 'icmp'\nset firewall receive-redirects 'disable'\nset firewall send-redirects 'enable'\nset firewall source-validation 'disable'\nset firewall state-policy established action 'accept'\nset firewall state-policy related action 'accept'\nset firewall syn-cookies 'enable'\nset interfaces ethernet eth0 firewall in name 'OUTSIDE-IN'\nset interfaces ethernet eth0 firewall local name 'OUTSIDE-LOCAL'\nset interfaces ethernet eth1 address '{{ vyos.inside.interface }}'\nset interfaces ethernet eth1 description 'INSIDE'\nset interfaces ethernet eth1 duplex 'auto'\nset interfaces ethernet eth1 speed 'auto'\nset nat source rule 100 outbound-interface 'eth0'\nset nat source rule 100 source address '{{ vyos.inside.subnet }}'\nset nat source rule 100 translation address 'masquerade'\n{% for item in rules if item.action == \"set\" %}\n{{ item.action }} nat destination rule {{ item.rule_number }} description '{{ item.description }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} destination port '{{ item.source_port }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} translation port '{{ item.destination_port }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} inbound-interface 'eth0'\n{{ item.action }} nat destination rule {{ item.rule_number }} protocol '{{ item.protocol }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} translation address '{{ item.destination_address }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} action 'accept'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} source address '{{ item.source_address }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} destination address '{{ item.destination_address }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} destination port '{{ item.destination_port }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} protocol '{{ item.protocol }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} state new 'enable'\n{% endfor %}\n{% for item in rules if item.action == \"delete\" %}\n{{ item.action }} nat destination rule {{ item.rule_number }}\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }}\n{% endfor %}\n```", "```\n{% for item in whitelist_ips %}\nset firewall group address-group SSH-ACCESS address {{ item }}\n{% endfor %}\n```", "```\n{% for item in rules if item.action == \"set\" %}\n{{ item.action }} nat destination rule {{ item.rule_number }} description '{{ item.description }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} destination port '{{ item.source_port }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} translation port '{{ item.destination_port }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} inbound-interface 'eth0'\n{{ item.action }} nat destination rule {{ item.rule_number }} protocol '{{ item.protocol }}'\n{{ item.action }} nat destination rule {{ item.rule_number }} translation address '{{ item.destination_address }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} action 'accept'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} source address '{{ item.source_address }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} destination address '{{ item.destination_address }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} destination port '{{ item.destination_port }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} protocol '{{ item.protocol }}'\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }} state new 'enable'\n{% endfor %}\n```", "```\n{% for item in rules if item.action == \"delete\" %}\n{{ item.action }} nat destination rule {{ item.rule_number }}\n{{ item.action }} firewall name OUTSIDE-IN rule {{ item.rule_number }}\n{% endfor %}\n```", "```\n---\n\n- hosts: localhost\n  connection: local\n  gather_facts: false\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/vyos-firewall\n```", "```\n$ vagrant up\n$ vagrant up --provider=vmware_fusion\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\nPLAY [localhost] ***********************************************************************************\n\nTASK [roles/vyos-firewall : set the hostname correctly] ********************************************\nchanged: [localhost]\n\nTASK [roles/vyos-firewall : configure name servers] ************************************************\nchanged: [localhost] => (item=8.8.8.8)\nchanged: [localhost] => (item=8.8.4.4)\n\nTASK [roles/vyos-firewall : configure the motd] ****************************************************\nchanged: [localhost]\n\nTASK [roles/vyos-firewall : backup and load from file] *********************************************\nchanged: [localhost]\n\nPLAY RECAP *****************************************************************************************\nlocalhost : ok=4 changed=4 unreachable=0 failed=0\n```", "```\n$ vagrant ssh\n```", "```\n$ show config\n```", "```\n$ vagrant destroy\n```"]