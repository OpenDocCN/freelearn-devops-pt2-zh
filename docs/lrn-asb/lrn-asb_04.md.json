["```\n$ mkdir lamp\n$ cd lamp\n```", "```\n$ mkdir group_vars\n$ touch group_vars/common.yml\n```", "```\n$ touch production\n**$ touch site.yml** \n```", "```\n$ mkdir roles $ ansible-galaxy init roles/common\n```", "```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nAPI_VERSION = \"2\"\nBOX_NAME    = \"centos/7\"\nBOX_IP      = \"192.168.50.4\"\nDOMAIN      = \"nip.io\"\nPRIVATE_KEY = \"~/.ssh/id_rsa\"\nPUBLIC_KEY  = '~/.ssh/id_rsa.pub'\n\nVagrant.configure(API_VERSION) do |config|\n  config.vm.box = BOX_NAME\n  config.vm.network \"private_network\", ip: BOX_IP\n  config.vm.host_name = BOX_IP + '.' + DOMAIN\n  config.ssh.insert_key = false\n  config.ssh.private_key_path = [PRIVATE_KEY,\n  \"~/.vagrant.d/insecure_private_key\"]\n  config.vm.provision \"file\", source: PUBLIC_KEY,\n  destination: \"~/.ssh/authorized_keys\"\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = \"2024\"\n    v.cpus = \"2\"\n  end\n\n  config.vm.provider \"vmware_fusion\" do |v|\n    v.vmx[\"memsize\"] = \"2024\"\n    v.vmx[\"numvcpus\"] = \"2\"\n  end\n\nend\n```", "```\n- name: update all of the installed packages\n  yum:\n    name: \"*\"\n    state: \"latest\"\n    update_cache: \"yes\"\n```", "```\n- name: install the common packages\n  yum:\n    name: \"{{ item }}\"\n    state: \"installed\"\n  with_items: \"{{ common_packages }}\"\n```", "```\ncommon_packages:\n  - \"ntp\"\n  - \"ntpdate\"\n  - \"vim-enhanced\"\n  - \"git\"\n  - \"unzip\"\n  - \"policycoreutils-python\"\n  - \"epel-release\"\n  - \"https://centos7.iuscommunity.org/ius-release.rpm\"\n```", "```\n- name: copy the ntp.conf to /etc/ntp.conf\n  template:\n    src: \"ntp.conf.j2\"\n    dest: \"/etc/ntp.conf\"\n  notify: \"restart ntp\"\n```", "```\n# {{ ansible_managed }}\ndriftfile /var/lib/ntp/drift\nrestrict default nomodify notrap nopeer noquery\nrestrict 127.0.0.1 \nrestrict ::1\n{% for item in ntp_servers %}\nserver {{ item }} iburst\n{% endfor %}\nincludefile /etc/ntp/crypto/pw\nkeys /etc/ntp/keys\ndisable monitor\n```", "```\nntp_servers:\n  - \"0.centos.pool.ntp.org\"\n  - \"1.centos.pool.ntp.org\"\n  - \"2.centos.pool.ntp.org\"\n  - \"3.centos.pool.ntp.org\"\n```", "```\n- name: \"restart ntp\"\n  service:\n    name: \"ntpd\"\n    state: \"restarted\"\n```", "```\nusers:\n  - { name: \"lamp\", group: \"lamp\", state: \"present\", key: \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\" }\n```", "```\n- name: add group for our users\n  group:\n    name: \"{{ item.group }}\"\n    state: \"{{ item.state }}\"\n  with_items: \"{{ users }}\"\n```", "```\n- name: add users to our group\n  user: \n    name: \"{{ item.name }}\"\n    group: \"{{ item.group }}\"\n    comment: \"{{ item.name }}\"\n    state: \"{{ item.state }}\"\n  with_items: \"{{ users }}\"\n```", "```\n- name: add keys to our users\n  authorized_key:\n    user: \"{{ item.name }}\"\n    key: \"{{ item.key }}\"\n  with_items: \"{{ users }}\"\n```", "```\n$ vagrant up\n$ vagrant up --provider=vmware_fusion\n```", "```\nbox ansible_host=192.168.50.4.nip.io\n\n[boxes]\nbox\n\n[boxes:vars]\nansible_connection=ssh\nansible_user=vagrant\nansible_private_key_file=~/.ssh/id_rsa\nhost_key_checking=False\n```", "```\n---\n\n- hosts: boxes\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/common\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\nPLAY [boxes] ***************************************************************************************\n\nTASK [Gathering Facts] *****************************************************************************\nok: [box]\n\nTASK [roles/common : update all of the installed packages] *****************************************\nchanged: [box]\n\nTASK [roles/common : install the common packages] **************************************************\nchanged: [box] => (item=[u'ntp', u'ntpdate', u'vim-enhanced', u'git', u'unzip', u'policycoreutils-python', u'epel-release', u'https://centos7.iuscommunity.org/ius-release.rpm'])\n\nTASK [roles/common : copy the ntp.conf to /etc/ntp.conf] *******************************************\nchanged: [box]\n\nTASK [roles/common : add group for our users] ******************************************************\nchanged: [box] => (item={u'state': u'present', u'group': u'lamp', u'name': u'lamp', u'key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmuoFR01i/Yf3HATl9c3sufJvghTFgYzK/Zt29JiTqWlSQhmXhNNTh6iI6nXuPVhQGQaciWbqya6buncQ3vecISx6+EwsAmY3Mwpz1a/eMiXOgO/zn6Uf79dXcMN2JwpLFoON1f9PR0/DTpEkjwqb+eNLw9ThjH0J994+Pev+m8OrqgReFW36a/kviUYKsHxkXmkgxtPJgwKU90STNab4qyfKEGhi2w/NzECgseeQYs1H3klORaHQybhpXkoCIMmgy9gnzSH7oa2mJqKilVed27xoirkXzWPaAQlfiEE1iup+2xMqWY6Jl9qb8tJHRS+l8UcxTMNaWsQkTysLTgBAZ russmckendrick@me.com'})\n\nTASK [roles/common : add users to our group] *******************************************************\nchanged: [box] => (item={u'state': u'present', u'group': u'lamp', u'name': u'lamp', u'key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmuoFR01i/Yf3HATl9c3sufJvghTFgYzK/Zt29JiTqWlSQhmXhNNTh6iI6nXuPVhQGQaciWbqya6buncQ3vecISx6+EwsAmY3Mwpz1a/eMiXOgO/zn6Uf79dXcMN2JwpLFoON1f9PR0/DTpEkjwqb+eNLw9ThjH0J994+Pev+m8OrqgReFW36a/kviUYKsHxkXmkgxtPJgwKU90STNab4qyfKEGhi2w/NzECgseeQYs1H3klORaHQybhpXkoCIMmgy9gnzSH7oa2mJqKilVed27xoirkXzWPaAQlfiEE1iup+2xMqWY6Jl9qb8tJHRS+l8UcxTMNaWsQkTysLTgBAZ russmckendrick@me.com'})\n\nTASK [roles/common : add keys to our users] ********************************************************\nchanged: [box] => (item={u'state': u'present', u'group': u'lamp', u'name': u'lamp', u'key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmuoFR01i/Yf3HATl9c3sufJvghTFgYzK/Zt29JiTqWlSQhmXhNNTh6iI6nXuPVhQGQaciWbqya6buncQ3vecISx6+EwsAmY3Mwpz1a/eMiXOgO/zn6Uf79dXcMN2JwpLFoON1f9PR0/DTpEkjwqb+eNLw9ThjH0J994+Pev+m8OrqgReFW36a/kviUYKsHxkXmkgxtPJgwKU90STNab4qyfKEGhi2w/NzECgseeQYs1H3klORaHQybhpXkoCIMmgy9gnzSH7oa2mJqKilVed27xoirkXzWPaAQlfiEE1iup+2xMqWY6Jl9qb8tJHRS+l8UcxTMNaWsQkTysLTgBAZ russmckendrick@me.com'})\n\nRUNNING HANDLER [roles/common : restart ntp] *******************************************************\nchanged: [box]\n\nPLAY RECAP *****************************************************************************************\nbox : ok=8 changed=7 unreachable=0 failed=0\n```", "```\nPLAY [boxes] ***************************************************************************************\n\nTASK [Gathering Facts] *****************************************************************************\nok: [box]\n\nTASK [roles/common : update all of the installed packages] *****************************************\nok: [box]\n\nTASK [roles/common : install the common packages] **************************************************\nok: [box] => (item=[u'ntp', u'ntpdate', u'vim-enhanced', u'git', u'unzip', u'policycoreutils-python', u'epel-release', u'https://centos7.iuscommunity.org/ius-release.rpm'])\n\nTASK [roles/common : copy the ntp.conf to /etc/ntp.conf] *******************************************\nok: [box]\n\nTASK [roles/common : add group for our users] ******************************************************\nok: [box] => (item={u'state': u'present', u'group': u'lamp', u'name': u'lamp', u'key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmuoFR01i/Yf3HATl9c3sufJvghTFgYzK/Zt29JiTqWlSQhmXhNNTh6iI6nXuPVhQGQaciWbqya6buncQ3vecISx6+EwsAmY3Mwpz1a/eMiXOgO/zn6Uf79dXcMN2JwpLFoON1f9PR0/DTpEkjwqb+eNLw9ThjH0J994+Pev+m8OrqgReFW36a/kviUYKsHxkXmkgxtPJgwKU90STNab4qyfKEGhi2w/NzECgseeQYs1H3klORaHQybhpXkoCIMmgy9gnzSH7oa2mJqKilVed27xoirkXzWPaAQlfiEE1iup+2xMqWY6Jl9qb8tJHRS+l8UcxTMNaWsQkTysLTgBAZ russmckendrick@me.com'})\n\nTASK [roles/common : add users to our group] *******************************************************\nok: [box] => (item={u'state': u'present', u'group': u'lamp', u'name': u'lamp', u'key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmuoFR01i/Yf3HATl9c3sufJvghTFgYzK/Zt29JiTqWlSQhmXhNNTh6iI6nXuPVhQGQaciWbqya6buncQ3vecISx6+EwsAmY3Mwpz1a/eMiXOgO/zn6Uf79dXcMN2JwpLFoON1f9PR0/DTpEkjwqb+eNLw9ThjH0J994+Pev+m8OrqgReFW36a/kviUYKsHxkXmkgxtPJgwKU90STNab4qyfKEGhi2w/NzECgseeQYs1H3klORaHQybhpXkoCIMmgy9gnzSH7oa2mJqKilVed27xoirkXzWPaAQlfiEE1iup+2xMqWY6Jl9qb8tJHRS+l8UcxTMNaWsQkTysLTgBAZ russmckendrick@me.com'})\n\nTASK [roles/common : add keys to our users] ********************************************************\nok: [box] => (item={u'state': u'present', u'group': u'lamp', u'name': u'lamp', u'key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmuoFR01i/Yf3HATl9c3sufJvghTFgYzK/Zt29JiTqWlSQhmXhNNTh6iI6nXuPVhQGQaciWbqya6buncQ3vecISx6+EwsAmY3Mwpz1a/eMiXOgO/zn6Uf79dXcMN2JwpLFoON1f9PR0/DTpEkjwqb+eNLw9ThjH0J994+Pev+m8OrqgReFW36a/kviUYKsHxkXmkgxtPJgwKU90STNab4qyfKEGhi2w/NzECgseeQYs1H3klORaHQybhpXkoCIMmgy9gnzSH7oa2mJqKilVed27xoirkXzWPaAQlfiEE1iup+2xMqWY6Jl9qb8tJHRS+l8UcxTMNaWsQkTysLTgBAZ russmckendrick@me.com'})\n\nPLAY RECAP *****************************************************************************************\nbox : ok=7    changed=0    unreachable=0    failed=0\n```", "```\n$ ansible-galaxy init roles/apache\n```", "```\n- name: install the apache packages\n  yum:\n    name: \"{{ item }}\"\n    state: \"installed\"\n  with_items: \"{{ apache_packages }}\"\n```", "```\napache_packages:\n  - \"httpd24u\"\n  - \"httpd24u-filesystem\"\n  - \"httpd24u-tools\"\n  - \"httpd24u-mod_ssl\"\n  - \"openssl\"\n  - \"openssl-libs\"\n```", "```\n- name: Add user to apache group\n  user:\n    name: \"{{ item.name }}\"\n    groups: \"{{ apache_group }}\"\n    append: yes\n  with_items: \"{{ users }}\"\n```", "```\napache_group: \"apache\"\n```", "```\n- name: create the document root for our website\n  file:\n    dest: \"{{ document_root }}\"\n    state: \"directory\"\n    mode: \"0755\"\n    owner: \"{{ users.0.name }}\"\n    group: \"{{ apache_group }}\"\n```", "```\nweb_root: \"web\"\ndocument_root: \"/home/{{ users.0.name }}/{{ web_root }}\"\n```", "```\n- name: set the permissions on the user folder\n  file:\n    dest: \"/home/{{ users.0.name }}/\"\n    state: \"directory\"\n    mode: \"0755\"\n    owner: \"{{ users.0.name }}\"\n```", "```\n# {{ ansible_managed }}\n<VirtualHost *:80>\n  ServerName {{ ansible_nodename }}\n  DocumentRoot {{ document_root }}\n  DirectoryIndex {{ index_file }}\n  <Directory {{ document_root }}>\n    AllowOverride All\n    Require all granted\n  </Directory>\n</VirtualHost>\n```", "```\nindex_file: index.html\n```", "```\n- name: copy the vhost.conf to /etc/httpd/conf.d/\n  template:\n    src: \"vhost.conf.j2\"\n    dest: \"/etc/httpd/conf.d/vhost.conf\"\n  notify: \"restart httpd\"\n```", "```\n- name: \"restart httpd\"\n  service:\n    name: \"httpd\"\n    state: \"restarted\"\n```", "```\n- name: set the selinux allowing httpd_t to be permissive\n  selinux_permissive:\n    name: httpd_t\n    permissive: true\n```", "```\n- name: copy the test HTML page to the document root\n  template:\n    src: \"index.html.j2\"\n    dest: \"{{ document_root }}/index.html\"\n    mode: \"0644\"\n    owner: \"{{ users.0.name }}\"\n    group: \"{{ apache_group }}\"\n  when: html_deploy == true\n```", "```\n<!--{{ ansible_managed }}-->\n<!doctype html>\n<title>{{ html_heading }}</title>\n<style>\n  body { text-align: center; padding: 150px; }\n  h1 { font-size: 50px; }\n  body { font: 20px Helvetica, sans-serif; color: #333; }\n  article { display: block; text-align: left; width: 650px;\n   margin: 0 auto; }\n</style>\n<article>\n    <h1>{{ html_heading }}</h1>\n    <div>\n        <p>{{ html_body }}</p>\n    </div>\n</article>\n```", "```\nhtml_deploy: true\nhtml_heading: \"Success !!!\"\nhtml_body: |\n  This HTML page has been deployed using Ansible to\n   <b>{{ ansible_nodename }}</b>.<br>\n  The user is <b>{{ users.0.name }}</b> who is in the\n   <b>{{ apache_group }}</b> group.<br>\n  The weboot is <b>{{ document_root }}</b>, the default index file is\n   <b>{{ index_file }}</b>.<br>\n```", "```\nwhen: html_deploy == true\n```", "```\n---\n\n- hosts: boxes\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/common\n    - roles/apache\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\nPLAY [boxes] ***************************************************************************************\n\nTASK [Gathering Facts] *****************************************************************************\nok: [box]\n\nTASK [roles/common : update all of the installed packages] *****************************************\nok: [box]\n\nTASK [roles/common : install the common packages] **************************************************\nok: [box]\n\nTASK [roles/common : copy the ntp.conf to /etc/ntp.conf] *******************************************\nok: [box]\n\nTASK [roles/common : add group for our users] ******************************************************\nok: [box]\nTASK [roles/common : add users to our group] *******************************************************\nok: [box]\n\nTASK [roles/common : add keys to our users] ********************************************************\nok: [box]\n\nTASK [roles/apache : install the apache packages] **************************************************\nchanged: [box] => (item=[u'httpd24u', u'httpd24u-filesystem', u'httpd24u-tools', u'httpd24u-mod_ssl', u'openssl', u'openssl-libs'])\n\nTASK [roles/apache : Add user to apache group] *****************************************************\nchanged: [box] => (item={u'state': u'present', u'group': u'lamp', u'name': u'lamp', u'key': u'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmuoFR01i/Yf3HATl9c3sufJvghTFgYzK/Zt29JiTqWlSQhmXhNNTh6iI6nXuPVhQGQaciWbqya6buncQ3vecISx6+EwsAmY3Mwpz1a/eMiXOgO/zn6Uf79dXcMN2JwpLFoON1f9PR0/DTpEkjwqb+eNLw9ThjH0J994+Pev+m8OrqgReFW36a/kviUYKsHxkXmkgxtPJgwKU90STNab4qyfKEGhi2w/NzECgseeQYs1H3klORaHQybhpXkoCIMmgy9gnzSH7oa2mJqKilVed27xoirkXzWPaAQlfiEE1iup+2xMqWY6Jl9qb8tJHRS+l8UcxTMNaWsQkTysLTgBAZ russmckendrick@me.com'})\n\nTASK [roles/apache : create the document root for our website] *************************************\nchanged: [box]\n\nTASK [roles/apache : set the permissions on the user folder] ***************************************\nchanged: [box]\n\nTASK [roles/apache : copy the vhost.conf to /etc/httpd/conf.d/] ************************************\nchanged: [box]\n\nTASK [roles/apache : set the selinux allowing httpd_t to be permissive] ****************************\nchanged: [box]\n\nTASK [roles/apache : copy the test HTML page to the document root] *********************************\nchanged: [box]\n\nRUNNING HANDLER [roles/apache : restart httpd] *****************************************************\nchanged: [box]\n\nPLAY RECAP *****************************************************************************************\nbox : ok=15 changed=8 unreachable=0 failed=0\n```", "```\n<!--Ansible managed-->\n<!doctype html>\n<title>Success !!!</title>\n<style>\n  body { text-align: center; padding: 150px; }\n  h1 { font-size: 50px; }\n  body { font: 20px Helvetica, sans-serif; color: #333; }\n  article { display: block; text-align: left; width: 650px;\n    margin: 0 auto; }\n</style>\n<article>\n  <h1>Success !!!</h1>\n  <div>\n    <p>This HTML page has been deployed using Ansible to\n    <b>192.168.50.4.nip.io</b>.<br>\n    The user is <b>lamp</b> who is in the <b>apache</b> group.<br>\n    The weboot is <b>/home/lamp/web</b>, the default index file is\n    <b>index.html</b>.<br></p>\n  </div>\n</article>\n```", "```\nPLAY RECAP *****************************************************************************************\nbox : ok=14 changed=0 unreachable=0 failed=0\n```", "```\n$ ansible-galaxy init roles/mariadb\n```", "```\n- name: remove the packages so that they can be replaced\n  yum:\n    name: \"{{ item }}\"\n    state: \"absent\"\n  with_items: \"{{ mariadb_packages_remove }}\"\n```", "```\nmariadb_packages_remove:\n  - \"mariadb-libs.x86_64\"\n```", "```\n- name: install the mariadb packages\n  yum:\n    name: \"{{ item }}\"\n    state: \"installed\"\n  with_items: \"{{ mariadb_packages }}\"\n```", "```\nmariadb_packages:\n  - \"mariadb101u\"\n  - \"mariadb101u-server\"\n  - \"mariadb101u-config\"\n  - \"mariadb101u-common\"\n  - \"mariadb101u-libs\"\n  - \"MySQL-python\"\n  - \"postfix\"\n```", "```\n- name: start mariadb\n  service:\n    name: \"mariadb\"\n    state: \"started\"\n    enabled: \"yes\"\n```", "```\n- name: change mysql root password\n  mysql_user:\n    name: \"{{ mariadb_root_username }}\" \n    host: \"{{ item }}\" \n    password: \"{{ mariadb_root_password }}\"\n    check_implicit_admin: \"yes\"\n    priv: \"*.*:ALL,GRANT\"\n  with_items: \"{{ mariadb_hosts }}\"\n```", "```\nmariadb_root_username: \"root\"\nmariadb_root_password: \"Pa55W0rd123\"\nmariadb_hosts:\n  - \"127.0.0.1\"\n  - \"::1\"\n  - \"{{ ansible_nodename }}\"\n  - \"%\"\n  - \"localhost\"\n```", "```\n- name: set up .my.cnf file\n  template:\n    src: \"my.cnf.j2\"\n    dest: \"~/.my.cnf\"\n```", "```\n# {{ ansible_managed }}\n[client]\npassword='{{ mariadb_root_password }}'\n```", "```\n- name: delete anonymous MySQL user\n  mysql_user:\n    user: \"\"\n    host: \"{{ item }}\"\n    state: \"absent\"\n  with_items: \"{{ mariadb_hosts }}\"\n```", "```\n- name: remove the MySQL test database\n  mysql_db:\n    db: \"test\" \n    state: \"absent\"\n```", "```\nmariadb_sample_database:\n  create_database: true\n  source_url: \"https://github.com/russmckendrick/test_db/archive/master.zip\"\n  path: \"/tmp/test_db-master\"\n  db_name: \"employees\"\n  db_user: \"employees\"\n  db_password: \"employees\"\n  dump_files:\n    - \"employees.sql\"\n    - \"load_departments.dump\"\n    - \"load_employees.dump\"\n    - \"load_dept_emp.dump\"\n    - \"load_dept_manager.dump\"\n    - \"load_titles.dump\"\n    - \"load_salaries1.dump\"\n    - \"load_salaries2.dump\"\n    - \"load_salaries3.dump\"\n    - \"show_elapsed.sql\"\n```", "```\n- name: download and unarchive the sample database data\n  unarchive:\n    src: \"{{ mariadb_sample_database.source_url }}\"\n    dest: \"/tmp\"\n    remote_src: \"yes\"\n  when: mariadb_sample_database.create_database == true\n```", "```\n- name: create the sample database\n  mysql_db:\n    db: \"{{ mariadb_sample_database.db_name }}\" \n    state: \"present\"\n  when: mariadb_sample_database.create_database == true\n\n- name: create the user for the sample database\n  mysql_user:\n    name: \"{{ mariadb_sample_database.db_user }}\"\n    password: \"{{ mariadb_sample_database.db_password }}\"\n    priv: \"{{ mariadb_sample_database.db_name }}.*:ALL\"\n    state: \"present\"\n  with_items: \"{{ mariadb_hosts }}\"\n  when: mariadb_sample_database.create_database == true\n```", "```\n- name: check to see if we need to import the sample database dumps\n  stat:\n    path: \"/var/lib/mysql/{{ mariadb_sample_database.db_name }}/{{ mariadb_sample_database.db_name }}.frm\"\n  register: db_imported\n  when: mariadb_sample_database.create_database == true\n```", "```\n- name: import the sample database\n  mysql_db:\n    name: \"{{ mariadb_sample_database.db_name }}\"\n    state: \"import\"\n    target: \"{{ mariadb_sample_database.path }}/{{ item }}\"\n  with_items: \"{{ mariadb_sample_database.dump_files }}\"\n  when: db_imported is defined and db_imported.stat.exists == false\n```", "```\n---\n\n- hosts: boxes\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/common\n    - roles/apache\n    - roles/mariadb\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\nTASK [roles/apache : set the selinux allowing httpd_t to be permissive] ***************************************************************************************************\nok: [box]\n\nTASK [roles/apache : copy the test HTML page to the document root] ********************************************************************************************************\nok: [box]\n\nTASK [roles/mariadb : remove the packages so that they can be replaced] ***************************************************************************************************\nchanged: [box] => (item=[u'mariadb-libs.x86_64'])\n\nTASK [roles/mariadb : install the mariadb packages] ***********************************************************************************************************************\nchanged: [box] => (item=[u'mariadb101u', u'mariadb101u-server', u'mariadb101u-config', u'mariadb101u-common', u'mariadb101u-libs', u'MySQL-python', u'postfix'])\n\nTASK [roles/mariadb : start mariadb] **************************************************************************************************************************************\nchanged: [box]\n\nTASK [roles/mariadb : change mysql root password] *************************************************************************************************************************\nchanged: [box] => (item=127.0.0.1)\nchanged: [box] => (item=::1)\nchanged: [box] => (item=192.168.50.4.nip.io)\nchanged: [box] => (item=%)\nchanged: [box] => (item=localhost)\n\nTASK [roles/mariadb : set up .my.cnf file] ********************************************************************************************************************************\nchanged: [box]\n\nTASK [roles/mariadb : delete anonymous MySQL user] ************************************************************************************************************************\nok: [box] => (item=127.0.0.1)\nok: [box] => (item=::1)\nchanged: [box] => (item=192.168.50.4.nip.io)\nok: [box] => (item=%)\nchanged: [box] => (item=localhost)\n\nTASK [roles/mariadb : remove the MySQL test database] *********************************************************************************************************************\nchanged: [box]\n\nTASK [roles/mariadb : download and unarchive the sample database data] ****************************************************************************************************\nchanged: [box]\n\nTASK [roles/mariadb : create the sample database] *************************************************************************************************************************\nchanged: [box]\n\nTASK [roles/mariadb : create the user for the sample database] ************************************************************************************************************\nchanged: [box] => (item=127.0.0.1)\nok: [box] => (item=::1)\nok: [box] => (item=192.168.50.4.nip.io)\nok: [box] => (item=%)\nok: [box] => (item=localhost)\n\nTASK [roles/mariadb : check to see if we need to import the sample database dumps] ****************************************************************************************\nok: [box]\n\nTASK [roles/mariadb : import the sample database] *************************************************************************************************************************\nchanged: [box] => (item=employees.sql)\nchanged: [box] => (item=load_departments.dump)\nchanged: [box] => (item=load_employees.dump)\nchanged: [box] => (item=load_dept_emp.dump)\nchanged: [box] => (item=load_dept_manager.dump)\nchanged: [box] => (item=load_titles.dump)\nchanged: [box] => (item=load_salaries1.dump)\nchanged: [box] => (item=load_salaries2.dump)\nchanged: [box] => (item=load_salaries3.dump)\nchanged: [box] => (item=show_elapsed.sql)\n\nPLAY RECAP ****************************************************************************************************************************************************************\nbox : ok=26 changed=11 unreachable=0 failed=0\n```", "```\nTASK [roles/mariadb : download and unarchive the sample database data] ****************************************************************************************************\nok: [box]\n\nTASK [roles/mariadb : create the sample database] *************************************************************************************************************************\nok: [box]\n\nTASK [roles/mariadb : create the user for the sample database] ************************************************************************************************************\nok: [box] => (item=127.0.0.1)\nok: [box] => (item=::1)\nok: [box] => (item=192.168.50.4.nip.io)\nok: [box] => (item=%)\nok: [box] => (item=localhost)\n\nTASK [roles/mariadb : check to see if we need to import the sample database dumps] ****************************************************************************************\nok: [box]\n\nTASK [roles/mariadb : import the sample database] *************************************************************************************************************************\nskipping: [box] => (item=employees.sql)\nskipping: [box] => (item=load_departments.dump)\nskipping: [box] => (item=load_employees.dump)\nskipping: [box] => (item=load_dept_emp.dump)\nskipping: [box] => (item=load_dept_manager.dump)\nskipping: [box] => (item=load_titles.dump)\nskipping: [box] => (item=load_salaries1.dump)\nskipping: [box] => (item=load_salaries2.dump)\nskipping: [box] => (item=load_salaries3.dump)\nskipping: [box] => (item=show_elapsed.sql)\n\nPLAY RECAP ****************************************************************************************************************************************************************\nbox : ok=25 changed=0 unreachable=0 failed=0\n```", "```\n$ ansible-galaxy init roles/php\n```", "```\nphp_packages:\n  - \"php72u\"\n  - \"php72u-bcmath\"\n  - \"php72u-cli\"\n  - \"php72u-common\"\n  - \"php72u-dba\"\n  - \"php72u-fpm\"\n  - \"php72u-fpm-httpd\"\n  - \"php72u-gd\"\n  - \"php72u-intl\"\n  - \"php72u-json\"\n  - \"php72u-mbstring\"\n  - \"php72u-mysqlnd\"\n  - \"php72u-odbc\"\n  - \"php72u-pdo\"\n  - \"php72u-process\"\n  - \"php72u-snmp\"\n  - \"php72u-soap\"\n  - \"php72u-xml\"\n  - \"php72u-xmlrpc\"\n```", "```\n- name: install the php packages\n  yum:\n    name: \"{{ item }}\"\n    state: \"installed\"\n  with_items: \"{{ php_packages }}\"\n  notify:\n    - \"restart php-fpm\"\n    - \"restart httpd\"\n```", "```\n- name: \"restart php-fpm\"\n  service:\n    name: \"php-fpm\"\n    state: \"restarted\"\n    enabled: \"yes\"\n```", "```\n- name: copy the test PHP page to the document root\n  copy:\n    src: \"info.php\"\n    dest: \"{{ document_root }}/info.php\"\n    mode: \"0755\"\n    owner: \"{{ users.0.name }}\"\n    group: \"{{ apache_group }}\"\n  when: php_info == true\n```", "```\nphp_info: true\n```", "```\n<?php\n  phpinfo();\n?>\n```", "```\nadminer:\n  install: true\n  path: \"/usr/share/adminer\"\n  download: \"https://github.com/vrana/adminer/releases/download/v4.6.2/adminer-4.6.2-mysql.php\"\n```", "```\n- name: create the document root for adminer\n  file:\n    dest: \"{{ adminer.path }}\"\n    state: \"directory\"\n    mode: \"0755\"\n  when: adminer.install == true\n```", "```\n- name: download adminer\n  get_url:\n    url: \"{{ adminer.download }}\"\n    dest: \"{{ adminer.path }}/index.php\"\n    mode: 0755\n  when: adminer.install == true\n```", "```\n- name: copy the vhost.conf to /etc/httpd/conf.d/\n  template:\n    src: \"adminer.conf.j2\"\n    dest: \"/etc/httpd/conf.d/adminer.conf\"\n  when: adminer.install == true\n  notify: \"restart httpd\"\n```", "```\n# {{ ansible_managed }}\nAlias /adminer \"{{ adminer.path }}\"\n  <Directory \"{{ adminer.path }}\">\n    DirectoryIndex index.php\n    AllowOverride All\n    Require all granted\n  </Directory>\n```", "```\n---\n\n- hosts: boxes\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/common\n    - roles/apache\n    - roles/mariadb\n    - roles/php\n```", "```\n$ ansible-playbook -i production site.yml\n```", "```\nTASK [roles/php : install the php packages] ********************************************************\nchanged: [box] => (item=[u'php72u', u'php72u-bcmath', u'php72u-cli', u'php72u-common', u'php72u-dba', u'php72u-fpm', u'php72u-fpm-httpd', u'php72u-gd', u'php72u-intl', u'php72u-json', u'php72u-mbstring', u'php72u-mysqlnd', u'php72u-odbc', u'php72u-pdo', u'php72u-process', u'php72u-snmp', u'php72u-soap', u'php72u-xml', u'php72u-xmlrpc'])\n\n```", "```\nTASK [roles/php : copy the test PHP page to the document root] *************************************\nchanged: [box]\n\nTASK [roles/php : create the document root for adminer] ********************************************\nchanged: [box]\n\nTASK [roles/php : download adminer] ****************************************************************\nchanged: [box]\n\nTASK [roles/php : copy the vhost.conf to /etc/httpd/conf.d/] ***************************************\nchanged: [box]\n\nRUNNING HANDLER [roles/common : restart ntp] *******************************************************\nchanged: [box]\n\nRUNNING HANDLER [roles/apache : restart httpd] *****************************************************\nchanged: [box]\n\nRUNNING HANDLER [roles/php : restart php-fpm] ******************************************************\nchanged: [box]\n\nPLAY RECAP *****************************************************************************************\nbox : ok=34 changed=32 unreachable=0 failed=0\n```", "```\nhtml_body: |\n  This HTML page has been deployed using Ansible to <b>{{ ansible_nodename }}</b>.<br>\n  The user is <b>{{ users.0.name }}</b> who is in the <b>{{ apache_group }}</b> group.<br>\n  The weboot is <b>{{ document_root }}</b>, the default index file is <b>{{ index_file }}</b>.<br>\n  You can access a <a href=\"/info.php\">PHP Info file</a> or <a href=\"/adminer/\">Adminer</a>.\n```"]