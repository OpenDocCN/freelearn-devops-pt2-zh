- en: Ansible Galaxy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Galaxy
- en: We have been using the `ansible-galaxy` command throughout the previous chapters.
    In this chapter, we are going to look at more of the features provided by the
    command. Ansible Galaxy is an online repository of community contributed roles;
    we will discover some of the best roles available, how to use them, and how to
    create your own role and have it hosted on Ansible Galaxy.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们一直在使用`ansible-galaxy`命令。在本章中，我们将看看该命令提供的更多功能。Ansible Galaxy是一个社区贡献角色的在线存储库；我们将发现一些最好的可用角色，如何使用它们，以及如何创建自己的角色并将其托管在Ansible
    Galaxy上。
- en: 'By the end of the chapter, we will have worked through the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，我们将完成以下工作：
- en: An introduction to Ansible Galaxy
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对Ansible Galaxy的介绍
- en: How to use roles from Ansible Galaxy in your own playbooks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在自己的playbooks中使用Ansible Galaxy的角色
- en: How to write and submit your own roles to Ansible Galaxy
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何编写和提交您自己的角色到Ansible Galaxy
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Again, we will be using a local Vagrant box for this chapter; the playbooks
    used can be found in the accompanying repository at [https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter16](https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter16).
    You will also need access to a GitHub account—a free account will do—and you can
    sign up for one at [http://github.com/](http://github.com/).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将再次使用本地Vagrant框；所使用的playbooks可以在附带的存储库中找到[https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter16](https://github.com/PacktPublishing/Learn-Ansible/tree/master/Chapter16)。您还需要访问GitHub账户——一个免费账户就可以——您可以在[http://github.com/](http://github.com/)注册一个。
- en: Introduction to Ansible Galaxy
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对Ansible Galaxy的介绍
- en: 'Ansible Galaxy is a number of things: first and foremost, it is a website that
    can be found at [https://galaxy.ansible.com/](https://galaxy.ansible.com/). The
    website is home to community contributed roles and modules:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Galaxy是许多东西：首先，它是一个网站，可以在[https://galaxy.ansible.com/](https://galaxy.ansible.com/)找到。该网站是社区贡献的角色和模块的家园：
- en: '![](assets/58107dd3-0605-47d0-a3d8-c62f67ec530c.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/58107dd3-0605-47d0-a3d8-c62f67ec530c.png)'
- en: So far, we have been writing our own roles that interact with the Ansible Core
    modules for use in our playbook. Rather than writing our own roles. we could be
    using one of the more than 15,000 roles published on Ansible Galaxy—these roles
    cover a multitude of tasks and support pretty much of all of the operating systems
    supported by Ansible.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在编写我们自己的角色，这些角色与Ansible Core模块进行交互，用于我们的playbook。我们可以使用Ansible Galaxy上发布的15,000多个角色中的一个，而不是编写我们自己的角色。这些角色涵盖了多种任务，并且几乎支持Ansible支持的所有操作系统。
- en: The `ansible-galaxy` command is a way of interacting with the Ansible Galaxy
    website from the comfort of your own command line, as well as being able to bootstrap
    roles. Just as we have been using it in previous chapters, we can also use it
    to download, search and publish our own roles on Ansible Galaxy.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`ansible-galaxy`命令是一种从自己的命令行舒适地与Ansible Galaxy网站交互的方式，同时还能够引导角色。就像我们在之前的章节中使用它一样，我们也可以使用它来下载、搜索和发布我们自己的角色到Ansible
    Galaxy。'
- en: Finally, Red Hat has open sourced the code for Ansible Galaxy, meaning that
    you can also run your own version of the site should you need to distribute your
    own roles behind a firewall.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Red Hat已经开源了Ansible Galaxy的代码，这意味着您也可以在需要在防火墙后分发自己的角色时运行自己的网站。
- en: Jenkins playbook
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins playbook
- en: Let's dive straight in and create a playbook that installs Jenkins using just
    roles downloaded from Ansible Galaxy.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们直接开始创建一个playbook，只使用从Ansible Galaxy下载的角色来安装Jenkins。
- en: Jenkins, formerly the Hudson project, is an open source continuous integration
    and continuous delivery server written in Java. It is expandable using plugins
    and has grown much bigger than its original purpose of compiling Java applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins，以前是Hudson项目，是一个用Java编写的开源持续集成和持续交付服务器。它可以使用插件进行扩展，并且已经远远超出了最初编译Java应用程序的目的。
- en: 'To start, we are going to need a few files; let''s get these created now by
    running the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要一些文件；现在通过运行以下命令来创建这些文件：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see, we are not creating a `roles` or `group_vars` folder as we have
    been doing in previous chapters. Instead, we are creating a `requirements.yml`
    file. This will contain a list of the roles we would like to download from Ansible
    Galaxy.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，我们并没有像在之前的章节中那样创建`roles`或`group_vars`文件夹。相反，我们正在创建一个`requirements.yml`文件。这将包含我们想要从Ansible
    Galaxy下载的角色列表。
- en: 'In our case, we are going to be using the following two roles:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，我们将使用以下两个角色：
- en: '**Java**: [https://galaxy.ansible.com/geerlingguy/java/](https://galaxy.ansible.com/geerlingguy/java/)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Java**：[https://galaxy.ansible.com/geerlingguy/java/](https://galaxy.ansible.com/geerlingguy/java/)'
- en: '**Jenkins**: [https://galaxy.ansible.com/geerlingguy/jenkins/](https://galaxy.ansible.com/geerlingguy/jenkins/)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jenkins**：[https://galaxy.ansible.com/geerlingguy/jenkins/](https://galaxy.ansible.com/geerlingguy/jenkins/)'
- en: 'The first of the roles, `geerlingguy.java`, manages the installation of Java
    on our host and then the second, `geerlingguy.jenkins`, manages the installation
    and configuration of Jenkins itself. To install the roles, we need to add the
    following lines to our `requirements.yml` file:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个角色`geerlingguy.java`管理主机上Java的安装，然后第二个角色`geerlingguy.jenkins`管理Jenkins本身的安装和配置。要安装这些角色，我们需要将以下行添加到我们的`requirements.yml`文件中：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once added, we can download the roles by running the following command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 添加后，我们可以通过运行以下命令下载角色：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You should see something like the following output:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到类似以下的输出：
- en: '![](assets/51f97450-f925-4434-ba8b-96e37d916be1.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/51f97450-f925-4434-ba8b-96e37d916be1.png)'
- en: As you can see from the Terminal output, the two roles have been downloaded
    from the `roles` folder of GitHub project and placed in the `~/.ansible/roles/`
    folder.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 从终端输出中可以看到，这两个角色已从GitHub项目的`roles`文件夹中下载，并放置在`~/.ansible/roles/`文件夹中。
- en: Using `~` in a path on macOS and Linux is shorthand for current users' home
    directory.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS和Linux上使用`~`表示当前用户的主目录。
- en: You can ignore the warning; it is just letting us know that the `geerlingguy.jenkins`
    role wanted to install an older version of the `geerlingguy.java` role. In our
    case, this is not going to cause any problems.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以忽略警告；它只是让我们知道`geerlingguy.jenkins`角色想要安装`geerlingguy.java`角色的旧版本。在我们的情况下，这不会造成任何问题。
- en: 'Now that we have our two roles downloaded, we can write the `site.yml` file
    for us to launch Jenkins. This should look like the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经下载了两个角色，我们可以编写`site.yml`文件来启动Jenkins。应该如下所示：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Notice that we are just providing the names of the roles. Ansible, by default,
    will search for roles in the `~/.ansible/roles/` folder if they are not found
    in a `roles` folder local to your playbook.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们只是提供了角色的名称。默认情况下，如果在playbook的本地`roles`文件夹中找不到角色，Ansible将在`~/.ansible/roles/`文件夹中搜索角色。
- en: 'We are also passing four variables:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还传递了四个变量：
- en: '`java_packages`: This is the name of the `geerlingguy.java`role we want the
    role to install; as Jenkins requires Java 8, and we are running a CentOS 7 host,
    the package name is `java-1.8.0-openjdk`.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`java_packages`：这是我们希望角色安装的`geerlingguy.java`角色的名称；由于Jenkins需要Java 8，而我们正在运行CentOS
    7主机，包名称是`java-1.8.0-openjdk`。'
- en: 'The remaining three variables affect what the `geerlingguy.jenkins` role configures:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的三个变量影响`geerlingguy.jenkins`角色的配置：
- en: '`jenkins_hostname`: This is the URL we want to access Jenkins on; as in previous
    chapters, we are using the `nip.io` service to provide a resolvable hostname for
    our Vagrant box'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jenkins_hostname`：这是我们希望在其上访问Jenkins的URL；与之前的章节一样，我们使用`nip.io`服务为我们的Vagrant
    box提供可解析的主机名'
- en: '`jenkins_admin_username`: This is the admin username we want to configure for
    accessing Jenkins'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jenkins_admin_username`：这是我们要配置以访问Jenkins的管理员用户名'
- en: '`jenkins_admin_password`: This is the password for the user'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jenkins_admin_password`：这是用户的密码'
- en: 'Next up, we have the `production` host''s inventory file:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有`production`主机的清单文件：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Finally, the content of the `Vagrantfile` is as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`Vagrantfile`的内容如下：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now that we have all of the files we need in place and populated with the right
    code, we can launch our Jenkins server. First, we need to create the Vagrant box:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将所有需要的文件放置并填充了正确的代码，我们可以启动我们的Jenkins服务器了。首先，我们需要创建Vagrant box：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Once the Vagrant box is up and running, we can run the playbook using the following
    command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Vagrant box启动运行，我们可以使用以下命令运行playbook：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'It will take a few minutes to install and configure both Java and Jenkins;
    you can see the output of the playbook run here:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 安装和配置Java和Jenkins需要几分钟；您可以在这里查看playbook运行的输出：
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once the playbook has completed, you should be able to access your newly installed
    Jenkins at `http://10.20.30.60.nip.io:8080/` and use the admin username and password
    we defined in the `site.yml` file to log in:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦playbook完成，您应该能够在`http://10.20.30.60.nip.io:8080/`访问您新安装的Jenkins，并使用我们在`site.yml`文件中定义的管理员用户名和密码登录：
- en: '![](assets/f20b6569-1aa7-4202-97b8-ff01b27ccaa3.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f20b6569-1aa7-4202-97b8-ff01b27ccaa3.png)'
- en: As you can see, using a predefined community role to deploy our Jenkins installation
    was a lot more straightforward than writing our own role. In a few minutes, we
    were able to write a playbook and deploy the application with no more than a basic
    understanding of how to install the application. In fact, a quick skim through
    the readme file on Ansible Galaxy for the two roles was all that was required.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，使用预定义的社区角色部署我们的Jenkins安装比编写我们自己的角色要简单得多。在几分钟内，我们就能够编写一个playbook并部署应用程序，而且只需要基本的安装应用程序的理解。事实上，只需要快速浏览一下Ansible
    Galaxy上两个角色的readme文件就足够了。
- en: Publishing a role
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布角色
- en: Now we know how easy it is to download a role, let's look at how we can contribute
    back to the community by creating a role. In the last few chapters, we have been
    using Ansible to install Docker. So let's use that as our base and extend the
    role to support Ubuntu and have it install the Docker CE Edge release rather than
    the stable one.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了下载角色有多么容易，让我们看看如何通过创建角色向社区做出贡献。在过去的几章中，我们一直在使用Ansible来安装Docker。因此，让我们以此为基础，扩展角色以支持Ubuntu，并安装Docker
    CE Edge版本，而不是稳定版本。
- en: Creating the docker role
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建docker角色
- en: 'To start off with, we need the basic files; to get these, run the following
    command where you normally store your code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要基本文件；要获取这些文件，请在通常存储代码的位置运行以下命令：
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This will give us the directory and file structure we need for our new role;
    we can now make a start on creating the role.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为我们提供我们新角色所需的目录和文件结构；现在我们可以开始创建角色了。
- en: Variables
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变量
- en: 'We are going to start with the files in the `vars` folder; we are going to
    be keeping the `vars/main.yml` file blank and adding two new files starting with
    `vars/RedHat.yml`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从`vars`文件夹中的文件开始；我们将保持`vars/main.yml`文件为空，并添加两个以`vars/RedHat.yml`开头的新文件：
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The next file to add is `vars/Debian.yml`:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加的下一个文件是`vars/Debian.yml`：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: These two files contain all of the information we will need to install Docker
    CE.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个文件包含了我们安装Docker CE所需的所有信息。
- en: Tasks
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 任务
- en: 'As we are targeting two different operating systems, our `tasks/main.yml` file
    needs to look as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们针对两个不同的操作系统，我们的`tasks/main.yml`文件需要如下所示：
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As you can see, this is the same as when we installed our LEMP Stack on the
    two operating systems in [Chapter 6](8a622761-b253-45a2-8ab6-ff0f3a55aa34.xhtml),
    *Targeting Multiple Distributions*. The `tasks/install-redhat.yml` file looks
    pretty much like the tasks we have used to install Docker in the previous chapters:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，在[第6章](8a622761-b253-45a2-8ab6-ff0f3a55aa34.xhtml)中在两个操作系统上安装LEMP Stack时一样，`tasks/install-redhat.yml`文件看起来与我们在之前章节中用于安装Docker的任务非常相似：
- en: '[PRE13]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The only difference is that we are enabling the Docker CE Edge repository when
    installing the packages, and also we are not running a `yum update` when installing
    Docker. We are not doing this as it is not our role's decision to update a server
    when someone else is running the role; our role should only install Docker.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的区别是在安装软件包时启用了Docker CE Edge存储库，并且在安装Docker时我们没有运行`yum update`。我们之所以不这样做，是因为更新服务器不是我们角色的决定，当其他人运行角色时，我们的角色只应该安装Docker。
- en: 'The final task file is `tasks/install-ubuntu.yml`. This, as you will have already
    guessed, contains the tasks to install Docker on Ubuntu hosts:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的任务文件是`tasks/install-ubuntu.yml`。正如你已经猜到的那样，其中包含了在Ubuntu主机上安装Docker的任务：
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: That concludes all of the tasks and variables that we need in order to install
    Docker on the two different operating systems. In previous chapters, that would
    have been enough for us to add the role to our playbook and run the tasks. However,
    as we are going to be publishing this role on Ansible Galaxy, we need to add some
    more information about the role.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了我们在两种不同操作系统上安装Docker所需的所有任务和变量。在以前的章节中，这已经足够让我们将角色添加到我们的playbook并运行任务了。然而，由于我们将在Ansible
    Galaxy上发布这个角色，我们需要添加一些关于角色的更多信息。
- en: Metadata
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metadata
- en: 'As you may have seen while browsing Ansible Galaxy, each of the roles uploaded
    has information on who wrote it, when it is for, a license, which version of Ansible
    is supported, and so on. This information is all taken from the `meta/main.yml`
    file. The one we published looks like the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当你浏览Ansible Galaxy时，你可能已经看到，每个上传的角色都有关于作者、适用对象、许可证、支持的Ansible版本等信息。这些信息都来自于`meta/main.yml`文件。我们发布的文件看起来像下面这样：
- en: '[PRE15]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As you can see, we are providing information in a YAML file that Ansible Galaxy
    will read when we publish the role. Most of the information in the file is self-explanatory,
    so I will not go into too much detail here:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们在一个YAML文件中提供了信息，当我们发布角色时，Ansible Galaxy将读取这些信息。文件中的大部分信息都是不言自明的，所以我在这里不会详细介绍：
- en: '`author`: This is your name or chosen moniker.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`author`: 这是你的名字或选择的别名。'
- en: '`description`: Add a description of your role; this will appear in searches
    on the command line and in the web interface, so keep it short and do not add
    any markup.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`: 添加你的角色描述；这将出现在命令行和web界面的搜索结果中，所以保持简短，不要添加任何标记。'
- en: '`license`: The license you are releasing your role under; the default is BSD.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`license`: 你发布角色的许可证；默认是BSD。'
- en: '`min_ansible_version`: The version of Ansible your role will work with. Remember,
    if you are using new functionality, then you must use the version that the functionality
    was released in. Saying you work with Ansible 1.9 but are using modules from Ansible
    2.4 will only frustrate users.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_ansible_version`: 你的角色将使用的Ansible版本。记住，如果你使用了新功能，那么你必须使用该功能发布的版本。说你使用Ansible
    1.9，但使用了来自Ansible 2.4的模块，这只会让用户感到沮丧。'
- en: '`platforms`: This list of supported operating systems and releases is used
    when displaying information about the role, and it will play a part in a user
    choosing to use your role. Make sure this is accurate as, again, we do not want
    to frustrate users.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`platforms`: 这个支持的操作系统和版本列表在显示角色信息时使用，它将在用户选择使用你的角色时发挥作用。确保这是准确的，因为我们不想让用户感到沮丧。'
- en: '`galaxy_tags`: These tags are used by Ansible Galaxy to help identify what
    your role does.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`galaxy_tags`: 这些标签被Ansible Galaxy用来帮助识别你的角色做了什么。'
- en: 'There is one final part of the role to look at before we publish it: the `README.md`
    file.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们发布它之前，还有一个角色的最后部分需要看一看：`README.md`文件。
- en: README
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: README
- en: 'The final part of the role we need to complete is the `README.md` file; this
    contains the information that is displayed on the Ansible Galaxy website. When
    we initiated our role using `ansible-galaxy`, it created a `README.md` file with
    a basic structure. The one for our role looks like the following file:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要完成的角色的最后部分是`README.md`文件；这个文件包含了在Ansible Galaxy网站上显示的信息。当我们使用`ansible-galaxy`初始化我们的角色时，它创建了一个带有基本结构的`README.md`文件。我们的角色的文件看起来像下面这样：
- en: '[PRE16]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '- hosts: docker'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '- hosts: docker'
- en: 'gather_facts: true'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 'gather_facts: true'
- en: 'become: yes'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 'become: yes'
- en: 'become_method: sudo'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 'become_method: sudo'
- en: 'roles:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 'roles:'
- en: '- russmckendrick.docker'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '- russmckendrick.docker'
- en: '[PRE17]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now that we have all of the files we need in place, we can look at committing
    our role to GitHub and, from there, publish it on Ansible Galaxy.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了所有需要的文件，我们可以开始将我们的角色提交到GitHub，并从那里发布到Ansible Galaxy。
- en: Committing the code and publishing
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提交代码并发布
- en: Now that we have our completed role, we need to push it to a public GitHub repository.
    There are a few reasons why it needs to be published to a public repository, the
    most important of which is that any potential user will need to download your
    role. Also, Ansible Galaxy links to the repository, allowing users to review your
    role before they choose to execute it as part of their playbooks.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了我们的角色，我们需要将其推送到一个公共的GitHub存储库。有几个原因需要将其发布到公共存储库，其中最重要的是任何潜在用户都需要下载你的角色。此外，Ansible
    Galaxy链接到存储库，允许用户在选择将其作为playbook的一部分执行之前审查你的角色。
- en: 'On all GitHub pages, when you are logged in, there is a + icon in the top right;
    clicking this will bring up a menu that contains options for creating a new repository
    and importing one, as well as gists and organizations. Select New repository from
    the menu and you will be presented with a screen that looks as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有GitHub页面上，当你登录时，右上角有一个+图标；点击它会弹出一个菜单，其中包含创建新存储库和导入存储库的选项，以及gists和组织。从菜单中选择New
    repository，你将看到一个如下所示的屏幕：
- en: '![](assets/e7543009-d77e-4ab8-89ec-6a58557ba66e.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e7543009-d77e-4ab8-89ec-6a58557ba66e.png)'
- en: Name the repository and enter a description; it is important that you name your
    repository `ansible-role-your-role-name`. The name of the role in Ansible Galaxy
    will depend on the name you give after `ansible-role`, so, in the previous example,
    our role will be called `your-role-name` and, for the role we are going to be
    publishing, it will be called `docker`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 命名存储库并输入描述；重要的是您将您的存储库命名为 `ansible-role-your-role-name`。在 Ansible Galaxy 中，角色的名称将取决于您在
    `ansible-role` 之后给出的名称，因此，在上一个示例中，我们的角色将被称为 `your-role-name`，对于我们将要发布的角色，它将被称为
    `docker`。
- en: 'Now that we have our repository, we need to add the files for our role. Go
    back to the folder that contains your role on the command line and then run the
    following commands to initialize the Git repository locally. Push it to GitHub,
    making sure that you replace the repository URL with that of your own repository:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的存储库，我们需要为我们的角色添加文件。回到包含您的角色的文件夹，并在命令行上运行以下命令来在本地初始化 Git 存储库。将其推送到 GitHub，确保用您自己存储库的
    URL 替换存储库 URL：
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You should now have your files uploaded, and your repository should look not
    too dissimilar to the following:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您应该已经上传了文件，您的存储库看起来与以下内容并没有太大不同：
- en: '![](assets/9a583521-a34f-4bb7-9be2-38bb873506f7.png)If you have any problems
    pushing your code, I would recommend reading through the excellent documentation
    provided by GitHub on setting up Git ([https://help.github.com/articles/set-up-git/](https://help.github.com/articles/set-up-git/))
    and pushing your first files ([https://help.github.com/articles/create-a-repo/](https://help.github.com/articles/create-a-repo/)).'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/9a583521-a34f-4bb7-9be2-38bb873506f7.png)如果您在推送代码时遇到任何问题，我建议您阅读
    GitHub 提供的关于设置 Git ([https://help.github.com/articles/set-up-git/](https://help.github.com/articles/set-up-git/))
    和推送您的第一个文件 ([https://help.github.com/articles/create-a-repo/](https://help.github.com/articles/create-a-repo/))
    的出色文档。'
- en: Now that we have our files uploaded and available, we can sign in to Ansible
    Galaxy using our GitHub credentials and then import our role. Head to the Ansible
    Galaxy home page at [https://galaxy.ansible.com/](https://galaxy.ansible.com/)
    and then click on the Sign in with GitHub link; this will take you to GitHub and
    ask you to confirm that you are OK with giving Ansible Galaxy permission to access
    information on your account. Proceed as prompted and you will be returned to Ansible
    Galaxy.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经上传并可用了文件，我们可以使用我们的 GitHub 凭据登录到 Ansible Galaxy，然后导入我们的角色。转到 Ansible Galaxy
    主页 [https://galaxy.ansible.com/](https://galaxy.ansible.com/)，然后单击“使用 GitHub 登录”链接；这将带您到
    GitHub 并要求您确认您同意让 Ansible Galaxy 访问您的帐户上的信息。按照提示进行，您将返回到 Ansible Galaxy。
- en: 'Clicking on the My Content link in the top menu will take you to a page where
    you can import content from GitHub; if you do not see your repository listed,
    click on the refresh icon next to the search box:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 单击顶部菜单中的“我的内容”链接将带您到一个页面，您可以从 GitHub 导入内容；如果您没有看到您的存储库列出，请单击搜索框旁边的刷新图标：
- en: '![](assets/36d875f0-9990-44aa-8ba7-e9993171bbcb.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/36d875f0-9990-44aa-8ba7-e9993171bbcb.png)'
- en: 'When you see your repository listed, click on the on/off switch next to the
    role and that should do it. Your role is now imported. Clicking your username
    in the top menu will bring up a drop-down list; from this list, select My Imports.
    This will give you the logs of your import:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当您看到您的存储库列出时，单击角色旁边的开关，就可以了。您的角色现在已导入。单击顶部菜单中的用户名将显示一个下拉列表；从该列表中，选择“我的导入”。这将为您提供导入的日志：
- en: '![](assets/0e9472b9-2161-4bbc-928e-73a79ee09378.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0e9472b9-2161-4bbc-928e-73a79ee09378.png)'
- en: 'Now your role has been published; you can view your role by clicking on the
    link at the top, where it says `russmckendrick/ansible-role-docker`. This will
    take you to the Ansible Galaxy page for your newly added role, for example, [https://galaxy.ansible.com/russmckendrick/docker/](https://galaxy.ansible.com/russmckendrick/docker/):'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的角色已发布；您可以通过单击顶部的链接查看您的角色，链接上写着 `russmckendrick/ansible-role-docker`。这将带您到您新添加的角色的
    Ansible Galaxy 页面，例如 [https://galaxy.ansible.com/russmckendrick/docker/](https://galaxy.ansible.com/russmckendrick/docker/)：
- en: '![](assets/08f01e98-0a81-4f21-833f-b8599f59c62a.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/08f01e98-0a81-4f21-833f-b8599f59c62a.png)'
- en: As you can see, all of the metadata we added is present in the listing along
    with links to view the README file, which was imported from GitHub, and also links
    to GitHub itself.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们添加的所有元数据都显示在列表中，包括查看从 GitHub 导入的 README 文件的链接，以及指向 GitHub 本身的链接。
- en: Testing the role
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试角色
- en: 'Now that we have our role, we can test it. To do this, we will need a playbook,
    inventory, and a requirements file, as well as a CentOS and Ubuntu server. Run
    the following commands to create the files you need:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的角色，我们可以测试它。为此，我们将需要一个 playbook、清单和一个要求文件，以及一个 CentOS 和 Ubuntu 服务器。运行以下命令来创建您需要的文件：
- en: '[PRE19]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The inventory file, production, should look as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 清单文件 production 应该如下所示：
- en: '[PRE20]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Our `requirements.yml` file contains just our Docker role:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 `requirements.yml` 文件只包含我们的 Docker 角色：
- en: '[PRE21]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Our playbook, the `site.yml` file, should just call our role:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 playbook，`site.yml` 文件，应该只调用我们的角色：
- en: '[PRE22]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Finally, the `Vagrantfile` should read:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`Vagrantfile` 应该如下所示：
- en: '[PRE23]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now that we have all of the files in place, we can download our role by running:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经把所有文件放在了正确的位置，我们可以通过运行以下命令来下载我们的角色：
- en: '[PRE24]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'As you can see from the following output, this will download our role to the
    `~/.ansible/roles/` folder:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从以下输出中所见，这将把我们的角色下载到 `~/.ansible/roles/` 文件夹中：
- en: '![](assets/65c29af9-204a-4bfc-b20e-c8a92b8f7d91.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/65c29af9-204a-4bfc-b20e-c8a92b8f7d91.png)'
- en: 'Next, launch the two Vagrant boxes by running either one of the following commands:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过运行以下任一命令来启动两个 Vagrant boxes：
- en: '[PRE25]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Once the boxes are up and running, we can run the playbook with:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 boxes 运行起来，我们可以通过以下方式运行 playbook：
- en: '[PRE26]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'As you can see from the following output, everything went as planned and the
    role installed Docker on both boxes:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从以下输出中所见，一切都按计划进行，角色在两个 boxes 上都安装了 Docker：
- en: '![](assets/305ac1e3-d03f-4664-acc2-ce6c24e555c5.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/305ac1e3-d03f-4664-acc2-ce6c24e555c5.png)'
- en: Ansible Galaxy commands
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Galaxy 命令
- en: Before we finish this chapter, let's take a quick look at some of the other
    functionalities of the `ansible-galaxy` command, starting with logging in.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们结束本章之前，让我们快速看一下`ansible-galaxy`命令的一些其他功能，首先是登录。
- en: Logging in
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 登录
- en: 'It is possible to log in to Ansible Galaxy from the command line; you can do
    this by using the following:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过命令行登录到Ansible Galaxy；你可以通过以下方式实现：
- en: '[PRE27]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This will ask for your GitHub username and password; if you have two-factor
    authentication enabled on your GitHub account, which you really should do, then
    this method will not work. Instead, you will need to provide a personal access
    token. You can generate a personal access token at the following URL: [https://github.com/settings/tokens/](https://github.com/settings/tokens/).
    Once you have a token, you can use the following command, replacing the token
    with your own:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这将要求你的GitHub用户名和密码；如果你的GitHub账户启用了双因素身份验证，那么这种方法将无法工作。相反，你需要提供个人访问令牌。你可以在以下网址生成个人访问令牌：[https://github.com/settings/tokens/](https://github.com/settings/tokens/)。一旦你有了令牌，你可以使用以下命令，将令牌替换为你自己的：
- en: '[PRE28]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The following screenshot shows the output for the preceding command:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](assets/ae72ea57-dac3-4195-8d0b-5318b1781e5d.png)Personal access tokens
    will give anyone who has one full access to your GitHub account; please store
    them securely and, if possible, rotate them regularly.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/ae72ea57-dac3-4195-8d0b-5318b1781e5d.png)个人访问令牌将给任何拥有它的人完全访问你的GitHub账户；请将它们安全地存储，并且如果可能的话定期更换。'
- en: Importing
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入
- en: 'Once logged in, if you make a change to your role and want to import those
    changes into Ansible Galaxy, you can run the following command:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦登录，如果你对角色进行了更改并希望将这些更改导入到Ansible Galaxy中，你可以运行以下命令：
- en: '[PRE29]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The following screenshot shows the output for the preceding command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](assets/d246faed-3afd-4c10-b531-ccca5be6406e.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d246faed-3afd-4c10-b531-ccca5be6406e.png)'
- en: The two bits of information we are passing to the command are the GitHub username,
    `russmckendrick` in my case, and the name of repository we want to import—so for
    the Docker one we published in the last section, I am using `ansible-role-docker`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们传递给命令的两个信息是GitHub用户名，在我的情况下是`russmckendrick`，以及我们想要导入的仓库的名称——所以对于我们在上一节中发布的Docker角色，我使用的是`ansible-role-docker`。
- en: Searching
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索
- en: 'You can use the `ansible-galaxy` command to search for roles. For example,
    running the following currently returns 725 roles:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`ansible-galaxy`命令搜索角色。例如，运行以下命令目前返回725个角色：
- en: '[PRE30]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'If you want to search for a role by an author, you can use the following:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想按作者搜索角色，可以使用以下命令：
- en: '[PRE31]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'As you can see from the output in the screenshot, this returns just the role
    we have published:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 从截图中的输出可以看出，这只返回了我们发布的角色：
- en: '![](assets/3fbaf17e-5659-4337-8f48-94da578320a3.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3fbaf17e-5659-4337-8f48-94da578320a3.png)'
- en: This is useful as you do not have to start switching between your terminal and
    browser.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这很有用，因为你不必在终端和浏览器之间来回切换。
- en: Info
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信息
- en: 'The final command we are going to look at is the `info` one; this command will
    print out information on any role you provide to it. For example, running the
    following will give you lots of information on the role we published:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要看的最后一个命令是`info`；这个命令将打印出你提供的任何角色的信息。例如，运行以下命令将为你提供关于我们发布的角色的大量信息：
- en: '[PRE32]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following screenshot shows the output for the preceding command:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](assets/575b2ae1-697c-4e59-8983-7e811819d80a.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/575b2ae1-697c-4e59-8983-7e811819d80a.png)'
- en: As you can see, all of the information you can get on the website is also available
    on the command line, meaning you can have a choice when it comes to how you interact
    with Ansible Galaxy.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，网站上可以获取的所有信息在命令行上也是可以获取的，这意味着在与Ansible Galaxy交互时你可以有选择。
- en: Summary
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have taken an in-depth look at Ansible Galaxy, both the
    website and command-line tool. I am sure that you will agree that Ansible Galaxy
    offers valuable community services in that it allows Ansible users to share roles
    for common tasks as well as a way for users to make contributions to the Ansible
    community by publishing their own roles.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入了解了Ansible Galaxy，包括网站和命令行工具。我相信你会同意，Ansible Galaxy提供了有价值的社区服务，它允许Ansible用户共享常见任务的角色，同时也为用户提供了一种通过发布自己的角色来为Ansible社区做出贡献的方式。
- en: However, just be careful. Remember to check through the code and also read through
    bug trackers before using roles from Ansible Galaxy in production environments;
    after all, a lot of these roles need to have escalated privileges in order to
    be able to successfully execute their tasks.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 但是要小心。在将Ansible Galaxy的角色用于生产环境之前，请记得仔细检查代码并阅读错误跟踪器；毕竟，这些角色中的许多需要提升的权限才能成功执行它们的任务。
- en: In the next and final chapter, we are going to be looking at some of the ways
    Ansible can be integrated into your day-to-day workflows.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将看一些将Ansible集成到你的日常工作流程中的方法。
- en: Questions
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: There is just one task for this chapter. Take one of the other roles we have
    created previously, adapt it for use on more than one operating system, and publish
    it on Ansible Galaxy.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 本章只有一个任务。拿出我们之前创建的其他角色之一，使其适用于多个操作系统，并在Ansible Galaxy上发布。
- en: Further reading
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Both of the roles we used at the start of the chapter were published by Jeff
    Geerling; you can find out more about Jeff and his projects at [https://www.jeffgeerling.com/](https://www.jeffgeerling.com/).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 本章开始时使用的两个角色都是由Jeff Geerling发布的；你可以在[https://www.jeffgeerling.com/](https://www.jeffgeerling.com/)找到更多关于Jeff和他的项目的信息。
