["```\n---\n\nenvironment_name: \"VPC-Slack\"\nec2_region: \"eu-west-1\"\n\nslack:\n  token: \"TBCRVDMGA/BBCPTPNH1/tyudQIccviG7gh4JnfeoPScc\"\n  username: \"Ansible\"\n  icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Robot_icon.svg/200px-Robot_icon.svg.png\"\n```", "```\n- name: Send notification message via Slack all options\n  slack:\n    token: \"{{ slack.token }}\"\n    msg: \"Checking for VPC called '{{ environment_name }}'\"\n    username: \"{{ slack.username }}\"\n    icon_url: \"{{ slack.icon }}\"\n    link_names: 0\n    parse: 'full'\n```", "```\n- name: ensure that the VPC is present\n  ec2_vpc_net:\n    region: \"{{ ec2_region }}\"\n    name: \"{{ environment_name }}\"\n    state: present\n    cidr_block: \"{{ vpc_cidr_block }}\"\n    resource_tags: { \"Name\" : \"{{ environment_name }}\", \"Environment\" : \"{{ environment_name }}\" }\n  register: vpc_info\n```", "```\n- name: Send notification message via Slack all options\n  slack:\n    token: \"{{ slack.token }}\"\n    msg: \"VPC called '{{ environment_name }}' created with an ID of '{{ vpc_info.vpc.id }}'\"\n    username: \"{{ slack.username }}\"\n    icon_url: \"{{ slack.icon }}\"\n    link_names: 0\n    parse: 'full'\n  when: vpc_info.changed\n```", "```\n- name: Send notification message via Slack all options\n  slack:\n    token: \"{{ slack.token }}\"\n    msg: \"Found a VPC called '{{ environment_name }}' which has an ID of '{{ vpc_info.vpc.id }}'\"\n    username: \"{{ slack.username }}\"\n    icon_url: \"{{ slack.icon }}\"\n    link_names: 0\n    parse: 'full'\n  when: vpc_info.changed == false and vpc_info.failed == false\n```", "```\n$ export AWS_ACCESS_KEY=AKIAI5KECPOTNTTVM3EDA\n$ export AWS_SECRET_KEY=Y4B7FFiSWl0Am3VIFc07lgnc/TAtK5+RpxzIGTr\n$ ansible-playbook -i production site.yml\n```", "```\n- name: Send a message to Campfire\n  campfire:\n    subscription: \"my_subscription\"\n    token: \"my_subscription\"\n    room: \"Demo\"\n    notify: \"loggins\"\n    msg: \"The task has completed and all is well\"\n```", "```\n- name: Send a message to Cisco Spark\n  cisco_spark:\n    recipient_type: \"roomId\"\n    recipient_id: \"{{ spark.room_id }}\"\n    message_type: \"markdown\"\n    personal_token: \"{{ spark.token }}\"\n    message: \"The task has **completed** and all is well\"\n```", "```\n- name: Send a message to a Flowdock inbox\n  flowdock:\n    type: \"inbox\"\n    token: \"{{ flowdock.token }}\"\n    from_address: \"{{ flowdock.email }}\"\n    source: \"{{ flowdock.source }}\"\n    msg: \"The task has completed and all is well\"\n    subject: \"Task Success\"\n```", "```\n- name: Send a message to a Hipchat room\n  hipchat:\n    api: \"https://api.hipchat.com/v2/\"\n    token: \"{{ hipchat.token }}\"\n    room: \"{{ hipchat.room }}\"\n    msg: \"The task has completed and all is well\"\n```", "```\n- name: Send an email using external mail servers\n  mail:\n    host: \"{{ mail.smtp_host }}\"\n    port: \"{{ mail.smtp_port }}\"\n    username: \"{{ mail.smtp_username }}\"\n    password: \"{{ mail.smtp_password }}\"\n    to: \"Russ McKendrick <russ@mckendrick.io>\"\n    subject: \"Task Success\"\n    body: \"The task has completed and all is well\"\n  delegate_to: localhost\n```", "```\n- name: Send a message to a Mattermost channel\n  mattermost:\n    url: \"{{ mattermost.url }}\"\n    api_key: \"{{ mattermost.api_key }}\"\n    text: \"The task has completed and all is well\"\n    channel: \"{{ mattermost.channel }}\"\n    username: \"{{ mattermost.username }}\"\n    icon_url: \"{{ mattermost.icon_url }}\"\n```", "```\n- name: Say a message on your Ansible host\n  say:\n    msg: \"The task has completed and all is well\"\n    voice: \"Daniel\"\n  delegate_to: localhost\n```", "```\n- name: Create an incident in ServiceNow\n  snow_record:\n    username: \"{{ snow.username }}\"\n    password: \"{{ snow.password }}\"\n    instance: \"{{ snow.instance }}\"\n    state: \"present\"\n    data:\n      short_description: \"The task has completed and all is well\"\n      severity: \"3\"\n      priority: \"3\"\n  register: snow_incident\n```", "```\n- name: Send a message to the hosts syslog\n  syslogger:\n    msg: \"The task has completed and all is well\"\n    priority: \"info\"\n    facility: \"daemon\"\n    log_pid: \"true\"\n```", "```\n- name: Send an SMS message using Twilio\n  twilio:\n    msg: \"The task has completed and all is well\"\n    account_sid: \"{{ twilio.account }}\"\n    auth_token: \"{{ twilio.auth }}\"\n    from_number: \"{{ twilio.from_mumber }}\"\n    to_number: \"+44 7911 123456\"\n  delegate_to: localhost\n```", "```\n---\n\n- hosts: localhost\n  gather_facts: false\n  debugger: \"on_failed\"\n\n  vars:\n    message: \"The task has completed and all is well\"\n    voice: \"Daniel\"\n\n  tasks:\n    - name: Say a message on your Ansible host\n      say:\n        msg: \"{{ massage }}\"\n        voice: \"{{ voice }}\"\n```", "```\n$ ansible-playbook playbook.yml\n```", "```\n[WARNING]: Unable to parse /etc/ansible/hosts as an inventory source\n[WARNING]: No inventory was parsed, only implicit localhost is available\n[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit\nlocalhost does not match 'all'\n```", "```\nPLAY [localhost] ***********************************************************************************\n\nTASK [Say a message on your Ansible host] **********************************************************\nfatal: [localhost]: FAILED! => {\"msg\": \"The task includes an option with an undefined variable. The error was: 'massage' is undefined\\n\\nThe error appears to have been in '/Users/russ/Documents/Code/learn-ansible-fundamentals-of-ansible-2x/chapter17/say/playbook.yml': line 12, column 7, but may\\nbe elsewhere in the file depending on the exact syntax problem.\\n\\nThe offending line appears to be:\\n\\n tasks:\\n - name: Say a message on your Ansible host\\n ^ here\\n\"}\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)>\n```", "```\np result._result\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)> p result._result\n{'failed': True,\n 'msg': u\"The task includes an option with an undefined variable. The error was: 'massage' is undefined\\n\\nThe error appears to have been in '/Users/russ/Documents/Code/learn-ansible-fundamentals-of-ansible-2x/chapter17/say/playbook.yml': line 12, column 7, but may\\nbe elsewhere in the file depending on the exact syntax problem.\\n\\nThe offending line appears to be:\\n\\n tasks:\\n - name: Say a message on your Ansible host\\n ^ here\\n\"}\n[localhost] TASK: Say a message on your Ansible host (debug)>\n```", "```\np task.args\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)> p task.args\n{u'msg': u'{{ massage }}', u'voice': u'{{ voice }}'}\n[localhost] TASK: Say a message on your Ansible host (debug)>\n```", "```\np task_vars\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)> p task_vars\n{'ansible_check_mode': False,\n 'ansible_connection': 'local',\n 'ansible_current_hosts': [u'localhost'],\n 'ansible_diff_mode': False,\n 'ansible_facts': {},\n 'ansible_failed_hosts': [],\n 'ansible_forks': 5,\n 'ansible_inventory_sources': [u'/etc/ansible/hosts'],\n 'ansible_play_batch': [],\n 'ansible_play_hosts': [u'localhost'],\n 'ansible_play_hosts_all': [u'localhost'],\n 'ansible_playbook_python': '/usr/bin/python',\n 'ansible_python_interpreter': '/usr/bin/python',\n 'ansible_run_tags': [u'all'],\n 'ansible_skip_tags': [],\n 'ansible_version': {'full': '2.5.5',\n 'major': 2,\n 'minor': 5,\n 'revision': 5,\n 'string': '2.5.5'},\n 'environment': [],\n 'group_names': [],\n 'groups': {'all': [], 'ungrouped': []},\n 'hostvars': {},\n 'inventory_hostname': u'localhost',\n 'inventory_hostname_short': u'localhost',\n u'message': u'The task has completed and all is well',\n 'omit': '__omit_place_holder__0529a2749315462e1ae1a0d261987dedea3bfdad',\n 'play_hosts': [],\n 'playbook_dir': u'/Users/russ/Documents/Code/learn-ansible-fundamentals-of-ansible-2x/chapter17/say',\n u'voice': u'Daniel'}\n[localhost] TASK: Say a message on your Ansible host (debug)>\n```", "```\np task_vars['message']\np task_vars['voice']\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)> p task_vars['message']\nu'The task has completed and all is well'\n[localhost] TASK: Say a message on your Ansible host (debug)> p task_vars['voice']\nu'Daniel'\n[localhost] TASK: Say a message on your Ansible host (debug)>\n```", "```\ntask.args['msg'] = '{{ message }}'\n```", "```\nredo\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)> task.args['msg'] = '{{ message }}'\n[localhost] TASK: Say a message on your Ansible host (debug)> redo\nchanged: [localhost]\n\n```", "```\nPLAY RECAP ************************************************************************************************************************************\nlocalhost : ok=1 changed=1 unreachable=0 failed=0\n```"]