["```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nAPI_VERSION = \"2\"\nBOX_NAME = \"centos/7\"\nBOX_IP = \"10.20.30.40\"\nDOMAIN = \"nip.io\"\nPRIVATE_KEY = \"~/.ssh/id_rsa\"\nPUBLIC_KEY = '~/.ssh/id_rsa.pub'\n\nVagrant.configure(API_VERSION) do |config|\n  config.vm.box = BOX_NAME\n  config.vm.network \"private_network\", ip: BOX_IP\n  config.vm.host_name = BOX_IP + '.' + DOMAIN\n  config.ssh.insert_key = false\n  config.ssh.private_key_path = [PRIVATE_KEY, \"~/.vagrant.d/insecure_private_key\"]\n  config.vm.provision \"file\", source: PUBLIC_KEY, destination: \"~/.ssh/authorized_keys\"\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = \"2024\"\n    v.cpus = \"2\"\n  end\n\n  config.vm.provider \"vmware_fusion\" do |v|\n    v.vmx[\"memsize\"] = \"2024\"\n    v.vmx[\"numvcpus\"] = \"2\"\n  end\n\nend\n```", "```\n$ vagrant up\n$ vagrant up --provider=vmware_fusion\n```", "```\n[tower]\n10.20.30.40.nip.io ansible_connection=ssh ansible_user=vagrant ansible_private_key_file=~/.ssh/id_rsa host_key_checking=False\n\n[database]\n\n[all:vars]\nadmin_password='password'\n\npg_host=''\npg_port=''\n\npg_database='awx'\npg_username='awx'\npg_password='iHpkiPEAHpGeR8paCoVhwLPH'\n\nrabbitmq_port=5672\nrabbitmq_vhost=tower\nrabbitmq_username=tower\nrabbitmq_password='WUwTLJK2AtdxCfopcXFQoVYs'\nrabbitmq_cookie=cookiemonster\n\n# Needs to be true for fqdns and ip addresses\nrabbitmq_use_long_name=true\n\n# Isolated Tower nodes automatically generate an RSA key for authentication;\n# To disable this behavior, set this value to false\n# isolated_key_generation=true\n```", "```\n$ ansible-playbook -i inventory --become install.yml\n```", "```\n$ vagrant ssh\n```", "```\n$ sudo -i\n```", "```\n$ source /var/lib/awx/venv/ansible/bin/activate\n```", "```\n$ pip install boto boto3 botocore --upgrade\n```", "```\n$ deactivate\n```", "```\n# Register all of the host groups we will be creating in the playbooks\n[ec2_instance]\n[already_running]\n\n# Put all the groups into into a single group so we can easily apply one config to it for overriding things like the ssh user and key location\n[aws:children]\nec2_instance\nalready_running\n\n# Finally, configure some bits to allow us access to the instances before we deploy our credentials using Ansible\n[aws:vars]\nansible_ssh_user=centos\nansible_ssh_private_key_file=~/.ssh/id_rsa\nhost_key_checking=False\n```", "```\nansible_ssh_user: \"centos\"\nansible_ssh_private_key_file: \"~/.ssh/id_rsa\"\nhost_key_checking: \"False\"\n```", "```\n- name: prompt\n  pause:\n    prompt: \"Make sure the elastic load balancer has been terminated before proceeding\"\n```", "```\n- name: wait for 2 minutes before continuing\n  pause:\n    minutes: 2\n```", "```\n$ mkdir awx awx/group_vars awx/roles\n$ touch awx/production awx/site.yml awx/group_vars/common.yml awx/Vagrantfile\n```", "```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nAPI_VERSION = \"2\"\nBOX_NAME = \"centos/7\"\nBOX_IP = \"10.20.30.50\"\nDOMAIN = \"nip.io\"\nPRIVATE_KEY = \"~/.ssh/id_rsa\"\nPUBLIC_KEY = '~/.ssh/id_rsa.pub'\n\nVagrant.configure(API_VERSION) do |config|\n  config.vm.box = BOX_NAME\n  config.vm.network \"private_network\", ip: BOX_IP\n  config.vm.host_name = BOX_IP + '.' + DOMAIN\n  config.ssh.insert_key = false\n  config.ssh.private_key_path = [PRIVATE_KEY, \"~/.vagrant.d/insecure_private_key\"]\n  config.vm.provision \"file\", source: PUBLIC_KEY, destination: \"~/.ssh/authorized_keys\"\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = \"2024\"\n    v.cpus = \"2\"\n  end\n\n  config.vm.provider \"vmware_fusion\" do |v|\n    v.vmx[\"memsize\"] = \"2024\"\n    v.vmx[\"numvcpus\"] = \"2\"\n  end\n\nend\n```", "```\n$ ansible-galaxy init roles/docker\n```", "```\ndocker:\n  gpg_key: \"https://download.docker.com/linux/centos/gpg\"\n  repo_url: \"https://download.docker.com/linux/centos/docker-ce.repo\"\n  repo_path: \"/etc/yum.repos.d/docker-ce.repo\"\n  packages:\n    - \"docker-ce\"\n    - \"device-mapper-persistent-data\"\n    - \"lvm2\"\n    - \"python-setuptools\"\n    - \"libselinux-python\"\n  pip:\n    - \"docker\"\n```", "```\n- name: update all of the installed packages\n  yum:\n    name: \"*\"\n    state: \"latest\"\n    update_cache: \"yes\"\n\n- name: add the gpg key for the docker repo\n  rpm_key:\n    key: \"{{ docker.gpg_key }}\"\n    state: \"present\"\n\n- name: add docker repo from the remote url\n  get_url:\n    url: \"{{ docker.repo_url }}\"\n    dest: \"{{ docker.repo_path }}\"\n    mode: \"0644\"\n\n- name: install the docker packages\n  yum:\n    name: \"{{ item }}\"\n    state: \"installed\"\n    update_cache: \"yes\"\n  with_items: \"{{ docker.packages }}\"\n\n- name: install pip\n  easy_install:\n    name: pip\n    state: latest\n\n- name: install the python packages\n  pip:\n    name: \"{{ item }}\"\n  with_items: \"{{ docker.pip }}\"\n\n- name: put selinux into permissive mode\n  selinux:\n    policy: targeted\n    state: permissive\n\n- name: start docker and configure to start on boot\n  service:\n    name: \"docker\"\n    state: \"started\"\n    enabled: \"yes\"\n```", "```\n$ ansible-galaxy init roles/awx\n```", "```\nawx:\n  repo_url: \"https://github.com/ansible/awx.git\"\n  logo_url: \"https://github.com/ansible/awx-logos.git\"\n  repo_path: \"~/awx/\"\n  packages:\n    - \"git\"\n  pip:\n    - \"ansible\"\n    - \"boto\"\n    - \"boto3\"\n    - \"botocore\"\n  install_command: 'ansible-playbook -i inventory --extra-vars \"awx_official=true\" install.yml'\n```", "```\n- name: install the awx packages\n  yum:\n    name: \"{{ item }}\"\n    state: \"installed\"\n    update_cache: \"yes\"\n  with_items: \"{{ awx.packages }}\"\n\n- name: install the python packages\n  pip:\n    name: \"{{ item }}\"\n  with_items: \"{{ awx.pip }}\"\n```", "```\n- name: check out the awx repo\n  git:\n    repo: \"{{ awx.repo_url }}\"\n    dest: \"{{ awx.repo_path }}\"\n    clone: \"yes\"\n    update: \"yes\"\n\n- name: check out the awx logos repo\n  git:\n    repo: \"{{ awx.logo_url }}\"\n    dest: \"{{ awx.repo_path }}\"\n    clone: \"yes\"\n    update: \"yes\"\n```", "```\n- name: install awx\n  command: \"{{ awx.install_command }}\"\n  args:\n    chdir: \"{{ awx.repo_path }}installer\"\n```", "```\nbox ansible_host=10.20.30.50.nip.io\n\n[awx]\nbox\n\n[awx:vars]\nansible_connection=ssh\nansible_user=vagrant\nansible_private_key_file=~/.ssh/id_rsa\nhost_key_checking=False\n```", "```\n---\n\n- hosts: awx\n  gather_facts: true\n  become: yes\n  become_method: sudo\n\n  vars_files:\n    - group_vars/common.yml\n\n  roles:\n    - roles/docker\n    - roles/awx\n```", "```\n$ vagrant up\n$ vagrant up --provider=vmware_fusion\n```", "```\n$ ansible-playbook -i production site.yml\n```"]