["```\napiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    name: demo\n  name: demo\n```", "```\nkind: StorageClass\napiVersion: storage.k8s.io/v1beta1\nmetadata:\n  name: azure-disk\nprovisioner: kubernetes.io/azure-disk\nparameters:\n  storageaccounttype: Standard_LRS\n  kind: Managed\n```", "```\napiVersion: helm.fluxcd.io/v1 \nkind: HelmRelease\nmetadata:\n  name: voting-application\n  namespace: demo\n  annotations:\n    fluxcd.io/automated: \"true\"\nspec:\n  releaseName: voting-application\n  helmVersion: v3\n  timeout: 1200\n  wait: false\n  rollback:\n    enable: false\n  chart:\n    git: ssh://git@github.com/hands-on-kubernetes-on-windows/voting-application-flux\n    ref: master\n    path: charts/voting-application\n```", "```\nchoco install fluxctl\n```", "```\nkubectl create namespace fluxcd\n```", "```\nhelm repo add fluxcd https://charts.fluxcd.io\n```", "```\nhelm upgrade -i flux fluxcd/flux `\n --namespace fluxcd `\n --set \"nodeSelector.`\"kubernetes\\.io/os`\"=linux\" `\n --set \"memcached.nodeSelector.`\"kubernetes\\.io/os`\"=linux\" `\n --set \"helmOperator.nodeSelector.`\"kubernetes\\.io/os`\"=linux\" `\n --set git.url=git@github.com:hands-on-kubernetes-on-windows/voting-application-flux `\n --debug\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/fluxcd/helm-operator/helm-v3-dev/deploy/flux-helm-release-crd.yaml\n```", "```\nhelm upgrade -i helm-operator fluxcd/helm-operator `\n --namespace fluxcd `\n --set git.ssh.secretName=flux-git-deploy `\n --set configureRepositories.enable=true `\n --set configureRepositories.repositories[0].name=stable `\n --set configureRepositories.repositories[0].url=https://kubernetes-charts.storage.googleapis.com `\n --set extraEnvs[0].name=HELM_VERSION `\n --set extraEnvs[0].value=v3 `\n --set image.repository=docker.io/fluxcd/helm-operator-prerelease `\n --set image.tag=helm-v3-dev-ca9c8ba0 `\n --set \"nodeSelector.`\"kubernetes\\.io/os`\"=linux\" \n```", "```\nfluxctl identity --k8s-fwd-ns fluxcd\n```", "```\nfluxctl sync --k8s-fwd-ns fluxcd\n```", "```\nPS C:\\src> kubectl get all -n demo\nNAME                                                  READY   STATUS    RESTARTS   AGE\npod/voting-application-5cb4987765-7ht4x               0/1     Running   1          2m\npod/voting-application-5cb4987765-dstml               0/1     Running   1          2m\n...\n```", "```\nPS C:\\src> kubectl get pods -n demo\nNAME                                              READY   STATUS              RESTARTS   AGE\nvoting-application-55fb99587d-rjvmq               0/1     Running             0          16s\nvoting-application-55fb99587d-whrwv               1/1     Running             0          79s\nvoting-application-55fb99587d-x9j8q               0/1     ContainerCreating   0          79s\nvoting-application-5cb4987765-g2lx8               1/1     Terminating         0          21m\n```", "```\nPS C:\\src> kubectl describe pod -n demo voting-application-55fb99587d-rjvmq\n...\nContainers:\n voting-application-frontend:\n Container ID: docker://61e207885bcfc3bde670702e342345127dcf0d6e782609bc68127078fc007034\n Image: packtpubkubernetesonwindows/voting-application:1.6.0\n```", "```\nPS C:\\src> aks-engine get-versions --version 1.16.1 --windows\nVersion Upgrades\n1.16.1 1.17.0-alpha.1, 1.17.0-alpha.2, 1.17.0-alpha.3, 1.17.0-beta.1\n```", "```\naz ad sp create-for-rbac `\n --role=\"Contributor\" `\n --scopes=\"/subscriptions/<azureSubscriptionId>/resourceGroups/<resourceGroupName>\"\n```", "```\naks-engine upgrade `\n --subscription-id <azureSubscriptionId> `\n --api-model .\\_output\\<dnsPrefix>\\apimodel.json `\n --location <azureLocation> `\n --resource-group <resourceGroupName> `\n --upgrade-version \"1.17.0-beta.1\" `\n --auth-method client_secret `\n --client-id <appId> `\n --client-secret <password>\n```", "```\nPS C:\\src> kubectl get nodes\nNAME                        STATUS   ROLES    AGE     VERSION\n1754k8s010                  Ready    agent    17m     v1.17.0-beta.1\n1754k8s012                  Ready    agent    26m     v1.17.0-beta.1\nk8s-linuxpool1-17543130-0   Ready    agent    3m44s   v1.17.0-beta.1\nk8s-linuxpool1-17543130-2   Ready    agent    9m51s   v1.17.0-beta.1\nk8s-master-17543130-0       Ready    master   48m     v1.17.0-beta.1\n```", "```\nPS C:\\src> az vm show -g <resourceGroupName> -n 1754k8s010 --show-details --query 'privateIps'\n\"10.240.0.35,10.240.0.36,10.240.0.37,10.240.0.38,10.240.0.39,10.240.0.40,10.240.0.41,10.240.0.42,10.240.0.43,10.240.0.44,10.240.0.45,10.240.0.46,10.240.0.47,10.240.0.48,10.240.0.49,10.240.0.50,10.240.0.51,10.240.0.52,10.240.0.53,10.240.0.54,10.240.0.55,10.240.0.56,10.240.0.57,10.240.0.58,10.240.0.59,10.240.0.60,10.240.0.61,10.240.0.62,10.240.0.63,10.240.0.64,10.240.0.65\"\n```", "```\nssh -L 5500:10.240.0.35:3389 azureuser@<dnsPrefix>.<azureLocation>.cloudapp.azure.com\n```", "```\nmstsc /v:localhost:5500\n```", "```\nPS C:\\src> kubectl drain 1754k8s010\nnode/1754k8s010 cordoned\nnode/1754k8s010 drained\n```", "```\nPS C:\\src> kubectl uncordon 1754k8s010\nnode/1754k8s010 uncordoned\n```", "```\nHTTP_PROXY=http://proxy.example.com:8080/\nHTTPS_PROXY=http://proxy.example.com:9090/\nhttp_proxy=http://proxy.example.com:8080/\nhttps_proxy=http://proxy.example.com:9090/\n```", "```\n[Service]\nEnvironment=\"HTTP_PROXY=http://proxy.example.com:8080/\" \"HTTPS_PROXY=http://proxy.example.com:9090/\" \n```", "```\ndocker build --build-arg http_proxy=http://proxy.example.com:8080/ \\\n --build-arg https_proxy=http://proxy.example.com:9090/ \\\n -t someimage .\n```", "```\n[Environment]::SetEnvironmentVariable(\"HTTP_PROXY\", \"http://proxy.example.com:8080/\", [EnvironmentVariableTarget]::Machine)\n[Environment]::SetEnvironmentVariable(\"HTTPS_PROXY\", \"http://proxy.example.com:9090/\", [EnvironmentVariableTarget]::Machine)\n```", "```\nreg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v ProxyServer /t REG_SZ /d proxy.example.com:8080 /f\nreg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v ProxyEnable /t REG_DWORD /d 1 /f\n```"]