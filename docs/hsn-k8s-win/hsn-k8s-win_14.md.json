["```\npublic object Create(IContext context)\n{\n var connectionString = Environment.GetEnvironmentVariable(\"CONNECTIONSTRING_VotingApplication\");\n if (!string.IsNullOrEmpty(connectionString))\n {\n var safeConnectionString = SanitizeConnectionString(connectionString);\n this.log.Info(\"Using custom connection string provided by environment variable: {0}\", safeConnectionString);\n return new VotingApplicationContext(connectionString);\n }\n\n this.log.Info(\"Using default connection string\");\n return new VotingApplicationContext();\n}\n```", "```\nWORKDIR /LogMonitor\nCOPY LogMonitor.exe LogMonitorConfig.json .\nSHELL [\"C:\\\\LogMonitor\\\\LogMonitor.exe\", \"powershell.exe\"]\n\nENTRYPOINT C:\\ServiceMonitor.exe w3svc\n```", "```\n{\n  \"LogConfig\": {\n    \"sources\": [\n      {\n        \"type\": \"EventLog\",\n        \"startAtOldestRecord\": true,\n        \"eventFormatMultiLine\": false,\n        \"channels\": [\n          {\n            \"name\": \"system\",\n            \"level\": \"Error\"\n          }\n        ]\n      },\n      {\n        \"type\": \"EventLog\",\n        \"startAtOldestRecord\": true,\n        \"eventFormatMultiLine\": false,\n        \"channels\": [\n          {\n            \"name\": \"VotingApplication\",\n            \"level\": \"Verbose\"\n          }\n        ]\n      },\n      {\n        \"type\": \"File\",\n        \"directory\": \"c:\\\\inetpub\\\\logs\",\n        \"filter\": \"*.log\",\n        \"includeSubdirectories\": true\n      },\n      {\n        \"type\": \"ETW\",\n        \"providers\": [\n          {\n            \"providerName\": \"IIS: WWW Server\",\n            \"ProviderGuid\": \"3A2A4E84-4C21-4981-AE10-3FDA0D9B0F83\",\n            \"level\": \"Information\"\n          },\n          {\n            \"providerName\": \"Microsoft-Windows-IIS-Logging\",\n            \"ProviderGuid \": \"7E8AD27F-B271-4EA2-A783-A47BDE29143B\",\n            \"level\": \"Information\",\n            \"keywords\": \"0xFF\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```", "```\nprivate static void RegisterServices(IKernel kernel)\n{\n    Log.Logger = new LoggerConfiguration()\n        .ReadFrom.AppSettings()\n        .Enrich.FromLogContext()\n        .WriteTo.EventLog(source: \"VotingApplication\", logName: \"VotingApplication\", manageEventSource: false)\n        .CreateLogger();\n\n    kernel.Bind<VotingApplicationContext>().ToProvider(typeof(VotingApplicationContextFactory)).InRequestScope();\n    kernel.Bind<IDateTimeProvider>().To<DateTimeProvider>().InRequestScope();\n}\n```", "```\nFROM mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019 AS build\nARG PUBLISH_PROFILE=DockerPublishProfile.pubxml\nARG BUILD_CONFIG=Release\n\nWORKDIR /app\n\nCOPY *.sln ./\nCOPY *.csproj ./\nCOPY *.config ./\nRUN nuget restore\n\nCOPY . .\nRUN msbuild /p:DeployOnBuild=true /p:PublishProfile=$env:PUBLISH_PROFILE /p:Configuration=$env:BUILD_CONFIG\n```", "```\n<Project ToolsVersion=\"4.0\" >\n  <PropertyGroup>\n    <WebPublishMethod>FileSystem</WebPublishMethod>\n    <PublishProvider>FileSystem</PublishProvider>\n    <LastUsedBuildConfiguration>Release</LastUsedBuildConfiguration>\n    <LastUsedPlatform>Any CPU</LastUsedPlatform>\n    <SiteUrlToLaunchAfterPublish />\n    <LaunchSiteAfterPublish>True</LaunchSiteAfterPublish>\n    <ExcludeApp_Data>False</ExcludeApp_Data>\n    <publishUrl>obj\\Docker\\publish</publishUrl>\n    <DeleteExistingFiles>True</DeleteExistingFiles>\n  </PropertyGroup>\n</Project>\n```", "```\nFROM mcr.microsoft.com/dotnet/framework/aspnet:4.8-windowsservercore-ltsc2019 AS runtime\n\nWORKDIR /ef6\nCOPY --from=build /app/packages/EntityFramework.6.3.0/tools/net45/any/ .\n```", "```\nRUN powershell.exe -Command New-EventLog -LogName VotingApplication -Source VotingApplication\n```", "```\nWORKDIR /LogMonitor\nADD https://github.com/microsoft/windows-container-tools/releases/download/v1.0/LogMonitor.exe .\nCOPY --from=build /app/LogMonitorConfig.json .\nSHELL [\"C:\\\\LogMonitor\\\\LogMonitor.exe\", \"powershell.exe\"]\n```", "```\nWORKDIR /inetpub/wwwroot\nCOPY --from=build /app/obj/Docker/publish/. .\n```", "```\nENTRYPOINT C:\\ServiceMonitor.exe w3svc\n```", "```\ndocker build -t packtpubkubernetesonwindows/voting-application -f .\\Dockerfile.production .\n```", "```\ndocker tag packtpubkubernetesonwindows/voting-application:latest packtpubkubernetesonwindows/voting-application:1.0.0\ndocker tag packtpubkubernetesonwindows/voting-application:latest packtpubkubernetesonwindows/voting-application:1.0\ndocker tag packtpubkubernetesonwindows/voting-application:latest packtpubkubernetesonwindows/voting-application:1\n```", "```\ndocker push packtpubkubernetesonwindows/voting-application\n```", "```\n.\\01_CreateAKSEngineClusterWithWindowsNodes.ps1 `\n -azureSubscriptionId <subscriptionId> `\n -dnsPrefix <globallyUniqueDnsPrefix> `\n -windowsPassword <windowsNodesPassword>\n```", "```\n$env:KUBECONFIG=\".\\_output\\<globallyUniqueDnsPrefix>\\kubeconfig\\kubeconfig.westeurope.json;$env:USERPROFILE\\.kube\\config\"\nkubectl config view --raw > $env:USERPROFILE\\.kube\\config_new\n Move-Item -Force $env:USERPROFILE\\.kube\\config_new $env:USERPROFILE\\.kube\\config\n```", "```\nkubectl get nodes\n```", "```\nkind: Namespace\napiVersion: v1\nmetadata:\n  name: dev\n  labels:\n    name: dev\n```", "```\nkind: StorageClass\napiVersion: storage.k8s.io/v1beta1\nmetadata:\n  name: azure-disk\nprovisioner: kubernetes.io/azure-disk\nparameters:\n  storageaccounttype: Standard_LRS\n  kind: Managed\n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  namespace: dev\n  name: mssql-data\n  annotations:\n    volume.beta.kubernetes.io/storage-class: azure-disk\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 8Gi\n```", "```\nkubectl create secret generic -n dev mssql --from-literal=SA_PASSWORD=\"S3cur3P@ssw0rd\"\n```", "```\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  namespace: dev\n  name: mssql-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mssql\n  template:\n    metadata:\n      labels:\n        app: mssql\n    spec:\n      terminationGracePeriodSeconds: 10\n      initContainers:\n      - name: volume-mount-permissions-fix  # (1)\n        image: busybox\n        command: [\"sh\", \"-c\", \"chown -R 10001:0 /var/opt/mssql\"]\n        volumeMounts:\n        - name: mssqldb\n          mountPath: /var/opt/mssql\n      containers:\n      - name: mssql\n        image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04\n        ports:\n        - containerPort: 1433\n        env:\n        - name: MSSQL_PID  # (2)\n          value: \"Developer\"\n        - name: ACCEPT_EULA\n          value: \"Y\"\n        - name: MSSQL_SA_PASSWORD  # (3)\n          valueFrom:\n            secretKeyRef:\n              name: mssql\n              key: SA_PASSWORD  # (4)\n        volumeMounts:  # (5)\n        - name: mssqldb\n          mountPath: /var/opt/mssql\n      volumes:\n      - name: mssqldb\n        persistentVolumeClaim:\n          claimName: mssql-data\n      nodeSelector:\n        \"beta.kubernetes.io/os\": linux\n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n  namespace: dev\n  name: mssql-deployment\nspec:\n  selector:\n    app: mssql\n  ports:\n    - protocol: TCP\n      port: 1433\n      targetPort: 1433\n  type: LoadBalancer\n```", "```\nPS C:\\src> kubectl get pods -n dev --watch\nNAME                                READY   STATUS    RESTARTS   AGE\nmssql-deployment-58bcb8b89d-7f9xz   1/1     Running   0          8m37s\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: dev\n  name: voting-application-frontend\n  labels:\n    app: voting-application\nspec:\n  replicas: 5  # (1)\n  minReadySeconds: 5  # (2)\n  strategy:  # (3)\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 25%\n      maxSurge: 25%\n  selector:\n    matchLabels:\n      app: voting-application\n  template:\n    metadata:\n      name: voting-application-frontend\n      labels:\n        app: voting-application\n    spec:\n      nodeSelector:  # (4)\n        \"beta.kubernetes.io/os\": windows\n      containers:\n      - name: frontend\n        image: packtpubkubernetesonwindows/voting-application:1.0.0  # (5)\n        env:\n        - name: MSSQL_SA_PASSWORD  # (6b)\n          valueFrom:\n            secretKeyRef:\n              name: mssql\n              key: SA_PASSWORD  # (6a)\n        - name: CONNECTIONSTRING_VotingApplication  # (6c)\n          value: \"Data Source=mssql-deployment;Initial Catalog=VotingApplication;MultipleActiveResultSets=true;User Id=sa;Password=$(MSSQL_SA_PASSWORD);\"\n        ports:\n          - containerPort: 80\n        resources:\n          limits:\n            cpu: 500m\n          requests:\n            cpu: 500m\n```", "```\nPS C:\\src> kubectl get pods -n dev\nNAME                                           READY   STATUS    RESTARTS   AGE\nmssql-deployment-58bcb8b89d-7f9xz              1/1     Running   0          19h\nvoting-application-frontend-6876dcc678-kdmcw   1/1     Running   0          19m\nvoting-application-frontend-6876dcc678-mhdr9   1/1     Running   0          19m\nvoting-application-frontend-6876dcc678-qsmst   1/1     Running   0          19m\nvoting-application-frontend-6876dcc678-w5hch   1/1     Running   0          19m\nvoting-application-frontend-6876dcc678-zqr26   1/1     Running   0          19m\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  namespace: dev\n  name: voting-application-ef6-update-database3\n  labels:\n    app: voting-application\nspec:\n  ttlSecondsAfterFinished: 600  # (1)\n  template:\n    spec:\n      nodeSelector:  # (2)\n        \"beta.kubernetes.io/os\": windows\n      containers:\n      - name: ef6-update-database\n        image: packtpubkubernetesonwindows/voting-application:1.0.0  # (3)\n        command: [\"c:/ef6/ef6.exe\",  # (4)\n                  \"database\", \"update\", \n                  \"--verbose\",\n                  \"--assembly\", \"/inetpub/wwwroot/bin/VotingApplication.dll\",\n                  \"--connection-string\", \"Data Source=mssql-deployment;Initial Catalog=VotingApplication;MultipleActiveResultSets=true;User Id=sa;Password=$(MSSQL_SA_PASSWORD);\",\n                  \"--connection-provider\", \"System.Data.SqlClient\",\n                  \"--config\", \"/inetpub/wwwroot/Web.config\"]\n        env:\n        - name: MSSQL_SA_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: mssql\n              key: SA_PASSWORD\n      restartPolicy: Never\n      nodeSelector:\n        \"beta.kubernetes.io/os\": windows\n  backoffLimit: 4\n```", "```\nPS C:\\src> kubectl get jobs -n dev\nNAME                                      COMPLETIONS   DURATION   AGE\nvoting-application-ef6-update-database    1/1           50s        103s\n```", "```\nPS C:\\src> kubectl logs -n dev jobs/voting-application-ef6-update-database\nSpecify the '-Verbose' flag to view the SQL statements being applied to the target database.\nTarget database is: 'VotingApplication' (DataSource: mssql-deployment, Provider: System.Data.SqlClient, Origin: Explicit).\nNo pending explicit migrations.\nApplying automatic migration: 201911201840183_AutomaticMigration.\nCREATE TABLE [dbo].[Options] (\n...\n```", "```\nPS C:\\src> kubectl describe job -n dev voting-application-ef6-update-database\n...\nEvents:\n Type    Reason            Age    From            Message\n ----    ------            ----   ----            -------\n Normal  SuccessfulCreate  6m23s  job-controller  Created pod: voting-application-ef6-update-database-chw6s\n```", "```\nkubectl describe pod -n dev voting-application-ef6-update-database\n```", "```\nPS C:\\src> kubectl port-forward -n dev deployment/voting-application-frontend 5000:80\nForwarding from 127.0.0.1:5000 -> 80\nForwarding from [::1]:5000 -> 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: dev\n  name: voting-application-frontend\n  labels:\n    app: voting-application\nspec:\n  type: LoadBalancer (1)\n  ports:\n  - protocol: TCP\n    port: 80 (2)\n  selector:\n    app: voting-application\n```", "```\nPS C:\\src> kubectl get svc -n dev -w\nNAME                          TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)          AGE\nmssql-deployment              LoadBalancer   10.0.134.237   104.210.54.75    1433:31446/TCP   21h\nvoting-application-frontend   LoadBalancer   10.0.50.43     104.42.142.217   80:32357/TCP     62s\n```", "```\nServed by: voting-application-frontend-6876dcc678-zqr26 (10.240.0.44)\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  ...\nspec:\n  replicas: 10\n```", "```\nPS C:\\src> kubectl get deployments -n dev -w\nNAME                          READY   UP-TO-DATE   AVAILABLE   AGE\nmssql-deployment              1/1     1            1           21h\nvoting-application-frontend   6/10    10           5           125m\n```", "```\nPS C:\\src> kubectl get pods -n dev\nNAME                                            READY   STATUS      RESTARTS   AGE\n...\nvoting-application-frontend-6876dcc678-9ssc4    0/1     Pending     0          6m1s\n...\n```", "```\nPS C:\\src> kubectl describe pod -n dev voting-application-frontend-6876dcc678-9ssc4\nEvents:\n Type     Reason            Age        From               Message\n ----     ------            ----       ----               -------\n Warning  FailedScheduling  <unknown>  default-scheduler  0/5 nodes are available: 2 Insufficient cpu, 3 node(s) didn't match node selector.\n```", "```\napiVersion: apps/v1\nkind: Deployment\n...\nspec:\n  strategy:\n    ...\n    rollingUpdate:\n      maxUnavailable: 50%\n  ...\n  template:\n    ...\n    spec:\n      ...\n      containers:\n      - name: frontend\n        ...\n        resources:\n          limits:\n            cpu: 500m\n          requests:\n            cpu: 250m\n```", "```\nPS C:\\src> kubectl logs -n dev deployment/voting-application-frontend\n...\n<Source>EventLog</Source><Time>2019-11-20T22:51:17.000Z</Time><LogEntry><Channel>VotingApplication</Channel><Level>Information</Level><EventId>55509</EventId><Message>Using custom connection string provided by environment variable: \"data source=mssql-deployment;initial catalog=VotingApplication;multipleactiveresultsets=true;user id=sa;password=*****\" </Message></LogEntry>\n...\n```", "```\nFROM mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019 AS build\nARG PUBLISH_PROFILE=DockerPublishProfileDebug.pubxml\nARG BUILD_CONFIG=Debug\n\nWORKDIR /app\n\nCOPY *.sln ./\nCOPY *.csproj ./\nCOPY *.config ./\nRUN nuget restore\n\nCOPY . .\nRUN msbuild /p:DeployOnBuild=true /p:PublishProfile=$env:PUBLISH_PROFILE /p:Configuration=$env:BUILD_CONFIG\n```", "```\nFROM mcr.microsoft.com/dotnet/framework/aspnet:4.8-windowsservercore-ltsc2019 AS runtime\n\nWORKDIR /temp\nRUN powershell.exe -Command Invoke-WebRequest https://aka.ms/vs/16/release/RemoteTools.amd64ret.enu.exe -OutFile VS_RemoteTools.exe \nRUN powershell.exe -Command ./VS_RemoteTools.exe /install /quiet\nEXPOSE 4020\n```", "```\nENTRYPOINT Start-Process -NoNewWindow 'C:\\Program Files\\Microsoft Visual Studio 16.0\\Common7\\IDE\\Remote Debugger\\x64\\msvsmon.exe' -ArgumentList /nostatus,/silent,/noauth,/anyuser,/nosecuritywarn,/port,4020; C:\\ServiceMonitor.exe w3svc\n```", "```\ndocker build -t packtpubkubernetesonwindows/voting-application:1.0.0-debug -f .\\Dockerfile.debug .\n```", "```\ndocker push packtpubkubernetesonwindows/voting-application:1.0.0-debug\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  ...\nspec:\n  replicas: 1\n  ...\n  template:\n    ...\n    spec:\n      ...\n      containers:\n      - name: frontend\n        image: packtpubkubernetesonwindows/voting-application:1.0.0-debug\n        imagePullPolicy: Always\n```", "```\nkubectl get pods -n dev\n```", "```\nPS C:\\src> kubectl cp -n dev voting-application-frontend-66b95ff674-mmsbk:/inetpub/wwwroot/bin/VotingApplication.pdb VotingApplication.pdb\ntar: Removing leading '/' from member names\n```", "```\n$id = $(docker create packtpubkubernetesonwindows/voting-application:1.0.0-debug)\ndocker cp $id`:/inetpub/wwwroot/bin/VotingApplication.pdb VotingApplication.pdb\ndocker rm -v $id\n```", "```\nPS C:\\src> kubectl port-forward -n dev deployment/voting-application-frontend 5000:4020\nForwarding from 127.0.0.1:5000 -> 4020\nForwarding from [::1]:5000 -> 4020\n```", "```\nPS C:\\src> kubectl exec -n dev -it voting-application-frontend-66b95ff674-vn256 powershell\nWindows PowerShell\nCopyright (C) Microsoft Corporation. All rights reserved.\nPS C:\\inetpub\\wwwroot> Get-Process\n...\n 218      12     2240       9016       0.06  12360   2 msvsmon\n```"]