["```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment-example\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      environment: test\n  template:\n    metadata:\n      labels:\n        environment: test\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.17\n        ports:\n        - containerPort: 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-deployment-example-clusterip\nspec:\n  selector:\n    environment: test\n  type: ClusterIP\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-deployment-example-nodeport\nspec:\n  selector:\n    environment: test\n  type: NodePort\n  ports:\n  - port: 8080\n    nodePort: 31001\n    protocol: TCP\n    targetPort: 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-deployment-example-lb\nspec:\n  selector:\n    environment: test\n  type: LoadBalancer\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 80\n```", "```\nPS C:\\src> kubectl get svc nginx-deployment-example-lb\nNAME                          TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)          AGE\nnginx-deployment-example-lb   LoadBalancer   10.0.190.215   137.117.227.83   8080:30141/TCP   2m23s\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: externalname-example-service\nspec:\n  type: ExternalName\n  externalName: cloud.database.example.com\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud-generic.yaml\n```", "```\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  name: example-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /service1\n        backend:\n          serviceName: example-service1\n          servicePort: 80\n      - path: /service2\n        backend:\n          serviceName: example-service2\n          servicePort: 80\n```", "```\n{\n    \"Network\": \"10.244.0.0/16\",\n    \"Backend\": {\n        \"Type\": \"vxlan\",\n        \"VNI\": 4096,\n        \"Port\": 4789\n    }\n}\n```", "```\nFLANNEL_NETWORK=10.244.0.0/16\nFLANNEL_SUBNET=10.244.1.0/24\nFLANNEL_MTU=1472\nFLANNEL_IPMASQ=true\n```", "```\ndocker network create -d <networkType> <additionalParameters> <name> \n```"]