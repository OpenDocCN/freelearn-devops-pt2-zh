["```\n$dnsPrefix = \"handson-aks-engine-win-aad\"\n```", "```\n$serverApplicationId = az ad app create `\n --display-name \"${dnsPrefix}Server\" `\n --identifier-uris \"https://${dnsPrefix}Server\" `\n --query appId -o tsv\n```", "```\naz ad app update `\n --id $serverApplicationId `\n --set groupMembershipClaims=All\n```", "```\naz ad sp create `\n --id $serverApplicationId\n```", "```\n$serverApplicationSecret = az ad sp credential reset `\n --name $serverApplicationId `\n --credential-description \"AKSPassword\" `\n --query password -o tsv\n```", "```\naz ad app permission add `\n --id $serverApplicationId `\n --api 00000003-0000-0000-c000-000000000000 `\n --api-permissions e1fe6dd8-ba31-4d61-89e7-88639da4683d=Scope 06da0dbc-49e2-44d2-8312-53f166ab848a=Scope 7ab1d382-f21e-4acd-a863-ba3e13f7da61=Role\n```", "```\naz ad app permission grant `\n --id $serverApplicationId `\n --api 00000003-0000-0000-c000-000000000000 \naz ad app permission admin-consent `\n --id $serverApplicationId\n```", "```\n$clientApplicationId = az ad app create `\n --display-name \"${dnsPrefix}Client\" `\n --native-app `\n --reply-urls \"https://${dnsPrefix}Client\" `\n --query appId -o tsv\n```", "```\naz ad sp create `\n --id $clientApplicationId\n```", "```\n$oauth2PermissionId = az ad app show \n --id $serverApplicationId `\n --query \"oauth2Permissions[0].id\" -o tsv\n```", "```\naz ad app permission add `\n --id $clientApplicationId `\n --api $serverApplicationId `\n --api-permissions $oauth2PermissionId=Scope\n\naz ad app permission grant `\n --id $clientApplicationId `\n --api $serverApplicationId\n```", "```\n$adminGroupId = az ad group create `\n --display-name AksEngineAdmins `\n --mail-nickname AksEngineAdmins `\n --query \"objectId\" -o tsv\n```", "```\n$currentUserObjectId = az ad signed-in-user show `\n --query \"objectId\" -o tsv\n```", "```\naz ad group member add `\n --group AksEngineAdmins `\n --member-id $currentUserObjectId\n```", "```\n$tenantId = az account show `\n --query \"tenantId\" -o tsv\n```", "```\necho @\"\n\"aadProfile\": {\n \"serverAppID\": \"$serverApplicationId\",\n \"clientAppID\": \"$clientApplicationId\",\n \"tenantID\": \"$tenantId\",\n \"adminGroupID\": \"$adminGroupId\"\n}\n\"@\n```", "```\n.\\CreateAKSEngineClusterWithWindowsNodes.ps1 `\n -azureSubscriptionId <azureSubscriptionId> `\n -dnsPrefix <dnsPrefix> `\n -windowsPassword 'S3cur3P@ssw0rd' `\n -resourceGroupName \"aks-engine-aad-windows-resource-group\" `\n -azureLocation \"westus\"\n```", "```\nPS C:\\src> kubectl describe clusterrolebinding aad-default-admin-group\nName:         aad-default-admin-group\nLabels:       addonmanager.kubernetes.io/mode=EnsureExists\n kubernetes.io/cluster-service=true\nAnnotations:  <none>\nRole:\n Kind:  ClusterRole\n Name:  cluster-admin\nSubjects:\n Kind   Name                                  Namespace\n ----   ----                                  ---------\n Group  18d047eb-83f9-4740-96be-59555e88138f\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: secured-pod\nspec:\n  securityContext:\n    runAsUser: 1000\n```", "```\n\"kubernetesConfig\": {\n    \"networkPolicy\": \"calico\",\n    \"networkPlugin\": \"azure\"\n}\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  namespace: default\n  name: default-deny-all-ingress\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n```", "```\nkubectl describe networkpolicy default-deny-all-ingress\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: default\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.7.9\n        ports:\n        - containerPort: 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: default\n  name: nginx-service\n  labels:\n    app: nginx\nspec:\n  type: LoadBalancer\n  ports:\n  - protocol: TCP\n    port: 80\n  selector:\n    app: nginx\n```", "```\nkubectl run --generator=run-pod/v1 busybox-debug -i --tty --image=busybox --rm --restart=Never -- sh\n```", "```\nwget http://nginx-service:80\nwget http://10.240.0.30:80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  namespace: default\n  name: default-nginx-allow-ingress\nspec:\n  podSelector:\n    matchLabels:\n      app: nginx\n  ingress:\n  - from: []\n    ports:\n    - protocol: TCP\n      port: 80\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: secret-example\ntype: Opaque\ndata:\n  username: YWRtaW4=\n  password: UGFzc3dvcmQxMjM=\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: windows-example\n  labels:\n    app: sample\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: windows-example\n  template:\n    metadata:\n      name: windows-example\n      labels:\n        app: windows-example\n    spec:\n      nodeSelector:\n        \"beta.kubernetes.io/os\": windows\n      containers:\n      - name: windows-example\n        image: mcr.microsoft.com/dotnet/core/samples:aspnetapp-nanoserver-1809\n        ports:\n          - containerPort: 80\n        volumeMounts:\n        - name: secret-example-volume\n          mountPath: C:\\SecretExample\n          readOnly: true\n      volumes:\n      - name: secret-example-volume\n        secret:\n          secretName: secret-example\n```", "```\naz keyvault create `\n --resource-group \"aks-engine-windows-resource-group\" `\n --name \"AksEngineEncryptionVault\" `\n --location \"westeurope\"\n```", "```\naz keyvault update `\n --resource-group \"aks-engine-windows-resource-group\" `\n --name \"AksEngineEncryptionVault\" `\n --enabled-for-disk-encryption \"true\"\n```", "```\naz vm encryption enable `\n --resource-group \"aks-engine-windows-resource-group\" `\n --name \"2972k8s011\" `\n --disk-encryption-keyvault \"AksEngineEncryptionVault\" `\n --volume-type All\n```", "```\nPS C:\\src> az vm encryption show `\n>>            --resource-group \"aks-engine-windows-resource-group\" `\n>>            --name \"2972k8s011\"\n{\n \"disks\": [\n {\n ...\n \"name\": \"2972k8s011_OsDisk_1_1986c424c52c46a39192cdc68c9b9cb9\",\n \"statuses\": [\n {\n \"code\": \"EncryptionState/encrypted\",\n \"displayStatus\": \"Encryption is enabled on disk\",\n \"level\": \"Info\",\n \"message\": null,\n \"time\": null\n }\n ]\n }\n ]\n}\n```"]