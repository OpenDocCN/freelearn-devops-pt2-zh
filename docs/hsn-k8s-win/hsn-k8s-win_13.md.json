["```\nkubectl get nodes -o wide\n```", "```\nkubectl run `\n --generator=run-pod/v1 `\n --image=mcr.microsoft.com/dotnet/core/samples:aspnetapp-nanoserver-1809 `\n --overrides='{\\\"apiVersion\\\": \\\"v1\\\", \\\"spec\\\": {\\\"nodeSelector\\\": { \\\"beta.kubernetes.io/os\\\": \\\"windows\\\" }}}' `\n windows-example\n```", "```\nPS C:\\src> kubectl get pods -w\nNAME              READY   STATUS              RESTARTS   AGE\nwindows-example   0/1     ContainerCreating   0          7s\n```", "```\nkubectl expose pod windows-example `\n --name windows-example-service `\n --type LoadBalancer `\n --port 8080 `\n --target-port 80\n```", "```\nPS C:\\src> kubectl get service -w\nNAME                      TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)          AGE\nkubernetes                ClusterIP      10.0.0.1       <none>           443/TCP          24h\nwindows-example-service   LoadBalancer   10.0.192.180   213.199.135.14   8080:30746/TCP   5m10s\n```", "```\nkubectl run `\n --generator=run-pod/v1 `\n --image=mcr.microsoft.com/dotnet/core/samples:aspnetapp-nanoserver-1809 `\n --overrides='{\\\"apiVersion\\\": \\\"v1\\\", \\\"spec\\\": {\\\"nodeSelector\\\": { \\\"beta.kubernetes.io/os\\\": \\\"windows\\\" }}}' `\n --expose `\n --port 80 `\n --service-overrides='{ \\\"spec\\\": { \\\"type\\\": \\\"LoadBalancer\\\" }}' `\n windows-example\n```", "```\nkubectl run `\n --generator=run/v1  `\n --image=mcr.microsoft.com/dotnet/core/samples:aspnetapp-nanoserver-1809 `\n --overrides='{\\\"apiVersion\\\": \\\"v1\\\", \\\"spec\\\": {\\\"nodeSelector\\\": { \\\"beta.kubernetes.io/os\\\": \\\"windows\\\" }}}' `\n --expose `\n --port 80 `\n --service-overrides='{ \\\"spec\\\": { \\\"type\\\": \\\"LoadBalancer\\\" }}' `\n windows-example\n```", "```\nmd .\\declarative-demo\ncd .\\declarative-demo\n```", "```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: windows-example\n  labels:\n    app: sample\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: windows-example\n  template:\n    metadata:\n      name: windows-example\n      labels:\n        app: windows-example\n    spec:\n      nodeSelector:\n        \"beta.kubernetes.io/os\": windows\n      containers:\n      - name: windows-example\n        image: mcr.microsoft.com/dotnet/core/samples:aspnetapp-nanoserver-1809\n        ports:\n          - containerPort: 80\n```", "```\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: windows-example\nspec:\n  type: LoadBalancer\n  ports:\n  - protocol: TCP\n    port: 8080\n    targetPort: 80\n  selector:\n    app: windows-example\n```", "```\nPS C:\\src\\declarative-demo> kubectl apply -f .\\\ndeployment.apps/windows-example created\nservice/windows-example created\n```", "```\nPS C:\\src\\declarative-demo> kubectl get service -w\nNAME              TYPE           CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE\nkubernetes        ClusterIP      10.0.0.1      <none>        443/TCP          44h\nwindows-example   LoadBalancer   10.0.63.175   51.144.36.7   8080:30568/TCP   3m28s\n```", "```\nkubectl diff -f .\\\n```", "```\nPS C:\\src\\declarative-demo> kubectl apply -f .\\\ndeployment.apps/windows-example unchanged\nservice/windows-example configured\n```", "```\nkubectl delete -f .\\\n```", "```\nPS C:\\src> kubectl describe node 7001k8s011\nName:               7001k8s011\nRoles:              agent\nLabels:             agentpool=windowspool2\n beta.kubernetes.io/arch=amd64\n beta.kubernetes.io/instance-type=Standard_D2_v3\n beta.kubernetes.io/os=windows\n failure-domain.beta.kubernetes.io/region=westeurope\n failure-domain.beta.kubernetes.io/zone=0\n kubernetes.azure.com/cluster=aks-engine-windows-resource-group\n kubernetes.azure.com/role=agent\n kubernetes.io/arch=amd64\n kubernetes.io/hostname=7001k8s011\n kubernetes.io/os=windows\n kubernetes.io/role=agent\n node-role.kubernetes.io/agent=\n storageprofile=managed\n storagetier=Standard_LRS\n```", "```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: windows-example\nspec:\n...\n  template:\n...\n    spec:\n      nodeSelector:\n        \"beta.kubernetes.io/os\": windows\n...\n```", "```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: windows-example\nspec:\n...\n  template:\n...\n    spec:\n      nodeSelector:\n        \"beta.kubernetes.io/os\": windows\n      tolerations:\n      - key: \"os\"\n        operator: \"Equal\"\n        value: \"Win1809\"\n        effect: \"NoSchedule\"\n...\n```", "```\nPS C:\\src\\declarative-demo> kubectl proxy\nStarting to serve on 127.0.0.1:8001\n```", "```\nPS C:\\src\\declarative-demo> kubectl port-forward service/windows-example 5000:8080\nForwarding from 127.0.0.1:5000 -> 80\nForwarding from [::1]:5000 -> 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: windows-example\nspec:\n  type: ClusterIP\n  ports:\n  - protocol: TCP\n    port: 80\n  selector:\n    app: windows-example\n```", "```\nkubectl apply -f .\\\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud-generic.yaml\n```", "```\nPS C:\\src\\declarative-demo> kubectl get service -n ingress-nginx -w\nNAME            TYPE           CLUSTER-IP    EXTERNAL-IP      PORT(S)                      AGE\ningress-nginx   LoadBalancer   10.0.110.35   104.40.133.125   80:32090/TCP,443:32215/TCP   16m\n```", "```\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  name: windows-example-ingress\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\n    nginx.ingress.kubernetes.io/rewrite-target: /$2\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /windows-example(/|$)(.*)\n        backend:\n          serviceName: windows-example\n          servicePort: 80\n```", "```\nkubectl apply -f .\\\n```", "```\nPS C:\\src\\declarative-demo> kubectl scale deployment/windows-example --replicas=3\ndeployment.extensions/windows-example scaled\n```", "```\nPS C:\\src\\declarative-demo> kubectl get pods -w\nNAME READY STATUS RESTARTS AGE\nwindows-example-5cb7456474-5ndrm 0/1 ContainerCreating 0 8s\nwindows-example-5cb7456474-v7k84 1/1 Running 0 23m\nwindows-example-5cb7456474-xqp86 1/1 Running 0 8s\n```", "```\nPS C:\\src\\declarative-demo> kubectl apply -f .\\\ndeployment.apps/windows-example configured\ningress.networking.k8s.io/windows-example-ingress unchanged\nservice/windows-example unchanged\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: windows-example\n...\nspec:\n...\n    spec:\n...\n      containers:\n      - name: windows-example\n...\n        resources:\n          limits:\n            cpu: 100m\n          requests:\n            cpu: 100m\n```", "```\nkubectl apply -f .\\\n```", "```\nkubectl autoscale deployment/windows-example --cpu-percent=15 --min=1 --max=5\n```", "```\nkubectl describe hpa windows-example\n```", "```\nPS C:\\src\\declarative-demo> kubectl describe hpa windows-example\n...\n Normal   SuccessfulRescale             11m                horizontal-pod-autoscaler  New size: 3; reason: cpu resource utilization (percentage of request) above target\n Normal   SuccessfulRescale             4m17s              horizontal-pod-autoscaler  New size: 1; reason: All metrics below target\n```", "```\nkubectl delete hpa windows-example\n```"]