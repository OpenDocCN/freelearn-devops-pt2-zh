- en: Chapter 3. Jenkins and the IDE
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 Jenkins和IDE
- en: In [Chapter 1](part0014_split_000.html#DB7S1-497efea050ab4b7582c7e2ed4ba920ee
    "Chapter 1. Preparatory Steps"), *Preparatory Steps*, we took a high-level look
    at the basic principles and goals of Continuous Integration. We then walked through
    some fairly typical Jenkins use case scenarios to illustrate some of the ways
    in which extending Jenkins can help us to achieve these goals.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](part0014_split_000.html#DB7S1-497efea050ab4b7582c7e2ed4ba920ee "第1章.准备步骤")*准备步骤*中，我们高层次地了解了持续集成的基本原则和目标。然后，我们通过一些相当典型的Jenkins使用案例场景，来说明扩展Jenkins可以帮助我们实现这些目标。
- en: In this chapter, we will take a more detailed look at how to extend Jenkins
    and achieve the principles and goals of Continuous Integration. The focus of this
    chapter is to discover the ways in which we can help make things easier for software
    developers. The support and *buy in* of both the management and development teams
    is vital for the success of any good build process, and developers are obviously
    a fundamental part of any software development team.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将更详细地了解如何扩展Jenkins并实现持续集成的原则和目标。本章的重点是发现我们如何帮助软件开发人员使事情变得更容易。管理和开发团队的支持和*认同*对于任何良好的构建流程的成功至关重要，而开发人员显然是任何软件开发团队的基本组成部分。
- en: We will take a look at some of the approaches that you can use to extend and
    adapt Jenkins to suit the specific needs and requirements of your developers,
    and we will demonstrate how adapting the way in which Jenkins information is presented
    to these developers can be customized to fit in naturally with the way they work.
    The intention here is to empower people with the tools that they find both beneficial
    and easy to use and to thereby encourage people to *do the right thing*, rather
    than try to make them do what we dictate using metrics, threats, nagging e-mails,
    and pointing the finger of blame every time a build fails—this is a sure way to
    end up with a lot of disgruntled developers who just want to keep their heads
    down!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一下一些方法，您可以使用这些方法来扩展和调整Jenkins以满足开发人员的特定需求和要求，并且我们将演示如何调整Jenkins信息呈现的方式，以便与他们的工作方式自然地融合。这里的意图是赋予人们他们发现既有益又易于使用的工具，并因此鼓励人们*做正确的事情*，而不是试图通过使用指标、威胁、唠叨的电子邮件和每次构建失败时指责别人来强迫他们做我们所指示的事情——这是一种确保最终会有很多不满的开发人员的方法，他们只想低调地工作！
- en: Understanding motivations is the key to understanding behaviors, and, quite
    reasonably, developers are usually highly focused on developing code changes.
    They are usually not too interested in performing additional tasks, such as monitoring
    a build dashboard for updates or scrolling through a day's worth of e-mails to
    check whether someone else has recently broken the build before they commit their
    change. They are naturally focused on their role, their priorities, writing code
    and tests, and delivering them so that they can move on to pick up the next task.
    Anything that detracts or distracts from this goal may be seen as counterproductive.
    So, if we can extend Jenkins to simultaneously make things easier for developers
    to focus on the quality of their code and encourage them to *do the right thing*
    from a Continuous Integration point of view, everyone should be happier... well,
    that's the aim anyway.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 理解动机是理解行为的关键，而且，相当合理的是，开发人员通常会高度专注于开发代码更改。他们通常不太感兴趣执行额外的任务，比如监视构建仪表板的更新或滚动一整天的电子邮件，以检查是否有其他人最近破坏了构建，然后再提交他们的更改。他们自然而然地专注于自己的角色、优先事项、编写代码和测试，并将它们交付，以便他们可以继续下一个任务。任何偏离或分散注意力的事情可能被视为适得其反。因此，如果我们可以扩展Jenkins，同时使开发人员更容易专注于他们代码的质量，并鼓励他们从持续集成的角度*做正确的事情*，那么每个人都应该更加快乐...好吧，这是目标。
- en: 'The approach that I usually use to achieve this is best described by this quote:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常用来实现这一点的方法最好由这句话来描述：
- en: '|   | *"Make the wrong thing hard and the right thing easy."* |   |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| | *"让错误的事情变得困难，让正确的事情变得容易。"* | |'
- en: '|   | --Ray Hunt |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| | --雷·亨特 |'
- en: It's a simple but effective mantra that I have found to really work in this
    kind of situation. Ray Hunt was the father of the natural horsemanship movement,
    and he used this philosophy with great success while training horses. And, between
    you and me, I have had some success when applying it to developers too!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单但有效的口头禅，我发现在这种情况下真的很有效。雷·亨特是自然马术运动的创始人，他在训练马匹时非常成功地运用了这一哲学。而且，说实话，我在将其应用于开发人员时也取得了一些成功！
- en: The focus of this chapter, therefore, is to explore the ways in which we can
    extend Jenkins to provide our hardworking developers with the information they
    need to have in hand in a way that is natural and convenient for them to absorb,
    and makes it easy for them to *do the right thing*. If we can present our information
    directly in the IDE where they are already spending a majority of their time,
    hopefully we can achieve this.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，本章的重点是探索我们如何扩展Jenkins，以便为辛勤工作的开发人员提供所需的信息，让他们能够自然方便地吸收，并且让他们更容易*做正确的事情*。如果我们能够直接在他们已经花费大部分时间的IDE中呈现信息，希望我们可以实现这一点。
- en: 'Getting back to our Continuous Integration aims, from a developer-centric point
    of view, we are trying to encourage three main behaviors here:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们的持续集成目标，从开发人员的角度来看，我们在这里试图鼓励三种主要行为：
- en: '**Commit frequently**: We can help here by making this easy to do using a suitable
    version control system that allows quick check-ins from within the IDE that the
    developers are using and by not distracting them from it to check on build tasks
    and statuses.'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**频繁提交**：我们可以通过使用适当的版本控制系统来使这一点变得容易，该系统允许开发人员在他们正在使用的IDE中快速进行检入，并且不会分散他们的注意力来检查构建任务和状态。'
- en: '**If the build is broken, fix it as a top priority**: Making the current state
    very obvious will help to achieve this.'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**如果构建失败，将其作为最重要的事情来修复**：使当前状态非常明显将有助于实现这一点。'
- en: '**Check the result of your actions**: This will greatly improve its functionality.'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**检查您的操作结果**：这将大大改善其功能。'
- en: Rapid feedback and making it easy to see (and hard to miss it!) will help here
    too. If we can present all this information nicely and clearly from within the
    IDE that developers are already using, we should see some big improvements with
    little effort.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 快速反馈并使其易于查看（并且不容易错过！）也会在这里有所帮助。如果我们可以从开发人员已经使用的IDE中清晰地呈现所有这些信息，我们应该会看到一些小的改进。
- en: While the technologically focused solutions that we are about to run through
    should be helpful from our point of view, we can't expect them to be a miracle
    cure on their own. As mentioned previously, it takes a team working together to
    make these things work, so establishing and monitoring a set of developer best
    practices, publishing standards and guidelines, and providing user education and
    information, all play an important part in setting up an efficient and professional
    development team and productive build process IDEs, and Jenkins Build Connectors.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们即将要运行的技术解决方案应该对我们有所帮助，但我们不能指望它们单独成为奇迹。正如之前提到的，需要一个团队共同努力才能使这些事情起作用，因此建立和监控一套开发人员最佳实践、发布标准和指南，并提供用户教育和信息，都在建立高效和专业的开发团队和生产构建过程IDE以及Jenkins构建连接器中起着重要作用。
- en: There are different development IDEs, and the selection depends on a number
    of factors, such as programming language (Java, C++, .Net, and so on), environment
    (Linux, Windows, Mac, and so on), and corporate and personal preferences (open
    or closed source). We will take a look at a few of the most popular IDEs and the
    solutions for them; however, there are many others as well that are available
    to suit different requirements.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同的开发IDE，选择取决于许多因素，如编程语言（Java，C ++，.Net等），环境（Linux，Windows，Mac等）以及公司和个人偏好（开源或闭源）。我们将看一下一些最受欢迎的IDE和它们的解决方案；但是，还有许多其他可用的解决方案，以满足不同的需求。
- en: Eclipse and Mylyn
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Eclipse和Mylyn
- en: The first and probably by far the most popular of all the development IDEs that
    we will look at is the Eclipse platform—this is extremely popular for a number
    of different projects including Java, C/C++, and PHP, and it has a vast user base
    and a wealth of mature and easily available plugins.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要查看的第一个，也可能是迄今为止最受欢迎的所有开发IDE中的Eclipse平台-这对于许多不同的项目（包括Java，C/C++和PHP）都非常受欢迎，并且具有庞大的用户群和丰富成熟且易获得的插件。
- en: To achieve our goal of presenting Jenkins information to developers, Mylyn is
    currently the most popular extension that we can use in conjunction with Eclipse.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现我们向开发人员展示Jenkins信息的目标，Mylyn目前是我们可以与Eclipse一起使用的最受欢迎的扩展。
- en: 'There is more information on Mylyn and the many features it provides at this
    link:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Mylyn及其提供的许多功能的更多信息，请访问此链接：
- en: '[http://www.eclipse.org/mylyn/](http://www.eclipse.org/mylyn/)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.eclipse.org/mylyn/](http://www.eclipse.org/mylyn/)'
- en: The documentation at this link also states that Mylyn *reduces information overload
    and makes multitasking easy*, which sounds exactly like what we are looking for!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此链接中的文档还指出，Mylyn*减少信息过载并使多任务处理变得容易*，这正是我们正在寻找的！
- en: Installing Mylyn
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Mylyn
- en: 'Mylyn comes preinstalled with the most recent versions of Eclipse, so you may
    just need to select it by navigating to **Window** | **Show View** | **Other**,
    then selecting the **Builds** component from the **Mylyn** category like this:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Mylyn已预装在最新版本的Eclipse中，因此您可能只需要通过导航到**窗口** | **显示视图** | **其他**，然后从**Mylyn**类别中选择**构建**组件来选择它：
- en: '![Installing Mylyn](../images/00013.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![安装Mylyn](../images/00013.jpeg)'
- en: 'Now you just need to configure Mylyn using the following details:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您只需要使用以下详细信息配置Mylyn：
- en: 'If you use a version of Eclipse that does not come bundled with Mylyn, you
    can download and install it using the standard Eclipse installation process by
    selecting **Help** | **Software Updates…** then add a new update site with this
    URL: [http://download.eclipse.org/tools/mylyn/update/e3.4](http://download.eclipse.org/tools/mylyn/update/e3.4%20)
    (or a later version, if available and preferred).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的Eclipse版本未预装Mylyn，您可以通过选择**帮助** | **软件更新...**，然后添加一个具有此URL的新更新站点来下载并安装它：[http://download.eclipse.org/tools/mylyn/update/e3.4](http://download.eclipse.org/tools/mylyn/update/e3.4%20)（如果有更高版本可用且更受欢迎）。
- en: Once this has been done, select the new update site that you just created and
    add the Mylyn components you would like to install.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，选择刚刚创建的新更新站点，并添加您想要安装的Mylyn组件。
- en: Mylyn and Jenkins configurations
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Mylyn和Jenkins配置
- en: Once installed, you will then be able to select **Window** from the main toolbar
    menu, and then **Show View**, **Mylyn**, and **Builds**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您将能够从主工具栏菜单中选择**窗口**，然后**显示视图**，**Mylyn**和**构建**。
- en: 'This should produce a window similar to the following, from which you can then
    select the highlighted option to create a new build server definition:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该产生一个类似于以下窗口，然后您可以选择突出显示的选项来创建新的构建服务器定义：
- en: '![Mylyn and Jenkins configurations](../images/00014.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![Mylyn和Jenkins配置](../images/00014.jpeg)'
- en: 'This produces a new wizard:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生一个新的向导：
- en: '![Mylyn and Jenkins configurations](../images/00015.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![Mylyn和Jenkins配置](../images/00015.jpeg)'
- en: 'After selecting the **Hudson** option and clicking on **Next**, you are presented
    with a **Server Properties** dialogue where you can define and configure the properties
    for **New Build Server**:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**Hudson**选项并单击**下一步**后，您将看到一个**服务器属性**对话框，您可以在其中定义和配置**新构建服务器**的属性：
- en: '![Mylyn and Jenkins configurations](../images/00016.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Mylyn和Jenkins配置](../images/00016.jpeg)'
- en: Here you can specify the URL and the credentials required for your Jenkins server.
    A quick refresh should show a successful connection to your Jenkins instance and
    also pull back a list of job definitions for you to select from. Note that Mylyn
    caters to a host of other connection and authorization features here, which you
    can configure if required.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以指定Jenkins服务器的URL和所需的凭据。快速刷新应该显示成功连接到Jenkins实例，并且还会拉回一个作业定义列表供您选择。请注意，Mylyn还提供了一系列其他连接和授权功能，如果需要，您可以进行配置。
- en: After a quick check using the **Validate** button, click on **Finish** to save
    and close the server configuration.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 快速检查使用**验证**按钮后，点击**完成**保存并关闭服务器配置。
- en: 'This should result in a new **Builds** window displaying live information on
    the jobs that you have selected from your Jenkins server, something similar to
    this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致一个新的**构建**窗口显示您从Jenkins服务器中选择的作业的实时信息，类似于这样：
- en: '![Mylyn and Jenkins configurations](../images/00017.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![Mylyn和Jenkins配置](../images/00017.jpeg)'
- en: 'Exploring the options in this window shows that you can right-click and select
    a number of functions to perform on a selected job:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在此窗口中探索选项表明，您可以右键单击并选择执行所选作业的多个有用功能：
- en: '![Mylyn and Jenkins configurations](../images/00018.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![Mylyn和Jenkins配置](../images/00018.jpeg)'
- en: 'You can perform the following functions:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以执行以下功能：
- en: View the history for a selected job
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看所选作业的历史记录
- en: Open the job in a browser inside Eclipse
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Eclipse中在浏览器中打开作业
- en: Run the selected job
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行所选的作业
- en: View the console output for the last run
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看最后一次运行的控制台输出
- en: Show the JUnit results in the JUnit view
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在JUnit视图中显示JUnit结果
- en: All of these can be done directly from within the Eclipse IDE, making it very
    easy for developers to keep an eye on the things they need to know with very little
    effort and minimal distractions.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都可以直接从Eclipse IDE中完成，使开发人员非常容易地关注他们需要了解的事情，几乎没有什么努力和最小的干扰。
- en: IntelliJ IDEA and Jenkins build connectors
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IntelliJ IDEA和Jenkins构建连接器
- en: IntelliJ IDEA, developed by JetBrains, is another very popular Integrated Development
    Environment, and, similar to Eclipse, it also has a large number of add-ons and
    plugins that are available to extend its use and functionality.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由JetBrains开发的IntelliJ IDEA是另一个非常受欢迎的集成开发环境，与Eclipse类似，它也有大量的附加组件和插件可用于扩展其使用和功能。
- en: In this section, we will take a quick look at installing and configuring the
    **Jenkins Control Plugin** for IntelliJ IDEA, and we will configure it to provide
    a functionality similar to that provided by Mylyn under Eclipse.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将快速查看在IntelliJ IDEA中安装和配置**Jenkins控制插件**，并将其配置为提供类似于Eclipse下Mylyn提供的功能。
- en: 'Installing plugins in IntelliJ is very easy—open the **Preferences** menu item,
    then select **Plugins** on the left-hand side menu. The Jenkins Control plugin
    is not currently bundled with the IDE, so click on the **Browse repositories…**
    button as shown in the following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在IntelliJ中安装插件非常容易-打开**首选项**菜单项，然后在左侧菜单中选择**插件**。Jenkins控制插件目前未与IDE捆绑在一起，因此请按照以下截图中显示的点击**浏览存储库...**按钮：
- en: '![IntelliJ IDEA and Jenkins build connectors](../images/00019.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![IntelliJ IDEA和Jenkins构建连接器](../images/00019.jpeg)'
- en: 'This opens up a new subwindow where you can enter `Jenkins` in the search dialogue
    to find the two (currently) available plugins, as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开一个新的子窗口，您可以在搜索对话框中输入`Jenkins`以找到两个（当前）可用的插件，如下所示：
- en: '![IntelliJ IDEA and Jenkins build connectors](../images/00020.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![IntelliJ IDEA和Jenkins构建连接器](../images/00020.jpeg)'
- en: Click on the green **Install Plugin** button—the plugin will be downloaded and
    you will be prompted to restart IntelliJ IDEA—this completes the installation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 点击绿色的**安装插件**按钮-插件将被下载，并提示您重新启动IntelliJ IDEA-这样安装就完成了。
- en: 'After restarting the IDE, click on the **View** menu, select **Tool Windows**,
    and you should see a new **Jenkins** option. Selecting this produces a new pane
    entitled **Jenkins**, where you can configure the connection to a Jenkins server
    by clicking on the spanner icon and filling out the requisite details:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动IDE后，点击**查看**菜单，选择**工具窗口**，您应该会看到一个新的**Jenkins**选项。选择此选项会产生一个名为**Jenkins**的新窗格，在那里您可以通过点击扳手图标并填写必要的详细信息来配置连接到Jenkins服务器：
- en: '![IntelliJ IDEA and Jenkins build connectors](../images/00021.jpeg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![IntelliJ IDEA和Jenkins构建连接器](../images/00021.jpeg)'
- en: My example Jenkins instance is very simplistic—you will probably want to use
    authentication on a real Jenkins instance and therefore, will need to fill out
    the corresponding details. You may want to tweak the timing and logging settings
    to suit yourself; however, the basic setup is very simple and also very similar
    to the earlier Mylyn example.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我的示例Jenkins实例非常简单-您可能希望在真实的Jenkins实例上使用身份验证，因此需要填写相应的详细信息。您可能希望调整时间和日志记录设置以适应自己；但是，基本设置非常简单，也非常类似于之前的Mylyn示例。
- en: 'Once done, hit the **OK** button, and you should see a view of your Jenkins
    instance inside IntelliJ:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，点击**确定**按钮，您应该在IntelliJ内看到您的Jenkins实例的视图：
- en: '![IntelliJ IDEA and Jenkins build connectors](../images/00022.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![IntelliJ IDEA和Jenkins构建连接器](../images/00022.jpeg)'
- en: As with Mylyn, you can perform several useful functions using this plugin—monitoring
    the status of builds, triggering new builds, and viewing the results and history
    of the selected jobs.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 与Mylyn一样，您可以使用此插件执行几个有用的功能-监视构建的状态，触发新的构建，并查看所选作业的结果和历史记录。
- en: NetBeans
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NetBeans
- en: The NetBeans IDE has an inbuilt functionality to monitor Jenkins via the `HudsonInNetBeans`
    service.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: NetBeans IDE具有内置功能，可以通过`HudsonInNetBeans`服务监视Jenkins。
- en: 'Selecting the **Services** tab within NetBeans will reveal a Hudson Builders
    item where you can define your Jenkins instance and configure which items you
    would like to monitor based on the View definitions available on your Jenkins
    server:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在NetBeans中选择**服务**选项卡将显示一个Hudson Builders项目，您可以在其中定义您的Jenkins实例，并根据Jenkins服务器上可用的视图定义配置要监视的项目：
- en: '![NetBeans](../images/00023.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![NetBeans](../images/00023.jpeg)'
- en: 'Once you have registered the server, you will be notified of any failures by
    a popup within the IDE. You can read more about the functionality and configuration
    of this extension here: [http://wiki.netbeans.org/HudsonInNetBeans#General_setup_and_view](http://wiki.netbeans.org/HudsonInNetBeans#General_setup_and_view).'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 注册服务器后，您将收到IDE内弹出窗口通知任何失败情况。您可以在这里阅读有关此扩展的功能和配置的更多信息：[http://wiki.netbeans.org/HudsonInNetBeans#General_setup_and_view](http://wiki.netbeans.org/HudsonInNetBeans#General_setup_and_view)。
- en: 'In addition, the Build Monitor plugin can also be added to include status bar
    notifications—it can be downloaded from the plugin home page here: [http://plugins.netbeans.org/plugin/814/build-monitor](http://plugins.netbeans.org/plugin/814/build-monitor).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，构建监视器插件也可以添加以包括状态栏通知——可以从插件主页下载：[http://plugins.netbeans.org/plugin/814/build-monitor](http://plugins.netbeans.org/plugin/814/build-monitor)。
- en: 'Then, the plugin is installed from **Tools** | **Plugins** menu item by selecting
    the **Downloaded** option and navigating to the recently downloaded file with
    an `.nbm` extension:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过选择**下载**选项并导航到最近下载的带有`.nbm`扩展名的文件，从**工具**|**插件**菜单项安装插件：
- en: '![NetBeans](../images/00024.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![NetBeans](../images/00024.jpeg)'
- en: Now, simply select **Install**, agree to the terms, and click on **Install**
    again—once complete, click on **Finish**. You should now have a status bar item
    that can be configured to monitor the status of one or more of your Jenkins jobs,
    thus, providing another useful and unobtrusive mechanism to keep an eye on more
    important builds.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只需选择**安装**，同意条款，然后再次点击**安装**—完成后，点击**完成**。现在，您应该有一个状态栏项目，可以配置为监视一个或多个Jenkins作业的状态，从而提供另一种有用且不会打扰的机制来关注更重要的构建。
- en: Summary
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at the key aims of Continuous Integration and how
    they specifically relate to developers. We have reviewed what we want to achieve
    in this area and how we can do so, that is, by enabling developers to easily do
    the right thing and by making their lives and roles easier.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了持续集成的关键目标，以及它们如何与开发人员特别相关。我们已经审查了在这个领域我们想要实现什么，以及我们如何做到这一点，即通过使开发人员能够轻松地做正确的事情，并使他们的生活和角色更加轻松。
- en: There are many different options available that allow us to integrate Jenkins
    and the developers' environment, and we have detailed some popular examples of
    three of the most popular IDEs—there are many other options available for these
    IDEs and for others too. If the preceding options don't fit with your environment,
    hopefully the general idea and approach will translate to something that suits
    you. These plugins are being developed and enhanced on a regular basis, so pick
    the approach and the combination that works best for you and your environment.
    The key aim is to make life easy for others and encourage them to make your life
    easier too!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的选项可供我们将Jenkins与开发环境集成，我们已经详细介绍了三种最流行的IDE的一些常见示例——这些IDE还有许多其他选项，其他IDE也有许多其他选项。如果前面的选项不适合您的环境，希望一般的想法和方法能够转化为适合您的东西。这些插件正在定期开发和增强，因此选择最适合您和您的环境的方法和组合。关键目标是让他人的生活变得更轻松，并鼓励他们也让您的生活变得更轻松！
- en: Also, there are many other ways in which we can communicate Jenkins information
    to others besides the IDE; there are system tray notifiers, Information Radiators,
    dashboards, custom web apps, e-mail alerts, instant message notifications, and
    even automated lava lamps, and foam-rocket launchers!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，除了IDE之外，我们还有许多其他方式可以将Jenkins信息传达给其他人；有系统托盘通知器、信息辐射器、仪表板、自定义Web应用程序、电子邮件提醒、即时消息通知，甚至是自动化的熔岩灯和泡沫火箭发射器！
- en: In the next chapter, we will take a look at several other ways in which we can
    interact with Jenkins—these are more technical and less end user-focused, but
    are related in a way that may give you some alternative ideas to develop your
    own bespoke solutions.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看看与Jenkins互动的其他几种方式——这些方式更加技术化，不太关注最终用户，但它们在某种程度上相关，可能会给您一些开发自己定制解决方案的替代想法。
