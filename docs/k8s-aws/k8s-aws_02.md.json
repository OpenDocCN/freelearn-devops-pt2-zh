["```\n    kube-kuttle\n    kube-control\n    kube-cee-tee-ell\n    kube-cuddle\n```", "```\nbrew install kubernetes-cli\n```", "```\n    brew cask install minikube virtualbox\n```", "```\n    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n    curl -LO https://dl.k8s.io/v1.10.6/bin/linux/amd64/kubectl  \n```", "```\n    chmod +x minikube kubectl\n    sudo mv minikube kubectl /usr/local/bin/\n```", "```\n    C:\\> choco install minikube\n```", "```\n    C:\\> choco install kubernetes-cli\n```", "```\n    minikube start  \n```", "```\n    Starting local Kubernetes v1.10.0 cluster...\n    Starting VM...\n    Getting VM IP address...\n    Moving files into cluster...\n    Setting up certs...\n    Connecting to cluster...\n    Setting up kubeconfig...\n    Starting cluster components...\n    Kubectl is now configured to use the cluster.\n\n```", "```\n    kubectl config use-context minikube\n```", "```\n    kubectl version\n```", "```\n    Client Version: version.Info{Major:\"1\", Minor:\"10\", GitVersion:\"v1.10.4\", GitCommit:\"5ca598b4ba5abb89bb773071ce452e33fb66339d\", GitTreeState:\"clean\", BuildDate:\"2018-06-18T14:14:00Z\", GoVersion:\"go1.9.7\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\n    Server Version: version.Info{Major:\"1\", Minor:\"10\", GitVersion:\"v1.10.0\", GitCommit:\"fc32d2f3698e36b93322a3465f63a14e9f0eaead\", GitTreeState:\"clean\", BuildDate:\"2018-03-26T16:44:10Z\", GoVersion:\"go1.9.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n```", "```\n    kubectl get nodes\n    NAME       STATUS    AGE       VERSION\n    minikube   Ready    20h       v1.10.0\n```", "```\n    $ kubectl describe node/minikube\n```", "```\n    kubectl describe -h\n```", "```\n    minikube docker-env\n```", "```\n    eval $(minikube docker-env)\n```", "```\n    docker version\n```", "```\n    docker ps\n```", "```\nDockerfile \nFROM nginx:alpine \nRUN echo \"<h1>Hello World</h1>\" > /usr/share/nginx/html/index.html \n```", "```\n    eval $(minikube docker-env)\n```", "```\n    docker build -t hello:v1 .\n```", "```\n    kubectl run hello --image=hello:v1 --image-pull-policy=Never \\\n    --port=80\n```", "```\n    $ kubectl get pods\n    NAME                     READY     STATUS    RESTARTS   AGE\n    hello-2033763697-9g7cm   1/1       Running   0          1m\n```", "```\n    kubectl expose deployment/hello --port=80 --type=\"NodePort\" \\\n    --name=hello \n```", "```\n    minikube ip\n    192.168.99.100\n```", "```\n    $ kubectl get svc/hello\n    NAME      CLUSTER-IP   EXTERNAL-IP   PORT(S)        AGE\n    hello     10.0.0.104   <nodes>       80:32286/TCP   26m\n```", "```\nDockerfile \nFROM nginx:alpine \nCOPY index.html /usr/share/nginx/html/index.html \n```", "```\nindex.html \n<!DOCTYPE html> \n<html> \n  <head> \n    <style> \n      blink { animation: blink 1s steps(1) infinite; } \n      @keyframes blink { 50% { color: transparent; } } \n    </style> \n    <title>Hello World</title> \n  </head> \n  <body> \n    <h1>Hello <blink>1994</blink></h1> \n  </body> \n</html> \n```", "```\n    docker build -t hello:v2 .\n```", "```\n    kubectl set image deployment/hello hello=hello:v2\n```", "```\n    $ kubectl rollout undo deployment/hello\n    deployment \"hello\" rolled back\n```", "```\n    $ kubectl get pods\n    NAME                     READY     STATUS    RESTARTS   AGE\n    hello-2473888519-jc6km   1/1       Running   0          7m\n```", "```\n    $ kubectl delete pod/hello-2473888519-jc6km\n    pod \"hello-2473888519-jc6km\" delete\n```", "```\n    $ kubectl get pod\n    NAME                     READY     STATUS    RESTARTS   AGE\n    hello-2473888519-1d69q   1/1       Running   0          8s\n```", "```\n    $ kubectl scale deployment/hello --replicas=2\n    deployment \"hello\" scaled\n```", "```\n    $ kubectl get pods\n    NAME                     READY     STATUS    RESTARTS   AGE\n    hello-2473888519-10p63   1/1       Running   0          1m\n    hello-2473888519-1d69q   1/1       Running   0          25m\n```", "```\n    $ minikube dashboard\n```", "```\n    $ kubectl delete deployment/hello svc/hello\n    deployment \"hello\" deleted\n    service \"hello\" deleted\n```", "```\ndeployment.yaml \napiVersion: apps/v1\nkind: Deployment \nmetadata: \n  name: hello \nspec: \n  replicas: 2 \n  template: \n    metadata: \n      labels: \n        app: hello \n    spec: \n      containers: \n      - name: hello \n        image: hello:v1 \n        ports: \n        - containerPort: 80 \n```", "```\n    $kubectl apply -f deployment.yaml\n    deployment \"hello\" created  \n```", "```\nservice.yaml \nkind: Service \napiVersion: v1 \nmetadata: \n  name: hello \nspec: \n  selector: \n    app: hello \n  type: NodePort \n  ports: \n  - protocol: TCP \n    port: 80 \n    targetPort: 80 \n```", "```\n    $ kubectl apply -f service.yaml\n    service \"hello\" created  \n```", "```\n    $ kubectl apply -f deployment.yaml\n    deployment \"hello\" configured \n```", "```\n    $ minikube start --host-only-cidr=172.16.0.1/24\n\n```"]