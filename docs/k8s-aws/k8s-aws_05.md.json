["```\n$ brew install kubernetes-helm  \n```", "```\n$ tar -zxvf helm-v2.7.2-linux-amd64.tar.gz\n$ mv linux-amd64/helm /usr/local/bin/helm  \n```", "```\n$ kubectl config current-context\nminikube  \n```", "```\n$ kubectl config use-context minikube  \n```", "```\n$ kubectl config view --minify=true  \n```", "```\n$ helm init\n$HELM_HOME has been configured at /Users/edwardrobinson/.helm.\n\nTiller (the Helm server-side component) has been installed into your Kubernetes Cluster.\nHappy Helming!  \n```", "```\n$ kubectl -n kube-system get deploy -l app=helm\nNAME            DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ntiller-deploy   1         1         1            1           3m  \n```", "```\n$ helm version\nClient: &version.Version{SemVer:\"v2.7.2\", GitCommit:\"8478fb4fc723885b155c924d1c8c410b7a9444e6\", GitTreeState:\"clean\"}\nServer: &version.Version{SemVer:\"v2.7.2\", GitCommit:\"8478fb4fc723885b155c924d1c8c410b7a9444e6\", GitTreeState:\"clean\"}\n```", "```\n$ helm repo list\nNAME   URL\nstable https://kubernetes-charts.storage.googleapis.com\nlocal  http://127.0.0.1:8879/charts  \n```", "```\n$ helm repo add errm https://charts.errm.co.uk\n\"errm\" has been added to your repositories  \n```", "```\n$ helm repo update\nHang tight while we grab the latest from your chart repositories...\n...Skip local chart repository\n...Successfully got an update from the \"errm\" chart repository\n...Successfully got an update from the \"stable\" chart repository\nUpdate Complete.  Happy Helming!\n```", "```\n$ helm install --name=my-slate errm/kubeslate  \n```", "```\nNAME:   my-slate\nLAST DEPLOYED: Mon Mar 26 21:55:39 2018\nNAMESPACE: default\nSTATUS: DEPLOYED  \n```", "```\nRESOURCES:\n==> v1/Service\nNAME                TYPE       CLUSTER-IP     PORT(S)  AGE\nmy-slate-kubeslate  ClusterIP  10.100.209.48  80/TCP   0s\n\n==> v1/Deployment\nNAME                DESIRED  CURRENT  UP-TO-DATE  AVAILABLE  AGE\nmy-slate-kubeslate  2        0        0           0          0s\n\n==> v1/Pod(related)\nNAME                                 READY  STATUS             AGE\nmy-slate-kubeslate-77bd7479cf-gckf8  0/1    ContainerCreating  0s\nmy-slate-kubeslate-77bd7479cf-vvlnz 0/1 ContainerCreating 0s\n```", "```\n$ helm install --name labeled-slate --set podLabels.hello=world errm/kubeslate\n```", "```\n$ kubectl get pods -l hello=world\nNAME                                      READY     STATUS\nlabeled-slate-kubeslate-5b75b58cb-7jpfk   1/1       Running\nlabeled-slate-kubeslate-5b75b58cb-hcpgj   1/1       Running  \n```", "```\n$ helm upgrade my-slate --set podLabels.hello=world errm/kubeslate  \n```", "```\n$ kubectl get pods -l hello=world\nNAME                                      READY     STATUS\nlabeled-slate-kubeslate-5b75b58cb-7jpfk   1/1       Running\nlabeled-slate-kubeslate-5b75b58cb-hcpgj   1/1       Running\nmy-slate-kubeslate-5c8c4bc77-4g4l4        1/1       Running\nmy-slate-kubeslate-5c8c4bc77-7pdtf        1/1       Running  \n```", "```\nvalues.yml \npodLabels: \n  hello: world \n  access: internal \n  users: admin \n```", "```\n$ helm upgrade labeled-slate -f values.yml errm/kubeslate  \n```", "```\n$ helm create version-app\nCreating version-app\n\n$ tree version-app\nversion-app\n\u251c\u2500\u2500 Chart.yaml\n\u251c\u2500\u2500 values.yaml\n\u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 NOTES.txt\n    \u251c\u2500\u2500 _helpers.tpl\n    \u251c\u2500\u2500 deployment.yaml\n    \u2514\u2500\u2500 service.yaml\n\n2 directories, 7 files  \n```", "```\nimage: \"{{ .Values.image.repository }}:{{ .Values.image.tag }}\" \n```", "```\nimage: \n  repository: errm/versions \n  tag: 0.0.1 \n  pullPolicy: IfNotPresent \n```", "```\nservice: \n  name: versions \n  type: ClusterIp \n  externalPort: 80 \n  internalPort: 3000 \n```", "```\n$ helm install --name happy-bear version-app/\nNAME:   happy-bear\nLAST DEPLOYED: Sun Dec  3 13:22:13 2017\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/Service\nNAME                    TYPE       CLUSTER-IP  EXTERNAL-IP  PORT(S)\nhappy-bear-version-app  ClusterIP  10.0.0.121  <none>       80/TCP\n\n==> v1/Deployment\nNAME                    DESIRED  CURRENT  UP-TO-DATE  AVAILABLE\nhappy-bear-version-app  1        1        1           0\n\n==> v1/Pod(related)\nNAME                                     READY  STATUS\nhappy-bear-version-app-6597799867-ct5lk  0/1    ContainerCreating\n```", "```\n{{ if .Values.production }} \nWARNING THIS IS A PRODUCTION ENVIRONMENT - do not use for testing. \n{{ else }} \nTHIS IS A TEST ENVIRONMENT; any data will be purged at midnight. \n{{ end }} \n```", "```\n{{- if and ge .Capabilities.KubeVersion.Minor \"8\" -}} \napiVersion: batch/v1beta1\n {{- else if ge .Capabilities.KubeVersion.Minor \"5\" -}} \napiVersion: batch/v1alpha1 \n{{- else -}} \n{{required \"Kubernetes version 1.5 or higher required\" nil }} \n{{- end -}} \n```", "```\nusers: \n  - yogi \n  - paddington \n  - teddy \n```", "```\napiVersion: v1 \nkind: ConfigMap \nmetadata: \n  name: {{ .Release.Name }}-configmap \ndata: \n  usernames: |- \n    {{- range .Values.users }} \n    {{ . }} \n    {{- end }} \n```", "```\napiVersion: v1 \nkind: ConfigMap \nmetadata: \n  name: ordered-dolphin-configmap \ndata: \n  usernames: |- \n    yogi \n    paddington \n    teddy \n```", "```\napiVersion: v1 \nkind: ConfigMap \nmetadata: \n  name: {{ .Release.Name }}-configmap \ndata: \n  user_id.properties: |- \n    {{- range $index, $user := .Values.users }} \n    user.{{ $user }}={{ $index }} \n    {{- end }} \n```", "```\napiVersion: v1 \nkind: ConfigMap \nmetadata: \n  name: interested-ibex-configmap \ndata: \n  user_id.properties: |- \n    user.yogi.id=0 \n    user.paddington.id=1 \n    user.teddy.id=2 \n```", "```\nusers:\n   yogi:\n     food: picnic \n    height: 1500 \n  paddington:\n     food: marmalade \n    height: 1066 \n  teddy: \n    food: honey \n    height: 500  \n```", "```\napiVersion: v1 \nkind: Pod \nmetadata: \n  name: {{ .Release.Name }}-env-pod \nspec: \n  containers: \n  - image: alpine \n    name: bear-env \n    env: \n    {{- range $name, $user := .Values.users }} \n      {{- range $var, $value := $user }} \n      - name: {{ $name | upper }}_BEAR_{{ $var | upper }} \n        value: {{ $value | quote }} \n      {{- end }} \n    {{- end }} \n    command: [\"env\"] \n```", "```\napiVersion: v1 \nkind: Pod \nmetadata: \n  name: solemn-whale-env-pod \nspec: \n  containers: \n  - image: alpine \n    name: bear-env \n    env: \n      - name: PADDINGTON_BEAR_FOOD \n        value: \"marmalade\" \n      - name: PADDINGTON_BEAR_HEIGHT \n        value: \"1066\" \n      - name: TEDDY_BEAR_FOOD \n        value: \"honey\" \n      - name: TEDDY_BEAR_HEIGHT \n        value: \"500\" \n      - name: YOGI_BEAR_FOOD \n        value: \"picnic\" \n      - name: YOGI_BEAR_HEIGHT \n        value: \"1500\" \n    command: [\"env\"] \n```", "```\napiVersion: batch/v1 \nkind: Job \nmetadata: \n  name: \"{{.Release.Name}}-setup\" \n  labels: \n    heritage: {{.Release.Service | quote }} \n    release: {{.Release.Name | quote }} \n    chart: \"{{.Chart.Name}}-{{.Chart.Version}}\" \n  annotations: \n    \"helm.sh/hook\": pre-install \nspec: \n  template: \n    metadata: \n      name: \"{{.Release.Name}}-setup\" \n    labels: \n      heritage: {{.Release.Service | quote }} \n      release: {{.Release.Name | quote }} \n      chart: \"{{.Chart.Name}}-{{.Chart.Version}}\" \n    spec: \n      restartPolicy: Never \n      containers: \n      - name: setup \n        image: errm/awesome-application \n        command: [\"bin/setup\"] \n```", "```\nannotations: \n  \"helm.sh/hook\": pre-install,pre-upgrade \n```", "```\nmetadata: \n  name: \"{{.Release.Name}}-setup-{{ Release.Revision }}\" \n```", "```\n$ helm package version-app\nSuccessfully packaged chart and saved it to: ~/helm-charts/version-app-0.1.0.tgz  \n```", "```\n$ helm serve\nRegenerating index. This may take a moment.\nNow serving you on 127.0.0.1:8879  \n```", "```\n$ helm install local/version-app  \n```", "```\ncp ~/helm-charts/version-app-0.1.0.tgz ~/helm-repo/ \n```", "```\nhelm repo index ~/helm-repo --url https://helm-repo.example.org  \n```", "```\napiVersion: v1 \nentries: \n  version-app: \n  - apiVersion: v1 \n    created: 2018-01-10T19:28:27.802896842Z \n    description: A Helm chart for Kubernetes \n    digest: 79aee8b48cab65f0d3693b98ae8234fe889b22815db87861e590276a657912c1 \n    name: version-app \n    urls: \n    - https://helm-repo.example.org/version-app-0.1.0.tgz \n    version: 0.1.0 \ngenerated: 2018-01-10T19:28:27.802428278Z \n```", "```\naws s3 sync ~/helm-repo s3://my-helm-repo-bucket  \n```", "```\nhelm repo add my-repo https://helm-repo.example.org \nmy-repo has been added to your repositories \n```", "```\n$ helm search version-app \nNAME                  VERSION     DESCRIPTION \nmy-repo/version-app   0.1.1       A Helm chart for Kubernetes \n```"]