["```\npod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hello-loop\nspec:\n  containers:\n  - name: loop\n    image: alpine\n    command: [\"/bin/sh\"]\n    args:\n    - -c\n    - while true; do echo \"hello world\"; sleep 2s; done\n\n```", "```\n$ kubectl create -f pod.yaml\npod \"hello-loop\" created\n```", "```\nfib.yaml apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: fib\nspec:\n  template:\n     metadata:\n       name: fib\n     spec:\n       containers:\n       - name: fib\n         image: ruby:alpine\n         command: [\"ruby\"]\n         args:\n         - -e\n         - |\n           a,b = 0,1\n           100.times { puts b = (a = a+b) - b }\n       restartPolicy: Never\n```", "```\n$ kubectl create -f fib.yaml\njob \"fib\" created\n```", "```\n$ kubectl describe jobs/fib\nName: fib\nNamespace: default\nSelector: controller-uid=278fa785-9b86-11e7-b25b-080027e071f1\nLabels: controller-uid=278fa785-9b86-11e7-b25b-080027e071f1\n job-name=fib\nAnnotations: <none>\nParallelism: 1\nCompletions: 1\nStart Time: Sun, 17 Sep 2017 09:56:54 +0100\nPods Statuses: 0 Running / 1 Succeeded / 0 Failed\n```", "```\n$ kubectl logs job/fib\n...\n83621143489848422977\n135301852344706746049\n218922995834555169026\n```", "```\n$ kubectl get pods -l job-name=fib --show-all\nNAME READY STATUS RESTARTS AGE\nfib-dg4zh 0/1 Completed 0 1m\n```", "```\nluck.yaml apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: luck\nspec:\n  template:\n    metadata:\n      name: luck\n    spec:\n      containers:\n      - name: luck\n      image: ruby:alpine\n      command: [\"ruby\"]\n      args: [\"-e\", \"exit rand(10)\"]\nrestartPolicy: Never\n```", "```\n$ kubectl create -f luck.yaml\njob \"luck\" created\n```", "```\n$ kubectl delete jobs/luck\njob \"luck\" deleted\n$ kubectl create -f luck.yaml\njob \"luck\" created\n```", "```\n$ kubectl get pods -l job-name=luck -a\nNAME READY STATUS RESTARTS AGE\nluck-0kptd 0/1 Completed 5 3m\n```", "```\nfun-with-cron.yaml apiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  name: fun-with-cron\nspec:\n  schedule: \"* * * * *\"\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            cronjob: fun-with-cron\n        spec:\n          restartPolicy: OnFailure\n          containers:\n          - name: how-soon-is-now\n            image: alpine:3.6\n            command: [\"/bin/date\"]\n```", "```\n$ kubectl apply -f fun-with-cron.yaml\n```", "```\n$ kubectl get jobs\nNAME DESIRED SUCCESSFUL AGE\nfun-with-cron-1533475680 1 1 9s\n```", "```\n$ kubectl logs -l cronjob=fun-with-cron\n Sun Aug 5 13:26:08 UTC 2018\n Sun Aug 5 13:27:08 UTC 2018\n Sun Aug 5 13:28:08 UTC 2018\n```", "```\nservice.yaml \napiVersion: v1\nkind: Service\nmetadata:\n  name: ver\nspec:\n  selector:\n    app: ver\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: http\n```", "```\ndeployment.yaml apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: versions\n  labels:\n    app: ver\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: ver\n  template:\n    metadata:\n      labels:\n        app: ver\n        version: 0.0.1\n    spec:\n      containers:\n      - name: version-server\n        image: errm/versions:0.0.1\n        ports:\n        - name: http\n          containerPort: 3000\n```", "```\n$ kubectl proxy\nStarting to serve on 127.0.0.1:8001\n```", "```\n$ kubectl patch deployment/versions -p ' {\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"version-server\", \"image\":\"errm/versions:0.0.2\"}] }}}}'\n```", "```\nkubectl edit deployment/versions\n```", "```\n$ kubectl apply -f deployment.yaml\n```", "```\nnode-exporter.yaml \napiVersion: apps/v1 \nkind: DaemonSet \nmetadata: \n  labels: \n    app: node-exporter \n  name: node-exporter \nspec: \n  selector: \n    matchLabels: \n      app: node-exporter \n  template: \n    metadata: \n      labels: \n        app: node-exporter \n    spec: \n      containers: \n      - name: node-exporter \n        image: quay.io/prometheus/node-exporter:v0.15.2 \n        args: \n        - --path.procfs=/host/proc \n        - --path.sysfs=/host/sys \n        volumeMounts: \n        - mountPath: /host/proc \n          name: proc \n          readOnly: false \n        - mountPath: /host/sys \n          name: sys \n          readOnly: false \n        ports: \n        - containerPort: 9100 \n          hostPort: 9100 \n      hostNetwork: true \n      hostPID: true \n      volumes: \n      - hostPath: \n          path: /proc \n        name: proc \n      - hostPath: \n          path: /sys \n        name: sys \n```", "```\nkubectl set image ds/node-exporter node-exporter=quay.io/prometheus/node-exporter:v0.16.0\n```", "```\n... \n    spec: \n      nodeSelector: \n        monitoring: prometheus \n      containers: \n      - name: node-exporter \n... \n```", "```\nkubectl label node/<node name> monitoring=prometheus      \n```"]