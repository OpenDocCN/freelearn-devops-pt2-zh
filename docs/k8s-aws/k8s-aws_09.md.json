["```\napiVersion: apps/v1 \nkind: Deployment \nmetadata: \n  name: randserver \nspec: \n  selector: \n    matchLabels: \n      app: randserver \n  template: \n    metadata: \n      labels: \n        app: example \n    spec: \n      containers: \n      - image: errm/randserver \n        name: randserver \n        volumeMounts: \n        - mountPath: /data \n          name: data \n        securityContext: \n          readOnlyRootFilesystem: true \n      volumes: \n      - name: data \n        emptyDir: {} \n```", "```\n$ kubectl port-forward deployment/randserver 3000:3000   \nForwarding from 127.0.0.1:3000 -> 3000\nForwarding from [::1]:3000 -> 3000\n```", "```\n$ kubectl delete pod -l app=randserver\npod \"randserver-79559c5fb6-htnxm\" deleted  \n```", "```\n$ kubectl port-forward deployment/randserver 3000:3000  \n```", "```\n$ aws ec2 create-volume --availability-zone=us-east-1a --size=5 --volume-type=gp2\n{\n \"AvailabilityZone\": \"us-east-1a\",\n \"CreateTime\": \"2018-11-17T15:17:54.000Z\",\n \"Encrypted\": false,\n \"Size\": 5,\n \"SnapshotId\": \"\",\n \"State\": \"creating\",\n \"VolumeId\": \"vol-04e744aad50d4911\",\n \"Iops\": 100,\n \"Tags\": [],\n \"VolumeType\": \"gp2\"\n} \n```", "```\napiVersion: apps/v1 \nkind: Deployment \nmetadata: \n  name: randserver \nspec: \n  selector: \n    matchLabels: \n      app: randserver \n  template: \n    metadata: \n      labels: \n        app: randserver \n    spec: \n      containers: \n      - image: errm/randserver \n        name: randserver \n        volumeMounts: \n        - mountPath: /data \n          name: data \n        securityContext: \n          readOnlyRootFilesystem: true \n      volumes: \n      - name: data \n        awsElasticBlockStore: \n          volumeID: vol-04e744aad50d4911 \n          fsType: ext4 \n      nodeSelector: \n        \"failure-domain.beta.kubernetes.io/zone\": us-east-1a \n```", "```\napiVersion: v1 \nkind: PersistentVolumeClaim \nmetadata: \n  name: randserver-data \nspec: \n  accessModes: \n    - ReadWriteOnce \n  storageClassName: general-purpose \n  resources: \n    requests: \n      storage: 1Gi \n```", "```\n$ kubectl describe pvc/randserver-data\nName:          randserver-data\nNamespace:     default\nStorageClass:  general-purpose\nStatus:        Bound\nVolume:        pvc-5c2dab0d-f017-11e8-92ac-0a56f9f52542\nCapacity:      1Gi\nAccess Modes:  RWO\n\n```", "```\n$ kubectl describe pv/pvc-5c2dab0d-f017-11e8-92ac-0a56f9f52542\nName: pvc-5c2dab0d-f017-11e8-92ac-0a56f9f52542\nStorageClass: general-purpose\nStatus: Bound\nClaim: default/randserver-data\nReclaim Policy: Delete\nAccess Modes: RWO\nCapacity: 1Gi\nSource:\n Type: AWSElasticBlockStore (a Persistent Disk resource in AWS)\n VolumeID: aws://us-east-1a/vol-04ad625aa4d5da62b\n FSType: ext4\n Partition: 0\n ReadOnly: false\n```", "```\napiVersion: apps/v1 \nkind: Deployment \nmetadata: \n  name: randserver \nspec: \n  selector: \n    matchLabels: \n      app: randserver \n  template: \n    metadata: \n      labels: \n        app: randserver \n    spec: \n      containers: \n      - image: errm/randserver \n        name: randserver \n        volumeMounts: \n        - mountPath: /data \n          name: data \n        securityContext: \n          readOnlyRootFilesystem: true \n      volumes: \n      - name: data \n        persistentVolumeClaim: \n          claimName: randserver-data \n```", "```\nkind: StorageClass \napiVersion: storage.k8s.io/v1 \nmetadata: \n  name: general-purpose \n  annotations: \n    \"storageclass.kubernetes.io/is-default-class\": \"true\" \nprovisioner: kubernetes.io/aws-ebs \nparameters: \n  type: gp2 \n```", "```\nkind: StorageClass \napiVersion: storage.k8s.io/v1 \nmetadata: \n  name: high-iops-ssd \nprovisioner: kubernetes.io/aws-ebs \nparameters: \n  type: io1 \n  iopsPerGB: \"50\" \n---\n kind: StorageClass \napiVersion: storage.k8s.io/v1 \nmetadata: \n  name: medium-iops-ssd \nprovisioner: kubernetes.io/aws-ebs \nparameters: \n  type: io1 \n  iopsPerGB: \"25\" \n```", "```\nkind: StorageClass \napiVersion: storage.k8s.io/v1 \nmetadata: \n  name: throughput \nprovisioner: kubernetes.io/aws-ebs \nparameters: \n  type: st1 \n```", "```\nkind: StorageClass \napiVersion: storage.k8s.io/v1 \nmetadata: \n  name: cold-storage \nprovisioner: kubernetes.io/aws-ebs \nparameters: \n  type: sc1 \n```", "```\napiVersion: v1 \nkind: Service \nmetadata: \n  name: randserver \n  labels: \n    app: randserver \nspec: \n  ports: \n  - port: 80 \n    name: web \n    targetPort: 3000 \n  clusterIP: None \n  selector: \n    app: randserver \n```", "```\napiVersion: apps/v1 \nkind: StatefulSet \nmetadata: \n  name: randserver \nspec: \n  selector: \n    matchLabels: \n      app: randserver \n  serviceName: randserver \n  replicas: 3 \n  template: \n    metadata: \n      labels: \n        app: randserver \n    spec: \n      containers: \n      - image: errm/randserver \n        name: randserver \n        volumeMounts: \n        - mountPath: /data \n          name: data \n        securityContext: \n          readOnlyRootFilesystem: true \n  volumeClaimTemplates: \n    - metadata: \n        name: data \n      spec: \n        accessModes: \n          - ReadWriteOnce \n        storageClassName: general-purpose \n        resources: \n          requests: \n            storage: 1Gi \n```", "```\n$ kubectl get pods\nNAME           READY     STATUS    RESTARTS   AGE\nrandserver-0   1/1       Running   0          39s\nrandserver-1   1/1       Running   0          21s\nrandserver-2   1/1       Running   0          10s  \n```", "```\n$ kubectl delete pod/randserver-1\n$ kubectl get pods\nNAME           READY     STATUS    RESTARTS   AGE\nrandserver-0   1/1       Running   0          17m\nrandserver-1   1/1       Running   0          18s\nrandserver-2   1/1       Running   0          17m  \n```", "```\nkubectl get pvc\nNAME                STATUS    VOLUME\ndata-randserver-0   Bound     pvc-803210cf-f027-11e8-b16d\ndata-randserver-1   Bound     pvc-99192c41-f027-11e8-b16d\ndata-randserver-2   Bound     pvc-ab2b25b1-f027-11e8-b16d  \n```", "```\n$ kubectl delete statefulset randserver\nstatefulset.apps \"randserver\" deleted\n$ kubectl delete pvc -l app=randserver\npersistentvolumeclaim \"data-randserver-0\" deleted\npersistentvolumeclaim \"data-randserver-1\" deleted\npersistentvolumeclaim \"data-randserver-2\" deleted  \n```"]